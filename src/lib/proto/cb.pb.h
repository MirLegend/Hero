// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cb.proto

#ifndef PROTOBUF_cb_2eproto__INCLUDED
#define PROTOBUF_cb_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace client_baseserver {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_cb_2eproto();
void protobuf_AssignDesc_cb_2eproto();
void protobuf_ShutdownFile_cb_2eproto();

class Hello;
class HelloCB;
class Login;
class LoginBaseappFailed;
class CreatedProxies;
class hire_data;
class hire_hero;
class down_msg;
class system_setting_reply;
class system_setting_change;
class system_setting_request;
class system_setting_item;
class global_config;
class login_reply;
class sdk_login_reply;
class user_check;
class reset;
class enter_stage_reply;
class activity_info_reply;
class last_activity_info;
class activity_lotto_info_reply;
class activity_lotto_reward_reply;
class activity_bigpackage_info_reply;
class activity_bigpackage_reward_reply;
class activity_bigpackage_reset_reply;
class exit_stage_reply;
class hero_upgrade_reply;
class equip_synthesis_reply;
class wear_equip_reply;
class sync_vitality_reply;
class consume_item_reply;
class user_shop;
class star_shop;
class shop_consume_reply;
class skill_levelup_reply;
class sell_item_reply;
class fragment_compose_reply;
class hero_equip_upgrade_reply;
class tutorial_reply;
class error_info;
class goods;
class star_goods;
class user;
class user_summary;
class name_card;
class daily_login;
class ask_daily_login_reply;
class hero_equip;
class hero;
class hero_summary;
class hero_dyna;
class skilllevelup;
class usertask;
class dailyjob;
class sweeploot;
class tavern_record;
class usermidas;
class trigger_task_reply;
class require_rewards_reply;
class trigger_job_reply;
class dailyjob_reward;
class job_rewards_reply;
class tavern_draw_reply;
class reset_elite_reply;
class sweep_stage_reply;
class sweep;
class sync_skill_stren_reply;
class hero_evolve_reply;
class vitality;
class userstage;
class act_daily_record;
class ladder_reply;
class open_panel;
class apply_opponent;
class start_battle;
class end_battle;
class set_lineup;
class query_records;
class query_replay;
class pvp_record;
class query_rankboard;
class query_oppo_info;
class clear_battle_cd;
class rankboard_data;
class ladder_record;
class ladder_opponent;
class ladder_rank_reward;
class draw_rank_reward;
class buy_battle_chance;
class set_name_reply;
class set_avatar_reply;
class query_data_reply;
class midas_acquire;
class midas_reply;
class open_shop_reply;
class charge_reply;
class notify_msg;
class ladder_notify;
class tbc_reply;
class tbc_self_hero;
class tbc_oppo_hero;
class tbc_reward;
class tbc_stage;
class tbc_info;
class tbc_open_panel;
class tbc_query_oppo;
class tbc_start_battle;
class tbc_end_battle;
class tbc_reset;
class tbc_draw_reward;
class get_maillist_reply;
class sys_mail;
class mail_content;
class plain_mail;
class format_mail;
class mail_param;
class user_point;
class read_mail_reply;
class get_vip_gift_reply;
class chat_reply;
class chat_blacklist_user;
class chat_blacklist;
class chat_broad_say;
class chat_say;
class chat_fresh;
class chat_fetch;
class chat_acc;
class chat_content;
class chat_add_bl;
class chat_del_bl;
class chat;
class user_guild;
class guild_reply;
class guild_send_mail;
class guild_set_jump;
class guild_instance_prepare;
class dps_rank;
class dps_rank_array;
class guild_first_pass;
class guild_fast_pass;
class guild_stage_rank;
class guild_app_queue;
class guild_members;
class guild_jump;
class guild_items_history;
class guild_item_history;
class guild_challenger_damage;
class guild_instance_damage;
class guild_drop_give;
class guild_drop_item_info;
class guild_drop_item;
class guild_instance_dps;
class guild_drop_info;
class guild_instance_apply;
class guild_instance_info;
class guild_instance_start;
class guild_stage_hp_drop;
class hp_drop;
class guild_instance_end_down;
class break_history;
class guild_instance_open;
class guild_create;
class guild_dismiss;
class guild_info;
class guild_summary;
class guild_member;
class guild_applier;
class guild_list;
class guild_search;
class guild_join;
class guild_join_confirm;
class guild_leave;
class guild_kick;
class guild_set;
class guild_query;
class guild_worship;
class guild_set_job;
class guild_add_hire;
class guild_del_hire;
class guild_query_hires;
class guild_hire_user;
class hire_hero_summary;
class guild_hire_hero;
class guild_worship_req;
class guild_worship_withdraw;
class guild_qurey_hh_detail;
class worship_reward;
class activity_reward;
class activity_infos;
class activity_rewards;
class activity_info;
class cdkey_gift_reply;
class res_pack;
class ask_magicsoul_reply;
class important_data;
class monthcard;
class excavate_reply;
class revenge_excavate_reply;
class search_excavate_reply;
class query_excavate_data_reply;
class excavate_self_hero;
class excavate_cfg;
class excavate_team;
class excavate;
class excavate_history;
class query_excavate_history_reply;
class excavate_battle_hero;
class excavate_battle_team;
class excavate_battle;
class query_excavate_battle_reply;
class set_excavate_team_reply;
class excavate_start_battle_reply;
class excavate_end_battle_reply;
class draw_excav_res_reply;
class excavate_reward;
class query_excavate_def_reply;
class clear_excavate_battle_reply;
class withdraw_excavate_hero_reply;
class draw_excavate_def_rwd_reply;
class drop_excavate_reply;
class change_server_reply;
class server_info;
class guild_instance_query;
class guild_chapter;
class guild_instance_detail;
class guild_challenger;
class guild_instance_record;
class guild_instance_summary;
class guild_instance_item;
class guild_instance_drop;
class splitable_hero;
class query_split_data_reply;
class query_split_return_reply;
class split_hero_reply;
class worldcup_reply;
class worldcup_reward;
class worldcup_comp;
class worldcup_query_reply;
class worldcup_submit_reply;
class battle_check_fail;
class super_link;
class ranklist_item;
class query_ranklist_reply;
class request_guild_log_reply;
class guild_log;
class guild_log_content;
class client_update_version;
class query_act_stage_reply;
class fb_attention_reply;
class continue_pay_reply;
class recharge_rebate_reply;
class every_day_happy_reply;

enum system_setting_item_setting_status {
  system_setting_item_setting_status_on = 1,
  system_setting_item_setting_status_off = 2
};
bool system_setting_item_setting_status_IsValid(int value);
const system_setting_item_setting_status system_setting_item_setting_status_setting_status_MIN = system_setting_item_setting_status_on;
const system_setting_item_setting_status system_setting_item_setting_status_setting_status_MAX = system_setting_item_setting_status_off;
const int system_setting_item_setting_status_setting_status_ARRAYSIZE = system_setting_item_setting_status_setting_status_MAX + 1;

const ::google::protobuf::EnumDescriptor* system_setting_item_setting_status_descriptor();
inline const ::std::string& system_setting_item_setting_status_Name(system_setting_item_setting_status value) {
  return ::google::protobuf::internal::NameOfEnum(
    system_setting_item_setting_status_descriptor(), value);
}
inline bool system_setting_item_setting_status_Parse(
    const ::std::string& name, system_setting_item_setting_status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<system_setting_item_setting_status>(
    system_setting_item_setting_status_descriptor(), name, value);
}
enum exit_stage_reply_exit_stage_result {
  exit_stage_reply_exit_stage_result_known = 0,
  exit_stage_reply_exit_stage_result_unknown = 1
};
bool exit_stage_reply_exit_stage_result_IsValid(int value);
const exit_stage_reply_exit_stage_result exit_stage_reply_exit_stage_result_exit_stage_result_MIN = exit_stage_reply_exit_stage_result_known;
const exit_stage_reply_exit_stage_result exit_stage_reply_exit_stage_result_exit_stage_result_MAX = exit_stage_reply_exit_stage_result_unknown;
const int exit_stage_reply_exit_stage_result_exit_stage_result_ARRAYSIZE = exit_stage_reply_exit_stage_result_exit_stage_result_MAX + 1;

const ::google::protobuf::EnumDescriptor* exit_stage_reply_exit_stage_result_descriptor();
inline const ::std::string& exit_stage_reply_exit_stage_result_Name(exit_stage_reply_exit_stage_result value) {
  return ::google::protobuf::internal::NameOfEnum(
    exit_stage_reply_exit_stage_result_descriptor(), value);
}
inline bool exit_stage_reply_exit_stage_result_Parse(
    const ::std::string& name, exit_stage_reply_exit_stage_result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<exit_stage_reply_exit_stage_result>(
    exit_stage_reply_exit_stage_result_descriptor(), name, value);
}
enum error_info_exit {
  error_info_exit_noneed = 0,
  error_info_exit_force = 1
};
bool error_info_exit_IsValid(int value);
const error_info_exit error_info_exit_exit_MIN = error_info_exit_noneed;
const error_info_exit error_info_exit_exit_MAX = error_info_exit_force;
const int error_info_exit_exit_ARRAYSIZE = error_info_exit_exit_MAX + 1;

const ::google::protobuf::EnumDescriptor* error_info_exit_descriptor();
inline const ::std::string& error_info_exit_Name(error_info_exit value) {
  return ::google::protobuf::internal::NameOfEnum(
    error_info_exit_descriptor(), value);
}
inline bool error_info_exit_Parse(
    const ::std::string& name, error_info_exit* value) {
  return ::google::protobuf::internal::ParseNamedEnum<error_info_exit>(
    error_info_exit_descriptor(), name, value);
}
enum goods_price_type {
  goods_price_type_gold = 0,
  goods_price_type_diamond = 1,
  goods_price_type_crusadepoint = 2,
  goods_price_type_arenapoint = 3,
  goods_price_type_guildpoint = 4
};
bool goods_price_type_IsValid(int value);
const goods_price_type goods_price_type_price_type_MIN = goods_price_type_gold;
const goods_price_type goods_price_type_price_type_MAX = goods_price_type_guildpoint;
const int goods_price_type_price_type_ARRAYSIZE = goods_price_type_price_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* goods_price_type_descriptor();
inline const ::std::string& goods_price_type_Name(goods_price_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    goods_price_type_descriptor(), value);
}
inline bool goods_price_type_Parse(
    const ::std::string& name, goods_price_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<goods_price_type>(
    goods_price_type_descriptor(), name, value);
}
enum star_goods_box_type {
  star_goods_box_type_stone_green = 0,
  star_goods_box_type_stone_blue = 1,
  star_goods_box_type_stone_purple = 2
};
bool star_goods_box_type_IsValid(int value);
const star_goods_box_type star_goods_box_type_box_type_MIN = star_goods_box_type_stone_green;
const star_goods_box_type star_goods_box_type_box_type_MAX = star_goods_box_type_stone_purple;
const int star_goods_box_type_box_type_ARRAYSIZE = star_goods_box_type_box_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* star_goods_box_type_descriptor();
inline const ::std::string& star_goods_box_type_Name(star_goods_box_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    star_goods_box_type_descriptor(), value);
}
inline bool star_goods_box_type_Parse(
    const ::std::string& name, star_goods_box_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<star_goods_box_type>(
    star_goods_box_type_descriptor(), name, value);
}
enum daily_login_dailylogin_status {
  daily_login_dailylogin_status_all = 1,
  daily_login_dailylogin_status_part = 2,
  daily_login_dailylogin_status_nothing = 3
};
bool daily_login_dailylogin_status_IsValid(int value);
const daily_login_dailylogin_status daily_login_dailylogin_status_dailylogin_status_MIN = daily_login_dailylogin_status_all;
const daily_login_dailylogin_status daily_login_dailylogin_status_dailylogin_status_MAX = daily_login_dailylogin_status_nothing;
const int daily_login_dailylogin_status_dailylogin_status_ARRAYSIZE = daily_login_dailylogin_status_dailylogin_status_MAX + 1;

const ::google::protobuf::EnumDescriptor* daily_login_dailylogin_status_descriptor();
inline const ::std::string& daily_login_dailylogin_status_Name(daily_login_dailylogin_status value) {
  return ::google::protobuf::internal::NameOfEnum(
    daily_login_dailylogin_status_descriptor(), value);
}
inline bool daily_login_dailylogin_status_Parse(
    const ::std::string& name, daily_login_dailylogin_status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<daily_login_dailylogin_status>(
    daily_login_dailylogin_status_descriptor(), name, value);
}
enum usertask_status {
  usertask_status_finished = 0,
  usertask_status_working = 1
};
bool usertask_status_IsValid(int value);
const usertask_status usertask_status_status_MIN = usertask_status_finished;
const usertask_status usertask_status_status_MAX = usertask_status_working;
const int usertask_status_status_ARRAYSIZE = usertask_status_status_MAX + 1;

const ::google::protobuf::EnumDescriptor* usertask_status_descriptor();
inline const ::std::string& usertask_status_Name(usertask_status value) {
  return ::google::protobuf::internal::NameOfEnum(
    usertask_status_descriptor(), value);
}
inline bool usertask_status_Parse(
    const ::std::string& name, usertask_status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<usertask_status>(
    usertask_status_descriptor(), name, value);
}
enum tavern_record_box_type {
  tavern_record_box_type_green = 1,
  tavern_record_box_type_blue = 2,
  tavern_record_box_type_purple = 3,
  tavern_record_box_type_magicsoul = 4
};
bool tavern_record_box_type_IsValid(int value);
const tavern_record_box_type tavern_record_box_type_box_type_MIN = tavern_record_box_type_green;
const tavern_record_box_type tavern_record_box_type_box_type_MAX = tavern_record_box_type_magicsoul;
const int tavern_record_box_type_box_type_ARRAYSIZE = tavern_record_box_type_box_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* tavern_record_box_type_descriptor();
inline const ::std::string& tavern_record_box_type_Name(tavern_record_box_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    tavern_record_box_type_descriptor(), value);
}
inline bool tavern_record_box_type_Parse(
    const ::std::string& name, tavern_record_box_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<tavern_record_box_type>(
    tavern_record_box_type_descriptor(), name, value);
}
enum dailyjob_reward_type {
  dailyjob_reward_type_rmb = 1,
  dailyjob_reward_type_money = 2,
  dailyjob_reward_type_item = 3,
  dailyjob_reward_type_hero = 4,
  dailyjob_reward_type_vitality = 5,
  dailyjob_reward_type_playerexp = 6,
  dailyjob_reward_type_crusadepoint = 7,
  dailyjob_reward_type_arenapoint = 8,
  dailyjob_reward_type_guildpoint = 9
};
bool dailyjob_reward_type_IsValid(int value);
const dailyjob_reward_type dailyjob_reward_type_type_MIN = dailyjob_reward_type_rmb;
const dailyjob_reward_type dailyjob_reward_type_type_MAX = dailyjob_reward_type_guildpoint;
const int dailyjob_reward_type_type_ARRAYSIZE = dailyjob_reward_type_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* dailyjob_reward_type_descriptor();
inline const ::std::string& dailyjob_reward_type_Name(dailyjob_reward_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    dailyjob_reward_type_descriptor(), value);
}
inline bool dailyjob_reward_type_Parse(
    const ::std::string& name, dailyjob_reward_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<dailyjob_reward_type>(
    dailyjob_reward_type_descriptor(), name, value);
}
enum ladder_rank_reward_reward_type {
  ladder_rank_reward_reward_type_gold = 1,
  ladder_rank_reward_reward_type_diamond = 2,
  ladder_rank_reward_reward_type_item = 3,
  ladder_rank_reward_reward_type_arenapoint = 4
};
bool ladder_rank_reward_reward_type_IsValid(int value);
const ladder_rank_reward_reward_type ladder_rank_reward_reward_type_reward_type_MIN = ladder_rank_reward_reward_type_gold;
const ladder_rank_reward_reward_type ladder_rank_reward_reward_type_reward_type_MAX = ladder_rank_reward_reward_type_arenapoint;
const int ladder_rank_reward_reward_type_reward_type_ARRAYSIZE = ladder_rank_reward_reward_type_reward_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* ladder_rank_reward_reward_type_descriptor();
inline const ::std::string& ladder_rank_reward_reward_type_Name(ladder_rank_reward_reward_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    ladder_rank_reward_reward_type_descriptor(), value);
}
inline bool ladder_rank_reward_reward_type_Parse(
    const ::std::string& name, ladder_rank_reward_reward_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ladder_rank_reward_reward_type>(
    ladder_rank_reward_reward_type_descriptor(), name, value);
}
enum set_name_reply_set_name_result {
  set_name_reply_set_name_result_success = 0,
  set_name_reply_set_name_result_exists = 1,
  set_name_reply_set_name_result_dirty_word = 2
};
bool set_name_reply_set_name_result_IsValid(int value);
const set_name_reply_set_name_result set_name_reply_set_name_result_set_name_result_MIN = set_name_reply_set_name_result_success;
const set_name_reply_set_name_result set_name_reply_set_name_result_set_name_result_MAX = set_name_reply_set_name_result_dirty_word;
const int set_name_reply_set_name_result_set_name_result_ARRAYSIZE = set_name_reply_set_name_result_set_name_result_MAX + 1;

const ::google::protobuf::EnumDescriptor* set_name_reply_set_name_result_descriptor();
inline const ::std::string& set_name_reply_set_name_result_Name(set_name_reply_set_name_result value) {
  return ::google::protobuf::internal::NameOfEnum(
    set_name_reply_set_name_result_descriptor(), value);
}
inline bool set_name_reply_set_name_result_Parse(
    const ::std::string& name, set_name_reply_set_name_result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<set_name_reply_set_name_result>(
    set_name_reply_set_name_result_descriptor(), name, value);
}
enum tbc_reward_type {
  tbc_reward_type_gold = 1,
  tbc_reward_type_diamond = 2,
  tbc_reward_type_item = 3,
  tbc_reward_type_chest = 4,
  tbc_reward_type_crusadepoint = 5,
  tbc_reward_type_chestbox = 6
};
bool tbc_reward_type_IsValid(int value);
const tbc_reward_type tbc_reward_type_type_MIN = tbc_reward_type_gold;
const tbc_reward_type tbc_reward_type_type_MAX = tbc_reward_type_chestbox;
const int tbc_reward_type_type_ARRAYSIZE = tbc_reward_type_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* tbc_reward_type_descriptor();
inline const ::std::string& tbc_reward_type_Name(tbc_reward_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    tbc_reward_type_descriptor(), value);
}
inline bool tbc_reward_type_Parse(
    const ::std::string& name, tbc_reward_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<tbc_reward_type>(
    tbc_reward_type_descriptor(), name, value);
}
enum tbc_stage_status {
  tbc_stage_status_unpassed = 0,
  tbc_stage_status_passed = 1,
  tbc_stage_status_rewarded = 2
};
bool tbc_stage_status_IsValid(int value);
const tbc_stage_status tbc_stage_status_status_MIN = tbc_stage_status_unpassed;
const tbc_stage_status tbc_stage_status_status_MAX = tbc_stage_status_rewarded;
const int tbc_stage_status_status_ARRAYSIZE = tbc_stage_status_status_MAX + 1;

const ::google::protobuf::EnumDescriptor* tbc_stage_status_descriptor();
inline const ::std::string& tbc_stage_status_Name(tbc_stage_status value) {
  return ::google::protobuf::internal::NameOfEnum(
    tbc_stage_status_descriptor(), value);
}
inline bool tbc_stage_status_Parse(
    const ::std::string& name, tbc_stage_status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<tbc_stage_status>(
    tbc_stage_status_descriptor(), name, value);
}
enum sys_mail_status {
  sys_mail_status_unread = 0,
  sys_mail_status_read = 1,
  sys_mail_status_delete = 2
};
bool sys_mail_status_IsValid(int value);
const sys_mail_status sys_mail_status_status_MIN = sys_mail_status_unread;
const sys_mail_status sys_mail_status_status_MAX = sys_mail_status_delete;
const int sys_mail_status_status_ARRAYSIZE = sys_mail_status_status_MAX + 1;

const ::google::protobuf::EnumDescriptor* sys_mail_status_descriptor();
inline const ::std::string& sys_mail_status_Name(sys_mail_status value) {
  return ::google::protobuf::internal::NameOfEnum(
    sys_mail_status_descriptor(), value);
}
inline bool sys_mail_status_Parse(
    const ::std::string& name, sys_mail_status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<sys_mail_status>(
    sys_mail_status_descriptor(), name, value);
}
enum mail_param_mail_param_type {
  mail_param_mail_param_type_value = 1,
  mail_param_mail_param_type_money = 2,
  mail_param_mail_param_type_item = 3,
  mail_param_mail_param_type_mine = 4,
  mail_param_mail_param_type_self_hero = 5,
  mail_param_mail_param_type_excav_battle_id = 6,
  mail_param_mail_param_type_hero_name = 7
};
bool mail_param_mail_param_type_IsValid(int value);
const mail_param_mail_param_type mail_param_mail_param_type_mail_param_type_MIN = mail_param_mail_param_type_value;
const mail_param_mail_param_type mail_param_mail_param_type_mail_param_type_MAX = mail_param_mail_param_type_hero_name;
const int mail_param_mail_param_type_mail_param_type_ARRAYSIZE = mail_param_mail_param_type_mail_param_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* mail_param_mail_param_type_descriptor();
inline const ::std::string& mail_param_mail_param_type_Name(mail_param_mail_param_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    mail_param_mail_param_type_descriptor(), value);
}
inline bool mail_param_mail_param_type_Parse(
    const ::std::string& name, mail_param_mail_param_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<mail_param_mail_param_type>(
    mail_param_mail_param_type_descriptor(), name, value);
}
enum user_point_user_point_type {
  user_point_user_point_type_arenapoint = 1,
  user_point_user_point_type_crusadepoint = 2,
  user_point_user_point_type_guildpoint = 3
};
bool user_point_user_point_type_IsValid(int value);
const user_point_user_point_type user_point_user_point_type_user_point_type_MIN = user_point_user_point_type_arenapoint;
const user_point_user_point_type user_point_user_point_type_user_point_type_MAX = user_point_user_point_type_guildpoint;
const int user_point_user_point_type_user_point_type_ARRAYSIZE = user_point_user_point_type_user_point_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* user_point_user_point_type_descriptor();
inline const ::std::string& user_point_user_point_type_Name(user_point_user_point_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    user_point_user_point_type_descriptor(), value);
}
inline bool user_point_user_point_type_Parse(
    const ::std::string& name, user_point_user_point_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<user_point_user_point_type>(
    user_point_user_point_type_descriptor(), name, value);
}
enum chat_acc_chat_acc_t {
  chat_acc_chat_acc_t_binary = 1,
  chat_acc_chat_acc_t_pvp_replay = 2
};
bool chat_acc_chat_acc_t_IsValid(int value);
const chat_acc_chat_acc_t chat_acc_chat_acc_t_chat_acc_t_MIN = chat_acc_chat_acc_t_binary;
const chat_acc_chat_acc_t chat_acc_chat_acc_t_chat_acc_t_MAX = chat_acc_chat_acc_t_pvp_replay;
const int chat_acc_chat_acc_t_chat_acc_t_ARRAYSIZE = chat_acc_chat_acc_t_chat_acc_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* chat_acc_chat_acc_t_descriptor();
inline const ::std::string& chat_acc_chat_acc_t_Name(chat_acc_chat_acc_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    chat_acc_chat_acc_t_descriptor(), value);
}
inline bool chat_acc_chat_acc_t_Parse(
    const ::std::string& name, chat_acc_chat_acc_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<chat_acc_chat_acc_t>(
    chat_acc_chat_acc_t_descriptor(), name, value);
}
enum guild_join_join_result {
  guild_join_join_result_join_fail = 0,
  guild_join_join_result_join_enter = 1,
  guild_join_join_result_join_wait = 2
};
bool guild_join_join_result_IsValid(int value);
const guild_join_join_result guild_join_join_result_join_result_MIN = guild_join_join_result_join_fail;
const guild_join_join_result guild_join_join_result_join_result_MAX = guild_join_join_result_join_wait;
const int guild_join_join_result_join_result_ARRAYSIZE = guild_join_join_result_join_result_MAX + 1;

const ::google::protobuf::EnumDescriptor* guild_join_join_result_descriptor();
inline const ::std::string& guild_join_join_result_Name(guild_join_join_result value) {
  return ::google::protobuf::internal::NameOfEnum(
    guild_join_join_result_descriptor(), value);
}
inline bool guild_join_join_result_Parse(
    const ::std::string& name, guild_join_join_result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<guild_join_join_result>(
    guild_join_join_result_descriptor(), name, value);
}
enum worship_reward_type {
  worship_reward_type_gold = 1,
  worship_reward_type_diamond = 2
};
bool worship_reward_type_IsValid(int value);
const worship_reward_type worship_reward_type_type_MIN = worship_reward_type_gold;
const worship_reward_type worship_reward_type_type_MAX = worship_reward_type_diamond;
const int worship_reward_type_type_ARRAYSIZE = worship_reward_type_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* worship_reward_type_descriptor();
inline const ::std::string& worship_reward_type_Name(worship_reward_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    worship_reward_type_descriptor(), value);
}
inline bool worship_reward_type_Parse(
    const ::std::string& name, worship_reward_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<worship_reward_type>(
    worship_reward_type_descriptor(), name, value);
}
enum activity_reward_type {
  activity_reward_type_rmb = 1,
  activity_reward_type_money = 2,
  activity_reward_type_item = 3,
  activity_reward_type_hero = 4,
  activity_reward_type_rand_soul = 5
};
bool activity_reward_type_IsValid(int value);
const activity_reward_type activity_reward_type_type_MIN = activity_reward_type_rmb;
const activity_reward_type activity_reward_type_type_MAX = activity_reward_type_rand_soul;
const int activity_reward_type_type_ARRAYSIZE = activity_reward_type_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* activity_reward_type_descriptor();
inline const ::std::string& activity_reward_type_Name(activity_reward_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    activity_reward_type_descriptor(), value);
}
inline bool activity_reward_type_Parse(
    const ::std::string& name, activity_reward_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<activity_reward_type>(
    activity_reward_type_descriptor(), name, value);
}
enum activity_info_type {
  activity_info_type_single_br_tavern = 1,
  activity_info_type_combo_br_tavern = 2,
  activity_info_type_single_gd_tavern = 3,
  activity_info_type_combo_gd_tavern = 4,
  activity_info_type_magic_soul_tavern = 5,
  activity_info_type_rmb_recharge = 6,
  activity_info_type_diamond_consume = 7
};
bool activity_info_type_IsValid(int value);
const activity_info_type activity_info_type_type_MIN = activity_info_type_single_br_tavern;
const activity_info_type activity_info_type_type_MAX = activity_info_type_diamond_consume;
const int activity_info_type_type_ARRAYSIZE = activity_info_type_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* activity_info_type_descriptor();
inline const ::std::string& activity_info_type_Name(activity_info_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    activity_info_type_descriptor(), value);
}
inline bool activity_info_type_Parse(
    const ::std::string& name, activity_info_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<activity_info_type>(
    activity_info_type_descriptor(), name, value);
}
enum cdkey_gift_reply_cdkey_result {
  cdkey_gift_reply_cdkey_result_success = 0,
  cdkey_gift_reply_cdkey_result_already_used = 1,
  cdkey_gift_reply_cdkey_result_not_exists = 2,
  cdkey_gift_reply_cdkey_result_once_only = 3
};
bool cdkey_gift_reply_cdkey_result_IsValid(int value);
const cdkey_gift_reply_cdkey_result cdkey_gift_reply_cdkey_result_cdkey_result_MIN = cdkey_gift_reply_cdkey_result_success;
const cdkey_gift_reply_cdkey_result cdkey_gift_reply_cdkey_result_cdkey_result_MAX = cdkey_gift_reply_cdkey_result_once_only;
const int cdkey_gift_reply_cdkey_result_cdkey_result_ARRAYSIZE = cdkey_gift_reply_cdkey_result_cdkey_result_MAX + 1;

const ::google::protobuf::EnumDescriptor* cdkey_gift_reply_cdkey_result_descriptor();
inline const ::std::string& cdkey_gift_reply_cdkey_result_Name(cdkey_gift_reply_cdkey_result value) {
  return ::google::protobuf::internal::NameOfEnum(
    cdkey_gift_reply_cdkey_result_descriptor(), value);
}
inline bool cdkey_gift_reply_cdkey_result_Parse(
    const ::std::string& name, cdkey_gift_reply_cdkey_result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<cdkey_gift_reply_cdkey_result>(
    cdkey_gift_reply_cdkey_result_descriptor(), name, value);
}
enum search_excavate_reply_search_result {
  search_excavate_reply_search_result_success = 0,
  search_excavate_reply_search_result_failed = 1,
  search_excavate_reply_search_result_lack_money = 2
};
bool search_excavate_reply_search_result_IsValid(int value);
const search_excavate_reply_search_result search_excavate_reply_search_result_search_result_MIN = search_excavate_reply_search_result_success;
const search_excavate_reply_search_result search_excavate_reply_search_result_search_result_MAX = search_excavate_reply_search_result_lack_money;
const int search_excavate_reply_search_result_search_result_ARRAYSIZE = search_excavate_reply_search_result_search_result_MAX + 1;

const ::google::protobuf::EnumDescriptor* search_excavate_reply_search_result_descriptor();
inline const ::std::string& search_excavate_reply_search_result_Name(search_excavate_reply_search_result value) {
  return ::google::protobuf::internal::NameOfEnum(
    search_excavate_reply_search_result_descriptor(), value);
}
inline bool search_excavate_reply_search_result_Parse(
    const ::std::string& name, search_excavate_reply_search_result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<search_excavate_reply_search_result>(
    search_excavate_reply_search_result_descriptor(), name, value);
}
enum excavate_owner {
  excavate_owner_mine = 0,
  excavate_owner_others = 1,
  excavate_owner_robot = 2
};
bool excavate_owner_IsValid(int value);
const excavate_owner excavate_owner_owner_MIN = excavate_owner_mine;
const excavate_owner excavate_owner_owner_MAX = excavate_owner_robot;
const int excavate_owner_owner_ARRAYSIZE = excavate_owner_owner_MAX + 1;

const ::google::protobuf::EnumDescriptor* excavate_owner_descriptor();
inline const ::std::string& excavate_owner_Name(excavate_owner value) {
  return ::google::protobuf::internal::NameOfEnum(
    excavate_owner_descriptor(), value);
}
inline bool excavate_owner_Parse(
    const ::std::string& name, excavate_owner* value) {
  return ::google::protobuf::internal::ParseNamedEnum<excavate_owner>(
    excavate_owner_descriptor(), name, value);
}
enum excavate_state {
  excavate_state_searched = 1,
  excavate_state_battle = 2,
  excavate_state_shield = 3,
  excavate_state_occupy = 4,
  excavate_state_protect = 5,
  excavate_state_dead = 6
};
bool excavate_state_IsValid(int value);
const excavate_state excavate_state_state_MIN = excavate_state_searched;
const excavate_state excavate_state_state_MAX = excavate_state_dead;
const int excavate_state_state_ARRAYSIZE = excavate_state_state_MAX + 1;

const ::google::protobuf::EnumDescriptor* excavate_state_descriptor();
inline const ::std::string& excavate_state_Name(excavate_state value) {
  return ::google::protobuf::internal::NameOfEnum(
    excavate_state_descriptor(), value);
}
inline bool excavate_state_Parse(
    const ::std::string& name, excavate_state* value) {
  return ::google::protobuf::internal::ParseNamedEnum<excavate_state>(
    excavate_state_descriptor(), name, value);
}
enum excavate_history_def_result {
  excavate_history_def_result_win = 0,
  excavate_history_def_result_fail = 1
};
bool excavate_history_def_result_IsValid(int value);
const excavate_history_def_result excavate_history_def_result_def_result_MIN = excavate_history_def_result_win;
const excavate_history_def_result excavate_history_def_result_def_result_MAX = excavate_history_def_result_fail;
const int excavate_history_def_result_def_result_ARRAYSIZE = excavate_history_def_result_def_result_MAX + 1;

const ::google::protobuf::EnumDescriptor* excavate_history_def_result_descriptor();
inline const ::std::string& excavate_history_def_result_Name(excavate_history_def_result value) {
  return ::google::protobuf::internal::NameOfEnum(
    excavate_history_def_result_descriptor(), value);
}
inline bool excavate_history_def_result_Parse(
    const ::std::string& name, excavate_history_def_result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<excavate_history_def_result>(
    excavate_history_def_result_descriptor(), name, value);
}
enum set_excavate_team_reply_result {
  set_excavate_team_reply_result_success = 0,
  set_excavate_team_reply_result_failed = 1,
  set_excavate_team_reply_result_expired = 2,
  set_excavate_team_reply_result_fall = 3
};
bool set_excavate_team_reply_result_IsValid(int value);
const set_excavate_team_reply_result set_excavate_team_reply_result_result_MIN = set_excavate_team_reply_result_success;
const set_excavate_team_reply_result set_excavate_team_reply_result_result_MAX = set_excavate_team_reply_result_fall;
const int set_excavate_team_reply_result_result_ARRAYSIZE = set_excavate_team_reply_result_result_MAX + 1;

const ::google::protobuf::EnumDescriptor* set_excavate_team_reply_result_descriptor();
inline const ::std::string& set_excavate_team_reply_result_Name(set_excavate_team_reply_result value) {
  return ::google::protobuf::internal::NameOfEnum(
    set_excavate_team_reply_result_descriptor(), value);
}
inline bool set_excavate_team_reply_result_Parse(
    const ::std::string& name, set_excavate_team_reply_result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<set_excavate_team_reply_result>(
    set_excavate_team_reply_result_descriptor(), name, value);
}
enum excavate_end_battle_reply_mine_battle_result {
  excavate_end_battle_reply_mine_battle_result_success = 0,
  excavate_end_battle_reply_mine_battle_result_timeout = 1
};
bool excavate_end_battle_reply_mine_battle_result_IsValid(int value);
const excavate_end_battle_reply_mine_battle_result excavate_end_battle_reply_mine_battle_result_mine_battle_result_MIN = excavate_end_battle_reply_mine_battle_result_success;
const excavate_end_battle_reply_mine_battle_result excavate_end_battle_reply_mine_battle_result_mine_battle_result_MAX = excavate_end_battle_reply_mine_battle_result_timeout;
const int excavate_end_battle_reply_mine_battle_result_mine_battle_result_ARRAYSIZE = excavate_end_battle_reply_mine_battle_result_mine_battle_result_MAX + 1;

const ::google::protobuf::EnumDescriptor* excavate_end_battle_reply_mine_battle_result_descriptor();
inline const ::std::string& excavate_end_battle_reply_mine_battle_result_Name(excavate_end_battle_reply_mine_battle_result value) {
  return ::google::protobuf::internal::NameOfEnum(
    excavate_end_battle_reply_mine_battle_result_descriptor(), value);
}
inline bool excavate_end_battle_reply_mine_battle_result_Parse(
    const ::std::string& name, excavate_end_battle_reply_mine_battle_result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<excavate_end_battle_reply_mine_battle_result>(
    excavate_end_battle_reply_mine_battle_result_descriptor(), name, value);
}
enum excavate_reward_type {
  excavate_reward_type_gold = 1,
  excavate_reward_type_diamond = 2,
  excavate_reward_type_item = 3,
  excavate_reward_type_wood = 4,
  excavate_reward_type_iron = 5,
  excavate_reward_type_crystal = 6
};
bool excavate_reward_type_IsValid(int value);
const excavate_reward_type excavate_reward_type_type_MIN = excavate_reward_type_gold;
const excavate_reward_type excavate_reward_type_type_MAX = excavate_reward_type_crystal;
const int excavate_reward_type_type_ARRAYSIZE = excavate_reward_type_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* excavate_reward_type_descriptor();
inline const ::std::string& excavate_reward_type_Name(excavate_reward_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    excavate_reward_type_descriptor(), value);
}
inline bool excavate_reward_type_Parse(
    const ::std::string& name, excavate_reward_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<excavate_reward_type>(
    excavate_reward_type_descriptor(), name, value);
}
enum guild_instance_query_is_can_jump {
  guild_instance_query_is_can_jump_true = 1,
  guild_instance_query_is_can_jump_false = 2
};
bool guild_instance_query_is_can_jump_IsValid(int value);
const guild_instance_query_is_can_jump guild_instance_query_is_can_jump_is_can_jump_MIN = guild_instance_query_is_can_jump_true;
const guild_instance_query_is_can_jump guild_instance_query_is_can_jump_is_can_jump_MAX = guild_instance_query_is_can_jump_false;
const int guild_instance_query_is_can_jump_is_can_jump_ARRAYSIZE = guild_instance_query_is_can_jump_is_can_jump_MAX + 1;

const ::google::protobuf::EnumDescriptor* guild_instance_query_is_can_jump_descriptor();
inline const ::std::string& guild_instance_query_is_can_jump_Name(guild_instance_query_is_can_jump value) {
  return ::google::protobuf::internal::NameOfEnum(
    guild_instance_query_is_can_jump_descriptor(), value);
}
inline bool guild_instance_query_is_can_jump_Parse(
    const ::std::string& name, guild_instance_query_is_can_jump* value) {
  return ::google::protobuf::internal::ParseNamedEnum<guild_instance_query_is_can_jump>(
    guild_instance_query_is_can_jump_descriptor(), name, value);
}
enum guild_instance_detail_challenger_status {
  guild_instance_detail_challenger_status_battle = 1,
  guild_instance_detail_challenger_status_prepare = 2
};
bool guild_instance_detail_challenger_status_IsValid(int value);
const guild_instance_detail_challenger_status guild_instance_detail_challenger_status_challenger_status_MIN = guild_instance_detail_challenger_status_battle;
const guild_instance_detail_challenger_status guild_instance_detail_challenger_status_challenger_status_MAX = guild_instance_detail_challenger_status_prepare;
const int guild_instance_detail_challenger_status_challenger_status_ARRAYSIZE = guild_instance_detail_challenger_status_challenger_status_MAX + 1;

const ::google::protobuf::EnumDescriptor* guild_instance_detail_challenger_status_descriptor();
inline const ::std::string& guild_instance_detail_challenger_status_Name(guild_instance_detail_challenger_status value) {
  return ::google::protobuf::internal::NameOfEnum(
    guild_instance_detail_challenger_status_descriptor(), value);
}
inline bool guild_instance_detail_challenger_status_Parse(
    const ::std::string& name, guild_instance_detail_challenger_status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<guild_instance_detail_challenger_status>(
    guild_instance_detail_challenger_status_descriptor(), name, value);
}
enum guild_instance_item_drop_state {
  guild_instance_item_drop_state_no_apply = 1,
  guild_instance_item_drop_state_apply = 2
};
bool guild_instance_item_drop_state_IsValid(int value);
const guild_instance_item_drop_state guild_instance_item_drop_state_drop_state_MIN = guild_instance_item_drop_state_no_apply;
const guild_instance_item_drop_state guild_instance_item_drop_state_drop_state_MAX = guild_instance_item_drop_state_apply;
const int guild_instance_item_drop_state_drop_state_ARRAYSIZE = guild_instance_item_drop_state_drop_state_MAX + 1;

const ::google::protobuf::EnumDescriptor* guild_instance_item_drop_state_descriptor();
inline const ::std::string& guild_instance_item_drop_state_Name(guild_instance_item_drop_state value) {
  return ::google::protobuf::internal::NameOfEnum(
    guild_instance_item_drop_state_descriptor(), value);
}
inline bool guild_instance_item_drop_state_Parse(
    const ::std::string& name, guild_instance_item_drop_state* value) {
  return ::google::protobuf::internal::ParseNamedEnum<guild_instance_item_drop_state>(
    guild_instance_item_drop_state_descriptor(), name, value);
}
enum query_ranklist_reply_rank_type {
  query_ranklist_reply_rank_type_guildliveness = 1,
  query_ranklist_reply_rank_type_excavate_rob = 2,
  query_ranklist_reply_rank_type_excavate_gold = 3,
  query_ranklist_reply_rank_type_excavate_exp = 4,
  query_ranklist_reply_rank_type_top_gs = 5,
  query_ranklist_reply_rank_type_full_hero_gs = 6,
  query_ranklist_reply_rank_type_hero_team_gs = 7,
  query_ranklist_reply_rank_type_hero_evo_star = 8,
  query_ranklist_reply_rank_type_hero_arousal = 9,
  query_ranklist_reply_rank_type_top_arena = 10
};
bool query_ranklist_reply_rank_type_IsValid(int value);
const query_ranklist_reply_rank_type query_ranklist_reply_rank_type_rank_type_MIN = query_ranklist_reply_rank_type_guildliveness;
const query_ranklist_reply_rank_type query_ranklist_reply_rank_type_rank_type_MAX = query_ranklist_reply_rank_type_top_arena;
const int query_ranklist_reply_rank_type_rank_type_ARRAYSIZE = query_ranklist_reply_rank_type_rank_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* query_ranklist_reply_rank_type_descriptor();
inline const ::std::string& query_ranklist_reply_rank_type_Name(query_ranklist_reply_rank_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    query_ranklist_reply_rank_type_descriptor(), value);
}
inline bool query_ranklist_reply_rank_type_Parse(
    const ::std::string& name, query_ranklist_reply_rank_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<query_ranklist_reply_rank_type>(
    query_ranklist_reply_rank_type_descriptor(), name, value);
}
enum result {
  success = 0,
  fail = 1
};
bool result_IsValid(int value);
const result result_MIN = success;
const result result_MAX = fail;
const int result_ARRAYSIZE = result_MAX + 1;

const ::google::protobuf::EnumDescriptor* result_descriptor();
inline const ::std::string& result_Name(result value) {
  return ::google::protobuf::internal::NameOfEnum(
    result_descriptor(), value);
}
inline bool result_Parse(
    const ::std::string& name, result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<result>(
    result_descriptor(), name, value);
}
enum battle_result {
  victory = 0,
  defeat = 1,
  canceled = 2,
  timeout = 3
};
bool battle_result_IsValid(int value);
const battle_result battle_result_MIN = victory;
const battle_result battle_result_MAX = timeout;
const int battle_result_ARRAYSIZE = battle_result_MAX + 1;

const ::google::protobuf::EnumDescriptor* battle_result_descriptor();
inline const ::std::string& battle_result_Name(battle_result value) {
  return ::google::protobuf::internal::NameOfEnum(
    battle_result_descriptor(), value);
}
inline bool battle_result_Parse(
    const ::std::string& name, battle_result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<battle_result>(
    battle_result_descriptor(), name, value);
}
enum money_type {
  gold = 1,
  diamond = 2,
  tbc_point = 3,
  ladder_point = 4
};
bool money_type_IsValid(int value);
const money_type money_type_MIN = gold;
const money_type money_type_MAX = ladder_point;
const int money_type_ARRAYSIZE = money_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* money_type_descriptor();
inline const ::std::string& money_type_Name(money_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    money_type_descriptor(), value);
}
inline bool money_type_Parse(
    const ::std::string& name, money_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<money_type>(
    money_type_descriptor(), name, value);
}
enum hero_status {
  idle = 0,
  hire = 1,
  mining = 2
};
bool hero_status_IsValid(int value);
const hero_status hero_status_MIN = idle;
const hero_status hero_status_MAX = mining;
const int hero_status_ARRAYSIZE = hero_status_MAX + 1;

const ::google::protobuf::EnumDescriptor* hero_status_descriptor();
inline const ::std::string& hero_status_Name(hero_status value) {
  return ::google::protobuf::internal::NameOfEnum(
    hero_status_descriptor(), value);
}
inline bool hero_status_Parse(
    const ::std::string& name, hero_status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<hero_status>(
    hero_status_descriptor(), name, value);
}
enum server_opt_result {
  get_ok = 0,
  change_ok = 1,
  fail_op = 2
};
bool server_opt_result_IsValid(int value);
const server_opt_result server_opt_result_MIN = get_ok;
const server_opt_result server_opt_result_MAX = fail_op;
const int server_opt_result_ARRAYSIZE = server_opt_result_MAX + 1;

const ::google::protobuf::EnumDescriptor* server_opt_result_descriptor();
inline const ::std::string& server_opt_result_Name(server_opt_result value) {
  return ::google::protobuf::internal::NameOfEnum(
    server_opt_result_descriptor(), value);
}
inline bool server_opt_result_Parse(
    const ::std::string& name, server_opt_result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<server_opt_result>(
    server_opt_result_descriptor(), name, value);
}
enum hire_result {
  success_hire = 0,
  fail_hire = 1,
  stage_invalid = 2
};
bool hire_result_IsValid(int value);
const hire_result hire_result_MIN = success_hire;
const hire_result hire_result_MAX = stage_invalid;
const int hire_result_ARRAYSIZE = hire_result_MAX + 1;

const ::google::protobuf::EnumDescriptor* hire_result_descriptor();
inline const ::std::string& hire_result_Name(hire_result value) {
  return ::google::protobuf::internal::NameOfEnum(
    hire_result_descriptor(), value);
}
inline bool hire_result_Parse(
    const ::std::string& name, hire_result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<hire_result>(
    hire_result_descriptor(), name, value);
}
enum hire_from {
  guild = 0,
  tbc = 1,
  stage = 2,
  excav = 3
};
bool hire_from_IsValid(int value);
const hire_from hire_from_MIN = guild;
const hire_from hire_from_MAX = excav;
const int hire_from_ARRAYSIZE = hire_from_MAX + 1;

const ::google::protobuf::EnumDescriptor* hire_from_descriptor();
inline const ::std::string& hire_from_Name(hire_from value) {
  return ::google::protobuf::internal::NameOfEnum(
    hire_from_descriptor(), value);
}
inline bool hire_from_Parse(
    const ::std::string& name, hire_from* value) {
  return ::google::protobuf::internal::ParseNamedEnum<hire_from>(
    hire_from_descriptor(), name, value);
}
enum guild_join_t {
  no_verify = 1,
  verify = 2,
  closed = 3
};
bool guild_join_t_IsValid(int value);
const guild_join_t guild_join_t_MIN = no_verify;
const guild_join_t guild_join_t_MAX = closed;
const int guild_join_t_ARRAYSIZE = guild_join_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* guild_join_t_descriptor();
inline const ::std::string& guild_join_t_Name(guild_join_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    guild_join_t_descriptor(), value);
}
inline bool guild_join_t_Parse(
    const ::std::string& name, guild_join_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<guild_join_t>(
    guild_join_t_descriptor(), name, value);
}
enum guild_job_t {
  chairman = 1,
  member = 2,
  elder = 3
};
bool guild_job_t_IsValid(int value);
const guild_job_t guild_job_t_MIN = chairman;
const guild_job_t guild_job_t_MAX = elder;
const int guild_job_t_ARRAYSIZE = guild_job_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* guild_job_t_descriptor();
inline const ::std::string& guild_job_t_Name(guild_job_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    guild_job_t_descriptor(), value);
}
inline bool guild_job_t_Parse(
    const ::std::string& name, guild_job_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<guild_job_t>(
    guild_job_t_descriptor(), name, value);
}
enum chat_channel {
  world_channel = 1,
  guild_channel = 2,
  personal_channel = 3
};
bool chat_channel_IsValid(int value);
const chat_channel chat_channel_MIN = world_channel;
const chat_channel chat_channel_MAX = personal_channel;
const int chat_channel_ARRAYSIZE = chat_channel_MAX + 1;

const ::google::protobuf::EnumDescriptor* chat_channel_descriptor();
inline const ::std::string& chat_channel_Name(chat_channel value) {
  return ::google::protobuf::internal::NameOfEnum(
    chat_channel_descriptor(), value);
}
inline bool chat_channel_Parse(
    const ::std::string& name, chat_channel* value) {
  return ::google::protobuf::internal::ParseNamedEnum<chat_channel>(
    chat_channel_descriptor(), name, value);
}
// ===================================================================

class Hello : public ::google::protobuf::Message {
 public:
  Hello();
  virtual ~Hello();

  Hello(const Hello& from);

  inline Hello& operator=(const Hello& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Hello& default_instance();

  void Swap(Hello* other);

  // implements Message ----------------------------------------------

  Hello* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Hello& from);
  void MergeFrom(const Hello& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 version = 1;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);

  // optional string extraData = 2;
  inline bool has_extradata() const;
  inline void clear_extradata();
  static const int kExtraDataFieldNumber = 2;
  inline const ::std::string& extradata() const;
  inline void set_extradata(const ::std::string& value);
  inline void set_extradata(const char* value);
  inline void set_extradata(const char* value, size_t size);
  inline ::std::string* mutable_extradata();
  inline ::std::string* release_extradata();
  inline void set_allocated_extradata(::std::string* extradata);

  // @@protoc_insertion_point(class_scope:client_baseserver.Hello)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_extradata();
  inline void clear_has_extradata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* extradata_;
  ::google::protobuf::uint32 version_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static Hello* default_instance_;
};
// -------------------------------------------------------------------

class HelloCB : public ::google::protobuf::Message {
 public:
  HelloCB();
  virtual ~HelloCB();

  HelloCB(const HelloCB& from);

  inline HelloCB& operator=(const HelloCB& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HelloCB& default_instance();

  void Swap(HelloCB* other);

  // implements Message ----------------------------------------------

  HelloCB* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HelloCB& from);
  void MergeFrom(const HelloCB& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // optional uint32 version = 2;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 2;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);

  // optional string extraData = 3;
  inline bool has_extradata() const;
  inline void clear_extradata();
  static const int kExtraDataFieldNumber = 3;
  inline const ::std::string& extradata() const;
  inline void set_extradata(const ::std::string& value);
  inline void set_extradata(const char* value);
  inline void set_extradata(const char* value, size_t size);
  inline ::std::string* mutable_extradata();
  inline ::std::string* release_extradata();
  inline void set_allocated_extradata(::std::string* extradata);

  // @@protoc_insertion_point(class_scope:client_baseserver.HelloCB)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_extradata();
  inline void clear_has_extradata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 version_;
  ::std::string* extradata_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static HelloCB* default_instance_;
};
// -------------------------------------------------------------------

class Login : public ::google::protobuf::Message {
 public:
  Login();
  virtual ~Login();

  Login(const Login& from);

  inline Login& operator=(const Login& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Login& default_instance();

  void Swap(Login* other);

  // implements Message ----------------------------------------------

  Login* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Login& from);
  void MergeFrom(const Login& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string account = 1;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 1;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // optional string password = 2;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 2;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  inline void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:client_baseserver.Login)
 private:
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_password();
  inline void clear_has_password();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* account_;
  ::std::string* password_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static Login* default_instance_;
};
// -------------------------------------------------------------------

class LoginBaseappFailed : public ::google::protobuf::Message {
 public:
  LoginBaseappFailed();
  virtual ~LoginBaseappFailed();

  LoginBaseappFailed(const LoginBaseappFailed& from);

  inline LoginBaseappFailed& operator=(const LoginBaseappFailed& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginBaseappFailed& default_instance();

  void Swap(LoginBaseappFailed* other);

  // implements Message ----------------------------------------------

  LoginBaseappFailed* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginBaseappFailed& from);
  void MergeFrom(const LoginBaseappFailed& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 retCode = 1;
  inline bool has_retcode() const;
  inline void clear_retcode();
  static const int kRetCodeFieldNumber = 1;
  inline ::google::protobuf::uint32 retcode() const;
  inline void set_retcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.LoginBaseappFailed)
 private:
  inline void set_has_retcode();
  inline void clear_has_retcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 retcode_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static LoginBaseappFailed* default_instance_;
};
// -------------------------------------------------------------------

class CreatedProxies : public ::google::protobuf::Message {
 public:
  CreatedProxies();
  virtual ~CreatedProxies();

  CreatedProxies(const CreatedProxies& from);

  inline CreatedProxies& operator=(const CreatedProxies& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreatedProxies& default_instance();

  void Swap(CreatedProxies* other);

  // implements Message ----------------------------------------------

  CreatedProxies* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreatedProxies& from);
  void MergeFrom(const CreatedProxies& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 entityID = 1;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 1;
  inline ::google::protobuf::int32 entityid() const;
  inline void set_entityid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.CreatedProxies)
 private:
  inline void set_has_entityid();
  inline void clear_has_entityid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 entityid_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static CreatedProxies* default_instance_;
};
// -------------------------------------------------------------------

class hire_data : public ::google::protobuf::Message {
 public:
  hire_data();
  virtual ~hire_data();

  hire_data(const hire_data& from);

  inline hire_data& operator=(const hire_data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const hire_data& default_instance();

  void Swap(hire_data* other);

  // implements Message ----------------------------------------------

  hire_data* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const hire_data& from);
  void MergeFrom(const hire_data& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _uid = 1;
  inline bool has__uid() const;
  inline void clear__uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 _uid() const;
  inline void set__uid(::google::protobuf::uint32 value);

  // required string _name = 2;
  inline bool has__name() const;
  inline void clear__name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& _name() const;
  inline void set__name(const ::std::string& value);
  inline void set__name(const char* value);
  inline void set__name(const char* value, size_t size);
  inline ::std::string* mutable__name();
  inline ::std::string* release__name();
  inline void set_allocated__name(::std::string* _name);

  // required .client_baseserver.hire_hero _hero = 3;
  inline bool has__hero() const;
  inline void clear__hero();
  static const int kHeroFieldNumber = 3;
  inline const ::client_baseserver::hire_hero& _hero() const;
  inline ::client_baseserver::hire_hero* mutable__hero();
  inline ::client_baseserver::hire_hero* release__hero();
  inline void set_allocated__hero(::client_baseserver::hire_hero* _hero);

  // @@protoc_insertion_point(class_scope:client_baseserver.hire_data)
 private:
  inline void set_has__uid();
  inline void clear_has__uid();
  inline void set_has__name();
  inline void clear_has__name();
  inline void set_has__hero();
  inline void clear_has__hero();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* _name_;
  ::client_baseserver::hire_hero* _hero_;
  ::google::protobuf::uint32 _uid_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static hire_data* default_instance_;
};
// -------------------------------------------------------------------

class hire_hero : public ::google::protobuf::Message {
 public:
  hire_hero();
  virtual ~hire_hero();

  hire_hero(const hire_hero& from);

  inline hire_hero& operator=(const hire_hero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const hire_hero& default_instance();

  void Swap(hire_hero* other);

  // implements Message ----------------------------------------------

  hire_hero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const hire_hero& from);
  void MergeFrom(const hire_hero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.hero _base = 1;
  inline bool has__base() const;
  inline void clear__base();
  static const int kBaseFieldNumber = 1;
  inline const ::client_baseserver::hero& _base() const;
  inline ::client_baseserver::hero* mutable__base();
  inline ::client_baseserver::hero* release__base();
  inline void set_allocated__base(::client_baseserver::hero* _base);

  // required .client_baseserver.hero_dyna _dyna = 2;
  inline bool has__dyna() const;
  inline void clear__dyna();
  static const int kDynaFieldNumber = 2;
  inline const ::client_baseserver::hero_dyna& _dyna() const;
  inline ::client_baseserver::hero_dyna* mutable__dyna();
  inline ::client_baseserver::hero_dyna* release__dyna();
  inline void set_allocated__dyna(::client_baseserver::hero_dyna* _dyna);

  // @@protoc_insertion_point(class_scope:client_baseserver.hire_hero)
 private:
  inline void set_has__base();
  inline void clear_has__base();
  inline void set_has__dyna();
  inline void clear_has__dyna();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::hero* _base_;
  ::client_baseserver::hero_dyna* _dyna_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static hire_hero* default_instance_;
};
// -------------------------------------------------------------------

class down_msg : public ::google::protobuf::Message {
 public:
  down_msg();
  virtual ~down_msg();

  down_msg(const down_msg& from);

  inline down_msg& operator=(const down_msg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const down_msg& default_instance();

  void Swap(down_msg* other);

  // implements Message ----------------------------------------------

  down_msg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const down_msg& from);
  void MergeFrom(const down_msg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client_baseserver.login_reply _login_reply = 1;
  inline bool has__login_reply() const;
  inline void clear__login_reply();
  static const int kLoginReplyFieldNumber = 1;
  inline const ::client_baseserver::login_reply& _login_reply() const;
  inline ::client_baseserver::login_reply* mutable__login_reply();
  inline ::client_baseserver::login_reply* release__login_reply();
  inline void set_allocated__login_reply(::client_baseserver::login_reply* _login_reply);

  // optional .client_baseserver.reset _reset = 2;
  inline bool has__reset() const;
  inline void clear__reset();
  static const int kResetFieldNumber = 2;
  inline const ::client_baseserver::reset& _reset() const;
  inline ::client_baseserver::reset* mutable__reset();
  inline ::client_baseserver::reset* release__reset();
  inline void set_allocated__reset(::client_baseserver::reset* _reset);

  // optional .client_baseserver.enter_stage_reply _enter_stage_reply = 3;
  inline bool has__enter_stage_reply() const;
  inline void clear__enter_stage_reply();
  static const int kEnterStageReplyFieldNumber = 3;
  inline const ::client_baseserver::enter_stage_reply& _enter_stage_reply() const;
  inline ::client_baseserver::enter_stage_reply* mutable__enter_stage_reply();
  inline ::client_baseserver::enter_stage_reply* release__enter_stage_reply();
  inline void set_allocated__enter_stage_reply(::client_baseserver::enter_stage_reply* _enter_stage_reply);

  // optional .client_baseserver.exit_stage_reply _exit_stage_reply = 4;
  inline bool has__exit_stage_reply() const;
  inline void clear__exit_stage_reply();
  static const int kExitStageReplyFieldNumber = 4;
  inline const ::client_baseserver::exit_stage_reply& _exit_stage_reply() const;
  inline ::client_baseserver::exit_stage_reply* mutable__exit_stage_reply();
  inline ::client_baseserver::exit_stage_reply* release__exit_stage_reply();
  inline void set_allocated__exit_stage_reply(::client_baseserver::exit_stage_reply* _exit_stage_reply);

  // optional .client_baseserver.hero_upgrade_reply _hero_upgrade_reply = 5;
  inline bool has__hero_upgrade_reply() const;
  inline void clear__hero_upgrade_reply();
  static const int kHeroUpgradeReplyFieldNumber = 5;
  inline const ::client_baseserver::hero_upgrade_reply& _hero_upgrade_reply() const;
  inline ::client_baseserver::hero_upgrade_reply* mutable__hero_upgrade_reply();
  inline ::client_baseserver::hero_upgrade_reply* release__hero_upgrade_reply();
  inline void set_allocated__hero_upgrade_reply(::client_baseserver::hero_upgrade_reply* _hero_upgrade_reply);

  // optional .client_baseserver.equip_synthesis_reply _equip_synthesis_reply = 6;
  inline bool has__equip_synthesis_reply() const;
  inline void clear__equip_synthesis_reply();
  static const int kEquipSynthesisReplyFieldNumber = 6;
  inline const ::client_baseserver::equip_synthesis_reply& _equip_synthesis_reply() const;
  inline ::client_baseserver::equip_synthesis_reply* mutable__equip_synthesis_reply();
  inline ::client_baseserver::equip_synthesis_reply* release__equip_synthesis_reply();
  inline void set_allocated__equip_synthesis_reply(::client_baseserver::equip_synthesis_reply* _equip_synthesis_reply);

  // optional .client_baseserver.wear_equip_reply _wear_equip_reply = 7;
  inline bool has__wear_equip_reply() const;
  inline void clear__wear_equip_reply();
  static const int kWearEquipReplyFieldNumber = 7;
  inline const ::client_baseserver::wear_equip_reply& _wear_equip_reply() const;
  inline ::client_baseserver::wear_equip_reply* mutable__wear_equip_reply();
  inline ::client_baseserver::wear_equip_reply* release__wear_equip_reply();
  inline void set_allocated__wear_equip_reply(::client_baseserver::wear_equip_reply* _wear_equip_reply);

  // optional .client_baseserver.consume_item_reply _consume_item_reply = 8;
  inline bool has__consume_item_reply() const;
  inline void clear__consume_item_reply();
  static const int kConsumeItemReplyFieldNumber = 8;
  inline const ::client_baseserver::consume_item_reply& _consume_item_reply() const;
  inline ::client_baseserver::consume_item_reply* mutable__consume_item_reply();
  inline ::client_baseserver::consume_item_reply* release__consume_item_reply();
  inline void set_allocated__consume_item_reply(::client_baseserver::consume_item_reply* _consume_item_reply);

  // optional .client_baseserver.user_shop _shop_refresh_reply = 9;
  inline bool has__shop_refresh_reply() const;
  inline void clear__shop_refresh_reply();
  static const int kShopRefreshReplyFieldNumber = 9;
  inline const ::client_baseserver::user_shop& _shop_refresh_reply() const;
  inline ::client_baseserver::user_shop* mutable__shop_refresh_reply();
  inline ::client_baseserver::user_shop* release__shop_refresh_reply();
  inline void set_allocated__shop_refresh_reply(::client_baseserver::user_shop* _shop_refresh_reply);

  // optional .client_baseserver.shop_consume_reply _shop_consume_reply = 10;
  inline bool has__shop_consume_reply() const;
  inline void clear__shop_consume_reply();
  static const int kShopConsumeReplyFieldNumber = 10;
  inline const ::client_baseserver::shop_consume_reply& _shop_consume_reply() const;
  inline ::client_baseserver::shop_consume_reply* mutable__shop_consume_reply();
  inline ::client_baseserver::shop_consume_reply* release__shop_consume_reply();
  inline void set_allocated__shop_consume_reply(::client_baseserver::shop_consume_reply* _shop_consume_reply);

  // optional .client_baseserver.skill_levelup_reply _skill_levelup_reply = 11;
  inline bool has__skill_levelup_reply() const;
  inline void clear__skill_levelup_reply();
  static const int kSkillLevelupReplyFieldNumber = 11;
  inline const ::client_baseserver::skill_levelup_reply& _skill_levelup_reply() const;
  inline ::client_baseserver::skill_levelup_reply* mutable__skill_levelup_reply();
  inline ::client_baseserver::skill_levelup_reply* release__skill_levelup_reply();
  inline void set_allocated__skill_levelup_reply(::client_baseserver::skill_levelup_reply* _skill_levelup_reply);

  // optional .client_baseserver.sell_item_reply _sell_item_reply = 12;
  inline bool has__sell_item_reply() const;
  inline void clear__sell_item_reply();
  static const int kSellItemReplyFieldNumber = 12;
  inline const ::client_baseserver::sell_item_reply& _sell_item_reply() const;
  inline ::client_baseserver::sell_item_reply* mutable__sell_item_reply();
  inline ::client_baseserver::sell_item_reply* release__sell_item_reply();
  inline void set_allocated__sell_item_reply(::client_baseserver::sell_item_reply* _sell_item_reply);

  // optional .client_baseserver.fragment_compose_reply _fragment_compose_reply = 13;
  inline bool has__fragment_compose_reply() const;
  inline void clear__fragment_compose_reply();
  static const int kFragmentComposeReplyFieldNumber = 13;
  inline const ::client_baseserver::fragment_compose_reply& _fragment_compose_reply() const;
  inline ::client_baseserver::fragment_compose_reply* mutable__fragment_compose_reply();
  inline ::client_baseserver::fragment_compose_reply* release__fragment_compose_reply();
  inline void set_allocated__fragment_compose_reply(::client_baseserver::fragment_compose_reply* _fragment_compose_reply);

  // optional .client_baseserver.hero_equip_upgrade_reply _hero_equip_upgrade_reply = 14;
  inline bool has__hero_equip_upgrade_reply() const;
  inline void clear__hero_equip_upgrade_reply();
  static const int kHeroEquipUpgradeReplyFieldNumber = 14;
  inline const ::client_baseserver::hero_equip_upgrade_reply& _hero_equip_upgrade_reply() const;
  inline ::client_baseserver::hero_equip_upgrade_reply* mutable__hero_equip_upgrade_reply();
  inline ::client_baseserver::hero_equip_upgrade_reply* release__hero_equip_upgrade_reply();
  inline void set_allocated__hero_equip_upgrade_reply(::client_baseserver::hero_equip_upgrade_reply* _hero_equip_upgrade_reply);

  // optional .client_baseserver.trigger_task_reply _trigger_task_reply = 15;
  inline bool has__trigger_task_reply() const;
  inline void clear__trigger_task_reply();
  static const int kTriggerTaskReplyFieldNumber = 15;
  inline const ::client_baseserver::trigger_task_reply& _trigger_task_reply() const;
  inline ::client_baseserver::trigger_task_reply* mutable__trigger_task_reply();
  inline ::client_baseserver::trigger_task_reply* release__trigger_task_reply();
  inline void set_allocated__trigger_task_reply(::client_baseserver::trigger_task_reply* _trigger_task_reply);

  // optional .client_baseserver.require_rewards_reply _require_rewards_reply = 16;
  inline bool has__require_rewards_reply() const;
  inline void clear__require_rewards_reply();
  static const int kRequireRewardsReplyFieldNumber = 16;
  inline const ::client_baseserver::require_rewards_reply& _require_rewards_reply() const;
  inline ::client_baseserver::require_rewards_reply* mutable__require_rewards_reply();
  inline ::client_baseserver::require_rewards_reply* release__require_rewards_reply();
  inline void set_allocated__require_rewards_reply(::client_baseserver::require_rewards_reply* _require_rewards_reply);

  // optional .client_baseserver.trigger_job_reply _trigger_job_reply = 17;
  inline bool has__trigger_job_reply() const;
  inline void clear__trigger_job_reply();
  static const int kTriggerJobReplyFieldNumber = 17;
  inline const ::client_baseserver::trigger_job_reply& _trigger_job_reply() const;
  inline ::client_baseserver::trigger_job_reply* mutable__trigger_job_reply();
  inline ::client_baseserver::trigger_job_reply* release__trigger_job_reply();
  inline void set_allocated__trigger_job_reply(::client_baseserver::trigger_job_reply* _trigger_job_reply);

  // optional .client_baseserver.job_rewards_reply _job_rewards_reply = 18;
  inline bool has__job_rewards_reply() const;
  inline void clear__job_rewards_reply();
  static const int kJobRewardsReplyFieldNumber = 18;
  inline const ::client_baseserver::job_rewards_reply& _job_rewards_reply() const;
  inline ::client_baseserver::job_rewards_reply* mutable__job_rewards_reply();
  inline ::client_baseserver::job_rewards_reply* release__job_rewards_reply();
  inline void set_allocated__job_rewards_reply(::client_baseserver::job_rewards_reply* _job_rewards_reply);

  // optional .client_baseserver.reset_elite_reply _reset_elite_reply = 19;
  inline bool has__reset_elite_reply() const;
  inline void clear__reset_elite_reply();
  static const int kResetEliteReplyFieldNumber = 19;
  inline const ::client_baseserver::reset_elite_reply& _reset_elite_reply() const;
  inline ::client_baseserver::reset_elite_reply* mutable__reset_elite_reply();
  inline ::client_baseserver::reset_elite_reply* release__reset_elite_reply();
  inline void set_allocated__reset_elite_reply(::client_baseserver::reset_elite_reply* _reset_elite_reply);

  // optional .client_baseserver.sweep_stage_reply _sweep_stage_reply = 20;
  inline bool has__sweep_stage_reply() const;
  inline void clear__sweep_stage_reply();
  static const int kSweepStageReplyFieldNumber = 20;
  inline const ::client_baseserver::sweep_stage_reply& _sweep_stage_reply() const;
  inline ::client_baseserver::sweep_stage_reply* mutable__sweep_stage_reply();
  inline ::client_baseserver::sweep_stage_reply* release__sweep_stage_reply();
  inline void set_allocated__sweep_stage_reply(::client_baseserver::sweep_stage_reply* _sweep_stage_reply);

  // optional .client_baseserver.tavern_draw_reply _tavern_draw_reply = 21;
  inline bool has__tavern_draw_reply() const;
  inline void clear__tavern_draw_reply();
  static const int kTavernDrawReplyFieldNumber = 21;
  inline const ::client_baseserver::tavern_draw_reply& _tavern_draw_reply() const;
  inline ::client_baseserver::tavern_draw_reply* mutable__tavern_draw_reply();
  inline ::client_baseserver::tavern_draw_reply* release__tavern_draw_reply();
  inline void set_allocated__tavern_draw_reply(::client_baseserver::tavern_draw_reply* _tavern_draw_reply);

  // optional .client_baseserver.sync_skill_stren_reply _sync_skill_stren_reply = 22;
  inline bool has__sync_skill_stren_reply() const;
  inline void clear__sync_skill_stren_reply();
  static const int kSyncSkillStrenReplyFieldNumber = 22;
  inline const ::client_baseserver::sync_skill_stren_reply& _sync_skill_stren_reply() const;
  inline ::client_baseserver::sync_skill_stren_reply* mutable__sync_skill_stren_reply();
  inline ::client_baseserver::sync_skill_stren_reply* release__sync_skill_stren_reply();
  inline void set_allocated__sync_skill_stren_reply(::client_baseserver::sync_skill_stren_reply* _sync_skill_stren_reply);

  // optional .client_baseserver.query_data_reply _query_data_reply = 23;
  inline bool has__query_data_reply() const;
  inline void clear__query_data_reply();
  static const int kQueryDataReplyFieldNumber = 23;
  inline const ::client_baseserver::query_data_reply& _query_data_reply() const;
  inline ::client_baseserver::query_data_reply* mutable__query_data_reply();
  inline ::client_baseserver::query_data_reply* release__query_data_reply();
  inline void set_allocated__query_data_reply(::client_baseserver::query_data_reply* _query_data_reply);

  // optional .client_baseserver.hero_evolve_reply _hero_evolve_reply = 24;
  inline bool has__hero_evolve_reply() const;
  inline void clear__hero_evolve_reply();
  static const int kHeroEvolveReplyFieldNumber = 24;
  inline const ::client_baseserver::hero_evolve_reply& _hero_evolve_reply() const;
  inline ::client_baseserver::hero_evolve_reply* mutable__hero_evolve_reply();
  inline ::client_baseserver::hero_evolve_reply* release__hero_evolve_reply();
  inline void set_allocated__hero_evolve_reply(::client_baseserver::hero_evolve_reply* _hero_evolve_reply);

  // optional .client_baseserver.sync_vitality_reply _sync_vitality_reply = 25;
  inline bool has__sync_vitality_reply() const;
  inline void clear__sync_vitality_reply();
  static const int kSyncVitalityReplyFieldNumber = 25;
  inline const ::client_baseserver::sync_vitality_reply& _sync_vitality_reply() const;
  inline ::client_baseserver::sync_vitality_reply* mutable__sync_vitality_reply();
  inline ::client_baseserver::sync_vitality_reply* release__sync_vitality_reply();
  inline void set_allocated__sync_vitality_reply(::client_baseserver::sync_vitality_reply* _sync_vitality_reply);

  // optional .client_baseserver.user_check _user_check = 26;
  inline bool has__user_check() const;
  inline void clear__user_check();
  static const int kUserCheckFieldNumber = 26;
  inline const ::client_baseserver::user_check& _user_check() const;
  inline ::client_baseserver::user_check* mutable__user_check();
  inline ::client_baseserver::user_check* release__user_check();
  inline void set_allocated__user_check(::client_baseserver::user_check* _user_check);

  // optional .client_baseserver.tutorial_reply _tutorial_reply = 27;
  inline bool has__tutorial_reply() const;
  inline void clear__tutorial_reply();
  static const int kTutorialReplyFieldNumber = 27;
  inline const ::client_baseserver::tutorial_reply& _tutorial_reply() const;
  inline ::client_baseserver::tutorial_reply* mutable__tutorial_reply();
  inline ::client_baseserver::tutorial_reply* release__tutorial_reply();
  inline void set_allocated__tutorial_reply(::client_baseserver::tutorial_reply* _tutorial_reply);

  // optional .client_baseserver.error_info _error_info = 28;
  inline bool has__error_info() const;
  inline void clear__error_info();
  static const int kErrorInfoFieldNumber = 28;
  inline const ::client_baseserver::error_info& _error_info() const;
  inline ::client_baseserver::error_info* mutable__error_info();
  inline ::client_baseserver::error_info* release__error_info();
  inline void set_allocated__error_info(::client_baseserver::error_info* _error_info);

  // optional .client_baseserver.ladder_reply _ladder_reply = 29;
  inline bool has__ladder_reply() const;
  inline void clear__ladder_reply();
  static const int kLadderReplyFieldNumber = 29;
  inline const ::client_baseserver::ladder_reply& _ladder_reply() const;
  inline ::client_baseserver::ladder_reply* mutable__ladder_reply();
  inline ::client_baseserver::ladder_reply* release__ladder_reply();
  inline void set_allocated__ladder_reply(::client_baseserver::ladder_reply* _ladder_reply);

  // optional .client_baseserver.set_name_reply _set_name_reply = 30;
  inline bool has__set_name_reply() const;
  inline void clear__set_name_reply();
  static const int kSetNameReplyFieldNumber = 30;
  inline const ::client_baseserver::set_name_reply& _set_name_reply() const;
  inline ::client_baseserver::set_name_reply* mutable__set_name_reply();
  inline ::client_baseserver::set_name_reply* release__set_name_reply();
  inline void set_allocated__set_name_reply(::client_baseserver::set_name_reply* _set_name_reply);

  // optional .client_baseserver.midas_reply _midas_reply = 31;
  inline bool has__midas_reply() const;
  inline void clear__midas_reply();
  static const int kMidasReplyFieldNumber = 31;
  inline const ::client_baseserver::midas_reply& _midas_reply() const;
  inline ::client_baseserver::midas_reply* mutable__midas_reply();
  inline ::client_baseserver::midas_reply* release__midas_reply();
  inline void set_allocated__midas_reply(::client_baseserver::midas_reply* _midas_reply);

  // optional .client_baseserver.open_shop_reply _open_shop_reply = 32;
  inline bool has__open_shop_reply() const;
  inline void clear__open_shop_reply();
  static const int kOpenShopReplyFieldNumber = 32;
  inline const ::client_baseserver::open_shop_reply& _open_shop_reply() const;
  inline ::client_baseserver::open_shop_reply* mutable__open_shop_reply();
  inline ::client_baseserver::open_shop_reply* release__open_shop_reply();
  inline void set_allocated__open_shop_reply(::client_baseserver::open_shop_reply* _open_shop_reply);

  // optional .client_baseserver.charge_reply _charge_reply = 33;
  inline bool has__charge_reply() const;
  inline void clear__charge_reply();
  static const int kChargeReplyFieldNumber = 33;
  inline const ::client_baseserver::charge_reply& _charge_reply() const;
  inline ::client_baseserver::charge_reply* mutable__charge_reply();
  inline ::client_baseserver::charge_reply* release__charge_reply();
  inline void set_allocated__charge_reply(::client_baseserver::charge_reply* _charge_reply);

  // optional .client_baseserver.sdk_login_reply _sdk_login_reply = 34;
  inline bool has__sdk_login_reply() const;
  inline void clear__sdk_login_reply();
  static const int kSdkLoginReplyFieldNumber = 34;
  inline const ::client_baseserver::sdk_login_reply& _sdk_login_reply() const;
  inline ::client_baseserver::sdk_login_reply* mutable__sdk_login_reply();
  inline ::client_baseserver::sdk_login_reply* release__sdk_login_reply();
  inline void set_allocated__sdk_login_reply(::client_baseserver::sdk_login_reply* _sdk_login_reply);

  // optional .client_baseserver.set_avatar_reply _set_avatar_reply = 35;
  inline bool has__set_avatar_reply() const;
  inline void clear__set_avatar_reply();
  static const int kSetAvatarReplyFieldNumber = 35;
  inline const ::client_baseserver::set_avatar_reply& _set_avatar_reply() const;
  inline ::client_baseserver::set_avatar_reply* mutable__set_avatar_reply();
  inline ::client_baseserver::set_avatar_reply* release__set_avatar_reply();
  inline void set_allocated__set_avatar_reply(::client_baseserver::set_avatar_reply* _set_avatar_reply);

  // optional .client_baseserver.notify_msg _notify_msg = 36;
  inline bool has__notify_msg() const;
  inline void clear__notify_msg();
  static const int kNotifyMsgFieldNumber = 36;
  inline const ::client_baseserver::notify_msg& _notify_msg() const;
  inline ::client_baseserver::notify_msg* mutable__notify_msg();
  inline ::client_baseserver::notify_msg* release__notify_msg();
  inline void set_allocated__notify_msg(::client_baseserver::notify_msg* _notify_msg);

  // optional .client_baseserver.ask_daily_login_reply _ask_daily_login_reply = 37;
  inline bool has__ask_daily_login_reply() const;
  inline void clear__ask_daily_login_reply();
  static const int kAskDailyLoginReplyFieldNumber = 37;
  inline const ::client_baseserver::ask_daily_login_reply& _ask_daily_login_reply() const;
  inline ::client_baseserver::ask_daily_login_reply* mutable__ask_daily_login_reply();
  inline ::client_baseserver::ask_daily_login_reply* release__ask_daily_login_reply();
  inline void set_allocated__ask_daily_login_reply(::client_baseserver::ask_daily_login_reply* _ask_daily_login_reply);

  // optional .client_baseserver.tbc_reply _tbc_reply = 38;
  inline bool has__tbc_reply() const;
  inline void clear__tbc_reply();
  static const int kTbcReplyFieldNumber = 38;
  inline const ::client_baseserver::tbc_reply& _tbc_reply() const;
  inline ::client_baseserver::tbc_reply* mutable__tbc_reply();
  inline ::client_baseserver::tbc_reply* release__tbc_reply();
  inline void set_allocated__tbc_reply(::client_baseserver::tbc_reply* _tbc_reply);

  // optional .client_baseserver.get_maillist_reply _get_maillist_reply = 39;
  inline bool has__get_maillist_reply() const;
  inline void clear__get_maillist_reply();
  static const int kGetMaillistReplyFieldNumber = 39;
  inline const ::client_baseserver::get_maillist_reply& _get_maillist_reply() const;
  inline ::client_baseserver::get_maillist_reply* mutable__get_maillist_reply();
  inline ::client_baseserver::get_maillist_reply* release__get_maillist_reply();
  inline void set_allocated__get_maillist_reply(::client_baseserver::get_maillist_reply* _get_maillist_reply);

  // optional .client_baseserver.read_mail_reply _read_mail_reply = 40;
  inline bool has__read_mail_reply() const;
  inline void clear__read_mail_reply();
  static const int kReadMailReplyFieldNumber = 40;
  inline const ::client_baseserver::read_mail_reply& _read_mail_reply() const;
  inline ::client_baseserver::read_mail_reply* mutable__read_mail_reply();
  inline ::client_baseserver::read_mail_reply* release__read_mail_reply();
  inline void set_allocated__read_mail_reply(::client_baseserver::read_mail_reply* _read_mail_reply);

  // optional uint32 _svr_time = 41;
  inline bool has__svr_time() const;
  inline void clear__svr_time();
  static const int kSvrTimeFieldNumber = 41;
  inline ::google::protobuf::uint32 _svr_time() const;
  inline void set__svr_time(::google::protobuf::uint32 value);

  // optional .client_baseserver.get_vip_gift_reply _get_vip_gift_reply = 42;
  inline bool has__get_vip_gift_reply() const;
  inline void clear__get_vip_gift_reply();
  static const int kGetVipGiftReplyFieldNumber = 42;
  inline const ::client_baseserver::get_vip_gift_reply& _get_vip_gift_reply() const;
  inline ::client_baseserver::get_vip_gift_reply* mutable__get_vip_gift_reply();
  inline ::client_baseserver::get_vip_gift_reply* release__get_vip_gift_reply();
  inline void set_allocated__get_vip_gift_reply(::client_baseserver::get_vip_gift_reply* _get_vip_gift_reply);

  // optional .client_baseserver.chat_reply _chat_reply = 43;
  inline bool has__chat_reply() const;
  inline void clear__chat_reply();
  static const int kChatReplyFieldNumber = 43;
  inline const ::client_baseserver::chat_reply& _chat_reply() const;
  inline ::client_baseserver::chat_reply* mutable__chat_reply();
  inline ::client_baseserver::chat_reply* release__chat_reply();
  inline void set_allocated__chat_reply(::client_baseserver::chat_reply* _chat_reply);

  // optional .client_baseserver.cdkey_gift_reply _cdkey_gift_reply = 44;
  inline bool has__cdkey_gift_reply() const;
  inline void clear__cdkey_gift_reply();
  static const int kCdkeyGiftReplyFieldNumber = 44;
  inline const ::client_baseserver::cdkey_gift_reply& _cdkey_gift_reply() const;
  inline ::client_baseserver::cdkey_gift_reply* mutable__cdkey_gift_reply();
  inline ::client_baseserver::cdkey_gift_reply* release__cdkey_gift_reply();
  inline void set_allocated__cdkey_gift_reply(::client_baseserver::cdkey_gift_reply* _cdkey_gift_reply);

  // optional .client_baseserver.guild_reply _guild_reply = 45;
  inline bool has__guild_reply() const;
  inline void clear__guild_reply();
  static const int kGuildReplyFieldNumber = 45;
  inline const ::client_baseserver::guild_reply& _guild_reply() const;
  inline ::client_baseserver::guild_reply* mutable__guild_reply();
  inline ::client_baseserver::guild_reply* release__guild_reply();
  inline void set_allocated__guild_reply(::client_baseserver::guild_reply* _guild_reply);

  // optional .client_baseserver.ask_magicsoul_reply _ask_magicsoul_reply = 46;
  inline bool has__ask_magicsoul_reply() const;
  inline void clear__ask_magicsoul_reply();
  static const int kAskMagicsoulReplyFieldNumber = 46;
  inline const ::client_baseserver::ask_magicsoul_reply& _ask_magicsoul_reply() const;
  inline ::client_baseserver::ask_magicsoul_reply* mutable__ask_magicsoul_reply();
  inline ::client_baseserver::ask_magicsoul_reply* release__ask_magicsoul_reply();
  inline void set_allocated__ask_magicsoul_reply(::client_baseserver::ask_magicsoul_reply* _ask_magicsoul_reply);

  // optional .client_baseserver.activity_infos _ask_activity_info_reply = 47;
  inline bool has__ask_activity_info_reply() const;
  inline void clear__ask_activity_info_reply();
  static const int kAskActivityInfoReplyFieldNumber = 47;
  inline const ::client_baseserver::activity_infos& _ask_activity_info_reply() const;
  inline ::client_baseserver::activity_infos* mutable__ask_activity_info_reply();
  inline ::client_baseserver::activity_infos* release__ask_activity_info_reply();
  inline void set_allocated__ask_activity_info_reply(::client_baseserver::activity_infos* _ask_activity_info_reply);

  // optional .client_baseserver.excavate_reply _excavate_reply = 48;
  inline bool has__excavate_reply() const;
  inline void clear__excavate_reply();
  static const int kExcavateReplyFieldNumber = 48;
  inline const ::client_baseserver::excavate_reply& _excavate_reply() const;
  inline ::client_baseserver::excavate_reply* mutable__excavate_reply();
  inline ::client_baseserver::excavate_reply* release__excavate_reply();
  inline void set_allocated__excavate_reply(::client_baseserver::excavate_reply* _excavate_reply);

  // optional .client_baseserver.system_setting_reply _system_setting_reply = 49;
  inline bool has__system_setting_reply() const;
  inline void clear__system_setting_reply();
  static const int kSystemSettingReplyFieldNumber = 49;
  inline const ::client_baseserver::system_setting_reply& _system_setting_reply() const;
  inline ::client_baseserver::system_setting_reply* mutable__system_setting_reply();
  inline ::client_baseserver::system_setting_reply* release__system_setting_reply();
  inline void set_allocated__system_setting_reply(::client_baseserver::system_setting_reply* _system_setting_reply);

  // optional .client_baseserver.query_split_data_reply _query_split_data_reply = 50;
  inline bool has__query_split_data_reply() const;
  inline void clear__query_split_data_reply();
  static const int kQuerySplitDataReplyFieldNumber = 50;
  inline const ::client_baseserver::query_split_data_reply& _query_split_data_reply() const;
  inline ::client_baseserver::query_split_data_reply* mutable__query_split_data_reply();
  inline ::client_baseserver::query_split_data_reply* release__query_split_data_reply();
  inline void set_allocated__query_split_data_reply(::client_baseserver::query_split_data_reply* _query_split_data_reply);

  // optional .client_baseserver.query_split_return_reply _query_split_return_reply = 51;
  inline bool has__query_split_return_reply() const;
  inline void clear__query_split_return_reply();
  static const int kQuerySplitReturnReplyFieldNumber = 51;
  inline const ::client_baseserver::query_split_return_reply& _query_split_return_reply() const;
  inline ::client_baseserver::query_split_return_reply* mutable__query_split_return_reply();
  inline ::client_baseserver::query_split_return_reply* release__query_split_return_reply();
  inline void set_allocated__query_split_return_reply(::client_baseserver::query_split_return_reply* _query_split_return_reply);

  // optional .client_baseserver.split_hero_reply _split_hero_reply = 52;
  inline bool has__split_hero_reply() const;
  inline void clear__split_hero_reply();
  static const int kSplitHeroReplyFieldNumber = 52;
  inline const ::client_baseserver::split_hero_reply& _split_hero_reply() const;
  inline ::client_baseserver::split_hero_reply* mutable__split_hero_reply();
  inline ::client_baseserver::split_hero_reply* release__split_hero_reply();
  inline void set_allocated__split_hero_reply(::client_baseserver::split_hero_reply* _split_hero_reply);

  // optional .client_baseserver.worldcup_reply _worldcup_reply = 53;
  inline bool has__worldcup_reply() const;
  inline void clear__worldcup_reply();
  static const int kWorldcupReplyFieldNumber = 53;
  inline const ::client_baseserver::worldcup_reply& _worldcup_reply() const;
  inline ::client_baseserver::worldcup_reply* mutable__worldcup_reply();
  inline ::client_baseserver::worldcup_reply* release__worldcup_reply();
  inline void set_allocated__worldcup_reply(::client_baseserver::worldcup_reply* _worldcup_reply);

  // optional .client_baseserver.battle_check_fail _battle_check_fail = 54;
  inline bool has__battle_check_fail() const;
  inline void clear__battle_check_fail();
  static const int kBattleCheckFailFieldNumber = 54;
  inline const ::client_baseserver::battle_check_fail& _battle_check_fail() const;
  inline ::client_baseserver::battle_check_fail* mutable__battle_check_fail();
  inline ::client_baseserver::battle_check_fail* release__battle_check_fail();
  inline void set_allocated__battle_check_fail(::client_baseserver::battle_check_fail* _battle_check_fail);

  // optional .client_baseserver.query_replay _query_replay = 55;
  inline bool has__query_replay() const;
  inline void clear__query_replay();
  static const int kQueryReplayFieldNumber = 55;
  inline const ::client_baseserver::query_replay& _query_replay() const;
  inline ::client_baseserver::query_replay* mutable__query_replay();
  inline ::client_baseserver::query_replay* release__query_replay();
  inline void set_allocated__query_replay(::client_baseserver::query_replay* _query_replay);

  // optional .client_baseserver.super_link _super_link = 56;
  inline bool has__super_link() const;
  inline void clear__super_link();
  static const int kSuperLinkFieldNumber = 56;
  inline const ::client_baseserver::super_link& _super_link() const;
  inline ::client_baseserver::super_link* mutable__super_link();
  inline ::client_baseserver::super_link* release__super_link();
  inline void set_allocated__super_link(::client_baseserver::super_link* _super_link);

  // optional .client_baseserver.query_ranklist_reply _query_ranklist_reply = 57;
  inline bool has__query_ranklist_reply() const;
  inline void clear__query_ranklist_reply();
  static const int kQueryRanklistReplyFieldNumber = 57;
  inline const ::client_baseserver::query_ranklist_reply& _query_ranklist_reply() const;
  inline ::client_baseserver::query_ranklist_reply* mutable__query_ranklist_reply();
  inline ::client_baseserver::query_ranklist_reply* release__query_ranklist_reply();
  inline void set_allocated__query_ranklist_reply(::client_baseserver::query_ranklist_reply* _query_ranklist_reply);

  // optional .client_baseserver.request_guild_log_reply _request_guild_log_reply = 65;
  inline bool has__request_guild_log_reply() const;
  inline void clear__request_guild_log_reply();
  static const int kRequestGuildLogReplyFieldNumber = 65;
  inline const ::client_baseserver::request_guild_log_reply& _request_guild_log_reply() const;
  inline ::client_baseserver::request_guild_log_reply* mutable__request_guild_log_reply();
  inline ::client_baseserver::request_guild_log_reply* release__request_guild_log_reply();
  inline void set_allocated__request_guild_log_reply(::client_baseserver::request_guild_log_reply* _request_guild_log_reply);

  // optional .client_baseserver.change_server_reply _change_server_reply = 58;
  inline bool has__change_server_reply() const;
  inline void clear__change_server_reply();
  static const int kChangeServerReplyFieldNumber = 58;
  inline const ::client_baseserver::change_server_reply& _change_server_reply() const;
  inline ::client_baseserver::change_server_reply* mutable__change_server_reply();
  inline ::client_baseserver::change_server_reply* release__change_server_reply();
  inline void set_allocated__change_server_reply(::client_baseserver::change_server_reply* _change_server_reply);

  // optional .client_baseserver.activity_info_reply _activity_info_reply = 59;
  inline bool has__activity_info_reply() const;
  inline void clear__activity_info_reply();
  static const int kActivityInfoReplyFieldNumber = 59;
  inline const ::client_baseserver::activity_info_reply& _activity_info_reply() const;
  inline ::client_baseserver::activity_info_reply* mutable__activity_info_reply();
  inline ::client_baseserver::activity_info_reply* release__activity_info_reply();
  inline void set_allocated__activity_info_reply(::client_baseserver::activity_info_reply* _activity_info_reply);

  // optional .client_baseserver.activity_lotto_info_reply _activity_lotto_info_reply = 60;
  inline bool has__activity_lotto_info_reply() const;
  inline void clear__activity_lotto_info_reply();
  static const int kActivityLottoInfoReplyFieldNumber = 60;
  inline const ::client_baseserver::activity_lotto_info_reply& _activity_lotto_info_reply() const;
  inline ::client_baseserver::activity_lotto_info_reply* mutable__activity_lotto_info_reply();
  inline ::client_baseserver::activity_lotto_info_reply* release__activity_lotto_info_reply();
  inline void set_allocated__activity_lotto_info_reply(::client_baseserver::activity_lotto_info_reply* _activity_lotto_info_reply);

  // optional .client_baseserver.activity_lotto_reward_reply _activity_lotto_reward_reply = 61;
  inline bool has__activity_lotto_reward_reply() const;
  inline void clear__activity_lotto_reward_reply();
  static const int kActivityLottoRewardReplyFieldNumber = 61;
  inline const ::client_baseserver::activity_lotto_reward_reply& _activity_lotto_reward_reply() const;
  inline ::client_baseserver::activity_lotto_reward_reply* mutable__activity_lotto_reward_reply();
  inline ::client_baseserver::activity_lotto_reward_reply* release__activity_lotto_reward_reply();
  inline void set_allocated__activity_lotto_reward_reply(::client_baseserver::activity_lotto_reward_reply* _activity_lotto_reward_reply);

  // optional .client_baseserver.activity_bigpackage_info_reply _activity_bigpackage_info_reply = 62;
  inline bool has__activity_bigpackage_info_reply() const;
  inline void clear__activity_bigpackage_info_reply();
  static const int kActivityBigpackageInfoReplyFieldNumber = 62;
  inline const ::client_baseserver::activity_bigpackage_info_reply& _activity_bigpackage_info_reply() const;
  inline ::client_baseserver::activity_bigpackage_info_reply* mutable__activity_bigpackage_info_reply();
  inline ::client_baseserver::activity_bigpackage_info_reply* release__activity_bigpackage_info_reply();
  inline void set_allocated__activity_bigpackage_info_reply(::client_baseserver::activity_bigpackage_info_reply* _activity_bigpackage_info_reply);

  // optional .client_baseserver.activity_bigpackage_reward_reply _activity_bigpackage_reward_reply = 63;
  inline bool has__activity_bigpackage_reward_reply() const;
  inline void clear__activity_bigpackage_reward_reply();
  static const int kActivityBigpackageRewardReplyFieldNumber = 63;
  inline const ::client_baseserver::activity_bigpackage_reward_reply& _activity_bigpackage_reward_reply() const;
  inline ::client_baseserver::activity_bigpackage_reward_reply* mutable__activity_bigpackage_reward_reply();
  inline ::client_baseserver::activity_bigpackage_reward_reply* release__activity_bigpackage_reward_reply();
  inline void set_allocated__activity_bigpackage_reward_reply(::client_baseserver::activity_bigpackage_reward_reply* _activity_bigpackage_reward_reply);

  // optional .client_baseserver.activity_bigpackage_reset_reply _activity_bigpackage_reset_reply = 64;
  inline bool has__activity_bigpackage_reset_reply() const;
  inline void clear__activity_bigpackage_reset_reply();
  static const int kActivityBigpackageResetReplyFieldNumber = 64;
  inline const ::client_baseserver::activity_bigpackage_reset_reply& _activity_bigpackage_reset_reply() const;
  inline ::client_baseserver::activity_bigpackage_reset_reply* mutable__activity_bigpackage_reset_reply();
  inline ::client_baseserver::activity_bigpackage_reset_reply* release__activity_bigpackage_reset_reply();
  inline void set_allocated__activity_bigpackage_reset_reply(::client_baseserver::activity_bigpackage_reset_reply* _activity_bigpackage_reset_reply);

  // optional .client_baseserver.fb_attention_reply _fb_attention_reply = 300;
  inline bool has__fb_attention_reply() const;
  inline void clear__fb_attention_reply();
  static const int kFbAttentionReplyFieldNumber = 300;
  inline const ::client_baseserver::fb_attention_reply& _fb_attention_reply() const;
  inline ::client_baseserver::fb_attention_reply* mutable__fb_attention_reply();
  inline ::client_baseserver::fb_attention_reply* release__fb_attention_reply();
  inline void set_allocated__fb_attention_reply(::client_baseserver::fb_attention_reply* _fb_attention_reply);

  // optional .client_baseserver.continue_pay_reply _continue_pay_reply = 302;
  inline bool has__continue_pay_reply() const;
  inline void clear__continue_pay_reply();
  static const int kContinuePayReplyFieldNumber = 302;
  inline const ::client_baseserver::continue_pay_reply& _continue_pay_reply() const;
  inline ::client_baseserver::continue_pay_reply* mutable__continue_pay_reply();
  inline ::client_baseserver::continue_pay_reply* release__continue_pay_reply();
  inline void set_allocated__continue_pay_reply(::client_baseserver::continue_pay_reply* _continue_pay_reply);

  // optional .client_baseserver.recharge_rebate_reply _recharge_rebate_reply = 303;
  inline bool has__recharge_rebate_reply() const;
  inline void clear__recharge_rebate_reply();
  static const int kRechargeRebateReplyFieldNumber = 303;
  inline const ::client_baseserver::recharge_rebate_reply& _recharge_rebate_reply() const;
  inline ::client_baseserver::recharge_rebate_reply* mutable__recharge_rebate_reply();
  inline ::client_baseserver::recharge_rebate_reply* release__recharge_rebate_reply();
  inline void set_allocated__recharge_rebate_reply(::client_baseserver::recharge_rebate_reply* _recharge_rebate_reply);

  // optional .client_baseserver.every_day_happy_reply _every_day_happy_reply = 304;
  inline bool has__every_day_happy_reply() const;
  inline void clear__every_day_happy_reply();
  static const int kEveryDayHappyReplyFieldNumber = 304;
  inline const ::client_baseserver::every_day_happy_reply& _every_day_happy_reply() const;
  inline ::client_baseserver::every_day_happy_reply* mutable__every_day_happy_reply();
  inline ::client_baseserver::every_day_happy_reply* release__every_day_happy_reply();
  inline void set_allocated__every_day_happy_reply(::client_baseserver::every_day_happy_reply* _every_day_happy_reply);

  // @@protoc_insertion_point(class_scope:client_baseserver.down_msg)
 private:
  inline void set_has__login_reply();
  inline void clear_has__login_reply();
  inline void set_has__reset();
  inline void clear_has__reset();
  inline void set_has__enter_stage_reply();
  inline void clear_has__enter_stage_reply();
  inline void set_has__exit_stage_reply();
  inline void clear_has__exit_stage_reply();
  inline void set_has__hero_upgrade_reply();
  inline void clear_has__hero_upgrade_reply();
  inline void set_has__equip_synthesis_reply();
  inline void clear_has__equip_synthesis_reply();
  inline void set_has__wear_equip_reply();
  inline void clear_has__wear_equip_reply();
  inline void set_has__consume_item_reply();
  inline void clear_has__consume_item_reply();
  inline void set_has__shop_refresh_reply();
  inline void clear_has__shop_refresh_reply();
  inline void set_has__shop_consume_reply();
  inline void clear_has__shop_consume_reply();
  inline void set_has__skill_levelup_reply();
  inline void clear_has__skill_levelup_reply();
  inline void set_has__sell_item_reply();
  inline void clear_has__sell_item_reply();
  inline void set_has__fragment_compose_reply();
  inline void clear_has__fragment_compose_reply();
  inline void set_has__hero_equip_upgrade_reply();
  inline void clear_has__hero_equip_upgrade_reply();
  inline void set_has__trigger_task_reply();
  inline void clear_has__trigger_task_reply();
  inline void set_has__require_rewards_reply();
  inline void clear_has__require_rewards_reply();
  inline void set_has__trigger_job_reply();
  inline void clear_has__trigger_job_reply();
  inline void set_has__job_rewards_reply();
  inline void clear_has__job_rewards_reply();
  inline void set_has__reset_elite_reply();
  inline void clear_has__reset_elite_reply();
  inline void set_has__sweep_stage_reply();
  inline void clear_has__sweep_stage_reply();
  inline void set_has__tavern_draw_reply();
  inline void clear_has__tavern_draw_reply();
  inline void set_has__sync_skill_stren_reply();
  inline void clear_has__sync_skill_stren_reply();
  inline void set_has__query_data_reply();
  inline void clear_has__query_data_reply();
  inline void set_has__hero_evolve_reply();
  inline void clear_has__hero_evolve_reply();
  inline void set_has__sync_vitality_reply();
  inline void clear_has__sync_vitality_reply();
  inline void set_has__user_check();
  inline void clear_has__user_check();
  inline void set_has__tutorial_reply();
  inline void clear_has__tutorial_reply();
  inline void set_has__error_info();
  inline void clear_has__error_info();
  inline void set_has__ladder_reply();
  inline void clear_has__ladder_reply();
  inline void set_has__set_name_reply();
  inline void clear_has__set_name_reply();
  inline void set_has__midas_reply();
  inline void clear_has__midas_reply();
  inline void set_has__open_shop_reply();
  inline void clear_has__open_shop_reply();
  inline void set_has__charge_reply();
  inline void clear_has__charge_reply();
  inline void set_has__sdk_login_reply();
  inline void clear_has__sdk_login_reply();
  inline void set_has__set_avatar_reply();
  inline void clear_has__set_avatar_reply();
  inline void set_has__notify_msg();
  inline void clear_has__notify_msg();
  inline void set_has__ask_daily_login_reply();
  inline void clear_has__ask_daily_login_reply();
  inline void set_has__tbc_reply();
  inline void clear_has__tbc_reply();
  inline void set_has__get_maillist_reply();
  inline void clear_has__get_maillist_reply();
  inline void set_has__read_mail_reply();
  inline void clear_has__read_mail_reply();
  inline void set_has__svr_time();
  inline void clear_has__svr_time();
  inline void set_has__get_vip_gift_reply();
  inline void clear_has__get_vip_gift_reply();
  inline void set_has__chat_reply();
  inline void clear_has__chat_reply();
  inline void set_has__cdkey_gift_reply();
  inline void clear_has__cdkey_gift_reply();
  inline void set_has__guild_reply();
  inline void clear_has__guild_reply();
  inline void set_has__ask_magicsoul_reply();
  inline void clear_has__ask_magicsoul_reply();
  inline void set_has__ask_activity_info_reply();
  inline void clear_has__ask_activity_info_reply();
  inline void set_has__excavate_reply();
  inline void clear_has__excavate_reply();
  inline void set_has__system_setting_reply();
  inline void clear_has__system_setting_reply();
  inline void set_has__query_split_data_reply();
  inline void clear_has__query_split_data_reply();
  inline void set_has__query_split_return_reply();
  inline void clear_has__query_split_return_reply();
  inline void set_has__split_hero_reply();
  inline void clear_has__split_hero_reply();
  inline void set_has__worldcup_reply();
  inline void clear_has__worldcup_reply();
  inline void set_has__battle_check_fail();
  inline void clear_has__battle_check_fail();
  inline void set_has__query_replay();
  inline void clear_has__query_replay();
  inline void set_has__super_link();
  inline void clear_has__super_link();
  inline void set_has__query_ranklist_reply();
  inline void clear_has__query_ranklist_reply();
  inline void set_has__request_guild_log_reply();
  inline void clear_has__request_guild_log_reply();
  inline void set_has__change_server_reply();
  inline void clear_has__change_server_reply();
  inline void set_has__activity_info_reply();
  inline void clear_has__activity_info_reply();
  inline void set_has__activity_lotto_info_reply();
  inline void clear_has__activity_lotto_info_reply();
  inline void set_has__activity_lotto_reward_reply();
  inline void clear_has__activity_lotto_reward_reply();
  inline void set_has__activity_bigpackage_info_reply();
  inline void clear_has__activity_bigpackage_info_reply();
  inline void set_has__activity_bigpackage_reward_reply();
  inline void clear_has__activity_bigpackage_reward_reply();
  inline void set_has__activity_bigpackage_reset_reply();
  inline void clear_has__activity_bigpackage_reset_reply();
  inline void set_has__fb_attention_reply();
  inline void clear_has__fb_attention_reply();
  inline void set_has__continue_pay_reply();
  inline void clear_has__continue_pay_reply();
  inline void set_has__recharge_rebate_reply();
  inline void clear_has__recharge_rebate_reply();
  inline void set_has__every_day_happy_reply();
  inline void clear_has__every_day_happy_reply();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[3];
  mutable int _cached_size_;
  ::client_baseserver::login_reply* _login_reply_;
  ::client_baseserver::reset* _reset_;
  ::client_baseserver::enter_stage_reply* _enter_stage_reply_;
  ::client_baseserver::exit_stage_reply* _exit_stage_reply_;
  ::client_baseserver::hero_upgrade_reply* _hero_upgrade_reply_;
  ::client_baseserver::equip_synthesis_reply* _equip_synthesis_reply_;
  ::client_baseserver::wear_equip_reply* _wear_equip_reply_;
  ::client_baseserver::consume_item_reply* _consume_item_reply_;
  ::client_baseserver::user_shop* _shop_refresh_reply_;
  ::client_baseserver::shop_consume_reply* _shop_consume_reply_;
  ::client_baseserver::skill_levelup_reply* _skill_levelup_reply_;
  ::client_baseserver::sell_item_reply* _sell_item_reply_;
  ::client_baseserver::fragment_compose_reply* _fragment_compose_reply_;
  ::client_baseserver::hero_equip_upgrade_reply* _hero_equip_upgrade_reply_;
  ::client_baseserver::trigger_task_reply* _trigger_task_reply_;
  ::client_baseserver::require_rewards_reply* _require_rewards_reply_;
  ::client_baseserver::trigger_job_reply* _trigger_job_reply_;
  ::client_baseserver::job_rewards_reply* _job_rewards_reply_;
  ::client_baseserver::reset_elite_reply* _reset_elite_reply_;
  ::client_baseserver::sweep_stage_reply* _sweep_stage_reply_;
  ::client_baseserver::tavern_draw_reply* _tavern_draw_reply_;
  ::client_baseserver::sync_skill_stren_reply* _sync_skill_stren_reply_;
  ::client_baseserver::query_data_reply* _query_data_reply_;
  ::client_baseserver::hero_evolve_reply* _hero_evolve_reply_;
  ::client_baseserver::sync_vitality_reply* _sync_vitality_reply_;
  ::client_baseserver::user_check* _user_check_;
  ::client_baseserver::tutorial_reply* _tutorial_reply_;
  ::client_baseserver::error_info* _error_info_;
  ::client_baseserver::ladder_reply* _ladder_reply_;
  ::client_baseserver::set_name_reply* _set_name_reply_;
  ::client_baseserver::midas_reply* _midas_reply_;
  ::client_baseserver::open_shop_reply* _open_shop_reply_;
  ::client_baseserver::charge_reply* _charge_reply_;
  ::client_baseserver::sdk_login_reply* _sdk_login_reply_;
  ::client_baseserver::set_avatar_reply* _set_avatar_reply_;
  ::client_baseserver::notify_msg* _notify_msg_;
  ::client_baseserver::ask_daily_login_reply* _ask_daily_login_reply_;
  ::client_baseserver::tbc_reply* _tbc_reply_;
  ::client_baseserver::get_maillist_reply* _get_maillist_reply_;
  ::client_baseserver::read_mail_reply* _read_mail_reply_;
  ::client_baseserver::get_vip_gift_reply* _get_vip_gift_reply_;
  ::client_baseserver::chat_reply* _chat_reply_;
  ::client_baseserver::cdkey_gift_reply* _cdkey_gift_reply_;
  ::client_baseserver::guild_reply* _guild_reply_;
  ::client_baseserver::ask_magicsoul_reply* _ask_magicsoul_reply_;
  ::client_baseserver::activity_infos* _ask_activity_info_reply_;
  ::client_baseserver::excavate_reply* _excavate_reply_;
  ::client_baseserver::system_setting_reply* _system_setting_reply_;
  ::client_baseserver::query_split_data_reply* _query_split_data_reply_;
  ::client_baseserver::query_split_return_reply* _query_split_return_reply_;
  ::client_baseserver::split_hero_reply* _split_hero_reply_;
  ::client_baseserver::worldcup_reply* _worldcup_reply_;
  ::client_baseserver::battle_check_fail* _battle_check_fail_;
  ::client_baseserver::query_replay* _query_replay_;
  ::client_baseserver::super_link* _super_link_;
  ::client_baseserver::query_ranklist_reply* _query_ranklist_reply_;
  ::client_baseserver::request_guild_log_reply* _request_guild_log_reply_;
  ::client_baseserver::change_server_reply* _change_server_reply_;
  ::client_baseserver::activity_info_reply* _activity_info_reply_;
  ::client_baseserver::activity_lotto_info_reply* _activity_lotto_info_reply_;
  ::client_baseserver::activity_lotto_reward_reply* _activity_lotto_reward_reply_;
  ::client_baseserver::activity_bigpackage_info_reply* _activity_bigpackage_info_reply_;
  ::client_baseserver::activity_bigpackage_reward_reply* _activity_bigpackage_reward_reply_;
  ::client_baseserver::activity_bigpackage_reset_reply* _activity_bigpackage_reset_reply_;
  ::client_baseserver::fb_attention_reply* _fb_attention_reply_;
  ::client_baseserver::continue_pay_reply* _continue_pay_reply_;
  ::client_baseserver::recharge_rebate_reply* _recharge_rebate_reply_;
  ::client_baseserver::every_day_happy_reply* _every_day_happy_reply_;
  ::google::protobuf::uint32 _svr_time_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static down_msg* default_instance_;
};
// -------------------------------------------------------------------

class system_setting_reply : public ::google::protobuf::Message {
 public:
  system_setting_reply();
  virtual ~system_setting_reply();

  system_setting_reply(const system_setting_reply& from);

  inline system_setting_reply& operator=(const system_setting_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const system_setting_reply& default_instance();

  void Swap(system_setting_reply* other);

  // implements Message ----------------------------------------------

  system_setting_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const system_setting_reply& from);
  void MergeFrom(const system_setting_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client_baseserver.system_setting_request _request = 1;
  inline bool has__request() const;
  inline void clear__request();
  static const int kRequestFieldNumber = 1;
  inline const ::client_baseserver::system_setting_request& _request() const;
  inline ::client_baseserver::system_setting_request* mutable__request();
  inline ::client_baseserver::system_setting_request* release__request();
  inline void set_allocated__request(::client_baseserver::system_setting_request* _request);

  // optional .client_baseserver.system_setting_change _change = 2;
  inline bool has__change() const;
  inline void clear__change();
  static const int kChangeFieldNumber = 2;
  inline const ::client_baseserver::system_setting_change& _change() const;
  inline ::client_baseserver::system_setting_change* mutable__change();
  inline ::client_baseserver::system_setting_change* release__change();
  inline void set_allocated__change(::client_baseserver::system_setting_change* _change);

  // @@protoc_insertion_point(class_scope:client_baseserver.system_setting_reply)
 private:
  inline void set_has__request();
  inline void clear_has__request();
  inline void set_has__change();
  inline void clear_has__change();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::system_setting_request* _request_;
  ::client_baseserver::system_setting_change* _change_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static system_setting_reply* default_instance_;
};
// -------------------------------------------------------------------

class system_setting_change : public ::google::protobuf::Message {
 public:
  system_setting_change();
  virtual ~system_setting_change();

  system_setting_change(const system_setting_change& from);

  inline system_setting_change& operator=(const system_setting_change& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const system_setting_change& default_instance();

  void Swap(system_setting_change* other);

  // implements Message ----------------------------------------------

  system_setting_change* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const system_setting_change& from);
  void MergeFrom(const system_setting_change& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // @@protoc_insertion_point(class_scope:client_baseserver.system_setting_change)
 private:
  inline void set_has__result();
  inline void clear_has__result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static system_setting_change* default_instance_;
};
// -------------------------------------------------------------------

class system_setting_request : public ::google::protobuf::Message {
 public:
  system_setting_request();
  virtual ~system_setting_request();

  system_setting_request(const system_setting_request& from);

  inline system_setting_request& operator=(const system_setting_request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const system_setting_request& default_instance();

  void Swap(system_setting_request* other);

  // implements Message ----------------------------------------------

  system_setting_request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const system_setting_request& from);
  void MergeFrom(const system_setting_request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client_baseserver.system_setting_item _system_setting_item = 1;
  inline int _system_setting_item_size() const;
  inline void clear__system_setting_item();
  static const int kSystemSettingItemFieldNumber = 1;
  inline const ::client_baseserver::system_setting_item& _system_setting_item(int index) const;
  inline ::client_baseserver::system_setting_item* mutable__system_setting_item(int index);
  inline ::client_baseserver::system_setting_item* add__system_setting_item();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::system_setting_item >&
      _system_setting_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::system_setting_item >*
      mutable__system_setting_item();

  // @@protoc_insertion_point(class_scope:client_baseserver.system_setting_request)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::system_setting_item > _system_setting_item_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static system_setting_request* default_instance_;
};
// -------------------------------------------------------------------

class system_setting_item : public ::google::protobuf::Message {
 public:
  system_setting_item();
  virtual ~system_setting_item();

  system_setting_item(const system_setting_item& from);

  inline system_setting_item& operator=(const system_setting_item& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const system_setting_item& default_instance();

  void Swap(system_setting_item* other);

  // implements Message ----------------------------------------------

  system_setting_item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const system_setting_item& from);
  void MergeFrom(const system_setting_item& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef system_setting_item_setting_status setting_status;
  static const setting_status on = system_setting_item_setting_status_on;
  static const setting_status off = system_setting_item_setting_status_off;
  static inline bool setting_status_IsValid(int value) {
    return system_setting_item_setting_status_IsValid(value);
  }
  static const setting_status setting_status_MIN =
    system_setting_item_setting_status_setting_status_MIN;
  static const setting_status setting_status_MAX =
    system_setting_item_setting_status_setting_status_MAX;
  static const int setting_status_ARRAYSIZE =
    system_setting_item_setting_status_setting_status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  setting_status_descriptor() {
    return system_setting_item_setting_status_descriptor();
  }
  static inline const ::std::string& setting_status_Name(setting_status value) {
    return system_setting_item_setting_status_Name(value);
  }
  static inline bool setting_status_Parse(const ::std::string& name,
      setting_status* value) {
    return system_setting_item_setting_status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // required .client_baseserver.system_setting_item.setting_status value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::client_baseserver::system_setting_item_setting_status value() const;
  inline void set_value(::client_baseserver::system_setting_item_setting_status value);

  // @@protoc_insertion_point(class_scope:client_baseserver.system_setting_item)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* key_;
  int value_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static system_setting_item* default_instance_;
};
// -------------------------------------------------------------------

class global_config : public ::google::protobuf::Message {
 public:
  global_config();
  virtual ~global_config();

  global_config(const global_config& from);

  inline global_config& operator=(const global_config& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const global_config& default_instance();

  void Swap(global_config* other);

  // implements Message ----------------------------------------------

  global_config* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const global_config& from);
  void MergeFrom(const global_config& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 _hero_split_ending = 1;
  inline bool has__hero_split_ending() const;
  inline void clear__hero_split_ending();
  static const int kHeroSplitEndingFieldNumber = 1;
  inline ::google::protobuf::uint32 _hero_split_ending() const;
  inline void set__hero_split_ending(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.global_config)
 private:
  inline void set_has__hero_split_ending();
  inline void clear_has__hero_split_ending();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _hero_split_ending_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static global_config* default_instance_;
};
// -------------------------------------------------------------------

class login_reply : public ::google::protobuf::Message {
 public:
  login_reply();
  virtual ~login_reply();

  login_reply(const login_reply& from);

  inline login_reply& operator=(const login_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const login_reply& default_instance();

  void Swap(login_reply* other);

  // implements Message ----------------------------------------------

  login_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const login_reply& from);
  void MergeFrom(const login_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // optional .client_baseserver.user _user = 2;
  inline bool has__user() const;
  inline void clear__user();
  static const int kUserFieldNumber = 2;
  inline const ::client_baseserver::user& _user() const;
  inline ::client_baseserver::user* mutable__user();
  inline ::client_baseserver::user* release__user();
  inline void set_allocated__user(::client_baseserver::user* _user);

  // required string _time_zone = 3;
  inline bool has__time_zone() const;
  inline void clear__time_zone();
  static const int kTimeZoneFieldNumber = 3;
  inline const ::std::string& _time_zone() const;
  inline void set__time_zone(const ::std::string& value);
  inline void set__time_zone(const char* value);
  inline void set__time_zone(const char* value, size_t size);
  inline ::std::string* mutable__time_zone();
  inline ::std::string* release__time_zone();
  inline void set_allocated__time_zone(::std::string* _time_zone);

  // @@protoc_insertion_point(class_scope:client_baseserver.login_reply)
 private:
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__user();
  inline void clear_has__user();
  inline void set_has__time_zone();
  inline void clear_has__time_zone();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::user* _user_;
  ::std::string* _time_zone_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static login_reply* default_instance_;
};
// -------------------------------------------------------------------

class sdk_login_reply : public ::google::protobuf::Message {
 public:
  sdk_login_reply();
  virtual ~sdk_login_reply();

  sdk_login_reply(const sdk_login_reply& from);

  inline sdk_login_reply& operator=(const sdk_login_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const sdk_login_reply& default_instance();

  void Swap(sdk_login_reply* other);

  // implements Message ----------------------------------------------

  sdk_login_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const sdk_login_reply& from);
  void MergeFrom(const sdk_login_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1 [default = fail];
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // required string _uin = 2;
  inline bool has__uin() const;
  inline void clear__uin();
  static const int kUinFieldNumber = 2;
  inline const ::std::string& _uin() const;
  inline void set__uin(const ::std::string& value);
  inline void set__uin(const char* value);
  inline void set__uin(const char* value, size_t size);
  inline ::std::string* mutable__uin();
  inline ::std::string* release__uin();
  inline void set_allocated__uin(::std::string* _uin);

  // optional string _access_token = 3;
  inline bool has__access_token() const;
  inline void clear__access_token();
  static const int kAccessTokenFieldNumber = 3;
  inline const ::std::string& _access_token() const;
  inline void set__access_token(const ::std::string& value);
  inline void set__access_token(const char* value);
  inline void set__access_token(const char* value, size_t size);
  inline ::std::string* mutable__access_token();
  inline ::std::string* release__access_token();
  inline void set_allocated__access_token(::std::string* _access_token);

  // optional string _recharge_url = 4;
  inline bool has__recharge_url() const;
  inline void clear__recharge_url();
  static const int kRechargeUrlFieldNumber = 4;
  inline const ::std::string& _recharge_url() const;
  inline void set__recharge_url(const ::std::string& value);
  inline void set__recharge_url(const char* value);
  inline void set__recharge_url(const char* value, size_t size);
  inline ::std::string* mutable__recharge_url();
  inline ::std::string* release__recharge_url();
  inline void set_allocated__recharge_url(::std::string* _recharge_url);

  // @@protoc_insertion_point(class_scope:client_baseserver.sdk_login_reply)
 private:
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__uin();
  inline void clear_has__uin();
  inline void set_has__access_token();
  inline void clear_has__access_token();
  inline void set_has__recharge_url();
  inline void clear_has__recharge_url();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* _uin_;
  ::std::string* _access_token_;
  ::std::string* _recharge_url_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static sdk_login_reply* default_instance_;
};
// -------------------------------------------------------------------

class user_check : public ::google::protobuf::Message {
 public:
  user_check();
  virtual ~user_check();

  user_check(const user_check& from);

  inline user_check& operator=(const user_check& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const user_check& default_instance();

  void Swap(user_check* other);

  // implements Message ----------------------------------------------

  user_check* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const user_check& from);
  void MergeFrom(const user_check& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.user _user = 1;
  inline bool has__user() const;
  inline void clear__user();
  static const int kUserFieldNumber = 1;
  inline const ::client_baseserver::user& _user() const;
  inline ::client_baseserver::user* mutable__user();
  inline ::client_baseserver::user* release__user();
  inline void set_allocated__user(::client_baseserver::user* _user);

  // @@protoc_insertion_point(class_scope:client_baseserver.user_check)
 private:
  inline void set_has__user();
  inline void clear_has__user();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::user* _user_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static user_check* default_instance_;
};
// -------------------------------------------------------------------

class reset : public ::google::protobuf::Message {
 public:
  reset();
  virtual ~reset();

  reset(const reset& from);

  inline reset& operator=(const reset& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const reset& default_instance();

  void Swap(reset* other);

  // implements Message ----------------------------------------------

  reset* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const reset& from);
  void MergeFrom(const reset& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.user _user = 1;
  inline bool has__user() const;
  inline void clear__user();
  static const int kUserFieldNumber = 1;
  inline const ::client_baseserver::user& _user() const;
  inline ::client_baseserver::user* mutable__user();
  inline ::client_baseserver::user* release__user();
  inline void set_allocated__user(::client_baseserver::user* _user);

  // @@protoc_insertion_point(class_scope:client_baseserver.reset)
 private:
  inline void set_has__user();
  inline void clear_has__user();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::user* _user_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static reset* default_instance_;
};
// -------------------------------------------------------------------

class enter_stage_reply : public ::google::protobuf::Message {
 public:
  enter_stage_reply();
  virtual ~enter_stage_reply();

  enter_stage_reply(const enter_stage_reply& from);

  inline enter_stage_reply& operator=(const enter_stage_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const enter_stage_reply& default_instance();

  void Swap(enter_stage_reply* other);

  // implements Message ----------------------------------------------

  enter_stage_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const enter_stage_reply& from);
  void MergeFrom(const enter_stage_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _rseed = 1;
  inline bool has__rseed() const;
  inline void clear__rseed();
  static const int kRseedFieldNumber = 1;
  inline ::google::protobuf::uint32 _rseed() const;
  inline void set__rseed(::google::protobuf::uint32 value);

  // repeated uint32 _loots = 2;
  inline int _loots_size() const;
  inline void clear__loots();
  static const int kLootsFieldNumber = 2;
  inline ::google::protobuf::uint32 _loots(int index) const;
  inline void set__loots(int index, ::google::protobuf::uint32 value);
  inline void add__loots(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _loots() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__loots();

  // @@protoc_insertion_point(class_scope:client_baseserver.enter_stage_reply)
 private:
  inline void set_has__rseed();
  inline void clear_has__rseed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _loots_;
  ::google::protobuf::uint32 _rseed_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static enter_stage_reply* default_instance_;
};
// -------------------------------------------------------------------

class activity_info_reply : public ::google::protobuf::Message {
 public:
  activity_info_reply();
  virtual ~activity_info_reply();

  activity_info_reply(const activity_info_reply& from);

  inline activity_info_reply& operator=(const activity_info_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activity_info_reply& default_instance();

  void Swap(activity_info_reply* other);

  // implements Message ----------------------------------------------

  activity_info_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activity_info_reply& from);
  void MergeFrom(const activity_info_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client_baseserver.last_activity_info _last_activity_info = 1;
  inline int _last_activity_info_size() const;
  inline void clear__last_activity_info();
  static const int kLastActivityInfoFieldNumber = 1;
  inline const ::client_baseserver::last_activity_info& _last_activity_info(int index) const;
  inline ::client_baseserver::last_activity_info* mutable__last_activity_info(int index);
  inline ::client_baseserver::last_activity_info* add__last_activity_info();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::last_activity_info >&
      _last_activity_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::last_activity_info >*
      mutable__last_activity_info();

  // @@protoc_insertion_point(class_scope:client_baseserver.activity_info_reply)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::last_activity_info > _last_activity_info_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static activity_info_reply* default_instance_;
};
// -------------------------------------------------------------------

class last_activity_info : public ::google::protobuf::Message {
 public:
  last_activity_info();
  virtual ~last_activity_info();

  last_activity_info(const last_activity_info& from);

  inline last_activity_info& operator=(const last_activity_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const last_activity_info& default_instance();

  void Swap(last_activity_info* other);

  // implements Message ----------------------------------------------

  last_activity_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const last_activity_info& from);
  void MergeFrom(const last_activity_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string _group_id = 1;
  inline bool has__group_id() const;
  inline void clear__group_id();
  static const int kGroupIdFieldNumber = 1;
  inline const ::std::string& _group_id() const;
  inline void set__group_id(const ::std::string& value);
  inline void set__group_id(const char* value);
  inline void set__group_id(const char* value, size_t size);
  inline ::std::string* mutable__group_id();
  inline ::std::string* release__group_id();
  inline void set_allocated__group_id(::std::string* _group_id);

  // repeated uint32 _activity_ids = 2;
  inline int _activity_ids_size() const;
  inline void clear__activity_ids();
  static const int kActivityIdsFieldNumber = 2;
  inline ::google::protobuf::uint32 _activity_ids(int index) const;
  inline void set__activity_ids(int index, ::google::protobuf::uint32 value);
  inline void add__activity_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _activity_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__activity_ids();

  // @@protoc_insertion_point(class_scope:client_baseserver.last_activity_info)
 private:
  inline void set_has__group_id();
  inline void clear_has__group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* _group_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _activity_ids_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static last_activity_info* default_instance_;
};
// -------------------------------------------------------------------

class activity_lotto_info_reply : public ::google::protobuf::Message {
 public:
  activity_lotto_info_reply();
  virtual ~activity_lotto_info_reply();

  activity_lotto_info_reply(const activity_lotto_info_reply& from);

  inline activity_lotto_info_reply& operator=(const activity_lotto_info_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activity_lotto_info_reply& default_instance();

  void Swap(activity_lotto_info_reply* other);

  // implements Message ----------------------------------------------

  activity_lotto_info_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activity_lotto_info_reply& from);
  void MergeFrom(const activity_lotto_info_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _diamond_num = 1;
  inline bool has__diamond_num() const;
  inline void clear__diamond_num();
  static const int kDiamondNumFieldNumber = 1;
  inline ::google::protobuf::uint32 _diamond_num() const;
  inline void set__diamond_num(::google::protobuf::uint32 value);

  // required uint32 _current_step = 2;
  inline bool has__current_step() const;
  inline void clear__current_step();
  static const int kCurrentStepFieldNumber = 2;
  inline ::google::protobuf::uint32 _current_step() const;
  inline void set__current_step(::google::protobuf::uint32 value);

  // required uint32 _need_diamond_num = 3;
  inline bool has__need_diamond_num() const;
  inline void clear__need_diamond_num();
  static const int kNeedDiamondNumFieldNumber = 3;
  inline ::google::protobuf::uint32 _need_diamond_num() const;
  inline void set__need_diamond_num(::google::protobuf::uint32 value);

  // required uint32 _win_diamond_num = 4;
  inline bool has__win_diamond_num() const;
  inline void clear__win_diamond_num();
  static const int kWinDiamondNumFieldNumber = 4;
  inline ::google::protobuf::uint32 _win_diamond_num() const;
  inline void set__win_diamond_num(::google::protobuf::uint32 value);

  // required uint32 _remain_time = 5;
  inline bool has__remain_time() const;
  inline void clear__remain_time();
  static const int kRemainTimeFieldNumber = 5;
  inline ::google::protobuf::uint32 _remain_time() const;
  inline void set__remain_time(::google::protobuf::uint32 value);

  // repeated string _broadcast_texts = 6;
  inline int _broadcast_texts_size() const;
  inline void clear__broadcast_texts();
  static const int kBroadcastTextsFieldNumber = 6;
  inline const ::std::string& _broadcast_texts(int index) const;
  inline ::std::string* mutable__broadcast_texts(int index);
  inline void set__broadcast_texts(int index, const ::std::string& value);
  inline void set__broadcast_texts(int index, const char* value);
  inline void set__broadcast_texts(int index, const char* value, size_t size);
  inline ::std::string* add__broadcast_texts();
  inline void add__broadcast_texts(const ::std::string& value);
  inline void add__broadcast_texts(const char* value);
  inline void add__broadcast_texts(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& _broadcast_texts() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable__broadcast_texts();

  // @@protoc_insertion_point(class_scope:client_baseserver.activity_lotto_info_reply)
 private:
  inline void set_has__diamond_num();
  inline void clear_has__diamond_num();
  inline void set_has__current_step();
  inline void clear_has__current_step();
  inline void set_has__need_diamond_num();
  inline void clear_has__need_diamond_num();
  inline void set_has__win_diamond_num();
  inline void clear_has__win_diamond_num();
  inline void set_has__remain_time();
  inline void clear_has__remain_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _diamond_num_;
  ::google::protobuf::uint32 _current_step_;
  ::google::protobuf::uint32 _need_diamond_num_;
  ::google::protobuf::uint32 _win_diamond_num_;
  ::google::protobuf::RepeatedPtrField< ::std::string> _broadcast_texts_;
  ::google::protobuf::uint32 _remain_time_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static activity_lotto_info_reply* default_instance_;
};
// -------------------------------------------------------------------

class activity_lotto_reward_reply : public ::google::protobuf::Message {
 public:
  activity_lotto_reward_reply();
  virtual ~activity_lotto_reward_reply();

  activity_lotto_reward_reply(const activity_lotto_reward_reply& from);

  inline activity_lotto_reward_reply& operator=(const activity_lotto_reward_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activity_lotto_reward_reply& default_instance();

  void Swap(activity_lotto_reward_reply* other);

  // implements Message ----------------------------------------------

  activity_lotto_reward_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activity_lotto_reward_reply& from);
  void MergeFrom(const activity_lotto_reward_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _status = 1;
  inline bool has__status() const;
  inline void clear__status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::uint32 _status() const;
  inline void set__status(::google::protobuf::uint32 value);

  // required uint32 _reward_diamon_num = 2;
  inline bool has__reward_diamon_num() const;
  inline void clear__reward_diamon_num();
  static const int kRewardDiamonNumFieldNumber = 2;
  inline ::google::protobuf::uint32 _reward_diamon_num() const;
  inline void set__reward_diamon_num(::google::protobuf::uint32 value);

  // required uint32 _have_next_round = 3;
  inline bool has__have_next_round() const;
  inline void clear__have_next_round();
  static const int kHaveNextRoundFieldNumber = 3;
  inline ::google::protobuf::uint32 _have_next_round() const;
  inline void set__have_next_round(::google::protobuf::uint32 value);

  // optional uint32 _need_diamond_num = 4;
  inline bool has__need_diamond_num() const;
  inline void clear__need_diamond_num();
  static const int kNeedDiamondNumFieldNumber = 4;
  inline ::google::protobuf::uint32 _need_diamond_num() const;
  inline void set__need_diamond_num(::google::protobuf::uint32 value);

  // required uint32 _diamond_num = 5;
  inline bool has__diamond_num() const;
  inline void clear__diamond_num();
  static const int kDiamondNumFieldNumber = 5;
  inline ::google::protobuf::uint32 _diamond_num() const;
  inline void set__diamond_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.activity_lotto_reward_reply)
 private:
  inline void set_has__status();
  inline void clear_has__status();
  inline void set_has__reward_diamon_num();
  inline void clear_has__reward_diamon_num();
  inline void set_has__have_next_round();
  inline void clear_has__have_next_round();
  inline void set_has__need_diamond_num();
  inline void clear_has__need_diamond_num();
  inline void set_has__diamond_num();
  inline void clear_has__diamond_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _status_;
  ::google::protobuf::uint32 _reward_diamon_num_;
  ::google::protobuf::uint32 _have_next_round_;
  ::google::protobuf::uint32 _need_diamond_num_;
  ::google::protobuf::uint32 _diamond_num_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static activity_lotto_reward_reply* default_instance_;
};
// -------------------------------------------------------------------

class activity_bigpackage_info_reply : public ::google::protobuf::Message {
 public:
  activity_bigpackage_info_reply();
  virtual ~activity_bigpackage_info_reply();

  activity_bigpackage_info_reply(const activity_bigpackage_info_reply& from);

  inline activity_bigpackage_info_reply& operator=(const activity_bigpackage_info_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activity_bigpackage_info_reply& default_instance();

  void Swap(activity_bigpackage_info_reply* other);

  // implements Message ----------------------------------------------

  activity_bigpackage_info_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activity_bigpackage_info_reply& from);
  void MergeFrom(const activity_bigpackage_info_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _people_count = 1;
  inline bool has__people_count() const;
  inline void clear__people_count();
  static const int kPeopleCountFieldNumber = 1;
  inline ::google::protobuf::uint32 _people_count() const;
  inline void set__people_count(::google::protobuf::uint32 value);

  // required uint32 _remain_times = 2;
  inline bool has__remain_times() const;
  inline void clear__remain_times();
  static const int kRemainTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 _remain_times() const;
  inline void set__remain_times(::google::protobuf::uint32 value);

  // required uint32 _next_reset_price = 3;
  inline bool has__next_reset_price() const;
  inline void clear__next_reset_price();
  static const int kNextResetPriceFieldNumber = 3;
  inline ::google::protobuf::uint32 _next_reset_price() const;
  inline void set__next_reset_price(::google::protobuf::uint32 value);

  // required uint32 _current_ranking = 4;
  inline bool has__current_ranking() const;
  inline void clear__current_ranking();
  static const int kCurrentRankingFieldNumber = 4;
  inline ::google::protobuf::uint32 _current_ranking() const;
  inline void set__current_ranking(::google::protobuf::uint32 value);

  // repeated uint32 _get_box_ids = 5;
  inline int _get_box_ids_size() const;
  inline void clear__get_box_ids();
  static const int kGetBoxIdsFieldNumber = 5;
  inline ::google::protobuf::uint32 _get_box_ids(int index) const;
  inline void set__get_box_ids(int index, ::google::protobuf::uint32 value);
  inline void add__get_box_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _get_box_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__get_box_ids();

  // required uint32 _distance_score_20 = 6;
  inline bool has__distance_score_20() const;
  inline void clear__distance_score_20();
  static const int kDistanceScore20FieldNumber = 6;
  inline ::google::protobuf::uint32 _distance_score_20() const;
  inline void set__distance_score_20(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.activity_bigpackage_info_reply)
 private:
  inline void set_has__people_count();
  inline void clear_has__people_count();
  inline void set_has__remain_times();
  inline void clear_has__remain_times();
  inline void set_has__next_reset_price();
  inline void clear_has__next_reset_price();
  inline void set_has__current_ranking();
  inline void clear_has__current_ranking();
  inline void set_has__distance_score_20();
  inline void clear_has__distance_score_20();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _people_count_;
  ::google::protobuf::uint32 _remain_times_;
  ::google::protobuf::uint32 _next_reset_price_;
  ::google::protobuf::uint32 _current_ranking_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _get_box_ids_;
  ::google::protobuf::uint32 _distance_score_20_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static activity_bigpackage_info_reply* default_instance_;
};
// -------------------------------------------------------------------

class activity_bigpackage_reward_reply : public ::google::protobuf::Message {
 public:
  activity_bigpackage_reward_reply();
  virtual ~activity_bigpackage_reward_reply();

  activity_bigpackage_reward_reply(const activity_bigpackage_reward_reply& from);

  inline activity_bigpackage_reward_reply& operator=(const activity_bigpackage_reward_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activity_bigpackage_reward_reply& default_instance();

  void Swap(activity_bigpackage_reward_reply* other);

  // implements Message ----------------------------------------------

  activity_bigpackage_reward_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activity_bigpackage_reward_reply& from);
  void MergeFrom(const activity_bigpackage_reward_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _status = 1;
  inline bool has__status() const;
  inline void clear__status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::uint32 _status() const;
  inline void set__status(::google::protobuf::uint32 value);

  // repeated .client_baseserver.activity_reward _rewards = 2;
  inline int _rewards_size() const;
  inline void clear__rewards();
  static const int kRewardsFieldNumber = 2;
  inline const ::client_baseserver::activity_reward& _rewards(int index) const;
  inline ::client_baseserver::activity_reward* mutable__rewards(int index);
  inline ::client_baseserver::activity_reward* add__rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::activity_reward >&
      _rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::activity_reward >*
      mutable__rewards();

  // repeated uint32 _item_ids = 3;
  inline int _item_ids_size() const;
  inline void clear__item_ids();
  static const int kItemIdsFieldNumber = 3;
  inline ::google::protobuf::uint32 _item_ids(int index) const;
  inline void set__item_ids(int index, ::google::protobuf::uint32 value);
  inline void add__item_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _item_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__item_ids();

  // required uint32 _people_count = 4;
  inline bool has__people_count() const;
  inline void clear__people_count();
  static const int kPeopleCountFieldNumber = 4;
  inline ::google::protobuf::uint32 _people_count() const;
  inline void set__people_count(::google::protobuf::uint32 value);

  // required uint32 _current_ranking = 5;
  inline bool has__current_ranking() const;
  inline void clear__current_ranking();
  static const int kCurrentRankingFieldNumber = 5;
  inline ::google::protobuf::uint32 _current_ranking() const;
  inline void set__current_ranking(::google::protobuf::uint32 value);

  // required uint32 _distance_score_20 = 6;
  inline bool has__distance_score_20() const;
  inline void clear__distance_score_20();
  static const int kDistanceScore20FieldNumber = 6;
  inline ::google::protobuf::uint32 _distance_score_20() const;
  inline void set__distance_score_20(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.activity_bigpackage_reward_reply)
 private:
  inline void set_has__status();
  inline void clear_has__status();
  inline void set_has__people_count();
  inline void clear_has__people_count();
  inline void set_has__current_ranking();
  inline void clear_has__current_ranking();
  inline void set_has__distance_score_20();
  inline void clear_has__distance_score_20();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::activity_reward > _rewards_;
  ::google::protobuf::uint32 _status_;
  ::google::protobuf::uint32 _people_count_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _item_ids_;
  ::google::protobuf::uint32 _current_ranking_;
  ::google::protobuf::uint32 _distance_score_20_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static activity_bigpackage_reward_reply* default_instance_;
};
// -------------------------------------------------------------------

class activity_bigpackage_reset_reply : public ::google::protobuf::Message {
 public:
  activity_bigpackage_reset_reply();
  virtual ~activity_bigpackage_reset_reply();

  activity_bigpackage_reset_reply(const activity_bigpackage_reset_reply& from);

  inline activity_bigpackage_reset_reply& operator=(const activity_bigpackage_reset_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activity_bigpackage_reset_reply& default_instance();

  void Swap(activity_bigpackage_reset_reply* other);

  // implements Message ----------------------------------------------

  activity_bigpackage_reset_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activity_bigpackage_reset_reply& from);
  void MergeFrom(const activity_bigpackage_reset_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _status = 1;
  inline bool has__status() const;
  inline void clear__status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::uint32 _status() const;
  inline void set__status(::google::protobuf::uint32 value);

  // required uint32 _next_reset_price = 2;
  inline bool has__next_reset_price() const;
  inline void clear__next_reset_price();
  static const int kNextResetPriceFieldNumber = 2;
  inline ::google::protobuf::uint32 _next_reset_price() const;
  inline void set__next_reset_price(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.activity_bigpackage_reset_reply)
 private:
  inline void set_has__status();
  inline void clear_has__status();
  inline void set_has__next_reset_price();
  inline void clear_has__next_reset_price();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _status_;
  ::google::protobuf::uint32 _next_reset_price_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static activity_bigpackage_reset_reply* default_instance_;
};
// -------------------------------------------------------------------

class exit_stage_reply : public ::google::protobuf::Message {
 public:
  exit_stage_reply();
  virtual ~exit_stage_reply();

  exit_stage_reply(const exit_stage_reply& from);

  inline exit_stage_reply& operator=(const exit_stage_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const exit_stage_reply& default_instance();

  void Swap(exit_stage_reply* other);

  // implements Message ----------------------------------------------

  exit_stage_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const exit_stage_reply& from);
  void MergeFrom(const exit_stage_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef exit_stage_reply_exit_stage_result exit_stage_result;
  static const exit_stage_result known = exit_stage_reply_exit_stage_result_known;
  static const exit_stage_result unknown = exit_stage_reply_exit_stage_result_unknown;
  static inline bool exit_stage_result_IsValid(int value) {
    return exit_stage_reply_exit_stage_result_IsValid(value);
  }
  static const exit_stage_result exit_stage_result_MIN =
    exit_stage_reply_exit_stage_result_exit_stage_result_MIN;
  static const exit_stage_result exit_stage_result_MAX =
    exit_stage_reply_exit_stage_result_exit_stage_result_MAX;
  static const int exit_stage_result_ARRAYSIZE =
    exit_stage_reply_exit_stage_result_exit_stage_result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  exit_stage_result_descriptor() {
    return exit_stage_reply_exit_stage_result_descriptor();
  }
  static inline const ::std::string& exit_stage_result_Name(exit_stage_result value) {
    return exit_stage_reply_exit_stage_result_Name(value);
  }
  static inline bool exit_stage_result_Parse(const ::std::string& name,
      exit_stage_result* value) {
    return exit_stage_reply_exit_stage_result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .client_baseserver.exit_stage_reply.exit_stage_result _result = 1 [default = known];
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::exit_stage_reply_exit_stage_result _result() const;
  inline void set__result(::client_baseserver::exit_stage_reply_exit_stage_result value);

  // optional .client_baseserver.user_shop _shop = 2;
  inline bool has__shop() const;
  inline void clear__shop();
  static const int kShopFieldNumber = 2;
  inline const ::client_baseserver::user_shop& _shop() const;
  inline ::client_baseserver::user_shop* mutable__shop();
  inline ::client_baseserver::user_shop* release__shop();
  inline void set_allocated__shop(::client_baseserver::user_shop* _shop);

  // optional .client_baseserver.star_shop _sshop = 3;
  inline bool has__sshop() const;
  inline void clear__sshop();
  static const int kSshopFieldNumber = 3;
  inline const ::client_baseserver::star_shop& _sshop() const;
  inline ::client_baseserver::star_shop* mutable__sshop();
  inline ::client_baseserver::star_shop* release__sshop();
  inline void set_allocated__sshop(::client_baseserver::star_shop* _sshop);

  // @@protoc_insertion_point(class_scope:client_baseserver.exit_stage_reply)
 private:
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__shop();
  inline void clear_has__shop();
  inline void set_has__sshop();
  inline void clear_has__sshop();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::user_shop* _shop_;
  ::client_baseserver::star_shop* _sshop_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static exit_stage_reply* default_instance_;
};
// -------------------------------------------------------------------

class hero_upgrade_reply : public ::google::protobuf::Message {
 public:
  hero_upgrade_reply();
  virtual ~hero_upgrade_reply();

  hero_upgrade_reply(const hero_upgrade_reply& from);

  inline hero_upgrade_reply& operator=(const hero_upgrade_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const hero_upgrade_reply& default_instance();

  void Swap(hero_upgrade_reply* other);

  // implements Message ----------------------------------------------

  hero_upgrade_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const hero_upgrade_reply& from);
  void MergeFrom(const hero_upgrade_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1 [default = fail];
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // optional .client_baseserver.hero _hero = 2;
  inline bool has__hero() const;
  inline void clear__hero();
  static const int kHeroFieldNumber = 2;
  inline const ::client_baseserver::hero& _hero() const;
  inline ::client_baseserver::hero* mutable__hero();
  inline ::client_baseserver::hero* release__hero();
  inline void set_allocated__hero(::client_baseserver::hero* _hero);

  // repeated uint32 _items = 3;
  inline int _items_size() const;
  inline void clear__items();
  static const int kItemsFieldNumber = 3;
  inline ::google::protobuf::uint32 _items(int index) const;
  inline void set__items(int index, ::google::protobuf::uint32 value);
  inline void add__items(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _items() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__items();

  // @@protoc_insertion_point(class_scope:client_baseserver.hero_upgrade_reply)
 private:
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__hero();
  inline void clear_has__hero();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::hero* _hero_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _items_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static hero_upgrade_reply* default_instance_;
};
// -------------------------------------------------------------------

class equip_synthesis_reply : public ::google::protobuf::Message {
 public:
  equip_synthesis_reply();
  virtual ~equip_synthesis_reply();

  equip_synthesis_reply(const equip_synthesis_reply& from);

  inline equip_synthesis_reply& operator=(const equip_synthesis_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const equip_synthesis_reply& default_instance();

  void Swap(equip_synthesis_reply* other);

  // implements Message ----------------------------------------------

  equip_synthesis_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const equip_synthesis_reply& from);
  void MergeFrom(const equip_synthesis_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1 [default = fail];
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // @@protoc_insertion_point(class_scope:client_baseserver.equip_synthesis_reply)
 private:
  inline void set_has__result();
  inline void clear_has__result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static equip_synthesis_reply* default_instance_;
};
// -------------------------------------------------------------------

class wear_equip_reply : public ::google::protobuf::Message {
 public:
  wear_equip_reply();
  virtual ~wear_equip_reply();

  wear_equip_reply(const wear_equip_reply& from);

  inline wear_equip_reply& operator=(const wear_equip_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const wear_equip_reply& default_instance();

  void Swap(wear_equip_reply* other);

  // implements Message ----------------------------------------------

  wear_equip_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const wear_equip_reply& from);
  void MergeFrom(const wear_equip_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1 [default = fail];
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // required uint32 _gs = 2;
  inline bool has__gs() const;
  inline void clear__gs();
  static const int kGsFieldNumber = 2;
  inline ::google::protobuf::uint32 _gs() const;
  inline void set__gs(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.wear_equip_reply)
 private:
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__gs();
  inline void clear_has__gs();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  ::google::protobuf::uint32 _gs_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static wear_equip_reply* default_instance_;
};
// -------------------------------------------------------------------

class sync_vitality_reply : public ::google::protobuf::Message {
 public:
  sync_vitality_reply();
  virtual ~sync_vitality_reply();

  sync_vitality_reply(const sync_vitality_reply& from);

  inline sync_vitality_reply& operator=(const sync_vitality_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const sync_vitality_reply& default_instance();

  void Swap(sync_vitality_reply* other);

  // implements Message ----------------------------------------------

  sync_vitality_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const sync_vitality_reply& from);
  void MergeFrom(const sync_vitality_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.vitality _vitality = 1;
  inline bool has__vitality() const;
  inline void clear__vitality();
  static const int kVitalityFieldNumber = 1;
  inline const ::client_baseserver::vitality& _vitality() const;
  inline ::client_baseserver::vitality* mutable__vitality();
  inline ::client_baseserver::vitality* release__vitality();
  inline void set_allocated__vitality(::client_baseserver::vitality* _vitality);

  // required .client_baseserver.vitality _shadow_runes = 2;
  inline bool has__shadow_runes() const;
  inline void clear__shadow_runes();
  static const int kShadowRunesFieldNumber = 2;
  inline const ::client_baseserver::vitality& _shadow_runes() const;
  inline ::client_baseserver::vitality* mutable__shadow_runes();
  inline ::client_baseserver::vitality* release__shadow_runes();
  inline void set_allocated__shadow_runes(::client_baseserver::vitality* _shadow_runes);

  // @@protoc_insertion_point(class_scope:client_baseserver.sync_vitality_reply)
 private:
  inline void set_has__vitality();
  inline void clear_has__vitality();
  inline void set_has__shadow_runes();
  inline void clear_has__shadow_runes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::vitality* _vitality_;
  ::client_baseserver::vitality* _shadow_runes_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static sync_vitality_reply* default_instance_;
};
// -------------------------------------------------------------------

class consume_item_reply : public ::google::protobuf::Message {
 public:
  consume_item_reply();
  virtual ~consume_item_reply();

  consume_item_reply(const consume_item_reply& from);

  inline consume_item_reply& operator=(const consume_item_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const consume_item_reply& default_instance();

  void Swap(consume_item_reply* other);

  // implements Message ----------------------------------------------

  consume_item_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const consume_item_reply& from);
  void MergeFrom(const consume_item_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.hero _hero = 1;
  inline bool has__hero() const;
  inline void clear__hero();
  static const int kHeroFieldNumber = 1;
  inline const ::client_baseserver::hero& _hero() const;
  inline ::client_baseserver::hero* mutable__hero();
  inline ::client_baseserver::hero* release__hero();
  inline void set_allocated__hero(::client_baseserver::hero* _hero);

  // @@protoc_insertion_point(class_scope:client_baseserver.consume_item_reply)
 private:
  inline void set_has__hero();
  inline void clear_has__hero();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::hero* _hero_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static consume_item_reply* default_instance_;
};
// -------------------------------------------------------------------

class user_shop : public ::google::protobuf::Message {
 public:
  user_shop();
  virtual ~user_shop();

  user_shop(const user_shop& from);

  inline user_shop& operator=(const user_shop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const user_shop& default_instance();

  void Swap(user_shop* other);

  // implements Message ----------------------------------------------

  user_shop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const user_shop& from);
  void MergeFrom(const user_shop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _id = 1;
  inline bool has__id() const;
  inline void clear__id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 _id() const;
  inline void set__id(::google::protobuf::uint32 value);

  // optional uint32 _last_auto_refresh_time = 2;
  inline bool has__last_auto_refresh_time() const;
  inline void clear__last_auto_refresh_time();
  static const int kLastAutoRefreshTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 _last_auto_refresh_time() const;
  inline void set__last_auto_refresh_time(::google::protobuf::uint32 value);

  // optional uint32 _expire_time = 3;
  inline bool has__expire_time() const;
  inline void clear__expire_time();
  static const int kExpireTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 _expire_time() const;
  inline void set__expire_time(::google::protobuf::uint32 value);

  // optional uint32 _last_manual_refresh_time = 4;
  inline bool has__last_manual_refresh_time() const;
  inline void clear__last_manual_refresh_time();
  static const int kLastManualRefreshTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 _last_manual_refresh_time() const;
  inline void set__last_manual_refresh_time(::google::protobuf::uint32 value);

  // optional uint32 _today_times = 5;
  inline bool has__today_times() const;
  inline void clear__today_times();
  static const int kTodayTimesFieldNumber = 5;
  inline ::google::protobuf::uint32 _today_times() const;
  inline void set__today_times(::google::protobuf::uint32 value);

  // repeated .client_baseserver.goods _current_goods = 6;
  inline int _current_goods_size() const;
  inline void clear__current_goods();
  static const int kCurrentGoodsFieldNumber = 6;
  inline const ::client_baseserver::goods& _current_goods(int index) const;
  inline ::client_baseserver::goods* mutable__current_goods(int index);
  inline ::client_baseserver::goods* add__current_goods();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::goods >&
      _current_goods() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::goods >*
      mutable__current_goods();

  // @@protoc_insertion_point(class_scope:client_baseserver.user_shop)
 private:
  inline void set_has__id();
  inline void clear_has__id();
  inline void set_has__last_auto_refresh_time();
  inline void clear_has__last_auto_refresh_time();
  inline void set_has__expire_time();
  inline void clear_has__expire_time();
  inline void set_has__last_manual_refresh_time();
  inline void clear_has__last_manual_refresh_time();
  inline void set_has__today_times();
  inline void clear_has__today_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _id_;
  ::google::protobuf::uint32 _last_auto_refresh_time_;
  ::google::protobuf::uint32 _expire_time_;
  ::google::protobuf::uint32 _last_manual_refresh_time_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::goods > _current_goods_;
  ::google::protobuf::uint32 _today_times_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static user_shop* default_instance_;
};
// -------------------------------------------------------------------

class star_shop : public ::google::protobuf::Message {
 public:
  star_shop();
  virtual ~star_shop();

  star_shop(const star_shop& from);

  inline star_shop& operator=(const star_shop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const star_shop& default_instance();

  void Swap(star_shop* other);

  // implements Message ----------------------------------------------

  star_shop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const star_shop& from);
  void MergeFrom(const star_shop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _id = 1;
  inline bool has__id() const;
  inline void clear__id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 _id() const;
  inline void set__id(::google::protobuf::uint32 value);

  // optional uint32 _expire_time = 2;
  inline bool has__expire_time() const;
  inline void clear__expire_time();
  static const int kExpireTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 _expire_time() const;
  inline void set__expire_time(::google::protobuf::uint32 value);

  // repeated .client_baseserver.star_goods _star_goods = 3;
  inline int _star_goods_size() const;
  inline void clear__star_goods();
  static const int kStarGoodsFieldNumber = 3;
  inline const ::client_baseserver::star_goods& _star_goods(int index) const;
  inline ::client_baseserver::star_goods* mutable__star_goods(int index);
  inline ::client_baseserver::star_goods* add__star_goods();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::star_goods >&
      _star_goods() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::star_goods >*
      mutable__star_goods();

  // @@protoc_insertion_point(class_scope:client_baseserver.star_shop)
 private:
  inline void set_has__id();
  inline void clear_has__id();
  inline void set_has__expire_time();
  inline void clear_has__expire_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _id_;
  ::google::protobuf::uint32 _expire_time_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::star_goods > _star_goods_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static star_shop* default_instance_;
};
// -------------------------------------------------------------------

class shop_consume_reply : public ::google::protobuf::Message {
 public:
  shop_consume_reply();
  virtual ~shop_consume_reply();

  shop_consume_reply(const shop_consume_reply& from);

  inline shop_consume_reply& operator=(const shop_consume_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const shop_consume_reply& default_instance();

  void Swap(shop_consume_reply* other);

  // implements Message ----------------------------------------------

  shop_consume_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const shop_consume_reply& from);
  void MergeFrom(const shop_consume_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1 [default = success];
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // @@protoc_insertion_point(class_scope:client_baseserver.shop_consume_reply)
 private:
  inline void set_has__result();
  inline void clear_has__result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static shop_consume_reply* default_instance_;
};
// -------------------------------------------------------------------

class skill_levelup_reply : public ::google::protobuf::Message {
 public:
  skill_levelup_reply();
  virtual ~skill_levelup_reply();

  skill_levelup_reply(const skill_levelup_reply& from);

  inline skill_levelup_reply& operator=(const skill_levelup_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const skill_levelup_reply& default_instance();

  void Swap(skill_levelup_reply* other);

  // implements Message ----------------------------------------------

  skill_levelup_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const skill_levelup_reply& from);
  void MergeFrom(const skill_levelup_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1 [default = fail];
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // required uint32 _gs = 2;
  inline bool has__gs() const;
  inline void clear__gs();
  static const int kGsFieldNumber = 2;
  inline ::google::protobuf::uint32 _gs() const;
  inline void set__gs(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.skill_levelup_reply)
 private:
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__gs();
  inline void clear_has__gs();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  ::google::protobuf::uint32 _gs_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static skill_levelup_reply* default_instance_;
};
// -------------------------------------------------------------------

class sell_item_reply : public ::google::protobuf::Message {
 public:
  sell_item_reply();
  virtual ~sell_item_reply();

  sell_item_reply(const sell_item_reply& from);

  inline sell_item_reply& operator=(const sell_item_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const sell_item_reply& default_instance();

  void Swap(sell_item_reply* other);

  // implements Message ----------------------------------------------

  sell_item_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const sell_item_reply& from);
  void MergeFrom(const sell_item_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1 [default = success];
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // @@protoc_insertion_point(class_scope:client_baseserver.sell_item_reply)
 private:
  inline void set_has__result();
  inline void clear_has__result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static sell_item_reply* default_instance_;
};
// -------------------------------------------------------------------

class fragment_compose_reply : public ::google::protobuf::Message {
 public:
  fragment_compose_reply();
  virtual ~fragment_compose_reply();

  fragment_compose_reply(const fragment_compose_reply& from);

  inline fragment_compose_reply& operator=(const fragment_compose_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const fragment_compose_reply& default_instance();

  void Swap(fragment_compose_reply* other);

  // implements Message ----------------------------------------------

  fragment_compose_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const fragment_compose_reply& from);
  void MergeFrom(const fragment_compose_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1 [default = fail];
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // @@protoc_insertion_point(class_scope:client_baseserver.fragment_compose_reply)
 private:
  inline void set_has__result();
  inline void clear_has__result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static fragment_compose_reply* default_instance_;
};
// -------------------------------------------------------------------

class hero_equip_upgrade_reply : public ::google::protobuf::Message {
 public:
  hero_equip_upgrade_reply();
  virtual ~hero_equip_upgrade_reply();

  hero_equip_upgrade_reply(const hero_equip_upgrade_reply& from);

  inline hero_equip_upgrade_reply& operator=(const hero_equip_upgrade_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const hero_equip_upgrade_reply& default_instance();

  void Swap(hero_equip_upgrade_reply* other);

  // implements Message ----------------------------------------------

  hero_equip_upgrade_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const hero_equip_upgrade_reply& from);
  void MergeFrom(const hero_equip_upgrade_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1 [default = fail];
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // optional .client_baseserver.hero _hero = 2;
  inline bool has__hero() const;
  inline void clear__hero();
  static const int kHeroFieldNumber = 2;
  inline const ::client_baseserver::hero& _hero() const;
  inline ::client_baseserver::hero* mutable__hero();
  inline ::client_baseserver::hero* release__hero();
  inline void set_allocated__hero(::client_baseserver::hero* _hero);

  // @@protoc_insertion_point(class_scope:client_baseserver.hero_equip_upgrade_reply)
 private:
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__hero();
  inline void clear_has__hero();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::hero* _hero_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static hero_equip_upgrade_reply* default_instance_;
};
// -------------------------------------------------------------------

class tutorial_reply : public ::google::protobuf::Message {
 public:
  tutorial_reply();
  virtual ~tutorial_reply();

  tutorial_reply(const tutorial_reply& from);

  inline tutorial_reply& operator=(const tutorial_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tutorial_reply& default_instance();

  void Swap(tutorial_reply* other);

  // implements Message ----------------------------------------------

  tutorial_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tutorial_reply& from);
  void MergeFrom(const tutorial_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1 [default = success];
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // @@protoc_insertion_point(class_scope:client_baseserver.tutorial_reply)
 private:
  inline void set_has__result();
  inline void clear_has__result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static tutorial_reply* default_instance_;
};
// -------------------------------------------------------------------

class error_info : public ::google::protobuf::Message {
 public:
  error_info();
  virtual ~error_info();

  error_info(const error_info& from);

  inline error_info& operator=(const error_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const error_info& default_instance();

  void Swap(error_info* other);

  // implements Message ----------------------------------------------

  error_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const error_info& from);
  void MergeFrom(const error_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef error_info_exit exit;
  static const exit noneed = error_info_exit_noneed;
  static const exit force = error_info_exit_force;
  static inline bool exit_IsValid(int value) {
    return error_info_exit_IsValid(value);
  }
  static const exit exit_MIN =
    error_info_exit_exit_MIN;
  static const exit exit_MAX =
    error_info_exit_exit_MAX;
  static const int exit_ARRAYSIZE =
    error_info_exit_exit_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  exit_descriptor() {
    return error_info_exit_descriptor();
  }
  static inline const ::std::string& exit_Name(exit value) {
    return error_info_exit_Name(value);
  }
  static inline bool exit_Parse(const ::std::string& name,
      exit* value) {
    return error_info_exit_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string _info = 1;
  inline bool has__info() const;
  inline void clear__info();
  static const int kInfoFieldNumber = 1;
  inline const ::std::string& _info() const;
  inline void set__info(const ::std::string& value);
  inline void set__info(const char* value);
  inline void set__info(const char* value, size_t size);
  inline ::std::string* mutable__info();
  inline ::std::string* release__info();
  inline void set_allocated__info(::std::string* _info);

  // optional .client_baseserver.error_info.exit _exit = 2 [default = noneed];
  inline bool has__exit() const;
  inline void clear__exit();
  static const int kExitFieldNumber = 2;
  inline ::client_baseserver::error_info_exit _exit() const;
  inline void set__exit(::client_baseserver::error_info_exit value);

  // @@protoc_insertion_point(class_scope:client_baseserver.error_info)
 private:
  inline void set_has__info();
  inline void clear_has__info();
  inline void set_has__exit();
  inline void clear_has__exit();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* _info_;
  int _exit_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static error_info* default_instance_;
};
// -------------------------------------------------------------------

class goods : public ::google::protobuf::Message {
 public:
  goods();
  virtual ~goods();

  goods(const goods& from);

  inline goods& operator=(const goods& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const goods& default_instance();

  void Swap(goods* other);

  // implements Message ----------------------------------------------

  goods* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const goods& from);
  void MergeFrom(const goods& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef goods_price_type price_type;
  static const price_type gold = goods_price_type_gold;
  static const price_type diamond = goods_price_type_diamond;
  static const price_type crusadepoint = goods_price_type_crusadepoint;
  static const price_type arenapoint = goods_price_type_arenapoint;
  static const price_type guildpoint = goods_price_type_guildpoint;
  static inline bool price_type_IsValid(int value) {
    return goods_price_type_IsValid(value);
  }
  static const price_type price_type_MIN =
    goods_price_type_price_type_MIN;
  static const price_type price_type_MAX =
    goods_price_type_price_type_MAX;
  static const int price_type_ARRAYSIZE =
    goods_price_type_price_type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  price_type_descriptor() {
    return goods_price_type_descriptor();
  }
  static inline const ::std::string& price_type_Name(price_type value) {
    return goods_price_type_Name(value);
  }
  static inline bool price_type_Parse(const ::std::string& name,
      price_type* value) {
    return goods_price_type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint32 _id = 1;
  inline bool has__id() const;
  inline void clear__id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 _id() const;
  inline void set__id(::google::protobuf::uint32 value);

  // required uint32 _amount = 2;
  inline bool has__amount() const;
  inline void clear__amount();
  static const int kAmountFieldNumber = 2;
  inline ::google::protobuf::uint32 _amount() const;
  inline void set__amount(::google::protobuf::uint32 value);

  // required .client_baseserver.goods.price_type _type = 3;
  inline bool has__type() const;
  inline void clear__type();
  static const int kTypeFieldNumber = 3;
  inline ::client_baseserver::goods_price_type _type() const;
  inline void set__type(::client_baseserver::goods_price_type value);

  // required uint32 _price = 4;
  inline bool has__price() const;
  inline void clear__price();
  static const int kPriceFieldNumber = 4;
  inline ::google::protobuf::uint32 _price() const;
  inline void set__price(::google::protobuf::uint32 value);

  // required uint32 _is_sale = 5;
  inline bool has__is_sale() const;
  inline void clear__is_sale();
  static const int kIsSaleFieldNumber = 5;
  inline ::google::protobuf::uint32 _is_sale() const;
  inline void set__is_sale(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.goods)
 private:
  inline void set_has__id();
  inline void clear_has__id();
  inline void set_has__amount();
  inline void clear_has__amount();
  inline void set_has__type();
  inline void clear_has__type();
  inline void set_has__price();
  inline void clear_has__price();
  inline void set_has__is_sale();
  inline void clear_has__is_sale();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _id_;
  ::google::protobuf::uint32 _amount_;
  int _type_;
  ::google::protobuf::uint32 _price_;
  ::google::protobuf::uint32 _is_sale_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static goods* default_instance_;
};
// -------------------------------------------------------------------

class star_goods : public ::google::protobuf::Message {
 public:
  star_goods();
  virtual ~star_goods();

  star_goods(const star_goods& from);

  inline star_goods& operator=(const star_goods& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const star_goods& default_instance();

  void Swap(star_goods* other);

  // implements Message ----------------------------------------------

  star_goods* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const star_goods& from);
  void MergeFrom(const star_goods& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef star_goods_box_type box_type;
  static const box_type stone_green = star_goods_box_type_stone_green;
  static const box_type stone_blue = star_goods_box_type_stone_blue;
  static const box_type stone_purple = star_goods_box_type_stone_purple;
  static inline bool box_type_IsValid(int value) {
    return star_goods_box_type_IsValid(value);
  }
  static const box_type box_type_MIN =
    star_goods_box_type_box_type_MIN;
  static const box_type box_type_MAX =
    star_goods_box_type_box_type_MAX;
  static const int box_type_ARRAYSIZE =
    star_goods_box_type_box_type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  box_type_descriptor() {
    return star_goods_box_type_descriptor();
  }
  static inline const ::std::string& box_type_Name(box_type value) {
    return star_goods_box_type_Name(value);
  }
  static inline bool box_type_Parse(const ::std::string& name,
      box_type* value) {
    return star_goods_box_type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .client_baseserver.star_goods.box_type _type = 1;
  inline bool has__type() const;
  inline void clear__type();
  static const int kTypeFieldNumber = 1;
  inline ::client_baseserver::star_goods_box_type _type() const;
  inline void set__type(::client_baseserver::star_goods_box_type value);

  // required uint32 _amount = 2 [default = 1];
  inline bool has__amount() const;
  inline void clear__amount();
  static const int kAmountFieldNumber = 2;
  inline ::google::protobuf::uint32 _amount() const;
  inline void set__amount(::google::protobuf::uint32 value);

  // required uint32 _stone_id = 3;
  inline bool has__stone_id() const;
  inline void clear__stone_id();
  static const int kStoneIdFieldNumber = 3;
  inline ::google::protobuf::uint32 _stone_id() const;
  inline void set__stone_id(::google::protobuf::uint32 value);

  // required uint32 _stone_amount = 4;
  inline bool has__stone_amount() const;
  inline void clear__stone_amount();
  static const int kStoneAmountFieldNumber = 4;
  inline ::google::protobuf::uint32 _stone_amount() const;
  inline void set__stone_amount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.star_goods)
 private:
  inline void set_has__type();
  inline void clear_has__type();
  inline void set_has__amount();
  inline void clear_has__amount();
  inline void set_has__stone_id();
  inline void clear_has__stone_id();
  inline void set_has__stone_amount();
  inline void clear_has__stone_amount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _type_;
  ::google::protobuf::uint32 _amount_;
  ::google::protobuf::uint32 _stone_id_;
  ::google::protobuf::uint32 _stone_amount_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static star_goods* default_instance_;
};
// -------------------------------------------------------------------

class user : public ::google::protobuf::Message {
 public:
  user();
  virtual ~user();

  user(const user& from);

  inline user& operator=(const user& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const user& default_instance();

  void Swap(user* other);

  // implements Message ----------------------------------------------

  user* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const user& from);
  void MergeFrom(const user& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _userid = 1;
  inline bool has__userid() const;
  inline void clear__userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 _userid() const;
  inline void set__userid(::google::protobuf::uint32 value);

  // required .client_baseserver.name_card _name_card = 2;
  inline bool has__name_card() const;
  inline void clear__name_card();
  static const int kNameCardFieldNumber = 2;
  inline const ::client_baseserver::name_card& _name_card() const;
  inline ::client_baseserver::name_card* mutable__name_card();
  inline ::client_baseserver::name_card* release__name_card();
  inline void set_allocated__name_card(::client_baseserver::name_card* _name_card);

  // required uint32 _level = 3;
  inline bool has__level() const;
  inline void clear__level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 _level() const;
  inline void set__level(::google::protobuf::uint32 value);

  // required uint32 _recharge_sum = 4;
  inline bool has__recharge_sum() const;
  inline void clear__recharge_sum();
  static const int kRechargeSumFieldNumber = 4;
  inline ::google::protobuf::uint32 _recharge_sum() const;
  inline void set__recharge_sum(::google::protobuf::uint32 value);

  // required uint32 _exp = 5;
  inline bool has__exp() const;
  inline void clear__exp();
  static const int kExpFieldNumber = 5;
  inline ::google::protobuf::uint32 _exp() const;
  inline void set__exp(::google::protobuf::uint32 value);

  // required uint32 _money = 6;
  inline bool has__money() const;
  inline void clear__money();
  static const int kMoneyFieldNumber = 6;
  inline ::google::protobuf::uint32 _money() const;
  inline void set__money(::google::protobuf::uint32 value);

  // required uint32 _rmb = 7;
  inline bool has__rmb() const;
  inline void clear__rmb();
  static const int kRmbFieldNumber = 7;
  inline ::google::protobuf::uint32 _rmb() const;
  inline void set__rmb(::google::protobuf::uint32 value);

  // required .client_baseserver.vitality _vitality = 8;
  inline bool has__vitality() const;
  inline void clear__vitality();
  static const int kVitalityFieldNumber = 8;
  inline const ::client_baseserver::vitality& _vitality() const;
  inline ::client_baseserver::vitality* mutable__vitality();
  inline ::client_baseserver::vitality* release__vitality();
  inline void set_allocated__vitality(::client_baseserver::vitality* _vitality);

  // repeated .client_baseserver.hero _heroes = 10;
  inline int _heroes_size() const;
  inline void clear__heroes();
  static const int kHeroesFieldNumber = 10;
  inline const ::client_baseserver::hero& _heroes(int index) const;
  inline ::client_baseserver::hero* mutable__heroes(int index);
  inline ::client_baseserver::hero* add__heroes();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >&
      _heroes() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >*
      mutable__heroes();

  // repeated uint32 _items = 11;
  inline int _items_size() const;
  inline void clear__items();
  static const int kItemsFieldNumber = 11;
  inline ::google::protobuf::uint32 _items(int index) const;
  inline void set__items(int index, ::google::protobuf::uint32 value);
  inline void add__items(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _items() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__items();

  // required .client_baseserver.skilllevelup _skill_level_up = 12;
  inline bool has__skill_level_up() const;
  inline void clear__skill_level_up();
  static const int kSkillLevelUpFieldNumber = 12;
  inline const ::client_baseserver::skilllevelup& _skill_level_up() const;
  inline ::client_baseserver::skilllevelup* mutable__skill_level_up();
  inline ::client_baseserver::skilllevelup* release__skill_level_up();
  inline void set_allocated__skill_level_up(::client_baseserver::skilllevelup* _skill_level_up);

  // required .client_baseserver.userstage _userstage = 15;
  inline bool has__userstage() const;
  inline void clear__userstage();
  static const int kUserstageFieldNumber = 15;
  inline const ::client_baseserver::userstage& _userstage() const;
  inline ::client_baseserver::userstage* mutable__userstage();
  inline ::client_baseserver::userstage* release__userstage();
  inline void set_allocated__userstage(::client_baseserver::userstage* _userstage);

  // repeated .client_baseserver.user_shop _shop = 16;
  inline int _shop_size() const;
  inline void clear__shop();
  static const int kShopFieldNumber = 16;
  inline const ::client_baseserver::user_shop& _shop(int index) const;
  inline ::client_baseserver::user_shop* mutable__shop(int index);
  inline ::client_baseserver::user_shop* add__shop();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::user_shop >&
      _shop() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::user_shop >*
      mutable__shop();

  // repeated uint32 _tutorial = 17;
  inline int _tutorial_size() const;
  inline void clear__tutorial();
  static const int kTutorialFieldNumber = 17;
  inline ::google::protobuf::uint32 _tutorial(int index) const;
  inline void set__tutorial(int index, ::google::protobuf::uint32 value);
  inline void add__tutorial(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _tutorial() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__tutorial();

  // repeated .client_baseserver.usertask _task = 18;
  inline int _task_size() const;
  inline void clear__task();
  static const int kTaskFieldNumber = 18;
  inline const ::client_baseserver::usertask& _task(int index) const;
  inline ::client_baseserver::usertask* mutable__task(int index);
  inline ::client_baseserver::usertask* add__task();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::usertask >&
      _task() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::usertask >*
      mutable__task();

  // repeated uint32 _task_finished = 19;
  inline int _task_finished_size() const;
  inline void clear__task_finished();
  static const int kTaskFinishedFieldNumber = 19;
  inline ::google::protobuf::uint32 _task_finished(int index) const;
  inline void set__task_finished(int index, ::google::protobuf::uint32 value);
  inline void add__task_finished(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _task_finished() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__task_finished();

  // optional uint32 _last_login = 20;
  inline bool has__last_login() const;
  inline void clear__last_login();
  static const int kLastLoginFieldNumber = 20;
  inline ::google::protobuf::uint32 _last_login() const;
  inline void set__last_login(::google::protobuf::uint32 value);

  // repeated .client_baseserver.dailyjob _dailyjob = 21;
  inline int _dailyjob_size() const;
  inline void clear__dailyjob();
  static const int kDailyjobFieldNumber = 21;
  inline const ::client_baseserver::dailyjob& _dailyjob(int index) const;
  inline ::client_baseserver::dailyjob* mutable__dailyjob(int index);
  inline ::client_baseserver::dailyjob* add__dailyjob();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::dailyjob >&
      _dailyjob() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::dailyjob >*
      mutable__dailyjob();

  // repeated .client_baseserver.tavern_record _tavern_record = 22;
  inline int _tavern_record_size() const;
  inline void clear__tavern_record();
  static const int kTavernRecordFieldNumber = 22;
  inline const ::client_baseserver::tavern_record& _tavern_record(int index) const;
  inline ::client_baseserver::tavern_record* mutable__tavern_record(int index);
  inline ::client_baseserver::tavern_record* add__tavern_record();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::tavern_record >&
      _tavern_record() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::tavern_record >*
      mutable__tavern_record();

  // required .client_baseserver.usermidas _usermidas = 23;
  inline bool has__usermidas() const;
  inline void clear__usermidas();
  static const int kUsermidasFieldNumber = 23;
  inline const ::client_baseserver::usermidas& _usermidas() const;
  inline ::client_baseserver::usermidas* mutable__usermidas();
  inline ::client_baseserver::usermidas* release__usermidas();
  inline void set_allocated__usermidas(::client_baseserver::usermidas* _usermidas);

  // required .client_baseserver.daily_login _daily_login = 24;
  inline bool has__daily_login() const;
  inline void clear__daily_login();
  static const int kDailyLoginFieldNumber = 24;
  inline const ::client_baseserver::daily_login& _daily_login() const;
  inline ::client_baseserver::daily_login* mutable__daily_login();
  inline ::client_baseserver::daily_login* release__daily_login();
  inline void set_allocated__daily_login(::client_baseserver::daily_login* _daily_login);

  // repeated uint32 _recharge_limit = 25;
  inline int _recharge_limit_size() const;
  inline void clear__recharge_limit();
  static const int kRechargeLimitFieldNumber = 25;
  inline ::google::protobuf::uint32 _recharge_limit(int index) const;
  inline void set__recharge_limit(int index, ::google::protobuf::uint32 value);
  inline void add__recharge_limit(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _recharge_limit() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__recharge_limit();

  // repeated uint32 _vip_gifts_draw = 26;
  inline int _vip_gifts_draw_size() const;
  inline void clear__vip_gifts_draw();
  static const int kVipGiftsDrawFieldNumber = 26;
  inline ::google::protobuf::uint32 _vip_gifts_draw(int index) const;
  inline void set__vip_gifts_draw(int index, ::google::protobuf::uint32 value);
  inline void add__vip_gifts_draw(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _vip_gifts_draw() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__vip_gifts_draw();

  // repeated .client_baseserver.user_point _points = 27;
  inline int _points_size() const;
  inline void clear__points();
  static const int kPointsFieldNumber = 27;
  inline const ::client_baseserver::user_point& _points(int index) const;
  inline ::client_baseserver::user_point* mutable__points(int index);
  inline ::client_baseserver::user_point* add__points();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::user_point >&
      _points() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::user_point >*
      mutable__points();

  // repeated .client_baseserver.monthcard _month_card = 28;
  inline int _month_card_size() const;
  inline void clear__month_card();
  static const int kMonthCardFieldNumber = 28;
  inline const ::client_baseserver::monthcard& _month_card(int index) const;
  inline ::client_baseserver::monthcard* mutable__month_card(int index);
  inline ::client_baseserver::monthcard* add__month_card();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::monthcard >&
      _month_card() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::monthcard >*
      mutable__month_card();

  // required .client_baseserver.user_guild _user_guild = 29;
  inline bool has__user_guild() const;
  inline void clear__user_guild();
  static const int kUserGuildFieldNumber = 29;
  inline const ::client_baseserver::user_guild& _user_guild() const;
  inline ::client_baseserver::user_guild* mutable__user_guild();
  inline ::client_baseserver::user_guild* release__user_guild();
  inline void set_allocated__user_guild(::client_baseserver::user_guild* _user_guild);

  // required .client_baseserver.chat _chat = 30;
  inline bool has__chat() const;
  inline void clear__chat();
  static const int kChatFieldNumber = 30;
  inline const ::client_baseserver::chat& _chat() const;
  inline ::client_baseserver::chat* mutable__chat();
  inline ::client_baseserver::chat* release__chat();
  inline void set_allocated__chat(::client_baseserver::chat* _chat);

  // optional .client_baseserver.star_shop _sshop = 31;
  inline bool has__sshop() const;
  inline void clear__sshop();
  static const int kSshopFieldNumber = 31;
  inline const ::client_baseserver::star_shop& _sshop() const;
  inline ::client_baseserver::star_shop* mutable__sshop();
  inline ::client_baseserver::star_shop* release__sshop();
  inline void set_allocated__sshop(::client_baseserver::star_shop* _sshop);

  // optional uint32 _facebook_follow = 32;
  inline bool has__facebook_follow() const;
  inline void clear__facebook_follow();
  static const int kFacebookFollowFieldNumber = 32;
  inline ::google::protobuf::uint32 _facebook_follow() const;
  inline void set__facebook_follow(::google::protobuf::uint32 value);

  // optional string _praise = 33;
  inline bool has__praise() const;
  inline void clear__praise();
  static const int kPraiseFieldNumber = 33;
  inline const ::std::string& _praise() const;
  inline void set__praise(const ::std::string& value);
  inline void set__praise(const char* value);
  inline void set__praise(const char* value, size_t size);
  inline ::std::string* mutable__praise();
  inline ::std::string* release__praise();
  inline void set_allocated__praise(::std::string* _praise);

  // optional uint32 _sessionid = 34;
  inline bool has__sessionid() const;
  inline void clear__sessionid();
  static const int kSessionidFieldNumber = 34;
  inline ::google::protobuf::uint32 _sessionid() const;
  inline void set__sessionid(::google::protobuf::uint32 value);

  // optional .client_baseserver.vitality _shadow_runes = 35;
  inline bool has__shadow_runes() const;
  inline void clear__shadow_runes();
  static const int kShadowRunesFieldNumber = 35;
  inline const ::client_baseserver::vitality& _shadow_runes() const;
  inline ::client_baseserver::vitality* mutable__shadow_runes();
  inline ::client_baseserver::vitality* release__shadow_runes();
  inline void set_allocated__shadow_runes(::client_baseserver::vitality* _shadow_runes);

  // @@protoc_insertion_point(class_scope:client_baseserver.user)
 private:
  inline void set_has__userid();
  inline void clear_has__userid();
  inline void set_has__name_card();
  inline void clear_has__name_card();
  inline void set_has__level();
  inline void clear_has__level();
  inline void set_has__recharge_sum();
  inline void clear_has__recharge_sum();
  inline void set_has__exp();
  inline void clear_has__exp();
  inline void set_has__money();
  inline void clear_has__money();
  inline void set_has__rmb();
  inline void clear_has__rmb();
  inline void set_has__vitality();
  inline void clear_has__vitality();
  inline void set_has__skill_level_up();
  inline void clear_has__skill_level_up();
  inline void set_has__userstage();
  inline void clear_has__userstage();
  inline void set_has__last_login();
  inline void clear_has__last_login();
  inline void set_has__usermidas();
  inline void clear_has__usermidas();
  inline void set_has__daily_login();
  inline void clear_has__daily_login();
  inline void set_has__user_guild();
  inline void clear_has__user_guild();
  inline void set_has__chat();
  inline void clear_has__chat();
  inline void set_has__sshop();
  inline void clear_has__sshop();
  inline void set_has__facebook_follow();
  inline void clear_has__facebook_follow();
  inline void set_has__praise();
  inline void clear_has__praise();
  inline void set_has__sessionid();
  inline void clear_has__sessionid();
  inline void set_has__shadow_runes();
  inline void clear_has__shadow_runes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::name_card* _name_card_;
  ::google::protobuf::uint32 _userid_;
  ::google::protobuf::uint32 _level_;
  ::google::protobuf::uint32 _recharge_sum_;
  ::google::protobuf::uint32 _exp_;
  ::google::protobuf::uint32 _money_;
  ::google::protobuf::uint32 _rmb_;
  ::client_baseserver::vitality* _vitality_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero > _heroes_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _items_;
  ::client_baseserver::skilllevelup* _skill_level_up_;
  ::client_baseserver::userstage* _userstage_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::user_shop > _shop_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _tutorial_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::usertask > _task_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _task_finished_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::dailyjob > _dailyjob_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::tavern_record > _tavern_record_;
  ::client_baseserver::usermidas* _usermidas_;
  ::client_baseserver::daily_login* _daily_login_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _recharge_limit_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _vip_gifts_draw_;
  ::google::protobuf::uint32 _last_login_;
  ::google::protobuf::uint32 _facebook_follow_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::user_point > _points_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::monthcard > _month_card_;
  ::client_baseserver::user_guild* _user_guild_;
  ::client_baseserver::chat* _chat_;
  ::client_baseserver::star_shop* _sshop_;
  ::std::string* _praise_;
  ::client_baseserver::vitality* _shadow_runes_;
  ::google::protobuf::uint32 _sessionid_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static user* default_instance_;
};
// -------------------------------------------------------------------

class user_summary : public ::google::protobuf::Message {
 public:
  user_summary();
  virtual ~user_summary();

  user_summary(const user_summary& from);

  inline user_summary& operator=(const user_summary& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const user_summary& default_instance();

  void Swap(user_summary* other);

  // implements Message ----------------------------------------------

  user_summary* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const user_summary& from);
  void MergeFrom(const user_summary& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _avatar = 1;
  inline bool has__avatar() const;
  inline void clear__avatar();
  static const int kAvatarFieldNumber = 1;
  inline ::google::protobuf::uint32 _avatar() const;
  inline void set__avatar(::google::protobuf::uint32 value);

  // required string _name = 2;
  inline bool has__name() const;
  inline void clear__name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& _name() const;
  inline void set__name(const ::std::string& value);
  inline void set__name(const char* value);
  inline void set__name(const char* value, size_t size);
  inline ::std::string* mutable__name();
  inline ::std::string* release__name();
  inline void set_allocated__name(::std::string* _name);

  // required uint32 _vip = 3;
  inline bool has__vip() const;
  inline void clear__vip();
  static const int kVipFieldNumber = 3;
  inline ::google::protobuf::uint32 _vip() const;
  inline void set__vip(::google::protobuf::uint32 value);

  // required uint32 _level = 4;
  inline bool has__level() const;
  inline void clear__level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 _level() const;
  inline void set__level(::google::protobuf::uint32 value);

  // optional string _guild_name = 5;
  inline bool has__guild_name() const;
  inline void clear__guild_name();
  static const int kGuildNameFieldNumber = 5;
  inline const ::std::string& _guild_name() const;
  inline void set__guild_name(const ::std::string& value);
  inline void set__guild_name(const char* value);
  inline void set__guild_name(const char* value, size_t size);
  inline ::std::string* mutable__guild_name();
  inline ::std::string* release__guild_name();
  inline void set_allocated__guild_name(::std::string* _guild_name);

  // optional uint32 _user_id = 6;
  inline bool has__user_id() const;
  inline void clear__user_id();
  static const int kUserIdFieldNumber = 6;
  inline ::google::protobuf::uint32 _user_id() const;
  inline void set__user_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.user_summary)
 private:
  inline void set_has__avatar();
  inline void clear_has__avatar();
  inline void set_has__name();
  inline void clear_has__name();
  inline void set_has__vip();
  inline void clear_has__vip();
  inline void set_has__level();
  inline void clear_has__level();
  inline void set_has__guild_name();
  inline void clear_has__guild_name();
  inline void set_has__user_id();
  inline void clear_has__user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* _name_;
  ::google::protobuf::uint32 _avatar_;
  ::google::protobuf::uint32 _vip_;
  ::std::string* _guild_name_;
  ::google::protobuf::uint32 _level_;
  ::google::protobuf::uint32 _user_id_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static user_summary* default_instance_;
};
// -------------------------------------------------------------------

class name_card : public ::google::protobuf::Message {
 public:
  name_card();
  virtual ~name_card();

  name_card(const name_card& from);

  inline name_card& operator=(const name_card& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const name_card& default_instance();

  void Swap(name_card* other);

  // implements Message ----------------------------------------------

  name_card* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const name_card& from);
  void MergeFrom(const name_card& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string _name = 1;
  inline bool has__name() const;
  inline void clear__name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& _name() const;
  inline void set__name(const ::std::string& value);
  inline void set__name(const char* value);
  inline void set__name(const char* value, size_t size);
  inline ::std::string* mutable__name();
  inline ::std::string* release__name();
  inline void set_allocated__name(::std::string* _name);

  // required uint32 _last_set_name_time = 2;
  inline bool has__last_set_name_time() const;
  inline void clear__last_set_name_time();
  static const int kLastSetNameTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 _last_set_name_time() const;
  inline void set__last_set_name_time(::google::protobuf::uint32 value);

  // required uint32 _avatar = 3;
  inline bool has__avatar() const;
  inline void clear__avatar();
  static const int kAvatarFieldNumber = 3;
  inline ::google::protobuf::uint32 _avatar() const;
  inline void set__avatar(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.name_card)
 private:
  inline void set_has__name();
  inline void clear_has__name();
  inline void set_has__last_set_name_time();
  inline void clear_has__last_set_name_time();
  inline void set_has__avatar();
  inline void clear_has__avatar();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* _name_;
  ::google::protobuf::uint32 _last_set_name_time_;
  ::google::protobuf::uint32 _avatar_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static name_card* default_instance_;
};
// -------------------------------------------------------------------

class daily_login : public ::google::protobuf::Message {
 public:
  daily_login();
  virtual ~daily_login();

  daily_login(const daily_login& from);

  inline daily_login& operator=(const daily_login& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const daily_login& default_instance();

  void Swap(daily_login* other);

  // implements Message ----------------------------------------------

  daily_login* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const daily_login& from);
  void MergeFrom(const daily_login& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef daily_login_dailylogin_status dailylogin_status;
  static const dailylogin_status all = daily_login_dailylogin_status_all;
  static const dailylogin_status part = daily_login_dailylogin_status_part;
  static const dailylogin_status nothing = daily_login_dailylogin_status_nothing;
  static inline bool dailylogin_status_IsValid(int value) {
    return daily_login_dailylogin_status_IsValid(value);
  }
  static const dailylogin_status dailylogin_status_MIN =
    daily_login_dailylogin_status_dailylogin_status_MIN;
  static const dailylogin_status dailylogin_status_MAX =
    daily_login_dailylogin_status_dailylogin_status_MAX;
  static const int dailylogin_status_ARRAYSIZE =
    daily_login_dailylogin_status_dailylogin_status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  dailylogin_status_descriptor() {
    return daily_login_dailylogin_status_descriptor();
  }
  static inline const ::std::string& dailylogin_status_Name(dailylogin_status value) {
    return daily_login_dailylogin_status_Name(value);
  }
  static inline bool dailylogin_status_Parse(const ::std::string& name,
      dailylogin_status* value) {
    return daily_login_dailylogin_status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .client_baseserver.daily_login.dailylogin_status _status = 1;
  inline bool has__status() const;
  inline void clear__status();
  static const int kStatusFieldNumber = 1;
  inline ::client_baseserver::daily_login_dailylogin_status _status() const;
  inline void set__status(::client_baseserver::daily_login_dailylogin_status value);

  // required uint32 _frequency = 2;
  inline bool has__frequency() const;
  inline void clear__frequency();
  static const int kFrequencyFieldNumber = 2;
  inline ::google::protobuf::uint32 _frequency() const;
  inline void set__frequency(::google::protobuf::uint32 value);

  // required uint32 _last_login_date = 3;
  inline bool has__last_login_date() const;
  inline void clear__last_login_date();
  static const int kLastLoginDateFieldNumber = 3;
  inline ::google::protobuf::uint32 _last_login_date() const;
  inline void set__last_login_date(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.daily_login)
 private:
  inline void set_has__status();
  inline void clear_has__status();
  inline void set_has__frequency();
  inline void clear_has__frequency();
  inline void set_has__last_login_date();
  inline void clear_has__last_login_date();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _status_;
  ::google::protobuf::uint32 _frequency_;
  ::google::protobuf::uint32 _last_login_date_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static daily_login* default_instance_;
};
// -------------------------------------------------------------------

class ask_daily_login_reply : public ::google::protobuf::Message {
 public:
  ask_daily_login_reply();
  virtual ~ask_daily_login_reply();

  ask_daily_login_reply(const ask_daily_login_reply& from);

  inline ask_daily_login_reply& operator=(const ask_daily_login_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ask_daily_login_reply& default_instance();

  void Swap(ask_daily_login_reply* other);

  // implements Message ----------------------------------------------

  ask_daily_login_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ask_daily_login_reply& from);
  void MergeFrom(const ask_daily_login_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // repeated uint32 _items = 2;
  inline int _items_size() const;
  inline void clear__items();
  static const int kItemsFieldNumber = 2;
  inline ::google::protobuf::uint32 _items(int index) const;
  inline void set__items(int index, ::google::protobuf::uint32 value);
  inline void add__items(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _items() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__items();

  // repeated .client_baseserver.hero _hero = 3;
  inline int _hero_size() const;
  inline void clear__hero();
  static const int kHeroFieldNumber = 3;
  inline const ::client_baseserver::hero& _hero(int index) const;
  inline ::client_baseserver::hero* mutable__hero(int index);
  inline ::client_baseserver::hero* add__hero();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >&
      _hero() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >*
      mutable__hero();

  // optional uint32 _diamond = 4;
  inline bool has__diamond() const;
  inline void clear__diamond();
  static const int kDiamondFieldNumber = 4;
  inline ::google::protobuf::uint32 _diamond() const;
  inline void set__diamond(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.ask_daily_login_reply)
 private:
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__diamond();
  inline void clear_has__diamond();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _items_;
  int _result_;
  ::google::protobuf::uint32 _diamond_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero > _hero_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static ask_daily_login_reply* default_instance_;
};
// -------------------------------------------------------------------

class hero_equip : public ::google::protobuf::Message {
 public:
  hero_equip();
  virtual ~hero_equip();

  hero_equip(const hero_equip& from);

  inline hero_equip& operator=(const hero_equip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const hero_equip& default_instance();

  void Swap(hero_equip* other);

  // implements Message ----------------------------------------------

  hero_equip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const hero_equip& from);
  void MergeFrom(const hero_equip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _index = 1;
  inline bool has__index() const;
  inline void clear__index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 _index() const;
  inline void set__index(::google::protobuf::uint32 value);

  // required uint32 _item_id = 2;
  inline bool has__item_id() const;
  inline void clear__item_id();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::uint32 _item_id() const;
  inline void set__item_id(::google::protobuf::uint32 value);

  // required uint32 _exp = 3;
  inline bool has__exp() const;
  inline void clear__exp();
  static const int kExpFieldNumber = 3;
  inline ::google::protobuf::uint32 _exp() const;
  inline void set__exp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.hero_equip)
 private:
  inline void set_has__index();
  inline void clear_has__index();
  inline void set_has__item_id();
  inline void clear_has__item_id();
  inline void set_has__exp();
  inline void clear_has__exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _index_;
  ::google::protobuf::uint32 _item_id_;
  ::google::protobuf::uint32 _exp_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static hero_equip* default_instance_;
};
// -------------------------------------------------------------------

class hero : public ::google::protobuf::Message {
 public:
  hero();
  virtual ~hero();

  hero(const hero& from);

  inline hero& operator=(const hero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const hero& default_instance();

  void Swap(hero* other);

  // implements Message ----------------------------------------------

  hero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const hero& from);
  void MergeFrom(const hero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _tid = 1;
  inline bool has__tid() const;
  inline void clear__tid();
  static const int kTidFieldNumber = 1;
  inline ::google::protobuf::uint32 _tid() const;
  inline void set__tid(::google::protobuf::uint32 value);

  // optional uint32 _rank = 2;
  inline bool has__rank() const;
  inline void clear__rank();
  static const int kRankFieldNumber = 2;
  inline ::google::protobuf::uint32 _rank() const;
  inline void set__rank(::google::protobuf::uint32 value);

  // required uint32 _level = 3;
  inline bool has__level() const;
  inline void clear__level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 _level() const;
  inline void set__level(::google::protobuf::uint32 value);

  // required uint32 _stars = 4;
  inline bool has__stars() const;
  inline void clear__stars();
  static const int kStarsFieldNumber = 4;
  inline ::google::protobuf::uint32 _stars() const;
  inline void set__stars(::google::protobuf::uint32 value);

  // required uint32 _exp = 5;
  inline bool has__exp() const;
  inline void clear__exp();
  static const int kExpFieldNumber = 5;
  inline ::google::protobuf::uint32 _exp() const;
  inline void set__exp(::google::protobuf::uint32 value);

  // required uint32 _gs = 6;
  inline bool has__gs() const;
  inline void clear__gs();
  static const int kGsFieldNumber = 6;
  inline ::google::protobuf::uint32 _gs() const;
  inline void set__gs(::google::protobuf::uint32 value);

  // required .client_baseserver.hero_status _state = 7;
  inline bool has__state() const;
  inline void clear__state();
  static const int kStateFieldNumber = 7;
  inline ::client_baseserver::hero_status _state() const;
  inline void set__state(::client_baseserver::hero_status value);

  // repeated uint32 _skill_levels = 8;
  inline int _skill_levels_size() const;
  inline void clear__skill_levels();
  static const int kSkillLevelsFieldNumber = 8;
  inline ::google::protobuf::uint32 _skill_levels(int index) const;
  inline void set__skill_levels(int index, ::google::protobuf::uint32 value);
  inline void add__skill_levels(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _skill_levels() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__skill_levels();

  // repeated .client_baseserver.hero_equip _items = 9;
  inline int _items_size() const;
  inline void clear__items();
  static const int kItemsFieldNumber = 9;
  inline const ::client_baseserver::hero_equip& _items(int index) const;
  inline ::client_baseserver::hero_equip* mutable__items(int index);
  inline ::client_baseserver::hero_equip* add__items();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero_equip >&
      _items() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero_equip >*
      mutable__items();

  // @@protoc_insertion_point(class_scope:client_baseserver.hero)
 private:
  inline void set_has__tid();
  inline void clear_has__tid();
  inline void set_has__rank();
  inline void clear_has__rank();
  inline void set_has__level();
  inline void clear_has__level();
  inline void set_has__stars();
  inline void clear_has__stars();
  inline void set_has__exp();
  inline void clear_has__exp();
  inline void set_has__gs();
  inline void clear_has__gs();
  inline void set_has__state();
  inline void clear_has__state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _tid_;
  ::google::protobuf::uint32 _rank_;
  ::google::protobuf::uint32 _level_;
  ::google::protobuf::uint32 _stars_;
  ::google::protobuf::uint32 _exp_;
  ::google::protobuf::uint32 _gs_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _skill_levels_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero_equip > _items_;
  int _state_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static hero* default_instance_;
};
// -------------------------------------------------------------------

class hero_summary : public ::google::protobuf::Message {
 public:
  hero_summary();
  virtual ~hero_summary();

  hero_summary(const hero_summary& from);

  inline hero_summary& operator=(const hero_summary& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const hero_summary& default_instance();

  void Swap(hero_summary* other);

  // implements Message ----------------------------------------------

  hero_summary* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const hero_summary& from);
  void MergeFrom(const hero_summary& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _tid = 1;
  inline bool has__tid() const;
  inline void clear__tid();
  static const int kTidFieldNumber = 1;
  inline ::google::protobuf::uint32 _tid() const;
  inline void set__tid(::google::protobuf::uint32 value);

  // optional uint32 _rank = 2;
  inline bool has__rank() const;
  inline void clear__rank();
  static const int kRankFieldNumber = 2;
  inline ::google::protobuf::uint32 _rank() const;
  inline void set__rank(::google::protobuf::uint32 value);

  // required uint32 _level = 3;
  inline bool has__level() const;
  inline void clear__level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 _level() const;
  inline void set__level(::google::protobuf::uint32 value);

  // required uint32 _stars = 4;
  inline bool has__stars() const;
  inline void clear__stars();
  static const int kStarsFieldNumber = 4;
  inline ::google::protobuf::uint32 _stars() const;
  inline void set__stars(::google::protobuf::uint32 value);

  // optional uint32 _gs = 5;
  inline bool has__gs() const;
  inline void clear__gs();
  static const int kGsFieldNumber = 5;
  inline ::google::protobuf::uint32 _gs() const;
  inline void set__gs(::google::protobuf::uint32 value);

  // optional .client_baseserver.hero_status _state = 6;
  inline bool has__state() const;
  inline void clear__state();
  static const int kStateFieldNumber = 6;
  inline ::client_baseserver::hero_status _state() const;
  inline void set__state(::client_baseserver::hero_status value);

  // @@protoc_insertion_point(class_scope:client_baseserver.hero_summary)
 private:
  inline void set_has__tid();
  inline void clear_has__tid();
  inline void set_has__rank();
  inline void clear_has__rank();
  inline void set_has__level();
  inline void clear_has__level();
  inline void set_has__stars();
  inline void clear_has__stars();
  inline void set_has__gs();
  inline void clear_has__gs();
  inline void set_has__state();
  inline void clear_has__state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _tid_;
  ::google::protobuf::uint32 _rank_;
  ::google::protobuf::uint32 _level_;
  ::google::protobuf::uint32 _stars_;
  ::google::protobuf::uint32 _gs_;
  int _state_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static hero_summary* default_instance_;
};
// -------------------------------------------------------------------

class hero_dyna : public ::google::protobuf::Message {
 public:
  hero_dyna();
  virtual ~hero_dyna();

  hero_dyna(const hero_dyna& from);

  inline hero_dyna& operator=(const hero_dyna& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const hero_dyna& default_instance();

  void Swap(hero_dyna* other);

  // implements Message ----------------------------------------------

  hero_dyna* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const hero_dyna& from);
  void MergeFrom(const hero_dyna& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _hp_perc = 1;
  inline bool has__hp_perc() const;
  inline void clear__hp_perc();
  static const int kHpPercFieldNumber = 1;
  inline ::google::protobuf::uint32 _hp_perc() const;
  inline void set__hp_perc(::google::protobuf::uint32 value);

  // required uint32 _mp_perc = 2;
  inline bool has__mp_perc() const;
  inline void clear__mp_perc();
  static const int kMpPercFieldNumber = 2;
  inline ::google::protobuf::uint32 _mp_perc() const;
  inline void set__mp_perc(::google::protobuf::uint32 value);

  // optional uint32 _custom_data = 3;
  inline bool has__custom_data() const;
  inline void clear__custom_data();
  static const int kCustomDataFieldNumber = 3;
  inline ::google::protobuf::uint32 _custom_data() const;
  inline void set__custom_data(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.hero_dyna)
 private:
  inline void set_has__hp_perc();
  inline void clear_has__hp_perc();
  inline void set_has__mp_perc();
  inline void clear_has__mp_perc();
  inline void set_has__custom_data();
  inline void clear_has__custom_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _hp_perc_;
  ::google::protobuf::uint32 _mp_perc_;
  ::google::protobuf::uint32 _custom_data_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static hero_dyna* default_instance_;
};
// -------------------------------------------------------------------

class skilllevelup : public ::google::protobuf::Message {
 public:
  skilllevelup();
  virtual ~skilllevelup();

  skilllevelup(const skilllevelup& from);

  inline skilllevelup& operator=(const skilllevelup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const skilllevelup& default_instance();

  void Swap(skilllevelup* other);

  // implements Message ----------------------------------------------

  skilllevelup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const skilllevelup& from);
  void MergeFrom(const skilllevelup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _skill_levelup_chance = 1;
  inline bool has__skill_levelup_chance() const;
  inline void clear__skill_levelup_chance();
  static const int kSkillLevelupChanceFieldNumber = 1;
  inline ::google::protobuf::uint32 _skill_levelup_chance() const;
  inline void set__skill_levelup_chance(::google::protobuf::uint32 value);

  // required uint32 _skill_levelup_cd = 2;
  inline bool has__skill_levelup_cd() const;
  inline void clear__skill_levelup_cd();
  static const int kSkillLevelupCdFieldNumber = 2;
  inline ::google::protobuf::uint32 _skill_levelup_cd() const;
  inline void set__skill_levelup_cd(::google::protobuf::uint32 value);

  // required uint32 _reset_times = 3;
  inline bool has__reset_times() const;
  inline void clear__reset_times();
  static const int kResetTimesFieldNumber = 3;
  inline ::google::protobuf::uint32 _reset_times() const;
  inline void set__reset_times(::google::protobuf::uint32 value);

  // required uint32 _last_reset_date = 4;
  inline bool has__last_reset_date() const;
  inline void clear__last_reset_date();
  static const int kLastResetDateFieldNumber = 4;
  inline ::google::protobuf::uint32 _last_reset_date() const;
  inline void set__last_reset_date(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.skilllevelup)
 private:
  inline void set_has__skill_levelup_chance();
  inline void clear_has__skill_levelup_chance();
  inline void set_has__skill_levelup_cd();
  inline void clear_has__skill_levelup_cd();
  inline void set_has__reset_times();
  inline void clear_has__reset_times();
  inline void set_has__last_reset_date();
  inline void clear_has__last_reset_date();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _skill_levelup_chance_;
  ::google::protobuf::uint32 _skill_levelup_cd_;
  ::google::protobuf::uint32 _reset_times_;
  ::google::protobuf::uint32 _last_reset_date_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static skilllevelup* default_instance_;
};
// -------------------------------------------------------------------

class usertask : public ::google::protobuf::Message {
 public:
  usertask();
  virtual ~usertask();

  usertask(const usertask& from);

  inline usertask& operator=(const usertask& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const usertask& default_instance();

  void Swap(usertask* other);

  // implements Message ----------------------------------------------

  usertask* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const usertask& from);
  void MergeFrom(const usertask& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef usertask_status status;
  static const status finished = usertask_status_finished;
  static const status working = usertask_status_working;
  static inline bool status_IsValid(int value) {
    return usertask_status_IsValid(value);
  }
  static const status status_MIN =
    usertask_status_status_MIN;
  static const status status_MAX =
    usertask_status_status_MAX;
  static const int status_ARRAYSIZE =
    usertask_status_status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  status_descriptor() {
    return usertask_status_descriptor();
  }
  static inline const ::std::string& status_Name(status value) {
    return usertask_status_Name(value);
  }
  static inline bool status_Parse(const ::std::string& name,
      status* value) {
    return usertask_status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint32 _line = 1;
  inline bool has__line() const;
  inline void clear__line();
  static const int kLineFieldNumber = 1;
  inline ::google::protobuf::uint32 _line() const;
  inline void set__line(::google::protobuf::uint32 value);

  // required uint32 _id = 2;
  inline bool has__id() const;
  inline void clear__id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 _id() const;
  inline void set__id(::google::protobuf::uint32 value);

  // required .client_baseserver.usertask.status _status = 3 [default = working];
  inline bool has__status() const;
  inline void clear__status();
  static const int kStatusFieldNumber = 3;
  inline ::client_baseserver::usertask_status _status() const;
  inline void set__status(::client_baseserver::usertask_status value);

  // optional uint32 _task_target = 4;
  inline bool has__task_target() const;
  inline void clear__task_target();
  static const int kTaskTargetFieldNumber = 4;
  inline ::google::protobuf::uint32 _task_target() const;
  inline void set__task_target(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.usertask)
 private:
  inline void set_has__line();
  inline void clear_has__line();
  inline void set_has__id();
  inline void clear_has__id();
  inline void set_has__status();
  inline void clear_has__status();
  inline void set_has__task_target();
  inline void clear_has__task_target();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _line_;
  ::google::protobuf::uint32 _id_;
  int _status_;
  ::google::protobuf::uint32 _task_target_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static usertask* default_instance_;
};
// -------------------------------------------------------------------

class dailyjob : public ::google::protobuf::Message {
 public:
  dailyjob();
  virtual ~dailyjob();

  dailyjob(const dailyjob& from);

  inline dailyjob& operator=(const dailyjob& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const dailyjob& default_instance();

  void Swap(dailyjob* other);

  // implements Message ----------------------------------------------

  dailyjob* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const dailyjob& from);
  void MergeFrom(const dailyjob& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _id = 1;
  inline bool has__id() const;
  inline void clear__id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 _id() const;
  inline void set__id(::google::protobuf::uint32 value);

  // required uint32 _last_rewards_time = 2;
  inline bool has__last_rewards_time() const;
  inline void clear__last_rewards_time();
  static const int kLastRewardsTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 _last_rewards_time() const;
  inline void set__last_rewards_time(::google::protobuf::uint32 value);

  // optional uint32 _task_target = 3;
  inline bool has__task_target() const;
  inline void clear__task_target();
  static const int kTaskTargetFieldNumber = 3;
  inline ::google::protobuf::uint32 _task_target() const;
  inline void set__task_target(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.dailyjob)
 private:
  inline void set_has__id();
  inline void clear_has__id();
  inline void set_has__last_rewards_time();
  inline void clear_has__last_rewards_time();
  inline void set_has__task_target();
  inline void clear_has__task_target();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _id_;
  ::google::protobuf::uint32 _last_rewards_time_;
  ::google::protobuf::uint32 _task_target_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static dailyjob* default_instance_;
};
// -------------------------------------------------------------------

class sweeploot : public ::google::protobuf::Message {
 public:
  sweeploot();
  virtual ~sweeploot();

  sweeploot(const sweeploot& from);

  inline sweeploot& operator=(const sweeploot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const sweeploot& default_instance();

  void Swap(sweeploot* other);

  // implements Message ----------------------------------------------

  sweeploot* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const sweeploot& from);
  void MergeFrom(const sweeploot& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _exp = 1;
  inline bool has__exp() const;
  inline void clear__exp();
  static const int kExpFieldNumber = 1;
  inline ::google::protobuf::uint32 _exp() const;
  inline void set__exp(::google::protobuf::uint32 value);

  // required uint32 _money = 2;
  inline bool has__money() const;
  inline void clear__money();
  static const int kMoneyFieldNumber = 2;
  inline ::google::protobuf::uint32 _money() const;
  inline void set__money(::google::protobuf::uint32 value);

  // repeated uint32 _items = 3;
  inline int _items_size() const;
  inline void clear__items();
  static const int kItemsFieldNumber = 3;
  inline ::google::protobuf::uint32 _items(int index) const;
  inline void set__items(int index, ::google::protobuf::uint32 value);
  inline void add__items(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _items() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__items();

  // @@protoc_insertion_point(class_scope:client_baseserver.sweeploot)
 private:
  inline void set_has__exp();
  inline void clear_has__exp();
  inline void set_has__money();
  inline void clear_has__money();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _exp_;
  ::google::protobuf::uint32 _money_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _items_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static sweeploot* default_instance_;
};
// -------------------------------------------------------------------

class tavern_record : public ::google::protobuf::Message {
 public:
  tavern_record();
  virtual ~tavern_record();

  tavern_record(const tavern_record& from);

  inline tavern_record& operator=(const tavern_record& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tavern_record& default_instance();

  void Swap(tavern_record* other);

  // implements Message ----------------------------------------------

  tavern_record* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tavern_record& from);
  void MergeFrom(const tavern_record& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef tavern_record_box_type box_type;
  static const box_type green = tavern_record_box_type_green;
  static const box_type blue = tavern_record_box_type_blue;
  static const box_type purple = tavern_record_box_type_purple;
  static const box_type magicsoul = tavern_record_box_type_magicsoul;
  static inline bool box_type_IsValid(int value) {
    return tavern_record_box_type_IsValid(value);
  }
  static const box_type box_type_MIN =
    tavern_record_box_type_box_type_MIN;
  static const box_type box_type_MAX =
    tavern_record_box_type_box_type_MAX;
  static const int box_type_ARRAYSIZE =
    tavern_record_box_type_box_type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  box_type_descriptor() {
    return tavern_record_box_type_descriptor();
  }
  static inline const ::std::string& box_type_Name(box_type value) {
    return tavern_record_box_type_Name(value);
  }
  static inline bool box_type_Parse(const ::std::string& name,
      box_type* value) {
    return tavern_record_box_type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .client_baseserver.tavern_record.box_type _box_type = 1 [default = green];
  inline bool has__box_type() const;
  inline void clear__box_type();
  static const int kBoxTypeFieldNumber = 1;
  inline ::client_baseserver::tavern_record_box_type _box_type() const;
  inline void set__box_type(::client_baseserver::tavern_record_box_type value);

  // required uint32 _left_cnt = 2;
  inline bool has__left_cnt() const;
  inline void clear__left_cnt();
  static const int kLeftCntFieldNumber = 2;
  inline ::google::protobuf::uint32 _left_cnt() const;
  inline void set__left_cnt(::google::protobuf::uint32 value);

  // required uint32 _last_get_time = 3;
  inline bool has__last_get_time() const;
  inline void clear__last_get_time();
  static const int kLastGetTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 _last_get_time() const;
  inline void set__last_get_time(::google::protobuf::uint32 value);

  // required uint32 _has_first_draw = 4;
  inline bool has__has_first_draw() const;
  inline void clear__has_first_draw();
  static const int kHasFirstDrawFieldNumber = 4;
  inline ::google::protobuf::uint32 _has_first_draw() const;
  inline void set__has_first_draw(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.tavern_record)
 private:
  inline void set_has__box_type();
  inline void clear_has__box_type();
  inline void set_has__left_cnt();
  inline void clear_has__left_cnt();
  inline void set_has__last_get_time();
  inline void clear_has__last_get_time();
  inline void set_has__has_first_draw();
  inline void clear_has__has_first_draw();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _box_type_;
  ::google::protobuf::uint32 _left_cnt_;
  ::google::protobuf::uint32 _last_get_time_;
  ::google::protobuf::uint32 _has_first_draw_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static tavern_record* default_instance_;
};
// -------------------------------------------------------------------

class usermidas : public ::google::protobuf::Message {
 public:
  usermidas();
  virtual ~usermidas();

  usermidas(const usermidas& from);

  inline usermidas& operator=(const usermidas& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const usermidas& default_instance();

  void Swap(usermidas* other);

  // implements Message ----------------------------------------------

  usermidas* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const usermidas& from);
  void MergeFrom(const usermidas& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _last_change = 1;
  inline bool has__last_change() const;
  inline void clear__last_change();
  static const int kLastChangeFieldNumber = 1;
  inline ::google::protobuf::uint32 _last_change() const;
  inline void set__last_change(::google::protobuf::uint32 value);

  // required uint32 _today_times = 2;
  inline bool has__today_times() const;
  inline void clear__today_times();
  static const int kTodayTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 _today_times() const;
  inline void set__today_times(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.usermidas)
 private:
  inline void set_has__last_change();
  inline void clear_has__last_change();
  inline void set_has__today_times();
  inline void clear_has__today_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _last_change_;
  ::google::protobuf::uint32 _today_times_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static usermidas* default_instance_;
};
// -------------------------------------------------------------------

class trigger_task_reply : public ::google::protobuf::Message {
 public:
  trigger_task_reply();
  virtual ~trigger_task_reply();

  trigger_task_reply(const trigger_task_reply& from);

  inline trigger_task_reply& operator=(const trigger_task_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const trigger_task_reply& default_instance();

  void Swap(trigger_task_reply* other);

  // implements Message ----------------------------------------------

  trigger_task_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const trigger_task_reply& from);
  void MergeFrom(const trigger_task_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client_baseserver.result _result = 1;
  inline int _result_size() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result(int index) const;
  inline void set__result(int index, ::client_baseserver::result value);
  inline void add__result(::client_baseserver::result value);
  inline const ::google::protobuf::RepeatedField<int>& _result() const;
  inline ::google::protobuf::RepeatedField<int>* mutable__result();

  // @@protoc_insertion_point(class_scope:client_baseserver.trigger_task_reply)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField<int> _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static trigger_task_reply* default_instance_;
};
// -------------------------------------------------------------------

class require_rewards_reply : public ::google::protobuf::Message {
 public:
  require_rewards_reply();
  virtual ~require_rewards_reply();

  require_rewards_reply(const require_rewards_reply& from);

  inline require_rewards_reply& operator=(const require_rewards_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const require_rewards_reply& default_instance();

  void Swap(require_rewards_reply* other);

  // implements Message ----------------------------------------------

  require_rewards_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const require_rewards_reply& from);
  void MergeFrom(const require_rewards_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // @@protoc_insertion_point(class_scope:client_baseserver.require_rewards_reply)
 private:
  inline void set_has__result();
  inline void clear_has__result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static require_rewards_reply* default_instance_;
};
// -------------------------------------------------------------------

class trigger_job_reply : public ::google::protobuf::Message {
 public:
  trigger_job_reply();
  virtual ~trigger_job_reply();

  trigger_job_reply(const trigger_job_reply& from);

  inline trigger_job_reply& operator=(const trigger_job_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const trigger_job_reply& default_instance();

  void Swap(trigger_job_reply* other);

  // implements Message ----------------------------------------------

  trigger_job_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const trigger_job_reply& from);
  void MergeFrom(const trigger_job_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client_baseserver.result _result = 1;
  inline int _result_size() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result(int index) const;
  inline void set__result(int index, ::client_baseserver::result value);
  inline void add__result(::client_baseserver::result value);
  inline const ::google::protobuf::RepeatedField<int>& _result() const;
  inline ::google::protobuf::RepeatedField<int>* mutable__result();

  // @@protoc_insertion_point(class_scope:client_baseserver.trigger_job_reply)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField<int> _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static trigger_job_reply* default_instance_;
};
// -------------------------------------------------------------------

class dailyjob_reward : public ::google::protobuf::Message {
 public:
  dailyjob_reward();
  virtual ~dailyjob_reward();

  dailyjob_reward(const dailyjob_reward& from);

  inline dailyjob_reward& operator=(const dailyjob_reward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const dailyjob_reward& default_instance();

  void Swap(dailyjob_reward* other);

  // implements Message ----------------------------------------------

  dailyjob_reward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const dailyjob_reward& from);
  void MergeFrom(const dailyjob_reward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef dailyjob_reward_type type;
  static const type rmb = dailyjob_reward_type_rmb;
  static const type money = dailyjob_reward_type_money;
  static const type item = dailyjob_reward_type_item;
  static const type hero = dailyjob_reward_type_hero;
  static const type vitality = dailyjob_reward_type_vitality;
  static const type playerexp = dailyjob_reward_type_playerexp;
  static const type crusadepoint = dailyjob_reward_type_crusadepoint;
  static const type arenapoint = dailyjob_reward_type_arenapoint;
  static const type guildpoint = dailyjob_reward_type_guildpoint;
  static inline bool type_IsValid(int value) {
    return dailyjob_reward_type_IsValid(value);
  }
  static const type type_MIN =
    dailyjob_reward_type_type_MIN;
  static const type type_MAX =
    dailyjob_reward_type_type_MAX;
  static const int type_ARRAYSIZE =
    dailyjob_reward_type_type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  type_descriptor() {
    return dailyjob_reward_type_descriptor();
  }
  static inline const ::std::string& type_Name(type value) {
    return dailyjob_reward_type_Name(value);
  }
  static inline bool type_Parse(const ::std::string& name,
      type* value) {
    return dailyjob_reward_type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .client_baseserver.dailyjob_reward.type _type = 1;
  inline bool has__type() const;
  inline void clear__type();
  static const int kTypeFieldNumber = 1;
  inline ::client_baseserver::dailyjob_reward_type _type() const;
  inline void set__type(::client_baseserver::dailyjob_reward_type value);

  // optional uint32 _id = 2;
  inline bool has__id() const;
  inline void clear__id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 _id() const;
  inline void set__id(::google::protobuf::uint32 value);

  // optional uint32 _amount = 3;
  inline bool has__amount() const;
  inline void clear__amount();
  static const int kAmountFieldNumber = 3;
  inline ::google::protobuf::uint32 _amount() const;
  inline void set__amount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.dailyjob_reward)
 private:
  inline void set_has__type();
  inline void clear_has__type();
  inline void set_has__id();
  inline void clear_has__id();
  inline void set_has__amount();
  inline void clear_has__amount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _type_;
  ::google::protobuf::uint32 _id_;
  ::google::protobuf::uint32 _amount_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static dailyjob_reward* default_instance_;
};
// -------------------------------------------------------------------

class job_rewards_reply : public ::google::protobuf::Message {
 public:
  job_rewards_reply();
  virtual ~job_rewards_reply();

  job_rewards_reply(const job_rewards_reply& from);

  inline job_rewards_reply& operator=(const job_rewards_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const job_rewards_reply& default_instance();

  void Swap(job_rewards_reply* other);

  // implements Message ----------------------------------------------

  job_rewards_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const job_rewards_reply& from);
  void MergeFrom(const job_rewards_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1 [default = success];
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // repeated .client_baseserver.dailyjob_reward _activity_reward = 2;
  inline int _activity_reward_size() const;
  inline void clear__activity_reward();
  static const int kActivityRewardFieldNumber = 2;
  inline const ::client_baseserver::dailyjob_reward& _activity_reward(int index) const;
  inline ::client_baseserver::dailyjob_reward* mutable__activity_reward(int index);
  inline ::client_baseserver::dailyjob_reward* add__activity_reward();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::dailyjob_reward >&
      _activity_reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::dailyjob_reward >*
      mutable__activity_reward();

  // @@protoc_insertion_point(class_scope:client_baseserver.job_rewards_reply)
 private:
  inline void set_has__result();
  inline void clear_has__result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::dailyjob_reward > _activity_reward_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static job_rewards_reply* default_instance_;
};
// -------------------------------------------------------------------

class tavern_draw_reply : public ::google::protobuf::Message {
 public:
  tavern_draw_reply();
  virtual ~tavern_draw_reply();

  tavern_draw_reply(const tavern_draw_reply& from);

  inline tavern_draw_reply& operator=(const tavern_draw_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tavern_draw_reply& default_instance();

  void Swap(tavern_draw_reply* other);

  // implements Message ----------------------------------------------

  tavern_draw_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tavern_draw_reply& from);
  void MergeFrom(const tavern_draw_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 _item_ids = 1;
  inline int _item_ids_size() const;
  inline void clear__item_ids();
  static const int kItemIdsFieldNumber = 1;
  inline ::google::protobuf::uint32 _item_ids(int index) const;
  inline void set__item_ids(int index, ::google::protobuf::uint32 value);
  inline void add__item_ids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _item_ids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__item_ids();

  // repeated .client_baseserver.hero _new_heroes = 2;
  inline int _new_heroes_size() const;
  inline void clear__new_heroes();
  static const int kNewHeroesFieldNumber = 2;
  inline const ::client_baseserver::hero& _new_heroes(int index) const;
  inline ::client_baseserver::hero* mutable__new_heroes(int index);
  inline ::client_baseserver::hero* add__new_heroes();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >&
      _new_heroes() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >*
      mutable__new_heroes();

  // repeated uint32 _smash_idx = 3;
  inline int _smash_idx_size() const;
  inline void clear__smash_idx();
  static const int kSmashIdxFieldNumber = 3;
  inline ::google::protobuf::uint32 _smash_idx(int index) const;
  inline void set__smash_idx(int index, ::google::protobuf::uint32 value);
  inline void add__smash_idx(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _smash_idx() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__smash_idx();

  // @@protoc_insertion_point(class_scope:client_baseserver.tavern_draw_reply)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _item_ids_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero > _new_heroes_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _smash_idx_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static tavern_draw_reply* default_instance_;
};
// -------------------------------------------------------------------

class reset_elite_reply : public ::google::protobuf::Message {
 public:
  reset_elite_reply();
  virtual ~reset_elite_reply();

  reset_elite_reply(const reset_elite_reply& from);

  inline reset_elite_reply& operator=(const reset_elite_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const reset_elite_reply& default_instance();

  void Swap(reset_elite_reply* other);

  // implements Message ----------------------------------------------

  reset_elite_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const reset_elite_reply& from);
  void MergeFrom(const reset_elite_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1 [default = success];
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // @@protoc_insertion_point(class_scope:client_baseserver.reset_elite_reply)
 private:
  inline void set_has__result();
  inline void clear_has__result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static reset_elite_reply* default_instance_;
};
// -------------------------------------------------------------------

class sweep_stage_reply : public ::google::protobuf::Message {
 public:
  sweep_stage_reply();
  virtual ~sweep_stage_reply();

  sweep_stage_reply(const sweep_stage_reply& from);

  inline sweep_stage_reply& operator=(const sweep_stage_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const sweep_stage_reply& default_instance();

  void Swap(sweep_stage_reply* other);

  // implements Message ----------------------------------------------

  sweep_stage_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const sweep_stage_reply& from);
  void MergeFrom(const sweep_stage_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client_baseserver.sweeploot _loot = 1;
  inline int _loot_size() const;
  inline void clear__loot();
  static const int kLootFieldNumber = 1;
  inline const ::client_baseserver::sweeploot& _loot(int index) const;
  inline ::client_baseserver::sweeploot* mutable__loot(int index);
  inline ::client_baseserver::sweeploot* add__loot();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::sweeploot >&
      _loot() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::sweeploot >*
      mutable__loot();

  // repeated uint32 _items = 2;
  inline int _items_size() const;
  inline void clear__items();
  static const int kItemsFieldNumber = 2;
  inline ::google::protobuf::uint32 _items(int index) const;
  inline void set__items(int index, ::google::protobuf::uint32 value);
  inline void add__items(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _items() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__items();

  // optional .client_baseserver.user_shop _shop = 3;
  inline bool has__shop() const;
  inline void clear__shop();
  static const int kShopFieldNumber = 3;
  inline const ::client_baseserver::user_shop& _shop() const;
  inline ::client_baseserver::user_shop* mutable__shop();
  inline ::client_baseserver::user_shop* release__shop();
  inline void set_allocated__shop(::client_baseserver::user_shop* _shop);

  // optional .client_baseserver.star_shop _sshop = 4;
  inline bool has__sshop() const;
  inline void clear__sshop();
  static const int kSshopFieldNumber = 4;
  inline const ::client_baseserver::star_shop& _sshop() const;
  inline ::client_baseserver::star_shop* mutable__sshop();
  inline ::client_baseserver::star_shop* release__sshop();
  inline void set_allocated__sshop(::client_baseserver::star_shop* _sshop);

  // @@protoc_insertion_point(class_scope:client_baseserver.sweep_stage_reply)
 private:
  inline void set_has__shop();
  inline void clear_has__shop();
  inline void set_has__sshop();
  inline void clear_has__sshop();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::sweeploot > _loot_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _items_;
  ::client_baseserver::user_shop* _shop_;
  ::client_baseserver::star_shop* _sshop_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static sweep_stage_reply* default_instance_;
};
// -------------------------------------------------------------------

class sweep : public ::google::protobuf::Message {
 public:
  sweep();
  virtual ~sweep();

  sweep(const sweep& from);

  inline sweep& operator=(const sweep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const sweep& default_instance();

  void Swap(sweep* other);

  // implements Message ----------------------------------------------

  sweep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const sweep& from);
  void MergeFrom(const sweep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _last_reset_time = 1;
  inline bool has__last_reset_time() const;
  inline void clear__last_reset_time();
  static const int kLastResetTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 _last_reset_time() const;
  inline void set__last_reset_time(::google::protobuf::uint32 value);

  // required uint32 _today_free_sweep_times = 2;
  inline bool has__today_free_sweep_times() const;
  inline void clear__today_free_sweep_times();
  static const int kTodayFreeSweepTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 _today_free_sweep_times() const;
  inline void set__today_free_sweep_times(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.sweep)
 private:
  inline void set_has__last_reset_time();
  inline void clear_has__last_reset_time();
  inline void set_has__today_free_sweep_times();
  inline void clear_has__today_free_sweep_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _last_reset_time_;
  ::google::protobuf::uint32 _today_free_sweep_times_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static sweep* default_instance_;
};
// -------------------------------------------------------------------

class sync_skill_stren_reply : public ::google::protobuf::Message {
 public:
  sync_skill_stren_reply();
  virtual ~sync_skill_stren_reply();

  sync_skill_stren_reply(const sync_skill_stren_reply& from);

  inline sync_skill_stren_reply& operator=(const sync_skill_stren_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const sync_skill_stren_reply& default_instance();

  void Swap(sync_skill_stren_reply* other);

  // implements Message ----------------------------------------------

  sync_skill_stren_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const sync_skill_stren_reply& from);
  void MergeFrom(const sync_skill_stren_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.skilllevelup _skill_level_up = 1;
  inline bool has__skill_level_up() const;
  inline void clear__skill_level_up();
  static const int kSkillLevelUpFieldNumber = 1;
  inline const ::client_baseserver::skilllevelup& _skill_level_up() const;
  inline ::client_baseserver::skilllevelup* mutable__skill_level_up();
  inline ::client_baseserver::skilllevelup* release__skill_level_up();
  inline void set_allocated__skill_level_up(::client_baseserver::skilllevelup* _skill_level_up);

  // @@protoc_insertion_point(class_scope:client_baseserver.sync_skill_stren_reply)
 private:
  inline void set_has__skill_level_up();
  inline void clear_has__skill_level_up();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::skilllevelup* _skill_level_up_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static sync_skill_stren_reply* default_instance_;
};
// -------------------------------------------------------------------

class hero_evolve_reply : public ::google::protobuf::Message {
 public:
  hero_evolve_reply();
  virtual ~hero_evolve_reply();

  hero_evolve_reply(const hero_evolve_reply& from);

  inline hero_evolve_reply& operator=(const hero_evolve_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const hero_evolve_reply& default_instance();

  void Swap(hero_evolve_reply* other);

  // implements Message ----------------------------------------------

  hero_evolve_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const hero_evolve_reply& from);
  void MergeFrom(const hero_evolve_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1 [default = success];
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // optional .client_baseserver.hero _hero = 2;
  inline bool has__hero() const;
  inline void clear__hero();
  static const int kHeroFieldNumber = 2;
  inline const ::client_baseserver::hero& _hero() const;
  inline ::client_baseserver::hero* mutable__hero();
  inline ::client_baseserver::hero* release__hero();
  inline void set_allocated__hero(::client_baseserver::hero* _hero);

  // @@protoc_insertion_point(class_scope:client_baseserver.hero_evolve_reply)
 private:
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__hero();
  inline void clear_has__hero();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::hero* _hero_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static hero_evolve_reply* default_instance_;
};
// -------------------------------------------------------------------

class vitality : public ::google::protobuf::Message {
 public:
  vitality();
  virtual ~vitality();

  vitality(const vitality& from);

  inline vitality& operator=(const vitality& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const vitality& default_instance();

  void Swap(vitality* other);

  // implements Message ----------------------------------------------

  vitality* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const vitality& from);
  void MergeFrom(const vitality& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _current = 1;
  inline bool has__current() const;
  inline void clear__current();
  static const int kCurrentFieldNumber = 1;
  inline ::google::protobuf::uint32 _current() const;
  inline void set__current(::google::protobuf::uint32 value);

  // required uint32 _lastchange = 2;
  inline bool has__lastchange() const;
  inline void clear__lastchange();
  static const int kLastchangeFieldNumber = 2;
  inline ::google::protobuf::uint32 _lastchange() const;
  inline void set__lastchange(::google::protobuf::uint32 value);

  // required uint32 _todaybuy = 3;
  inline bool has__todaybuy() const;
  inline void clear__todaybuy();
  static const int kTodaybuyFieldNumber = 3;
  inline ::google::protobuf::uint32 _todaybuy() const;
  inline void set__todaybuy(::google::protobuf::uint32 value);

  // required uint32 _lastbuy = 4;
  inline bool has__lastbuy() const;
  inline void clear__lastbuy();
  static const int kLastbuyFieldNumber = 4;
  inline ::google::protobuf::uint32 _lastbuy() const;
  inline void set__lastbuy(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.vitality)
 private:
  inline void set_has__current();
  inline void clear_has__current();
  inline void set_has__lastchange();
  inline void clear_has__lastchange();
  inline void set_has__todaybuy();
  inline void clear_has__todaybuy();
  inline void set_has__lastbuy();
  inline void clear_has__lastbuy();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _current_;
  ::google::protobuf::uint32 _lastchange_;
  ::google::protobuf::uint32 _todaybuy_;
  ::google::protobuf::uint32 _lastbuy_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static vitality* default_instance_;
};
// -------------------------------------------------------------------

class userstage : public ::google::protobuf::Message {
 public:
  userstage();
  virtual ~userstage();

  userstage(const userstage& from);

  inline userstage& operator=(const userstage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const userstage& default_instance();

  void Swap(userstage* other);

  // implements Message ----------------------------------------------

  userstage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const userstage& from);
  void MergeFrom(const userstage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 _normal_stage_stars = 1;
  inline int _normal_stage_stars_size() const;
  inline void clear__normal_stage_stars();
  static const int kNormalStageStarsFieldNumber = 1;
  inline ::google::protobuf::uint32 _normal_stage_stars(int index) const;
  inline void set__normal_stage_stars(int index, ::google::protobuf::uint32 value);
  inline void add__normal_stage_stars(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _normal_stage_stars() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__normal_stage_stars();

  // repeated uint32 _elite_stage_stars = 2;
  inline int _elite_stage_stars_size() const;
  inline void clear__elite_stage_stars();
  static const int kEliteStageStarsFieldNumber = 2;
  inline ::google::protobuf::uint32 _elite_stage_stars(int index) const;
  inline void set__elite_stage_stars(int index, ::google::protobuf::uint32 value);
  inline void add__elite_stage_stars(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _elite_stage_stars() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__elite_stage_stars();

  // repeated uint32 _elite_daily_record = 3;
  inline int _elite_daily_record_size() const;
  inline void clear__elite_daily_record();
  static const int kEliteDailyRecordFieldNumber = 3;
  inline ::google::protobuf::uint32 _elite_daily_record(int index) const;
  inline void set__elite_daily_record(int index, ::google::protobuf::uint32 value);
  inline void add__elite_daily_record(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _elite_daily_record() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__elite_daily_record();

  // required uint32 _elite_reset_time = 4;
  inline bool has__elite_reset_time() const;
  inline void clear__elite_reset_time();
  static const int kEliteResetTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 _elite_reset_time() const;
  inline void set__elite_reset_time(::google::protobuf::uint32 value);

  // required .client_baseserver.sweep _sweep = 5;
  inline bool has__sweep() const;
  inline void clear__sweep();
  static const int kSweepFieldNumber = 5;
  inline const ::client_baseserver::sweep& _sweep() const;
  inline ::client_baseserver::sweep* mutable__sweep();
  inline ::client_baseserver::sweep* release__sweep();
  inline void set_allocated__sweep(::client_baseserver::sweep* _sweep);

  // repeated .client_baseserver.act_daily_record _act_daily_record = 6;
  inline int _act_daily_record_size() const;
  inline void clear__act_daily_record();
  static const int kActDailyRecordFieldNumber = 6;
  inline const ::client_baseserver::act_daily_record& _act_daily_record(int index) const;
  inline ::client_baseserver::act_daily_record* mutable__act_daily_record(int index);
  inline ::client_baseserver::act_daily_record* add__act_daily_record();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::act_daily_record >&
      _act_daily_record() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::act_daily_record >*
      mutable__act_daily_record();

  // required uint32 _act_reset_time = 7;
  inline bool has__act_reset_time() const;
  inline void clear__act_reset_time();
  static const int kActResetTimeFieldNumber = 7;
  inline ::google::protobuf::uint32 _act_reset_time() const;
  inline void set__act_reset_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.userstage)
 private:
  inline void set_has__elite_reset_time();
  inline void clear_has__elite_reset_time();
  inline void set_has__sweep();
  inline void clear_has__sweep();
  inline void set_has__act_reset_time();
  inline void clear_has__act_reset_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _normal_stage_stars_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _elite_stage_stars_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _elite_daily_record_;
  ::client_baseserver::sweep* _sweep_;
  ::google::protobuf::uint32 _elite_reset_time_;
  ::google::protobuf::uint32 _act_reset_time_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::act_daily_record > _act_daily_record_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static userstage* default_instance_;
};
// -------------------------------------------------------------------

class act_daily_record : public ::google::protobuf::Message {
 public:
  act_daily_record();
  virtual ~act_daily_record();

  act_daily_record(const act_daily_record& from);

  inline act_daily_record& operator=(const act_daily_record& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const act_daily_record& default_instance();

  void Swap(act_daily_record* other);

  // implements Message ----------------------------------------------

  act_daily_record* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const act_daily_record& from);
  void MergeFrom(const act_daily_record& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _id = 1;
  inline bool has__id() const;
  inline void clear__id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 _id() const;
  inline void set__id(::google::protobuf::uint32 value);

  // required uint32 _frequency = 2;
  inline bool has__frequency() const;
  inline void clear__frequency();
  static const int kFrequencyFieldNumber = 2;
  inline ::google::protobuf::uint32 _frequency() const;
  inline void set__frequency(::google::protobuf::uint32 value);

  // required uint32 _last_change = 3;
  inline bool has__last_change() const;
  inline void clear__last_change();
  static const int kLastChangeFieldNumber = 3;
  inline ::google::protobuf::uint32 _last_change() const;
  inline void set__last_change(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.act_daily_record)
 private:
  inline void set_has__id();
  inline void clear_has__id();
  inline void set_has__frequency();
  inline void clear_has__frequency();
  inline void set_has__last_change();
  inline void clear_has__last_change();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _id_;
  ::google::protobuf::uint32 _frequency_;
  ::google::protobuf::uint32 _last_change_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static act_daily_record* default_instance_;
};
// -------------------------------------------------------------------

class ladder_reply : public ::google::protobuf::Message {
 public:
  ladder_reply();
  virtual ~ladder_reply();

  ladder_reply(const ladder_reply& from);

  inline ladder_reply& operator=(const ladder_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ladder_reply& default_instance();

  void Swap(ladder_reply* other);

  // implements Message ----------------------------------------------

  ladder_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ladder_reply& from);
  void MergeFrom(const ladder_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client_baseserver.open_panel _open_panel = 1;
  inline bool has__open_panel() const;
  inline void clear__open_panel();
  static const int kOpenPanelFieldNumber = 1;
  inline const ::client_baseserver::open_panel& _open_panel() const;
  inline ::client_baseserver::open_panel* mutable__open_panel();
  inline ::client_baseserver::open_panel* release__open_panel();
  inline void set_allocated__open_panel(::client_baseserver::open_panel* _open_panel);

  // optional .client_baseserver.apply_opponent _apply_oppo = 2;
  inline bool has__apply_oppo() const;
  inline void clear__apply_oppo();
  static const int kApplyOppoFieldNumber = 2;
  inline const ::client_baseserver::apply_opponent& _apply_oppo() const;
  inline ::client_baseserver::apply_opponent* mutable__apply_oppo();
  inline ::client_baseserver::apply_opponent* release__apply_oppo();
  inline void set_allocated__apply_oppo(::client_baseserver::apply_opponent* _apply_oppo);

  // optional .client_baseserver.start_battle _start_battle = 3;
  inline bool has__start_battle() const;
  inline void clear__start_battle();
  static const int kStartBattleFieldNumber = 3;
  inline const ::client_baseserver::start_battle& _start_battle() const;
  inline ::client_baseserver::start_battle* mutable__start_battle();
  inline ::client_baseserver::start_battle* release__start_battle();
  inline void set_allocated__start_battle(::client_baseserver::start_battle* _start_battle);

  // optional .client_baseserver.end_battle _end_battle = 4;
  inline bool has__end_battle() const;
  inline void clear__end_battle();
  static const int kEndBattleFieldNumber = 4;
  inline const ::client_baseserver::end_battle& _end_battle() const;
  inline ::client_baseserver::end_battle* mutable__end_battle();
  inline ::client_baseserver::end_battle* release__end_battle();
  inline void set_allocated__end_battle(::client_baseserver::end_battle* _end_battle);

  // optional .client_baseserver.set_lineup _set_lineup = 5;
  inline bool has__set_lineup() const;
  inline void clear__set_lineup();
  static const int kSetLineupFieldNumber = 5;
  inline const ::client_baseserver::set_lineup& _set_lineup() const;
  inline ::client_baseserver::set_lineup* mutable__set_lineup();
  inline ::client_baseserver::set_lineup* release__set_lineup();
  inline void set_allocated__set_lineup(::client_baseserver::set_lineup* _set_lineup);

  // optional .client_baseserver.query_records _query_records = 6;
  inline bool has__query_records() const;
  inline void clear__query_records();
  static const int kQueryRecordsFieldNumber = 6;
  inline const ::client_baseserver::query_records& _query_records() const;
  inline ::client_baseserver::query_records* mutable__query_records();
  inline ::client_baseserver::query_records* release__query_records();
  inline void set_allocated__query_records(::client_baseserver::query_records* _query_records);

  // optional .client_baseserver.query_replay _query_replay = 7;
  inline bool has__query_replay() const;
  inline void clear__query_replay();
  static const int kQueryReplayFieldNumber = 7;
  inline const ::client_baseserver::query_replay& _query_replay() const;
  inline ::client_baseserver::query_replay* mutable__query_replay();
  inline ::client_baseserver::query_replay* release__query_replay();
  inline void set_allocated__query_replay(::client_baseserver::query_replay* _query_replay);

  // optional .client_baseserver.query_rankboard _query_rankborad = 8;
  inline bool has__query_rankborad() const;
  inline void clear__query_rankborad();
  static const int kQueryRankboradFieldNumber = 8;
  inline const ::client_baseserver::query_rankboard& _query_rankborad() const;
  inline ::client_baseserver::query_rankboard* mutable__query_rankborad();
  inline ::client_baseserver::query_rankboard* release__query_rankborad();
  inline void set_allocated__query_rankborad(::client_baseserver::query_rankboard* _query_rankborad);

  // optional .client_baseserver.query_oppo_info _query_oppo = 9;
  inline bool has__query_oppo() const;
  inline void clear__query_oppo();
  static const int kQueryOppoFieldNumber = 9;
  inline const ::client_baseserver::query_oppo_info& _query_oppo() const;
  inline ::client_baseserver::query_oppo_info* mutable__query_oppo();
  inline ::client_baseserver::query_oppo_info* release__query_oppo();
  inline void set_allocated__query_oppo(::client_baseserver::query_oppo_info* _query_oppo);

  // optional .client_baseserver.clear_battle_cd _clear_battle_cd = 10;
  inline bool has__clear_battle_cd() const;
  inline void clear__clear_battle_cd();
  static const int kClearBattleCdFieldNumber = 10;
  inline const ::client_baseserver::clear_battle_cd& _clear_battle_cd() const;
  inline ::client_baseserver::clear_battle_cd* mutable__clear_battle_cd();
  inline ::client_baseserver::clear_battle_cd* release__clear_battle_cd();
  inline void set_allocated__clear_battle_cd(::client_baseserver::clear_battle_cd* _clear_battle_cd);

  // optional .client_baseserver.draw_rank_reward _draw_rank_reward = 11;
  inline bool has__draw_rank_reward() const;
  inline void clear__draw_rank_reward();
  static const int kDrawRankRewardFieldNumber = 11;
  inline const ::client_baseserver::draw_rank_reward& _draw_rank_reward() const;
  inline ::client_baseserver::draw_rank_reward* mutable__draw_rank_reward();
  inline ::client_baseserver::draw_rank_reward* release__draw_rank_reward();
  inline void set_allocated__draw_rank_reward(::client_baseserver::draw_rank_reward* _draw_rank_reward);

  // optional .client_baseserver.buy_battle_chance _buy_battle_chance = 12;
  inline bool has__buy_battle_chance() const;
  inline void clear__buy_battle_chance();
  static const int kBuyBattleChanceFieldNumber = 12;
  inline const ::client_baseserver::buy_battle_chance& _buy_battle_chance() const;
  inline ::client_baseserver::buy_battle_chance* mutable__buy_battle_chance();
  inline ::client_baseserver::buy_battle_chance* release__buy_battle_chance();
  inline void set_allocated__buy_battle_chance(::client_baseserver::buy_battle_chance* _buy_battle_chance);

  // @@protoc_insertion_point(class_scope:client_baseserver.ladder_reply)
 private:
  inline void set_has__open_panel();
  inline void clear_has__open_panel();
  inline void set_has__apply_oppo();
  inline void clear_has__apply_oppo();
  inline void set_has__start_battle();
  inline void clear_has__start_battle();
  inline void set_has__end_battle();
  inline void clear_has__end_battle();
  inline void set_has__set_lineup();
  inline void clear_has__set_lineup();
  inline void set_has__query_records();
  inline void clear_has__query_records();
  inline void set_has__query_replay();
  inline void clear_has__query_replay();
  inline void set_has__query_rankborad();
  inline void clear_has__query_rankborad();
  inline void set_has__query_oppo();
  inline void clear_has__query_oppo();
  inline void set_has__clear_battle_cd();
  inline void clear_has__clear_battle_cd();
  inline void set_has__draw_rank_reward();
  inline void clear_has__draw_rank_reward();
  inline void set_has__buy_battle_chance();
  inline void clear_has__buy_battle_chance();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::open_panel* _open_panel_;
  ::client_baseserver::apply_opponent* _apply_oppo_;
  ::client_baseserver::start_battle* _start_battle_;
  ::client_baseserver::end_battle* _end_battle_;
  ::client_baseserver::set_lineup* _set_lineup_;
  ::client_baseserver::query_records* _query_records_;
  ::client_baseserver::query_replay* _query_replay_;
  ::client_baseserver::query_rankboard* _query_rankborad_;
  ::client_baseserver::query_oppo_info* _query_oppo_;
  ::client_baseserver::clear_battle_cd* _clear_battle_cd_;
  ::client_baseserver::draw_rank_reward* _draw_rank_reward_;
  ::client_baseserver::buy_battle_chance* _buy_battle_chance_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static ladder_reply* default_instance_;
};
// -------------------------------------------------------------------

class open_panel : public ::google::protobuf::Message {
 public:
  open_panel();
  virtual ~open_panel();

  open_panel(const open_panel& from);

  inline open_panel& operator=(const open_panel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const open_panel& default_instance();

  void Swap(open_panel* other);

  // implements Message ----------------------------------------------

  open_panel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const open_panel& from);
  void MergeFrom(const open_panel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _rank = 1;
  inline bool has__rank() const;
  inline void clear__rank();
  static const int kRankFieldNumber = 1;
  inline ::google::protobuf::uint32 _rank() const;
  inline void set__rank(::google::protobuf::uint32 value);

  // required uint32 _left_count = 2;
  inline bool has__left_count() const;
  inline void clear__left_count();
  static const int kLeftCountFieldNumber = 2;
  inline ::google::protobuf::uint32 _left_count() const;
  inline void set__left_count(::google::protobuf::uint32 value);

  // required uint32 _last_bt_time = 3;
  inline bool has__last_bt_time() const;
  inline void clear__last_bt_time();
  static const int kLastBtTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 _last_bt_time() const;
  inline void set__last_bt_time(::google::protobuf::uint32 value);

  // required uint32 _buy_times = 4;
  inline bool has__buy_times() const;
  inline void clear__buy_times();
  static const int kBuyTimesFieldNumber = 4;
  inline ::google::protobuf::uint32 _buy_times() const;
  inline void set__buy_times(::google::protobuf::uint32 value);

  // repeated uint32 _lineup = 5;
  inline int _lineup_size() const;
  inline void clear__lineup();
  static const int kLineupFieldNumber = 5;
  inline ::google::protobuf::uint32 _lineup(int index) const;
  inline void set__lineup(int index, ::google::protobuf::uint32 value);
  inline void add__lineup(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _lineup() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__lineup();

  // required uint32 _gs = 6;
  inline bool has__gs() const;
  inline void clear__gs();
  static const int kGsFieldNumber = 6;
  inline ::google::protobuf::uint32 _gs() const;
  inline void set__gs(::google::protobuf::uint32 value);

  // repeated .client_baseserver.ladder_opponent _oppos = 7;
  inline int _oppos_size() const;
  inline void clear__oppos();
  static const int kOpposFieldNumber = 7;
  inline const ::client_baseserver::ladder_opponent& _oppos(int index) const;
  inline ::client_baseserver::ladder_opponent* mutable__oppos(int index);
  inline ::client_baseserver::ladder_opponent* add__oppos();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::ladder_opponent >&
      _oppos() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::ladder_opponent >*
      mutable__oppos();

  // @@protoc_insertion_point(class_scope:client_baseserver.open_panel)
 private:
  inline void set_has__rank();
  inline void clear_has__rank();
  inline void set_has__left_count();
  inline void clear_has__left_count();
  inline void set_has__last_bt_time();
  inline void clear_has__last_bt_time();
  inline void set_has__buy_times();
  inline void clear_has__buy_times();
  inline void set_has__gs();
  inline void clear_has__gs();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _rank_;
  ::google::protobuf::uint32 _left_count_;
  ::google::protobuf::uint32 _last_bt_time_;
  ::google::protobuf::uint32 _buy_times_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _lineup_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::ladder_opponent > _oppos_;
  ::google::protobuf::uint32 _gs_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static open_panel* default_instance_;
};
// -------------------------------------------------------------------

class apply_opponent : public ::google::protobuf::Message {
 public:
  apply_opponent();
  virtual ~apply_opponent();

  apply_opponent(const apply_opponent& from);

  inline apply_opponent& operator=(const apply_opponent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const apply_opponent& default_instance();

  void Swap(apply_opponent* other);

  // implements Message ----------------------------------------------

  apply_opponent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const apply_opponent& from);
  void MergeFrom(const apply_opponent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client_baseserver.ladder_opponent _oppos = 1;
  inline int _oppos_size() const;
  inline void clear__oppos();
  static const int kOpposFieldNumber = 1;
  inline const ::client_baseserver::ladder_opponent& _oppos(int index) const;
  inline ::client_baseserver::ladder_opponent* mutable__oppos(int index);
  inline ::client_baseserver::ladder_opponent* add__oppos();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::ladder_opponent >&
      _oppos() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::ladder_opponent >*
      mutable__oppos();

  // @@protoc_insertion_point(class_scope:client_baseserver.apply_opponent)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::ladder_opponent > _oppos_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static apply_opponent* default_instance_;
};
// -------------------------------------------------------------------

class start_battle : public ::google::protobuf::Message {
 public:
  start_battle();
  virtual ~start_battle();

  start_battle(const start_battle& from);

  inline start_battle& operator=(const start_battle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const start_battle& default_instance();

  void Swap(start_battle* other);

  // implements Message ----------------------------------------------

  start_battle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const start_battle& from);
  void MergeFrom(const start_battle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // required uint32 _rseed = 2;
  inline bool has__rseed() const;
  inline void clear__rseed();
  static const int kRseedFieldNumber = 2;
  inline ::google::protobuf::uint32 _rseed() const;
  inline void set__rseed(::google::protobuf::uint32 value);

  // repeated .client_baseserver.hero _self_heroes = 3;
  inline int _self_heroes_size() const;
  inline void clear__self_heroes();
  static const int kSelfHeroesFieldNumber = 3;
  inline const ::client_baseserver::hero& _self_heroes(int index) const;
  inline ::client_baseserver::hero* mutable__self_heroes(int index);
  inline ::client_baseserver::hero* add__self_heroes();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >&
      _self_heroes() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >*
      mutable__self_heroes();

  // repeated .client_baseserver.hero _heroes = 4;
  inline int _heroes_size() const;
  inline void clear__heroes();
  static const int kHeroesFieldNumber = 4;
  inline const ::client_baseserver::hero& _heroes(int index) const;
  inline ::client_baseserver::hero* mutable__heroes(int index);
  inline ::client_baseserver::hero* add__heroes();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >&
      _heroes() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >*
      mutable__heroes();

  // required uint32 _is_robot = 5;
  inline bool has__is_robot() const;
  inline void clear__is_robot();
  static const int kIsRobotFieldNumber = 5;
  inline ::google::protobuf::uint32 _is_robot() const;
  inline void set__is_robot(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.start_battle)
 private:
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__rseed();
  inline void clear_has__rseed();
  inline void set_has__is_robot();
  inline void clear_has__is_robot();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  ::google::protobuf::uint32 _rseed_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero > _self_heroes_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero > _heroes_;
  ::google::protobuf::uint32 _is_robot_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static start_battle* default_instance_;
};
// -------------------------------------------------------------------

class end_battle : public ::google::protobuf::Message {
 public:
  end_battle();
  virtual ~end_battle();

  end_battle(const end_battle& from);

  inline end_battle& operator=(const end_battle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const end_battle& default_instance();

  void Swap(end_battle* other);

  // implements Message ----------------------------------------------

  end_battle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const end_battle& from);
  void MergeFrom(const end_battle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.battle_result _result = 1;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::battle_result _result() const;
  inline void set__result(::client_baseserver::battle_result value);

  // required uint32 _best_rank_reward = 2;
  inline bool has__best_rank_reward() const;
  inline void clear__best_rank_reward();
  static const int kBestRankRewardFieldNumber = 2;
  inline ::google::protobuf::uint32 _best_rank_reward() const;
  inline void set__best_rank_reward(::google::protobuf::uint32 value);

  // required uint32 _best_rank = 3;
  inline bool has__best_rank() const;
  inline void clear__best_rank();
  static const int kBestRankFieldNumber = 3;
  inline ::google::protobuf::uint32 _best_rank() const;
  inline void set__best_rank(::google::protobuf::uint32 value);

  // required uint32 _cur_rank = 4;
  inline bool has__cur_rank() const;
  inline void clear__cur_rank();
  static const int kCurRankFieldNumber = 4;
  inline ::google::protobuf::uint32 _cur_rank() const;
  inline void set__cur_rank(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.end_battle)
 private:
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__best_rank_reward();
  inline void clear_has__best_rank_reward();
  inline void set_has__best_rank();
  inline void clear_has__best_rank();
  inline void set_has__cur_rank();
  inline void clear_has__cur_rank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  ::google::protobuf::uint32 _best_rank_reward_;
  ::google::protobuf::uint32 _best_rank_;
  ::google::protobuf::uint32 _cur_rank_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static end_battle* default_instance_;
};
// -------------------------------------------------------------------

class set_lineup : public ::google::protobuf::Message {
 public:
  set_lineup();
  virtual ~set_lineup();

  set_lineup(const set_lineup& from);

  inline set_lineup& operator=(const set_lineup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const set_lineup& default_instance();

  void Swap(set_lineup* other);

  // implements Message ----------------------------------------------

  set_lineup* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const set_lineup& from);
  void MergeFrom(const set_lineup& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // repeated uint32 _lineup = 2;
  inline int _lineup_size() const;
  inline void clear__lineup();
  static const int kLineupFieldNumber = 2;
  inline ::google::protobuf::uint32 _lineup(int index) const;
  inline void set__lineup(int index, ::google::protobuf::uint32 value);
  inline void add__lineup(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _lineup() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__lineup();

  // required uint32 _gs = 3;
  inline bool has__gs() const;
  inline void clear__gs();
  static const int kGsFieldNumber = 3;
  inline ::google::protobuf::uint32 _gs() const;
  inline void set__gs(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.set_lineup)
 private:
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__gs();
  inline void clear_has__gs();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _lineup_;
  int _result_;
  ::google::protobuf::uint32 _gs_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static set_lineup* default_instance_;
};
// -------------------------------------------------------------------

class query_records : public ::google::protobuf::Message {
 public:
  query_records();
  virtual ~query_records();

  query_records(const query_records& from);

  inline query_records& operator=(const query_records& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const query_records& default_instance();

  void Swap(query_records* other);

  // implements Message ----------------------------------------------

  query_records* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const query_records& from);
  void MergeFrom(const query_records& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client_baseserver.ladder_record _records = 1;
  inline int _records_size() const;
  inline void clear__records();
  static const int kRecordsFieldNumber = 1;
  inline const ::client_baseserver::ladder_record& _records(int index) const;
  inline ::client_baseserver::ladder_record* mutable__records(int index);
  inline ::client_baseserver::ladder_record* add__records();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::ladder_record >&
      _records() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::ladder_record >*
      mutable__records();

  // @@protoc_insertion_point(class_scope:client_baseserver.query_records)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::ladder_record > _records_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static query_records* default_instance_;
};
// -------------------------------------------------------------------

class query_replay : public ::google::protobuf::Message {
 public:
  query_replay();
  virtual ~query_replay();

  query_replay(const query_replay& from);

  inline query_replay& operator=(const query_replay& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const query_replay& default_instance();

  void Swap(query_replay* other);

  // implements Message ----------------------------------------------

  query_replay* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const query_replay& from);
  void MergeFrom(const query_replay& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.pvp_record _record = 1;
  inline bool has__record() const;
  inline void clear__record();
  static const int kRecordFieldNumber = 1;
  inline const ::client_baseserver::pvp_record& _record() const;
  inline ::client_baseserver::pvp_record* mutable__record();
  inline ::client_baseserver::pvp_record* release__record();
  inline void set_allocated__record(::client_baseserver::pvp_record* _record);

  // @@protoc_insertion_point(class_scope:client_baseserver.query_replay)
 private:
  inline void set_has__record();
  inline void clear_has__record();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::pvp_record* _record_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static query_replay* default_instance_;
};
// -------------------------------------------------------------------

class pvp_record : public ::google::protobuf::Message {
 public:
  pvp_record();
  virtual ~pvp_record();

  pvp_record(const pvp_record& from);

  inline pvp_record& operator=(const pvp_record& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pvp_record& default_instance();

  void Swap(pvp_record* other);

  // implements Message ----------------------------------------------

  pvp_record* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pvp_record& from);
  void MergeFrom(const pvp_record& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _checkid = 1;
  inline bool has__checkid() const;
  inline void clear__checkid();
  static const int kCheckidFieldNumber = 1;
  inline ::google::protobuf::uint32 _checkid() const;
  inline void set__checkid(::google::protobuf::uint32 value);

  // required uint32 _userid = 2;
  inline bool has__userid() const;
  inline void clear__userid();
  static const int kUseridFieldNumber = 2;
  inline ::google::protobuf::uint32 _userid() const;
  inline void set__userid(::google::protobuf::uint32 value);

  // optional string _username = 3;
  inline bool has__username() const;
  inline void clear__username();
  static const int kUsernameFieldNumber = 3;
  inline const ::std::string& _username() const;
  inline void set__username(const ::std::string& value);
  inline void set__username(const char* value);
  inline void set__username(const char* value, size_t size);
  inline ::std::string* mutable__username();
  inline ::std::string* release__username();
  inline void set_allocated__username(::std::string* _username);

  // optional uint32 _level = 4;
  inline bool has__level() const;
  inline void clear__level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 _level() const;
  inline void set__level(::google::protobuf::uint32 value);

  // optional uint32 _avatar = 5;
  inline bool has__avatar() const;
  inline void clear__avatar();
  static const int kAvatarFieldNumber = 5;
  inline ::google::protobuf::uint32 _avatar() const;
  inline void set__avatar(::google::protobuf::uint32 value);

  // optional uint32 _vip = 6;
  inline bool has__vip() const;
  inline void clear__vip();
  static const int kVipFieldNumber = 6;
  inline ::google::protobuf::uint32 _vip() const;
  inline void set__vip(::google::protobuf::uint32 value);

  // required uint32 _oppo_userid = 7;
  inline bool has__oppo_userid() const;
  inline void clear__oppo_userid();
  static const int kOppoUseridFieldNumber = 7;
  inline ::google::protobuf::uint32 _oppo_userid() const;
  inline void set__oppo_userid(::google::protobuf::uint32 value);

  // optional string _oppo_name = 8;
  inline bool has__oppo_name() const;
  inline void clear__oppo_name();
  static const int kOppoNameFieldNumber = 8;
  inline const ::std::string& _oppo_name() const;
  inline void set__oppo_name(const ::std::string& value);
  inline void set__oppo_name(const char* value);
  inline void set__oppo_name(const char* value, size_t size);
  inline ::std::string* mutable__oppo_name();
  inline ::std::string* release__oppo_name();
  inline void set_allocated__oppo_name(::std::string* _oppo_name);

  // optional uint32 _oppo_level = 9;
  inline bool has__oppo_level() const;
  inline void clear__oppo_level();
  static const int kOppoLevelFieldNumber = 9;
  inline ::google::protobuf::uint32 _oppo_level() const;
  inline void set__oppo_level(::google::protobuf::uint32 value);

  // optional uint32 _oppo_avatar = 10;
  inline bool has__oppo_avatar() const;
  inline void clear__oppo_avatar();
  static const int kOppoAvatarFieldNumber = 10;
  inline ::google::protobuf::uint32 _oppo_avatar() const;
  inline void set__oppo_avatar(::google::protobuf::uint32 value);

  // optional uint32 _oppo_vip = 11;
  inline bool has__oppo_vip() const;
  inline void clear__oppo_vip();
  static const int kOppoVipFieldNumber = 11;
  inline ::google::protobuf::uint32 _oppo_vip() const;
  inline void set__oppo_vip(::google::protobuf::uint32 value);

  // optional uint32 _oppo_robot = 12;
  inline bool has__oppo_robot() const;
  inline void clear__oppo_robot();
  static const int kOppoRobotFieldNumber = 12;
  inline ::google::protobuf::uint32 _oppo_robot() const;
  inline void set__oppo_robot(::google::protobuf::uint32 value);

  // optional .client_baseserver.battle_result _result = 13 [default = victory];
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 13;
  inline ::client_baseserver::battle_result _result() const;
  inline void set__result(::client_baseserver::battle_result value);

  // repeated .client_baseserver.hero _self_heroes = 14;
  inline int _self_heroes_size() const;
  inline void clear__self_heroes();
  static const int kSelfHeroesFieldNumber = 14;
  inline const ::client_baseserver::hero& _self_heroes(int index) const;
  inline ::client_baseserver::hero* mutable__self_heroes(int index);
  inline ::client_baseserver::hero* add__self_heroes();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >&
      _self_heroes() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >*
      mutable__self_heroes();

  // repeated .client_baseserver.hero_dyna _self_dynas = 15;
  inline int _self_dynas_size() const;
  inline void clear__self_dynas();
  static const int kSelfDynasFieldNumber = 15;
  inline const ::client_baseserver::hero_dyna& _self_dynas(int index) const;
  inline ::client_baseserver::hero_dyna* mutable__self_dynas(int index);
  inline ::client_baseserver::hero_dyna* add__self_dynas();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero_dyna >&
      _self_dynas() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero_dyna >*
      mutable__self_dynas();

  // repeated .client_baseserver.hero _oppo_heroes = 16;
  inline int _oppo_heroes_size() const;
  inline void clear__oppo_heroes();
  static const int kOppoHeroesFieldNumber = 16;
  inline const ::client_baseserver::hero& _oppo_heroes(int index) const;
  inline ::client_baseserver::hero* mutable__oppo_heroes(int index);
  inline ::client_baseserver::hero* add__oppo_heroes();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >&
      _oppo_heroes() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >*
      mutable__oppo_heroes();

  // repeated .client_baseserver.hero_dyna _oppo_dynas = 17;
  inline int _oppo_dynas_size() const;
  inline void clear__oppo_dynas();
  static const int kOppoDynasFieldNumber = 17;
  inline const ::client_baseserver::hero_dyna& _oppo_dynas(int index) const;
  inline ::client_baseserver::hero_dyna* mutable__oppo_dynas(int index);
  inline ::client_baseserver::hero_dyna* add__oppo_dynas();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero_dyna >&
      _oppo_dynas() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero_dyna >*
      mutable__oppo_dynas();

  // required uint32 _rseed = 18;
  inline bool has__rseed() const;
  inline void clear__rseed();
  static const int kRseedFieldNumber = 18;
  inline ::google::protobuf::uint32 _rseed() const;
  inline void set__rseed(::google::protobuf::uint32 value);

  // optional uint32 _self_robot = 19;
  inline bool has__self_robot() const;
  inline void clear__self_robot();
  static const int kSelfRobotFieldNumber = 19;
  inline ::google::protobuf::uint32 _self_robot() const;
  inline void set__self_robot(::google::protobuf::uint32 value);

  // optional uint32 _param1 = 20;
  inline bool has__param1() const;
  inline void clear__param1();
  static const int kParam1FieldNumber = 20;
  inline ::google::protobuf::uint32 _param1() const;
  inline void set__param1(::google::protobuf::uint32 value);

  // repeated uint32 _operations = 21;
  inline int _operations_size() const;
  inline void clear__operations();
  static const int kOperationsFieldNumber = 21;
  inline ::google::protobuf::uint32 _operations(int index) const;
  inline void set__operations(int index, ::google::protobuf::uint32 value);
  inline void add__operations(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _operations() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__operations();

  // @@protoc_insertion_point(class_scope:client_baseserver.pvp_record)
 private:
  inline void set_has__checkid();
  inline void clear_has__checkid();
  inline void set_has__userid();
  inline void clear_has__userid();
  inline void set_has__username();
  inline void clear_has__username();
  inline void set_has__level();
  inline void clear_has__level();
  inline void set_has__avatar();
  inline void clear_has__avatar();
  inline void set_has__vip();
  inline void clear_has__vip();
  inline void set_has__oppo_userid();
  inline void clear_has__oppo_userid();
  inline void set_has__oppo_name();
  inline void clear_has__oppo_name();
  inline void set_has__oppo_level();
  inline void clear_has__oppo_level();
  inline void set_has__oppo_avatar();
  inline void clear_has__oppo_avatar();
  inline void set_has__oppo_vip();
  inline void clear_has__oppo_vip();
  inline void set_has__oppo_robot();
  inline void clear_has__oppo_robot();
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__rseed();
  inline void clear_has__rseed();
  inline void set_has__self_robot();
  inline void clear_has__self_robot();
  inline void set_has__param1();
  inline void clear_has__param1();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _checkid_;
  ::google::protobuf::uint32 _userid_;
  ::std::string* _username_;
  ::google::protobuf::uint32 _level_;
  ::google::protobuf::uint32 _avatar_;
  ::google::protobuf::uint32 _vip_;
  ::google::protobuf::uint32 _oppo_userid_;
  ::std::string* _oppo_name_;
  ::google::protobuf::uint32 _oppo_level_;
  ::google::protobuf::uint32 _oppo_avatar_;
  ::google::protobuf::uint32 _oppo_vip_;
  ::google::protobuf::uint32 _oppo_robot_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero > _self_heroes_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero_dyna > _self_dynas_;
  int _result_;
  ::google::protobuf::uint32 _rseed_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero > _oppo_heroes_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero_dyna > _oppo_dynas_;
  ::google::protobuf::uint32 _self_robot_;
  ::google::protobuf::uint32 _param1_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _operations_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static pvp_record* default_instance_;
};
// -------------------------------------------------------------------

class query_rankboard : public ::google::protobuf::Message {
 public:
  query_rankboard();
  virtual ~query_rankboard();

  query_rankboard(const query_rankboard& from);

  inline query_rankboard& operator=(const query_rankboard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const query_rankboard& default_instance();

  void Swap(query_rankboard* other);

  // implements Message ----------------------------------------------

  query_rankboard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const query_rankboard& from);
  void MergeFrom(const query_rankboard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client_baseserver.rankboard_data _rank_list = 1;
  inline int _rank_list_size() const;
  inline void clear__rank_list();
  static const int kRankListFieldNumber = 1;
  inline const ::client_baseserver::rankboard_data& _rank_list(int index) const;
  inline ::client_baseserver::rankboard_data* mutable__rank_list(int index);
  inline ::client_baseserver::rankboard_data* add__rank_list();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::rankboard_data >&
      _rank_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::rankboard_data >*
      mutable__rank_list();

  // optional .client_baseserver.rankboard_data _self_rank = 2;
  inline bool has__self_rank() const;
  inline void clear__self_rank();
  static const int kSelfRankFieldNumber = 2;
  inline const ::client_baseserver::rankboard_data& _self_rank() const;
  inline ::client_baseserver::rankboard_data* mutable__self_rank();
  inline ::client_baseserver::rankboard_data* release__self_rank();
  inline void set_allocated__self_rank(::client_baseserver::rankboard_data* _self_rank);

  // optional uint32 _pos = 3;
  inline bool has__pos() const;
  inline void clear__pos();
  static const int kPosFieldNumber = 3;
  inline ::google::protobuf::uint32 _pos() const;
  inline void set__pos(::google::protobuf::uint32 value);

  // optional uint32 _prev_pos = 4;
  inline bool has__prev_pos() const;
  inline void clear__prev_pos();
  static const int kPrevPosFieldNumber = 4;
  inline ::google::protobuf::uint32 _prev_pos() const;
  inline void set__prev_pos(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.query_rankboard)
 private:
  inline void set_has__self_rank();
  inline void clear_has__self_rank();
  inline void set_has__pos();
  inline void clear_has__pos();
  inline void set_has__prev_pos();
  inline void clear_has__prev_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::rankboard_data > _rank_list_;
  ::client_baseserver::rankboard_data* _self_rank_;
  ::google::protobuf::uint32 _pos_;
  ::google::protobuf::uint32 _prev_pos_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static query_rankboard* default_instance_;
};
// -------------------------------------------------------------------

class query_oppo_info : public ::google::protobuf::Message {
 public:
  query_oppo_info();
  virtual ~query_oppo_info();

  query_oppo_info(const query_oppo_info& from);

  inline query_oppo_info& operator=(const query_oppo_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const query_oppo_info& default_instance();

  void Swap(query_oppo_info* other);

  // implements Message ----------------------------------------------

  query_oppo_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const query_oppo_info& from);
  void MergeFrom(const query_oppo_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.ladder_opponent _user = 1;
  inline bool has__user() const;
  inline void clear__user();
  static const int kUserFieldNumber = 1;
  inline const ::client_baseserver::ladder_opponent& _user() const;
  inline ::client_baseserver::ladder_opponent* mutable__user();
  inline ::client_baseserver::ladder_opponent* release__user();
  inline void set_allocated__user(::client_baseserver::ladder_opponent* _user);

  // @@protoc_insertion_point(class_scope:client_baseserver.query_oppo_info)
 private:
  inline void set_has__user();
  inline void clear_has__user();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::ladder_opponent* _user_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static query_oppo_info* default_instance_;
};
// -------------------------------------------------------------------

class clear_battle_cd : public ::google::protobuf::Message {
 public:
  clear_battle_cd();
  virtual ~clear_battle_cd();

  clear_battle_cd(const clear_battle_cd& from);

  inline clear_battle_cd& operator=(const clear_battle_cd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const clear_battle_cd& default_instance();

  void Swap(clear_battle_cd* other);

  // implements Message ----------------------------------------------

  clear_battle_cd* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const clear_battle_cd& from);
  void MergeFrom(const clear_battle_cd& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // @@protoc_insertion_point(class_scope:client_baseserver.clear_battle_cd)
 private:
  inline void set_has__result();
  inline void clear_has__result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static clear_battle_cd* default_instance_;
};
// -------------------------------------------------------------------

class rankboard_data : public ::google::protobuf::Message {
 public:
  rankboard_data();
  virtual ~rankboard_data();

  rankboard_data(const rankboard_data& from);

  inline rankboard_data& operator=(const rankboard_data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const rankboard_data& default_instance();

  void Swap(rankboard_data* other);

  // implements Message ----------------------------------------------

  rankboard_data* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const rankboard_data& from);
  void MergeFrom(const rankboard_data& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _user_id = 1;
  inline bool has__user_id() const;
  inline void clear__user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 _user_id() const;
  inline void set__user_id(::google::protobuf::uint32 value);

  // optional .client_baseserver.user_summary _summary = 2;
  inline bool has__summary() const;
  inline void clear__summary();
  static const int kSummaryFieldNumber = 2;
  inline const ::client_baseserver::user_summary& _summary() const;
  inline ::client_baseserver::user_summary* mutable__summary();
  inline ::client_baseserver::user_summary* release__summary();
  inline void set_allocated__summary(::client_baseserver::user_summary* _summary);

  // @@protoc_insertion_point(class_scope:client_baseserver.rankboard_data)
 private:
  inline void set_has__user_id();
  inline void clear_has__user_id();
  inline void set_has__summary();
  inline void clear_has__summary();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::user_summary* _summary_;
  ::google::protobuf::uint32 _user_id_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static rankboard_data* default_instance_;
};
// -------------------------------------------------------------------

class ladder_record : public ::google::protobuf::Message {
 public:
  ladder_record();
  virtual ~ladder_record();

  ladder_record(const ladder_record& from);

  inline ladder_record& operator=(const ladder_record& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ladder_record& default_instance();

  void Swap(ladder_record* other);

  // implements Message ----------------------------------------------

  ladder_record* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ladder_record& from);
  void MergeFrom(const ladder_record& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _user_id = 1;
  inline bool has__user_id() const;
  inline void clear__user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 _user_id() const;
  inline void set__user_id(::google::protobuf::uint32 value);

  // required .client_baseserver.user_summary _summary = 2;
  inline bool has__summary() const;
  inline void clear__summary();
  static const int kSummaryFieldNumber = 2;
  inline const ::client_baseserver::user_summary& _summary() const;
  inline ::client_baseserver::user_summary* mutable__summary();
  inline ::client_baseserver::user_summary* release__summary();
  inline void set_allocated__summary(::client_baseserver::user_summary* _summary);

  // required uint32 _deta_rank = 3;
  inline bool has__deta_rank() const;
  inline void clear__deta_rank();
  static const int kDetaRankFieldNumber = 3;
  inline ::google::protobuf::uint32 _deta_rank() const;
  inline void set__deta_rank(::google::protobuf::uint32 value);

  // required uint32 _bt_time = 4;
  inline bool has__bt_time() const;
  inline void clear__bt_time();
  static const int kBtTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 _bt_time() const;
  inline void set__bt_time(::google::protobuf::uint32 value);

  // required .client_baseserver.battle_result _bt_result = 5;
  inline bool has__bt_result() const;
  inline void clear__bt_result();
  static const int kBtResultFieldNumber = 5;
  inline ::client_baseserver::battle_result _bt_result() const;
  inline void set__bt_result(::client_baseserver::battle_result value);

  // required uint32 _replay_id = 6;
  inline bool has__replay_id() const;
  inline void clear__replay_id();
  static const int kReplayIdFieldNumber = 6;
  inline ::google::protobuf::uint32 _replay_id() const;
  inline void set__replay_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.ladder_record)
 private:
  inline void set_has__user_id();
  inline void clear_has__user_id();
  inline void set_has__summary();
  inline void clear_has__summary();
  inline void set_has__deta_rank();
  inline void clear_has__deta_rank();
  inline void set_has__bt_time();
  inline void clear_has__bt_time();
  inline void set_has__bt_result();
  inline void clear_has__bt_result();
  inline void set_has__replay_id();
  inline void clear_has__replay_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::user_summary* _summary_;
  ::google::protobuf::uint32 _user_id_;
  ::google::protobuf::uint32 _deta_rank_;
  ::google::protobuf::uint32 _bt_time_;
  int _bt_result_;
  ::google::protobuf::uint32 _replay_id_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static ladder_record* default_instance_;
};
// -------------------------------------------------------------------

class ladder_opponent : public ::google::protobuf::Message {
 public:
  ladder_opponent();
  virtual ~ladder_opponent();

  ladder_opponent(const ladder_opponent& from);

  inline ladder_opponent& operator=(const ladder_opponent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ladder_opponent& default_instance();

  void Swap(ladder_opponent* other);

  // implements Message ----------------------------------------------

  ladder_opponent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ladder_opponent& from);
  void MergeFrom(const ladder_opponent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _user_id = 1;
  inline bool has__user_id() const;
  inline void clear__user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 _user_id() const;
  inline void set__user_id(::google::protobuf::uint32 value);

  // required .client_baseserver.user_summary _summary = 2;
  inline bool has__summary() const;
  inline void clear__summary();
  static const int kSummaryFieldNumber = 2;
  inline const ::client_baseserver::user_summary& _summary() const;
  inline ::client_baseserver::user_summary* mutable__summary();
  inline ::client_baseserver::user_summary* release__summary();
  inline void set_allocated__summary(::client_baseserver::user_summary* _summary);

  // required uint32 _rank = 3;
  inline bool has__rank() const;
  inline void clear__rank();
  static const int kRankFieldNumber = 3;
  inline ::google::protobuf::uint32 _rank() const;
  inline void set__rank(::google::protobuf::uint32 value);

  // required uint32 _win_cnt = 4;
  inline bool has__win_cnt() const;
  inline void clear__win_cnt();
  static const int kWinCntFieldNumber = 4;
  inline ::google::protobuf::uint32 _win_cnt() const;
  inline void set__win_cnt(::google::protobuf::uint32 value);

  // required uint32 _gs = 5;
  inline bool has__gs() const;
  inline void clear__gs();
  static const int kGsFieldNumber = 5;
  inline ::google::protobuf::uint32 _gs() const;
  inline void set__gs(::google::protobuf::uint32 value);

  // required uint32 _is_robot = 6;
  inline bool has__is_robot() const;
  inline void clear__is_robot();
  static const int kIsRobotFieldNumber = 6;
  inline ::google::protobuf::uint32 _is_robot() const;
  inline void set__is_robot(::google::protobuf::uint32 value);

  // repeated .client_baseserver.hero_summary _heros = 7;
  inline int _heros_size() const;
  inline void clear__heros();
  static const int kHerosFieldNumber = 7;
  inline const ::client_baseserver::hero_summary& _heros(int index) const;
  inline ::client_baseserver::hero_summary* mutable__heros(int index);
  inline ::client_baseserver::hero_summary* add__heros();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero_summary >&
      _heros() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero_summary >*
      mutable__heros();

  // @@protoc_insertion_point(class_scope:client_baseserver.ladder_opponent)
 private:
  inline void set_has__user_id();
  inline void clear_has__user_id();
  inline void set_has__summary();
  inline void clear_has__summary();
  inline void set_has__rank();
  inline void clear_has__rank();
  inline void set_has__win_cnt();
  inline void clear_has__win_cnt();
  inline void set_has__gs();
  inline void clear_has__gs();
  inline void set_has__is_robot();
  inline void clear_has__is_robot();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::user_summary* _summary_;
  ::google::protobuf::uint32 _user_id_;
  ::google::protobuf::uint32 _rank_;
  ::google::protobuf::uint32 _win_cnt_;
  ::google::protobuf::uint32 _gs_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero_summary > _heros_;
  ::google::protobuf::uint32 _is_robot_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static ladder_opponent* default_instance_;
};
// -------------------------------------------------------------------

class ladder_rank_reward : public ::google::protobuf::Message {
 public:
  ladder_rank_reward();
  virtual ~ladder_rank_reward();

  ladder_rank_reward(const ladder_rank_reward& from);

  inline ladder_rank_reward& operator=(const ladder_rank_reward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ladder_rank_reward& default_instance();

  void Swap(ladder_rank_reward* other);

  // implements Message ----------------------------------------------

  ladder_rank_reward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ladder_rank_reward& from);
  void MergeFrom(const ladder_rank_reward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ladder_rank_reward_reward_type reward_type;
  static const reward_type gold = ladder_rank_reward_reward_type_gold;
  static const reward_type diamond = ladder_rank_reward_reward_type_diamond;
  static const reward_type item = ladder_rank_reward_reward_type_item;
  static const reward_type arenapoint = ladder_rank_reward_reward_type_arenapoint;
  static inline bool reward_type_IsValid(int value) {
    return ladder_rank_reward_reward_type_IsValid(value);
  }
  static const reward_type reward_type_MIN =
    ladder_rank_reward_reward_type_reward_type_MIN;
  static const reward_type reward_type_MAX =
    ladder_rank_reward_reward_type_reward_type_MAX;
  static const int reward_type_ARRAYSIZE =
    ladder_rank_reward_reward_type_reward_type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  reward_type_descriptor() {
    return ladder_rank_reward_reward_type_descriptor();
  }
  static inline const ::std::string& reward_type_Name(reward_type value) {
    return ladder_rank_reward_reward_type_Name(value);
  }
  static inline bool reward_type_Parse(const ::std::string& name,
      reward_type* value) {
    return ladder_rank_reward_reward_type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .client_baseserver.ladder_rank_reward.reward_type _type = 1;
  inline bool has__type() const;
  inline void clear__type();
  static const int kTypeFieldNumber = 1;
  inline ::client_baseserver::ladder_rank_reward_reward_type _type() const;
  inline void set__type(::client_baseserver::ladder_rank_reward_reward_type value);

  // optional uint32 _param1 = 2;
  inline bool has__param1() const;
  inline void clear__param1();
  static const int kParam1FieldNumber = 2;
  inline ::google::protobuf::uint32 _param1() const;
  inline void set__param1(::google::protobuf::uint32 value);

  // optional uint32 _param2 = 3;
  inline bool has__param2() const;
  inline void clear__param2();
  static const int kParam2FieldNumber = 3;
  inline ::google::protobuf::uint32 _param2() const;
  inline void set__param2(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.ladder_rank_reward)
 private:
  inline void set_has__type();
  inline void clear_has__type();
  inline void set_has__param1();
  inline void clear_has__param1();
  inline void set_has__param2();
  inline void clear_has__param2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _type_;
  ::google::protobuf::uint32 _param1_;
  ::google::protobuf::uint32 _param2_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static ladder_rank_reward* default_instance_;
};
// -------------------------------------------------------------------

class draw_rank_reward : public ::google::protobuf::Message {
 public:
  draw_rank_reward();
  virtual ~draw_rank_reward();

  draw_rank_reward(const draw_rank_reward& from);

  inline draw_rank_reward& operator=(const draw_rank_reward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const draw_rank_reward& default_instance();

  void Swap(draw_rank_reward* other);

  // implements Message ----------------------------------------------

  draw_rank_reward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const draw_rank_reward& from);
  void MergeFrom(const draw_rank_reward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client_baseserver.ladder_rank_reward _rewards = 1;
  inline int _rewards_size() const;
  inline void clear__rewards();
  static const int kRewardsFieldNumber = 1;
  inline const ::client_baseserver::ladder_rank_reward& _rewards(int index) const;
  inline ::client_baseserver::ladder_rank_reward* mutable__rewards(int index);
  inline ::client_baseserver::ladder_rank_reward* add__rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::ladder_rank_reward >&
      _rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::ladder_rank_reward >*
      mutable__rewards();

  // @@protoc_insertion_point(class_scope:client_baseserver.draw_rank_reward)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::ladder_rank_reward > _rewards_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static draw_rank_reward* default_instance_;
};
// -------------------------------------------------------------------

class buy_battle_chance : public ::google::protobuf::Message {
 public:
  buy_battle_chance();
  virtual ~buy_battle_chance();

  buy_battle_chance(const buy_battle_chance& from);

  inline buy_battle_chance& operator=(const buy_battle_chance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const buy_battle_chance& default_instance();

  void Swap(buy_battle_chance* other);

  // implements Message ----------------------------------------------

  buy_battle_chance* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const buy_battle_chance& from);
  void MergeFrom(const buy_battle_chance& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1 [default = success];
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // optional uint32 _buy_times = 2;
  inline bool has__buy_times() const;
  inline void clear__buy_times();
  static const int kBuyTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 _buy_times() const;
  inline void set__buy_times(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.buy_battle_chance)
 private:
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__buy_times();
  inline void clear_has__buy_times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  ::google::protobuf::uint32 _buy_times_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static buy_battle_chance* default_instance_;
};
// -------------------------------------------------------------------

class set_name_reply : public ::google::protobuf::Message {
 public:
  set_name_reply();
  virtual ~set_name_reply();

  set_name_reply(const set_name_reply& from);

  inline set_name_reply& operator=(const set_name_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const set_name_reply& default_instance();

  void Swap(set_name_reply* other);

  // implements Message ----------------------------------------------

  set_name_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const set_name_reply& from);
  void MergeFrom(const set_name_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef set_name_reply_set_name_result set_name_result;
  static const set_name_result success = set_name_reply_set_name_result_success;
  static const set_name_result exists = set_name_reply_set_name_result_exists;
  static const set_name_result dirty_word = set_name_reply_set_name_result_dirty_word;
  static inline bool set_name_result_IsValid(int value) {
    return set_name_reply_set_name_result_IsValid(value);
  }
  static const set_name_result set_name_result_MIN =
    set_name_reply_set_name_result_set_name_result_MIN;
  static const set_name_result set_name_result_MAX =
    set_name_reply_set_name_result_set_name_result_MAX;
  static const int set_name_result_ARRAYSIZE =
    set_name_reply_set_name_result_set_name_result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  set_name_result_descriptor() {
    return set_name_reply_set_name_result_descriptor();
  }
  static inline const ::std::string& set_name_result_Name(set_name_result value) {
    return set_name_reply_set_name_result_Name(value);
  }
  static inline bool set_name_result_Parse(const ::std::string& name,
      set_name_result* value) {
    return set_name_reply_set_name_result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .client_baseserver.set_name_reply.set_name_result _result = 1 [default = success];
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::set_name_reply_set_name_result _result() const;
  inline void set__result(::client_baseserver::set_name_reply_set_name_result value);

  // @@protoc_insertion_point(class_scope:client_baseserver.set_name_reply)
 private:
  inline void set_has__result();
  inline void clear_has__result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static set_name_reply* default_instance_;
};
// -------------------------------------------------------------------

class set_avatar_reply : public ::google::protobuf::Message {
 public:
  set_avatar_reply();
  virtual ~set_avatar_reply();

  set_avatar_reply(const set_avatar_reply& from);

  inline set_avatar_reply& operator=(const set_avatar_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const set_avatar_reply& default_instance();

  void Swap(set_avatar_reply* other);

  // implements Message ----------------------------------------------

  set_avatar_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const set_avatar_reply& from);
  void MergeFrom(const set_avatar_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // @@protoc_insertion_point(class_scope:client_baseserver.set_avatar_reply)
 private:
  inline void set_has__result();
  inline void clear_has__result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static set_avatar_reply* default_instance_;
};
// -------------------------------------------------------------------

class query_data_reply : public ::google::protobuf::Message {
 public:
  query_data_reply();
  virtual ~query_data_reply();

  query_data_reply(const query_data_reply& from);

  inline query_data_reply& operator=(const query_data_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const query_data_reply& default_instance();

  void Swap(query_data_reply* other);

  // implements Message ----------------------------------------------

  query_data_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const query_data_reply& from);
  void MergeFrom(const query_data_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 rmb = 1;
  inline bool has_rmb() const;
  inline void clear_rmb();
  static const int kRmbFieldNumber = 1;
  inline ::google::protobuf::uint32 rmb() const;
  inline void set_rmb(::google::protobuf::uint32 value);

  // optional uint32 charge_sum = 2;
  inline bool has_charge_sum() const;
  inline void clear_charge_sum();
  static const int kChargeSumFieldNumber = 2;
  inline ::google::protobuf::uint32 charge_sum() const;
  inline void set_charge_sum(::google::protobuf::uint32 value);

  // repeated .client_baseserver.hero heroes = 3;
  inline int heroes_size() const;
  inline void clear_heroes();
  static const int kHeroesFieldNumber = 3;
  inline const ::client_baseserver::hero& heroes(int index) const;
  inline ::client_baseserver::hero* mutable_heroes(int index);
  inline ::client_baseserver::hero* add_heroes();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >&
      heroes() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >*
      mutable_heroes();

  // repeated uint32 recharge_limit = 4;
  inline int recharge_limit_size() const;
  inline void clear_recharge_limit();
  static const int kRechargeLimitFieldNumber = 4;
  inline ::google::protobuf::uint32 recharge_limit(int index) const;
  inline void set_recharge_limit(int index, ::google::protobuf::uint32 value);
  inline void add_recharge_limit(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      recharge_limit() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_recharge_limit();

  // repeated .client_baseserver.monthcard _month_card = 5;
  inline int _month_card_size() const;
  inline void clear__month_card();
  static const int kMonthCardFieldNumber = 5;
  inline const ::client_baseserver::monthcard& _month_card(int index) const;
  inline ::client_baseserver::monthcard* mutable__month_card(int index);
  inline ::client_baseserver::monthcard* add__month_card();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::monthcard >&
      _month_card() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::monthcard >*
      mutable__month_card();

  // @@protoc_insertion_point(class_scope:client_baseserver.query_data_reply)
 private:
  inline void set_has_rmb();
  inline void clear_has_rmb();
  inline void set_has_charge_sum();
  inline void clear_has_charge_sum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 rmb_;
  ::google::protobuf::uint32 charge_sum_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero > heroes_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > recharge_limit_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::monthcard > _month_card_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static query_data_reply* default_instance_;
};
// -------------------------------------------------------------------

class midas_acquire : public ::google::protobuf::Message {
 public:
  midas_acquire();
  virtual ~midas_acquire();

  midas_acquire(const midas_acquire& from);

  inline midas_acquire& operator=(const midas_acquire& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const midas_acquire& default_instance();

  void Swap(midas_acquire* other);

  // implements Message ----------------------------------------------

  midas_acquire* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const midas_acquire& from);
  void MergeFrom(const midas_acquire& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _type = 1;
  inline bool has__type() const;
  inline void clear__type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 _type() const;
  inline void set__type(::google::protobuf::uint32 value);

  // required uint32 _money = 2;
  inline bool has__money() const;
  inline void clear__money();
  static const int kMoneyFieldNumber = 2;
  inline ::google::protobuf::uint32 _money() const;
  inline void set__money(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.midas_acquire)
 private:
  inline void set_has__type();
  inline void clear_has__type();
  inline void set_has__money();
  inline void clear_has__money();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _type_;
  ::google::protobuf::uint32 _money_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static midas_acquire* default_instance_;
};
// -------------------------------------------------------------------

class midas_reply : public ::google::protobuf::Message {
 public:
  midas_reply();
  virtual ~midas_reply();

  midas_reply(const midas_reply& from);

  inline midas_reply& operator=(const midas_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const midas_reply& default_instance();

  void Swap(midas_reply* other);

  // implements Message ----------------------------------------------

  midas_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const midas_reply& from);
  void MergeFrom(const midas_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client_baseserver.midas_acquire _acquire = 1;
  inline int _acquire_size() const;
  inline void clear__acquire();
  static const int kAcquireFieldNumber = 1;
  inline const ::client_baseserver::midas_acquire& _acquire(int index) const;
  inline ::client_baseserver::midas_acquire* mutable__acquire(int index);
  inline ::client_baseserver::midas_acquire* add__acquire();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::midas_acquire >&
      _acquire() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::midas_acquire >*
      mutable__acquire();

  // @@protoc_insertion_point(class_scope:client_baseserver.midas_reply)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::midas_acquire > _acquire_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static midas_reply* default_instance_;
};
// -------------------------------------------------------------------

class open_shop_reply : public ::google::protobuf::Message {
 public:
  open_shop_reply();
  virtual ~open_shop_reply();

  open_shop_reply(const open_shop_reply& from);

  inline open_shop_reply& operator=(const open_shop_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const open_shop_reply& default_instance();

  void Swap(open_shop_reply* other);

  // implements Message ----------------------------------------------

  open_shop_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const open_shop_reply& from);
  void MergeFrom(const open_shop_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // optional .client_baseserver.user_shop _shop = 2;
  inline bool has__shop() const;
  inline void clear__shop();
  static const int kShopFieldNumber = 2;
  inline const ::client_baseserver::user_shop& _shop() const;
  inline ::client_baseserver::user_shop* mutable__shop();
  inline ::client_baseserver::user_shop* release__shop();
  inline void set_allocated__shop(::client_baseserver::user_shop* _shop);

  // @@protoc_insertion_point(class_scope:client_baseserver.open_shop_reply)
 private:
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__shop();
  inline void clear_has__shop();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::user_shop* _shop_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static open_shop_reply* default_instance_;
};
// -------------------------------------------------------------------

class charge_reply : public ::google::protobuf::Message {
 public:
  charge_reply();
  virtual ~charge_reply();

  charge_reply(const charge_reply& from);

  inline charge_reply& operator=(const charge_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const charge_reply& default_instance();

  void Swap(charge_reply* other);

  // implements Message ----------------------------------------------

  charge_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const charge_reply& from);
  void MergeFrom(const charge_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string _serial_id = 1;
  inline bool has__serial_id() const;
  inline void clear__serial_id();
  static const int kSerialIdFieldNumber = 1;
  inline const ::std::string& _serial_id() const;
  inline void set__serial_id(const ::std::string& value);
  inline void set__serial_id(const char* value);
  inline void set__serial_id(const char* value, size_t size);
  inline ::std::string* mutable__serial_id();
  inline ::std::string* release__serial_id();
  inline void set_allocated__serial_id(::std::string* _serial_id);

  // required uint32 _charge_id = 2;
  inline bool has__charge_id() const;
  inline void clear__charge_id();
  static const int kChargeIdFieldNumber = 2;
  inline ::google::protobuf::uint32 _charge_id() const;
  inline void set__charge_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.charge_reply)
 private:
  inline void set_has__serial_id();
  inline void clear_has__serial_id();
  inline void set_has__charge_id();
  inline void clear_has__charge_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* _serial_id_;
  ::google::protobuf::uint32 _charge_id_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static charge_reply* default_instance_;
};
// -------------------------------------------------------------------

class notify_msg : public ::google::protobuf::Message {
 public:
  notify_msg();
  virtual ~notify_msg();

  notify_msg(const notify_msg& from);

  inline notify_msg& operator=(const notify_msg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const notify_msg& default_instance();

  void Swap(notify_msg* other);

  // implements Message ----------------------------------------------

  notify_msg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const notify_msg& from);
  void MergeFrom(const notify_msg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client_baseserver.ladder_notify _ladder_notify = 1;
  inline bool has__ladder_notify() const;
  inline void clear__ladder_notify();
  static const int kLadderNotifyFieldNumber = 1;
  inline const ::client_baseserver::ladder_notify& _ladder_notify() const;
  inline ::client_baseserver::ladder_notify* mutable__ladder_notify();
  inline ::client_baseserver::ladder_notify* release__ladder_notify();
  inline void set_allocated__ladder_notify(::client_baseserver::ladder_notify* _ladder_notify);

  // optional uint32 _new_mail = 2;
  inline bool has__new_mail() const;
  inline void clear__new_mail();
  static const int kNewMailFieldNumber = 2;
  inline ::google::protobuf::uint32 _new_mail() const;
  inline void set__new_mail(::google::protobuf::uint32 value);

  // optional uint32 _guild_chat = 3;
  inline bool has__guild_chat() const;
  inline void clear__guild_chat();
  static const int kGuildChatFieldNumber = 3;
  inline ::google::protobuf::uint32 _guild_chat() const;
  inline void set__guild_chat(::google::protobuf::uint32 value);

  // optional uint32 _activity_notify = 4;
  inline bool has__activity_notify() const;
  inline void clear__activity_notify();
  static const int kActivityNotifyFieldNumber = 4;
  inline ::google::protobuf::uint32 _activity_notify() const;
  inline void set__activity_notify(::google::protobuf::uint32 value);

  // optional uint32 _activity_reward = 5;
  inline bool has__activity_reward() const;
  inline void clear__activity_reward();
  static const int kActivityRewardFieldNumber = 5;
  inline ::google::protobuf::uint32 _activity_reward() const;
  inline void set__activity_reward(::google::protobuf::uint32 value);

  // repeated uint32 _release_heroes = 6;
  inline int _release_heroes_size() const;
  inline void clear__release_heroes();
  static const int kReleaseHeroesFieldNumber = 6;
  inline ::google::protobuf::uint32 _release_heroes(int index) const;
  inline void set__release_heroes(int index, ::google::protobuf::uint32 value);
  inline void add__release_heroes(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _release_heroes() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__release_heroes();

  // optional uint32 _excav_record = 7;
  inline bool has__excav_record() const;
  inline void clear__excav_record();
  static const int kExcavRecordFieldNumber = 7;
  inline ::google::protobuf::uint32 _excav_record() const;
  inline void set__excav_record(::google::protobuf::uint32 value);

  // optional uint32 _guild_drop = 8;
  inline bool has__guild_drop() const;
  inline void clear__guild_drop();
  static const int kGuildDropFieldNumber = 8;
  inline ::google::protobuf::uint32 _guild_drop() const;
  inline void set__guild_drop(::google::protobuf::uint32 value);

  // optional uint32 _personal_chat = 9;
  inline bool has__personal_chat() const;
  inline void clear__personal_chat();
  static const int kPersonalChatFieldNumber = 9;
  inline ::google::protobuf::uint32 _personal_chat() const;
  inline void set__personal_chat(::google::protobuf::uint32 value);

  // optional uint32 _splitable_heroes = 10;
  inline bool has__splitable_heroes() const;
  inline void clear__splitable_heroes();
  static const int kSplitableHeroesFieldNumber = 10;
  inline ::google::protobuf::uint32 _splitable_heroes() const;
  inline void set__splitable_heroes(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.notify_msg)
 private:
  inline void set_has__ladder_notify();
  inline void clear_has__ladder_notify();
  inline void set_has__new_mail();
  inline void clear_has__new_mail();
  inline void set_has__guild_chat();
  inline void clear_has__guild_chat();
  inline void set_has__activity_notify();
  inline void clear_has__activity_notify();
  inline void set_has__activity_reward();
  inline void clear_has__activity_reward();
  inline void set_has__excav_record();
  inline void clear_has__excav_record();
  inline void set_has__guild_drop();
  inline void clear_has__guild_drop();
  inline void set_has__personal_chat();
  inline void clear_has__personal_chat();
  inline void set_has__splitable_heroes();
  inline void clear_has__splitable_heroes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::ladder_notify* _ladder_notify_;
  ::google::protobuf::uint32 _new_mail_;
  ::google::protobuf::uint32 _guild_chat_;
  ::google::protobuf::uint32 _activity_notify_;
  ::google::protobuf::uint32 _activity_reward_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _release_heroes_;
  ::google::protobuf::uint32 _excav_record_;
  ::google::protobuf::uint32 _guild_drop_;
  ::google::protobuf::uint32 _personal_chat_;
  ::google::protobuf::uint32 _splitable_heroes_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static notify_msg* default_instance_;
};
// -------------------------------------------------------------------

class ladder_notify : public ::google::protobuf::Message {
 public:
  ladder_notify();
  virtual ~ladder_notify();

  ladder_notify(const ladder_notify& from);

  inline ladder_notify& operator=(const ladder_notify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ladder_notify& default_instance();

  void Swap(ladder_notify* other);

  // implements Message ----------------------------------------------

  ladder_notify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ladder_notify& from);
  void MergeFrom(const ladder_notify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 _is_attacked = 1;
  inline bool has__is_attacked() const;
  inline void clear__is_attacked();
  static const int kIsAttackedFieldNumber = 1;
  inline ::google::protobuf::uint32 _is_attacked() const;
  inline void set__is_attacked(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.ladder_notify)
 private:
  inline void set_has__is_attacked();
  inline void clear_has__is_attacked();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _is_attacked_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static ladder_notify* default_instance_;
};
// -------------------------------------------------------------------

class tbc_reply : public ::google::protobuf::Message {
 public:
  tbc_reply();
  virtual ~tbc_reply();

  tbc_reply(const tbc_reply& from);

  inline tbc_reply& operator=(const tbc_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tbc_reply& default_instance();

  void Swap(tbc_reply* other);

  // implements Message ----------------------------------------------

  tbc_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tbc_reply& from);
  void MergeFrom(const tbc_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client_baseserver.tbc_open_panel _open_panel = 1;
  inline bool has__open_panel() const;
  inline void clear__open_panel();
  static const int kOpenPanelFieldNumber = 1;
  inline const ::client_baseserver::tbc_open_panel& _open_panel() const;
  inline ::client_baseserver::tbc_open_panel* mutable__open_panel();
  inline ::client_baseserver::tbc_open_panel* release__open_panel();
  inline void set_allocated__open_panel(::client_baseserver::tbc_open_panel* _open_panel);

  // optional .client_baseserver.tbc_query_oppo _query_oppo = 2;
  inline bool has__query_oppo() const;
  inline void clear__query_oppo();
  static const int kQueryOppoFieldNumber = 2;
  inline const ::client_baseserver::tbc_query_oppo& _query_oppo() const;
  inline ::client_baseserver::tbc_query_oppo* mutable__query_oppo();
  inline ::client_baseserver::tbc_query_oppo* release__query_oppo();
  inline void set_allocated__query_oppo(::client_baseserver::tbc_query_oppo* _query_oppo);

  // optional .client_baseserver.tbc_start_battle _start_bat = 3;
  inline bool has__start_bat() const;
  inline void clear__start_bat();
  static const int kStartBatFieldNumber = 3;
  inline const ::client_baseserver::tbc_start_battle& _start_bat() const;
  inline ::client_baseserver::tbc_start_battle* mutable__start_bat();
  inline ::client_baseserver::tbc_start_battle* release__start_bat();
  inline void set_allocated__start_bat(::client_baseserver::tbc_start_battle* _start_bat);

  // optional .client_baseserver.tbc_end_battle _end_bat = 4;
  inline bool has__end_bat() const;
  inline void clear__end_bat();
  static const int kEndBatFieldNumber = 4;
  inline const ::client_baseserver::tbc_end_battle& _end_bat() const;
  inline ::client_baseserver::tbc_end_battle* mutable__end_bat();
  inline ::client_baseserver::tbc_end_battle* release__end_bat();
  inline void set_allocated__end_bat(::client_baseserver::tbc_end_battle* _end_bat);

  // optional .client_baseserver.tbc_reset _reset = 5;
  inline bool has__reset() const;
  inline void clear__reset();
  static const int kResetFieldNumber = 5;
  inline const ::client_baseserver::tbc_reset& _reset() const;
  inline ::client_baseserver::tbc_reset* mutable__reset();
  inline ::client_baseserver::tbc_reset* release__reset();
  inline void set_allocated__reset(::client_baseserver::tbc_reset* _reset);

  // optional .client_baseserver.tbc_draw_reward _draw_reward = 6;
  inline bool has__draw_reward() const;
  inline void clear__draw_reward();
  static const int kDrawRewardFieldNumber = 6;
  inline const ::client_baseserver::tbc_draw_reward& _draw_reward() const;
  inline ::client_baseserver::tbc_draw_reward* mutable__draw_reward();
  inline ::client_baseserver::tbc_draw_reward* release__draw_reward();
  inline void set_allocated__draw_reward(::client_baseserver::tbc_draw_reward* _draw_reward);

  // @@protoc_insertion_point(class_scope:client_baseserver.tbc_reply)
 private:
  inline void set_has__open_panel();
  inline void clear_has__open_panel();
  inline void set_has__query_oppo();
  inline void clear_has__query_oppo();
  inline void set_has__start_bat();
  inline void clear_has__start_bat();
  inline void set_has__end_bat();
  inline void clear_has__end_bat();
  inline void set_has__reset();
  inline void clear_has__reset();
  inline void set_has__draw_reward();
  inline void clear_has__draw_reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::tbc_open_panel* _open_panel_;
  ::client_baseserver::tbc_query_oppo* _query_oppo_;
  ::client_baseserver::tbc_start_battle* _start_bat_;
  ::client_baseserver::tbc_end_battle* _end_bat_;
  ::client_baseserver::tbc_reset* _reset_;
  ::client_baseserver::tbc_draw_reward* _draw_reward_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static tbc_reply* default_instance_;
};
// -------------------------------------------------------------------

class tbc_self_hero : public ::google::protobuf::Message {
 public:
  tbc_self_hero();
  virtual ~tbc_self_hero();

  tbc_self_hero(const tbc_self_hero& from);

  inline tbc_self_hero& operator=(const tbc_self_hero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tbc_self_hero& default_instance();

  void Swap(tbc_self_hero* other);

  // implements Message ----------------------------------------------

  tbc_self_hero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tbc_self_hero& from);
  void MergeFrom(const tbc_self_hero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _tid = 1;
  inline bool has__tid() const;
  inline void clear__tid();
  static const int kTidFieldNumber = 1;
  inline ::google::protobuf::uint32 _tid() const;
  inline void set__tid(::google::protobuf::uint32 value);

  // required .client_baseserver.hero_dyna _dyna = 2;
  inline bool has__dyna() const;
  inline void clear__dyna();
  static const int kDynaFieldNumber = 2;
  inline const ::client_baseserver::hero_dyna& _dyna() const;
  inline ::client_baseserver::hero_dyna* mutable__dyna();
  inline ::client_baseserver::hero_dyna* release__dyna();
  inline void set_allocated__dyna(::client_baseserver::hero_dyna* _dyna);

  // @@protoc_insertion_point(class_scope:client_baseserver.tbc_self_hero)
 private:
  inline void set_has__tid();
  inline void clear_has__tid();
  inline void set_has__dyna();
  inline void clear_has__dyna();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::hero_dyna* _dyna_;
  ::google::protobuf::uint32 _tid_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static tbc_self_hero* default_instance_;
};
// -------------------------------------------------------------------

class tbc_oppo_hero : public ::google::protobuf::Message {
 public:
  tbc_oppo_hero();
  virtual ~tbc_oppo_hero();

  tbc_oppo_hero(const tbc_oppo_hero& from);

  inline tbc_oppo_hero& operator=(const tbc_oppo_hero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tbc_oppo_hero& default_instance();

  void Swap(tbc_oppo_hero* other);

  // implements Message ----------------------------------------------

  tbc_oppo_hero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tbc_oppo_hero& from);
  void MergeFrom(const tbc_oppo_hero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.hero _base = 1;
  inline bool has__base() const;
  inline void clear__base();
  static const int kBaseFieldNumber = 1;
  inline const ::client_baseserver::hero& _base() const;
  inline ::client_baseserver::hero* mutable__base();
  inline ::client_baseserver::hero* release__base();
  inline void set_allocated__base(::client_baseserver::hero* _base);

  // required .client_baseserver.hero_dyna _dyna = 2;
  inline bool has__dyna() const;
  inline void clear__dyna();
  static const int kDynaFieldNumber = 2;
  inline const ::client_baseserver::hero_dyna& _dyna() const;
  inline ::client_baseserver::hero_dyna* mutable__dyna();
  inline ::client_baseserver::hero_dyna* release__dyna();
  inline void set_allocated__dyna(::client_baseserver::hero_dyna* _dyna);

  // @@protoc_insertion_point(class_scope:client_baseserver.tbc_oppo_hero)
 private:
  inline void set_has__base();
  inline void clear_has__base();
  inline void set_has__dyna();
  inline void clear_has__dyna();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::hero* _base_;
  ::client_baseserver::hero_dyna* _dyna_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static tbc_oppo_hero* default_instance_;
};
// -------------------------------------------------------------------

class tbc_reward : public ::google::protobuf::Message {
 public:
  tbc_reward();
  virtual ~tbc_reward();

  tbc_reward(const tbc_reward& from);

  inline tbc_reward& operator=(const tbc_reward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tbc_reward& default_instance();

  void Swap(tbc_reward* other);

  // implements Message ----------------------------------------------

  tbc_reward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tbc_reward& from);
  void MergeFrom(const tbc_reward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef tbc_reward_type type;
  static const type gold = tbc_reward_type_gold;
  static const type diamond = tbc_reward_type_diamond;
  static const type item = tbc_reward_type_item;
  static const type chest = tbc_reward_type_chest;
  static const type crusadepoint = tbc_reward_type_crusadepoint;
  static const type chestbox = tbc_reward_type_chestbox;
  static inline bool type_IsValid(int value) {
    return tbc_reward_type_IsValid(value);
  }
  static const type type_MIN =
    tbc_reward_type_type_MIN;
  static const type type_MAX =
    tbc_reward_type_type_MAX;
  static const int type_ARRAYSIZE =
    tbc_reward_type_type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  type_descriptor() {
    return tbc_reward_type_descriptor();
  }
  static inline const ::std::string& type_Name(type value) {
    return tbc_reward_type_Name(value);
  }
  static inline bool type_Parse(const ::std::string& name,
      type* value) {
    return tbc_reward_type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .client_baseserver.tbc_reward.type _type = 1;
  inline bool has__type() const;
  inline void clear__type();
  static const int kTypeFieldNumber = 1;
  inline ::client_baseserver::tbc_reward_type _type() const;
  inline void set__type(::client_baseserver::tbc_reward_type value);

  // optional uint32 _param1 = 2;
  inline bool has__param1() const;
  inline void clear__param1();
  static const int kParam1FieldNumber = 2;
  inline ::google::protobuf::uint32 _param1() const;
  inline void set__param1(::google::protobuf::uint32 value);

  // optional uint32 _param2 = 3;
  inline bool has__param2() const;
  inline void clear__param2();
  static const int kParam2FieldNumber = 3;
  inline ::google::protobuf::uint32 _param2() const;
  inline void set__param2(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.tbc_reward)
 private:
  inline void set_has__type();
  inline void clear_has__type();
  inline void set_has__param1();
  inline void clear_has__param1();
  inline void set_has__param2();
  inline void clear_has__param2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _type_;
  ::google::protobuf::uint32 _param1_;
  ::google::protobuf::uint32 _param2_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static tbc_reward* default_instance_;
};
// -------------------------------------------------------------------

class tbc_stage : public ::google::protobuf::Message {
 public:
  tbc_stage();
  virtual ~tbc_stage();

  tbc_stage(const tbc_stage& from);

  inline tbc_stage& operator=(const tbc_stage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tbc_stage& default_instance();

  void Swap(tbc_stage* other);

  // implements Message ----------------------------------------------

  tbc_stage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tbc_stage& from);
  void MergeFrom(const tbc_stage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef tbc_stage_status status;
  static const status unpassed = tbc_stage_status_unpassed;
  static const status passed = tbc_stage_status_passed;
  static const status rewarded = tbc_stage_status_rewarded;
  static inline bool status_IsValid(int value) {
    return tbc_stage_status_IsValid(value);
  }
  static const status status_MIN =
    tbc_stage_status_status_MIN;
  static const status status_MAX =
    tbc_stage_status_status_MAX;
  static const int status_ARRAYSIZE =
    tbc_stage_status_status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  status_descriptor() {
    return tbc_stage_status_descriptor();
  }
  static inline const ::std::string& status_Name(status value) {
    return tbc_stage_status_Name(value);
  }
  static inline bool status_Parse(const ::std::string& name,
      status* value) {
    return tbc_stage_status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .client_baseserver.tbc_stage.status _status = 1 [default = unpassed];
  inline bool has__status() const;
  inline void clear__status();
  static const int kStatusFieldNumber = 1;
  inline ::client_baseserver::tbc_stage_status _status() const;
  inline void set__status(::client_baseserver::tbc_stage_status value);

  // repeated .client_baseserver.tbc_reward _rewards = 2;
  inline int _rewards_size() const;
  inline void clear__rewards();
  static const int kRewardsFieldNumber = 2;
  inline const ::client_baseserver::tbc_reward& _rewards(int index) const;
  inline ::client_baseserver::tbc_reward* mutable__rewards(int index);
  inline ::client_baseserver::tbc_reward* add__rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::tbc_reward >&
      _rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::tbc_reward >*
      mutable__rewards();

  // @@protoc_insertion_point(class_scope:client_baseserver.tbc_stage)
 private:
  inline void set_has__status();
  inline void clear_has__status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::tbc_reward > _rewards_;
  int _status_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static tbc_stage* default_instance_;
};
// -------------------------------------------------------------------

class tbc_info : public ::google::protobuf::Message {
 public:
  tbc_info();
  virtual ~tbc_info();

  tbc_info(const tbc_info& from);

  inline tbc_info& operator=(const tbc_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tbc_info& default_instance();

  void Swap(tbc_info* other);

  // implements Message ----------------------------------------------

  tbc_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tbc_info& from);
  void MergeFrom(const tbc_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _cur_stage = 1;
  inline bool has__cur_stage() const;
  inline void clear__cur_stage();
  static const int kCurStageFieldNumber = 1;
  inline ::google::protobuf::uint32 _cur_stage() const;
  inline void set__cur_stage(::google::protobuf::uint32 value);

  // required uint32 _reset_times = 2;
  inline bool has__reset_times() const;
  inline void clear__reset_times();
  static const int kResetTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 _reset_times() const;
  inline void set__reset_times(::google::protobuf::uint32 value);

  // repeated .client_baseserver.tbc_self_hero _heroes = 3;
  inline int _heroes_size() const;
  inline void clear__heroes();
  static const int kHeroesFieldNumber = 3;
  inline const ::client_baseserver::tbc_self_hero& _heroes(int index) const;
  inline ::client_baseserver::tbc_self_hero* mutable__heroes(int index);
  inline ::client_baseserver::tbc_self_hero* add__heroes();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::tbc_self_hero >&
      _heroes() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::tbc_self_hero >*
      mutable__heroes();

  // repeated .client_baseserver.tbc_stage _stages = 4;
  inline int _stages_size() const;
  inline void clear__stages();
  static const int kStagesFieldNumber = 4;
  inline const ::client_baseserver::tbc_stage& _stages(int index) const;
  inline ::client_baseserver::tbc_stage* mutable__stages(int index);
  inline ::client_baseserver::tbc_stage* add__stages();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::tbc_stage >&
      _stages() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::tbc_stage >*
      mutable__stages();

  // optional .client_baseserver.hire_data _hire_hero = 5;
  inline bool has__hire_hero() const;
  inline void clear__hire_hero();
  static const int kHireHeroFieldNumber = 5;
  inline const ::client_baseserver::hire_data& _hire_hero() const;
  inline ::client_baseserver::hire_data* mutable__hire_hero();
  inline ::client_baseserver::hire_data* release__hire_hero();
  inline void set_allocated__hire_hero(::client_baseserver::hire_data* _hire_hero);

  // @@protoc_insertion_point(class_scope:client_baseserver.tbc_info)
 private:
  inline void set_has__cur_stage();
  inline void clear_has__cur_stage();
  inline void set_has__reset_times();
  inline void clear_has__reset_times();
  inline void set_has__hire_hero();
  inline void clear_has__hire_hero();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _cur_stage_;
  ::google::protobuf::uint32 _reset_times_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::tbc_self_hero > _heroes_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::tbc_stage > _stages_;
  ::client_baseserver::hire_data* _hire_hero_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static tbc_info* default_instance_;
};
// -------------------------------------------------------------------

class tbc_open_panel : public ::google::protobuf::Message {
 public:
  tbc_open_panel();
  virtual ~tbc_open_panel();

  tbc_open_panel(const tbc_open_panel& from);

  inline tbc_open_panel& operator=(const tbc_open_panel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tbc_open_panel& default_instance();

  void Swap(tbc_open_panel* other);

  // implements Message ----------------------------------------------

  tbc_open_panel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tbc_open_panel& from);
  void MergeFrom(const tbc_open_panel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.tbc_info _info = 1;
  inline bool has__info() const;
  inline void clear__info();
  static const int kInfoFieldNumber = 1;
  inline const ::client_baseserver::tbc_info& _info() const;
  inline ::client_baseserver::tbc_info* mutable__info();
  inline ::client_baseserver::tbc_info* release__info();
  inline void set_allocated__info(::client_baseserver::tbc_info* _info);

  // @@protoc_insertion_point(class_scope:client_baseserver.tbc_open_panel)
 private:
  inline void set_has__info();
  inline void clear_has__info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::tbc_info* _info_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static tbc_open_panel* default_instance_;
};
// -------------------------------------------------------------------

class tbc_query_oppo : public ::google::protobuf::Message {
 public:
  tbc_query_oppo();
  virtual ~tbc_query_oppo();

  tbc_query_oppo(const tbc_query_oppo& from);

  inline tbc_query_oppo& operator=(const tbc_query_oppo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tbc_query_oppo& default_instance();

  void Swap(tbc_query_oppo* other);

  // implements Message ----------------------------------------------

  tbc_query_oppo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tbc_query_oppo& from);
  void MergeFrom(const tbc_query_oppo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.user_summary _summary = 1;
  inline bool has__summary() const;
  inline void clear__summary();
  static const int kSummaryFieldNumber = 1;
  inline const ::client_baseserver::user_summary& _summary() const;
  inline ::client_baseserver::user_summary* mutable__summary();
  inline ::client_baseserver::user_summary* release__summary();
  inline void set_allocated__summary(::client_baseserver::user_summary* _summary);

  // repeated .client_baseserver.tbc_oppo_hero _oppos = 2;
  inline int _oppos_size() const;
  inline void clear__oppos();
  static const int kOpposFieldNumber = 2;
  inline const ::client_baseserver::tbc_oppo_hero& _oppos(int index) const;
  inline ::client_baseserver::tbc_oppo_hero* mutable__oppos(int index);
  inline ::client_baseserver::tbc_oppo_hero* add__oppos();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::tbc_oppo_hero >&
      _oppos() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::tbc_oppo_hero >*
      mutable__oppos();

  // required uint32 _is_robot = 3;
  inline bool has__is_robot() const;
  inline void clear__is_robot();
  static const int kIsRobotFieldNumber = 3;
  inline ::google::protobuf::uint32 _is_robot() const;
  inline void set__is_robot(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.tbc_query_oppo)
 private:
  inline void set_has__summary();
  inline void clear_has__summary();
  inline void set_has__is_robot();
  inline void clear_has__is_robot();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::user_summary* _summary_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::tbc_oppo_hero > _oppos_;
  ::google::protobuf::uint32 _is_robot_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static tbc_query_oppo* default_instance_;
};
// -------------------------------------------------------------------

class tbc_start_battle : public ::google::protobuf::Message {
 public:
  tbc_start_battle();
  virtual ~tbc_start_battle();

  tbc_start_battle(const tbc_start_battle& from);

  inline tbc_start_battle& operator=(const tbc_start_battle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tbc_start_battle& default_instance();

  void Swap(tbc_start_battle* other);

  // implements Message ----------------------------------------------

  tbc_start_battle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tbc_start_battle& from);
  void MergeFrom(const tbc_start_battle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1 [default = success];
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // required uint32 _rseed = 2;
  inline bool has__rseed() const;
  inline void clear__rseed();
  static const int kRseedFieldNumber = 2;
  inline ::google::protobuf::uint32 _rseed() const;
  inline void set__rseed(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.tbc_start_battle)
 private:
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__rseed();
  inline void clear_has__rseed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  ::google::protobuf::uint32 _rseed_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static tbc_start_battle* default_instance_;
};
// -------------------------------------------------------------------

class tbc_end_battle : public ::google::protobuf::Message {
 public:
  tbc_end_battle();
  virtual ~tbc_end_battle();

  tbc_end_battle(const tbc_end_battle& from);

  inline tbc_end_battle& operator=(const tbc_end_battle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tbc_end_battle& default_instance();

  void Swap(tbc_end_battle* other);

  // implements Message ----------------------------------------------

  tbc_end_battle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tbc_end_battle& from);
  void MergeFrom(const tbc_end_battle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.battle_result _result = 1 [default = victory];
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::battle_result _result() const;
  inline void set__result(::client_baseserver::battle_result value);

  // @@protoc_insertion_point(class_scope:client_baseserver.tbc_end_battle)
 private:
  inline void set_has__result();
  inline void clear_has__result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static tbc_end_battle* default_instance_;
};
// -------------------------------------------------------------------

class tbc_reset : public ::google::protobuf::Message {
 public:
  tbc_reset();
  virtual ~tbc_reset();

  tbc_reset(const tbc_reset& from);

  inline tbc_reset& operator=(const tbc_reset& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tbc_reset& default_instance();

  void Swap(tbc_reset* other);

  // implements Message ----------------------------------------------

  tbc_reset* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tbc_reset& from);
  void MergeFrom(const tbc_reset& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1 [default = success];
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // optional .client_baseserver.tbc_info _info = 2;
  inline bool has__info() const;
  inline void clear__info();
  static const int kInfoFieldNumber = 2;
  inline const ::client_baseserver::tbc_info& _info() const;
  inline ::client_baseserver::tbc_info* mutable__info();
  inline ::client_baseserver::tbc_info* release__info();
  inline void set_allocated__info(::client_baseserver::tbc_info* _info);

  // @@protoc_insertion_point(class_scope:client_baseserver.tbc_reset)
 private:
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__info();
  inline void clear_has__info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::tbc_info* _info_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static tbc_reset* default_instance_;
};
// -------------------------------------------------------------------

class tbc_draw_reward : public ::google::protobuf::Message {
 public:
  tbc_draw_reward();
  virtual ~tbc_draw_reward();

  tbc_draw_reward(const tbc_draw_reward& from);

  inline tbc_draw_reward& operator=(const tbc_draw_reward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tbc_draw_reward& default_instance();

  void Swap(tbc_draw_reward* other);

  // implements Message ----------------------------------------------

  tbc_draw_reward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tbc_draw_reward& from);
  void MergeFrom(const tbc_draw_reward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1 [default = success];
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // required uint32 _stage_id = 2;
  inline bool has__stage_id() const;
  inline void clear__stage_id();
  static const int kStageIdFieldNumber = 2;
  inline ::google::protobuf::uint32 _stage_id() const;
  inline void set__stage_id(::google::protobuf::uint32 value);

  // repeated .client_baseserver.tbc_reward _rewards = 3;
  inline int _rewards_size() const;
  inline void clear__rewards();
  static const int kRewardsFieldNumber = 3;
  inline const ::client_baseserver::tbc_reward& _rewards(int index) const;
  inline ::client_baseserver::tbc_reward* mutable__rewards(int index);
  inline ::client_baseserver::tbc_reward* add__rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::tbc_reward >&
      _rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::tbc_reward >*
      mutable__rewards();

  // repeated .client_baseserver.hero _heroes = 4;
  inline int _heroes_size() const;
  inline void clear__heroes();
  static const int kHeroesFieldNumber = 4;
  inline const ::client_baseserver::hero& _heroes(int index) const;
  inline ::client_baseserver::hero* mutable__heroes(int index);
  inline ::client_baseserver::hero* add__heroes();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >&
      _heroes() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >*
      mutable__heroes();

  // @@protoc_insertion_point(class_scope:client_baseserver.tbc_draw_reward)
 private:
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__stage_id();
  inline void clear_has__stage_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  ::google::protobuf::uint32 _stage_id_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::tbc_reward > _rewards_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero > _heroes_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static tbc_draw_reward* default_instance_;
};
// -------------------------------------------------------------------

class get_maillist_reply : public ::google::protobuf::Message {
 public:
  get_maillist_reply();
  virtual ~get_maillist_reply();

  get_maillist_reply(const get_maillist_reply& from);

  inline get_maillist_reply& operator=(const get_maillist_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const get_maillist_reply& default_instance();

  void Swap(get_maillist_reply* other);

  // implements Message ----------------------------------------------

  get_maillist_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const get_maillist_reply& from);
  void MergeFrom(const get_maillist_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client_baseserver.sys_mail _sys_mail_list = 1;
  inline int _sys_mail_list_size() const;
  inline void clear__sys_mail_list();
  static const int kSysMailListFieldNumber = 1;
  inline const ::client_baseserver::sys_mail& _sys_mail_list(int index) const;
  inline ::client_baseserver::sys_mail* mutable__sys_mail_list(int index);
  inline ::client_baseserver::sys_mail* add__sys_mail_list();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::sys_mail >&
      _sys_mail_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::sys_mail >*
      mutable__sys_mail_list();

  // @@protoc_insertion_point(class_scope:client_baseserver.get_maillist_reply)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::sys_mail > _sys_mail_list_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static get_maillist_reply* default_instance_;
};
// -------------------------------------------------------------------

class sys_mail : public ::google::protobuf::Message {
 public:
  sys_mail();
  virtual ~sys_mail();

  sys_mail(const sys_mail& from);

  inline sys_mail& operator=(const sys_mail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const sys_mail& default_instance();

  void Swap(sys_mail* other);

  // implements Message ----------------------------------------------

  sys_mail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const sys_mail& from);
  void MergeFrom(const sys_mail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef sys_mail_status status;
  static const status unread = sys_mail_status_unread;
  static const status read = sys_mail_status_read;
  static const status delete = sys_mail_status_delete;
  static inline bool status_IsValid(int value) {
    return sys_mail_status_IsValid(value);
  }
  static const status status_MIN =
    sys_mail_status_status_MIN;
  static const status status_MAX =
    sys_mail_status_status_MAX;
  static const int status_ARRAYSIZE =
    sys_mail_status_status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  status_descriptor() {
    return sys_mail_status_descriptor();
  }
  static inline const ::std::string& status_Name(status value) {
    return sys_mail_status_Name(value);
  }
  static inline bool status_Parse(const ::std::string& name,
      status* value) {
    return sys_mail_status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint32 _id = 1;
  inline bool has__id() const;
  inline void clear__id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 _id() const;
  inline void set__id(::google::protobuf::uint32 value);

  // required .client_baseserver.sys_mail.status _status = 2;
  inline bool has__status() const;
  inline void clear__status();
  static const int kStatusFieldNumber = 2;
  inline ::client_baseserver::sys_mail_status _status() const;
  inline void set__status(::client_baseserver::sys_mail_status value);

  // required uint32 _mail_time = 3;
  inline bool has__mail_time() const;
  inline void clear__mail_time();
  static const int kMailTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 _mail_time() const;
  inline void set__mail_time(::google::protobuf::uint32 value);

  // required uint32 _expire_time = 4;
  inline bool has__expire_time() const;
  inline void clear__expire_time();
  static const int kExpireTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 _expire_time() const;
  inline void set__expire_time(::google::protobuf::uint32 value);

  // required .client_baseserver.mail_content _content = 5;
  inline bool has__content() const;
  inline void clear__content();
  static const int kContentFieldNumber = 5;
  inline const ::client_baseserver::mail_content& _content() const;
  inline ::client_baseserver::mail_content* mutable__content();
  inline ::client_baseserver::mail_content* release__content();
  inline void set_allocated__content(::client_baseserver::mail_content* _content);

  // optional uint32 _money = 6;
  inline bool has__money() const;
  inline void clear__money();
  static const int kMoneyFieldNumber = 6;
  inline ::google::protobuf::uint32 _money() const;
  inline void set__money(::google::protobuf::uint32 value);

  // optional uint32 _diamonds = 7;
  inline bool has__diamonds() const;
  inline void clear__diamonds();
  static const int kDiamondsFieldNumber = 7;
  inline ::google::protobuf::uint32 _diamonds() const;
  inline void set__diamonds(::google::protobuf::uint32 value);

  // optional uint32 _skill_point = 8;
  inline bool has__skill_point() const;
  inline void clear__skill_point();
  static const int kSkillPointFieldNumber = 8;
  inline ::google::protobuf::uint32 _skill_point() const;
  inline void set__skill_point(::google::protobuf::uint32 value);

  // repeated uint32 _items = 9;
  inline int _items_size() const;
  inline void clear__items();
  static const int kItemsFieldNumber = 9;
  inline ::google::protobuf::uint32 _items(int index) const;
  inline void set__items(int index, ::google::protobuf::uint32 value);
  inline void add__items(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _items() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__items();

  // required uint32 _type = 11;
  inline bool has__type() const;
  inline void clear__type();
  static const int kTypeFieldNumber = 11;
  inline ::google::protobuf::uint32 _type() const;
  inline void set__type(::google::protobuf::uint32 value);

  // repeated .client_baseserver.user_point _points = 10;
  inline int _points_size() const;
  inline void clear__points();
  static const int kPointsFieldNumber = 10;
  inline const ::client_baseserver::user_point& _points(int index) const;
  inline ::client_baseserver::user_point* mutable__points(int index);
  inline ::client_baseserver::user_point* add__points();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::user_point >&
      _points() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::user_point >*
      mutable__points();

  // @@protoc_insertion_point(class_scope:client_baseserver.sys_mail)
 private:
  inline void set_has__id();
  inline void clear_has__id();
  inline void set_has__status();
  inline void clear_has__status();
  inline void set_has__mail_time();
  inline void clear_has__mail_time();
  inline void set_has__expire_time();
  inline void clear_has__expire_time();
  inline void set_has__content();
  inline void clear_has__content();
  inline void set_has__money();
  inline void clear_has__money();
  inline void set_has__diamonds();
  inline void clear_has__diamonds();
  inline void set_has__skill_point();
  inline void clear_has__skill_point();
  inline void set_has__type();
  inline void clear_has__type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _id_;
  int _status_;
  ::google::protobuf::uint32 _mail_time_;
  ::google::protobuf::uint32 _expire_time_;
  ::client_baseserver::mail_content* _content_;
  ::google::protobuf::uint32 _money_;
  ::google::protobuf::uint32 _diamonds_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _items_;
  ::google::protobuf::uint32 _skill_point_;
  ::google::protobuf::uint32 _type_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::user_point > _points_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static sys_mail* default_instance_;
};
// -------------------------------------------------------------------

class mail_content : public ::google::protobuf::Message {
 public:
  mail_content();
  virtual ~mail_content();

  mail_content(const mail_content& from);

  inline mail_content& operator=(const mail_content& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mail_content& default_instance();

  void Swap(mail_content* other);

  // implements Message ----------------------------------------------

  mail_content* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mail_content& from);
  void MergeFrom(const mail_content& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client_baseserver.plain_mail _plain_mail = 1;
  inline bool has__plain_mail() const;
  inline void clear__plain_mail();
  static const int kPlainMailFieldNumber = 1;
  inline const ::client_baseserver::plain_mail& _plain_mail() const;
  inline ::client_baseserver::plain_mail* mutable__plain_mail();
  inline ::client_baseserver::plain_mail* release__plain_mail();
  inline void set_allocated__plain_mail(::client_baseserver::plain_mail* _plain_mail);

  // optional .client_baseserver.format_mail _format_mail = 2;
  inline bool has__format_mail() const;
  inline void clear__format_mail();
  static const int kFormatMailFieldNumber = 2;
  inline const ::client_baseserver::format_mail& _format_mail() const;
  inline ::client_baseserver::format_mail* mutable__format_mail();
  inline ::client_baseserver::format_mail* release__format_mail();
  inline void set_allocated__format_mail(::client_baseserver::format_mail* _format_mail);

  // @@protoc_insertion_point(class_scope:client_baseserver.mail_content)
 private:
  inline void set_has__plain_mail();
  inline void clear_has__plain_mail();
  inline void set_has__format_mail();
  inline void clear_has__format_mail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::plain_mail* _plain_mail_;
  ::client_baseserver::format_mail* _format_mail_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static mail_content* default_instance_;
};
// -------------------------------------------------------------------

class plain_mail : public ::google::protobuf::Message {
 public:
  plain_mail();
  virtual ~plain_mail();

  plain_mail(const plain_mail& from);

  inline plain_mail& operator=(const plain_mail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const plain_mail& default_instance();

  void Swap(plain_mail* other);

  // implements Message ----------------------------------------------

  plain_mail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const plain_mail& from);
  void MergeFrom(const plain_mail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string _from = 1;
  inline bool has__from() const;
  inline void clear__from();
  static const int kFromFieldNumber = 1;
  inline const ::std::string& _from() const;
  inline void set__from(const ::std::string& value);
  inline void set__from(const char* value);
  inline void set__from(const char* value, size_t size);
  inline ::std::string* mutable__from();
  inline ::std::string* release__from();
  inline void set_allocated__from(::std::string* _from);

  // required string _title = 2;
  inline bool has__title() const;
  inline void clear__title();
  static const int kTitleFieldNumber = 2;
  inline const ::std::string& _title() const;
  inline void set__title(const ::std::string& value);
  inline void set__title(const char* value);
  inline void set__title(const char* value, size_t size);
  inline ::std::string* mutable__title();
  inline ::std::string* release__title();
  inline void set_allocated__title(::std::string* _title);

  // required string _content = 3;
  inline bool has__content() const;
  inline void clear__content();
  static const int kContentFieldNumber = 3;
  inline const ::std::string& _content() const;
  inline void set__content(const ::std::string& value);
  inline void set__content(const char* value);
  inline void set__content(const char* value, size_t size);
  inline ::std::string* mutable__content();
  inline ::std::string* release__content();
  inline void set_allocated__content(::std::string* _content);

  // @@protoc_insertion_point(class_scope:client_baseserver.plain_mail)
 private:
  inline void set_has__from();
  inline void clear_has__from();
  inline void set_has__title();
  inline void clear_has__title();
  inline void set_has__content();
  inline void clear_has__content();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* _from_;
  ::std::string* _title_;
  ::std::string* _content_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static plain_mail* default_instance_;
};
// -------------------------------------------------------------------

class format_mail : public ::google::protobuf::Message {
 public:
  format_mail();
  virtual ~format_mail();

  format_mail(const format_mail& from);

  inline format_mail& operator=(const format_mail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const format_mail& default_instance();

  void Swap(format_mail* other);

  // implements Message ----------------------------------------------

  format_mail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const format_mail& from);
  void MergeFrom(const format_mail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _mail_cfg_id = 1;
  inline bool has__mail_cfg_id() const;
  inline void clear__mail_cfg_id();
  static const int kMailCfgIdFieldNumber = 1;
  inline ::google::protobuf::uint32 _mail_cfg_id() const;
  inline void set__mail_cfg_id(::google::protobuf::uint32 value);

  // repeated .client_baseserver.mail_param _params = 2;
  inline int _params_size() const;
  inline void clear__params();
  static const int kParamsFieldNumber = 2;
  inline const ::client_baseserver::mail_param& _params(int index) const;
  inline ::client_baseserver::mail_param* mutable__params(int index);
  inline ::client_baseserver::mail_param* add__params();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::mail_param >&
      _params() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::mail_param >*
      mutable__params();

  // @@protoc_insertion_point(class_scope:client_baseserver.format_mail)
 private:
  inline void set_has__mail_cfg_id();
  inline void clear_has__mail_cfg_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::mail_param > _params_;
  ::google::protobuf::uint32 _mail_cfg_id_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static format_mail* default_instance_;
};
// -------------------------------------------------------------------

class mail_param : public ::google::protobuf::Message {
 public:
  mail_param();
  virtual ~mail_param();

  mail_param(const mail_param& from);

  inline mail_param& operator=(const mail_param& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mail_param& default_instance();

  void Swap(mail_param* other);

  // implements Message ----------------------------------------------

  mail_param* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const mail_param& from);
  void MergeFrom(const mail_param& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef mail_param_mail_param_type mail_param_type;
  static const mail_param_type value = mail_param_mail_param_type_value;
  static const mail_param_type money = mail_param_mail_param_type_money;
  static const mail_param_type item = mail_param_mail_param_type_item;
  static const mail_param_type mine = mail_param_mail_param_type_mine;
  static const mail_param_type self_hero = mail_param_mail_param_type_self_hero;
  static const mail_param_type excav_battle_id = mail_param_mail_param_type_excav_battle_id;
  static const mail_param_type hero_name = mail_param_mail_param_type_hero_name;
  static inline bool mail_param_type_IsValid(int value) {
    return mail_param_mail_param_type_IsValid(value);
  }
  static const mail_param_type mail_param_type_MIN =
    mail_param_mail_param_type_mail_param_type_MIN;
  static const mail_param_type mail_param_type_MAX =
    mail_param_mail_param_type_mail_param_type_MAX;
  static const int mail_param_type_ARRAYSIZE =
    mail_param_mail_param_type_mail_param_type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  mail_param_type_descriptor() {
    return mail_param_mail_param_type_descriptor();
  }
  static inline const ::std::string& mail_param_type_Name(mail_param_type value) {
    return mail_param_mail_param_type_Name(value);
  }
  static inline bool mail_param_type_Parse(const ::std::string& name,
      mail_param_type* value) {
    return mail_param_mail_param_type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint32 _idx = 1;
  inline bool has__idx() const;
  inline void clear__idx();
  static const int kIdxFieldNumber = 1;
  inline ::google::protobuf::uint32 _idx() const;
  inline void set__idx(::google::protobuf::uint32 value);

  // optional .client_baseserver.mail_param.mail_param_type _type = 2;
  inline bool has__type() const;
  inline void clear__type();
  static const int kTypeFieldNumber = 2;
  inline ::client_baseserver::mail_param_mail_param_type _type() const;
  inline void set__type(::client_baseserver::mail_param_mail_param_type value);

  // optional string _value = 3;
  inline bool has__value() const;
  inline void clear__value();
  static const int kValueFieldNumber = 3;
  inline const ::std::string& _value() const;
  inline void set__value(const ::std::string& value);
  inline void set__value(const char* value);
  inline void set__value(const char* value, size_t size);
  inline ::std::string* mutable__value();
  inline ::std::string* release__value();
  inline void set_allocated__value(::std::string* _value);

  // @@protoc_insertion_point(class_scope:client_baseserver.mail_param)
 private:
  inline void set_has__idx();
  inline void clear_has__idx();
  inline void set_has__type();
  inline void clear_has__type();
  inline void set_has__value();
  inline void clear_has__value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _idx_;
  int _type_;
  ::std::string* _value_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static mail_param* default_instance_;
};
// -------------------------------------------------------------------

class user_point : public ::google::protobuf::Message {
 public:
  user_point();
  virtual ~user_point();

  user_point(const user_point& from);

  inline user_point& operator=(const user_point& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const user_point& default_instance();

  void Swap(user_point* other);

  // implements Message ----------------------------------------------

  user_point* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const user_point& from);
  void MergeFrom(const user_point& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef user_point_user_point_type user_point_type;
  static const user_point_type arenapoint = user_point_user_point_type_arenapoint;
  static const user_point_type crusadepoint = user_point_user_point_type_crusadepoint;
  static const user_point_type guildpoint = user_point_user_point_type_guildpoint;
  static inline bool user_point_type_IsValid(int value) {
    return user_point_user_point_type_IsValid(value);
  }
  static const user_point_type user_point_type_MIN =
    user_point_user_point_type_user_point_type_MIN;
  static const user_point_type user_point_type_MAX =
    user_point_user_point_type_user_point_type_MAX;
  static const int user_point_type_ARRAYSIZE =
    user_point_user_point_type_user_point_type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  user_point_type_descriptor() {
    return user_point_user_point_type_descriptor();
  }
  static inline const ::std::string& user_point_type_Name(user_point_type value) {
    return user_point_user_point_type_Name(value);
  }
  static inline bool user_point_type_Parse(const ::std::string& name,
      user_point_type* value) {
    return user_point_user_point_type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .client_baseserver.user_point.user_point_type _type = 1 [default = arenapoint];
  inline bool has__type() const;
  inline void clear__type();
  static const int kTypeFieldNumber = 1;
  inline ::client_baseserver::user_point_user_point_type _type() const;
  inline void set__type(::client_baseserver::user_point_user_point_type value);

  // required uint32 _value = 2;
  inline bool has__value() const;
  inline void clear__value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 _value() const;
  inline void set__value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.user_point)
 private:
  inline void set_has__type();
  inline void clear_has__type();
  inline void set_has__value();
  inline void clear_has__value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _type_;
  ::google::protobuf::uint32 _value_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static user_point* default_instance_;
};
// -------------------------------------------------------------------

class read_mail_reply : public ::google::protobuf::Message {
 public:
  read_mail_reply();
  virtual ~read_mail_reply();

  read_mail_reply(const read_mail_reply& from);

  inline read_mail_reply& operator=(const read_mail_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const read_mail_reply& default_instance();

  void Swap(read_mail_reply* other);

  // implements Message ----------------------------------------------

  read_mail_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const read_mail_reply& from);
  void MergeFrom(const read_mail_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // @@protoc_insertion_point(class_scope:client_baseserver.read_mail_reply)
 private:
  inline void set_has__result();
  inline void clear_has__result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static read_mail_reply* default_instance_;
};
// -------------------------------------------------------------------

class get_vip_gift_reply : public ::google::protobuf::Message {
 public:
  get_vip_gift_reply();
  virtual ~get_vip_gift_reply();

  get_vip_gift_reply(const get_vip_gift_reply& from);

  inline get_vip_gift_reply& operator=(const get_vip_gift_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const get_vip_gift_reply& default_instance();

  void Swap(get_vip_gift_reply* other);

  // implements Message ----------------------------------------------

  get_vip_gift_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const get_vip_gift_reply& from);
  void MergeFrom(const get_vip_gift_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // @@protoc_insertion_point(class_scope:client_baseserver.get_vip_gift_reply)
 private:
  inline void set_has__result();
  inline void clear_has__result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static get_vip_gift_reply* default_instance_;
};
// -------------------------------------------------------------------

class chat_reply : public ::google::protobuf::Message {
 public:
  chat_reply();
  virtual ~chat_reply();

  chat_reply(const chat_reply& from);

  inline chat_reply& operator=(const chat_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const chat_reply& default_instance();

  void Swap(chat_reply* other);

  // implements Message ----------------------------------------------

  chat_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const chat_reply& from);
  void MergeFrom(const chat_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client_baseserver.chat_say _say = 1;
  inline bool has__say() const;
  inline void clear__say();
  static const int kSayFieldNumber = 1;
  inline const ::client_baseserver::chat_say& _say() const;
  inline ::client_baseserver::chat_say* mutable__say();
  inline ::client_baseserver::chat_say* release__say();
  inline void set_allocated__say(::client_baseserver::chat_say* _say);

  // optional .client_baseserver.chat_fresh _fresh = 2;
  inline bool has__fresh() const;
  inline void clear__fresh();
  static const int kFreshFieldNumber = 2;
  inline const ::client_baseserver::chat_fresh& _fresh() const;
  inline ::client_baseserver::chat_fresh* mutable__fresh();
  inline ::client_baseserver::chat_fresh* release__fresh();
  inline void set_allocated__fresh(::client_baseserver::chat_fresh* _fresh);

  // optional .client_baseserver.chat_fetch _fetch = 3;
  inline bool has__fetch() const;
  inline void clear__fetch();
  static const int kFetchFieldNumber = 3;
  inline const ::client_baseserver::chat_fetch& _fetch() const;
  inline ::client_baseserver::chat_fetch* mutable__fetch();
  inline ::client_baseserver::chat_fetch* release__fetch();
  inline void set_allocated__fetch(::client_baseserver::chat_fetch* _fetch);

  // optional .client_baseserver.chat_add_bl _chat_add_bl = 4;
  inline bool has__chat_add_bl() const;
  inline void clear__chat_add_bl();
  static const int kChatAddBlFieldNumber = 4;
  inline const ::client_baseserver::chat_add_bl& _chat_add_bl() const;
  inline ::client_baseserver::chat_add_bl* mutable__chat_add_bl();
  inline ::client_baseserver::chat_add_bl* release__chat_add_bl();
  inline void set_allocated__chat_add_bl(::client_baseserver::chat_add_bl* _chat_add_bl);

  // optional .client_baseserver.chat_del_bl _chat_del_bl = 5;
  inline bool has__chat_del_bl() const;
  inline void clear__chat_del_bl();
  static const int kChatDelBlFieldNumber = 5;
  inline const ::client_baseserver::chat_del_bl& _chat_del_bl() const;
  inline ::client_baseserver::chat_del_bl* mutable__chat_del_bl();
  inline ::client_baseserver::chat_del_bl* release__chat_del_bl();
  inline void set_allocated__chat_del_bl(::client_baseserver::chat_del_bl* _chat_del_bl);

  // optional .client_baseserver.chat_blacklist _chat_blacklist = 6;
  inline bool has__chat_blacklist() const;
  inline void clear__chat_blacklist();
  static const int kChatBlacklistFieldNumber = 6;
  inline const ::client_baseserver::chat_blacklist& _chat_blacklist() const;
  inline ::client_baseserver::chat_blacklist* mutable__chat_blacklist();
  inline ::client_baseserver::chat_blacklist* release__chat_blacklist();
  inline void set_allocated__chat_blacklist(::client_baseserver::chat_blacklist* _chat_blacklist);

  // optional .client_baseserver.chat_broad_say _chat_borad_say = 7;
  inline bool has__chat_borad_say() const;
  inline void clear__chat_borad_say();
  static const int kChatBoradSayFieldNumber = 7;
  inline const ::client_baseserver::chat_broad_say& _chat_borad_say() const;
  inline ::client_baseserver::chat_broad_say* mutable__chat_borad_say();
  inline ::client_baseserver::chat_broad_say* release__chat_borad_say();
  inline void set_allocated__chat_borad_say(::client_baseserver::chat_broad_say* _chat_borad_say);

  // @@protoc_insertion_point(class_scope:client_baseserver.chat_reply)
 private:
  inline void set_has__say();
  inline void clear_has__say();
  inline void set_has__fresh();
  inline void clear_has__fresh();
  inline void set_has__fetch();
  inline void clear_has__fetch();
  inline void set_has__chat_add_bl();
  inline void clear_has__chat_add_bl();
  inline void set_has__chat_del_bl();
  inline void clear_has__chat_del_bl();
  inline void set_has__chat_blacklist();
  inline void clear_has__chat_blacklist();
  inline void set_has__chat_borad_say();
  inline void clear_has__chat_borad_say();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::chat_say* _say_;
  ::client_baseserver::chat_fresh* _fresh_;
  ::client_baseserver::chat_fetch* _fetch_;
  ::client_baseserver::chat_add_bl* _chat_add_bl_;
  ::client_baseserver::chat_del_bl* _chat_del_bl_;
  ::client_baseserver::chat_blacklist* _chat_blacklist_;
  ::client_baseserver::chat_broad_say* _chat_borad_say_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static chat_reply* default_instance_;
};
// -------------------------------------------------------------------

class chat_blacklist_user : public ::google::protobuf::Message {
 public:
  chat_blacklist_user();
  virtual ~chat_blacklist_user();

  chat_blacklist_user(const chat_blacklist_user& from);

  inline chat_blacklist_user& operator=(const chat_blacklist_user& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const chat_blacklist_user& default_instance();

  void Swap(chat_blacklist_user* other);

  // implements Message ----------------------------------------------

  chat_blacklist_user* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const chat_blacklist_user& from);
  void MergeFrom(const chat_blacklist_user& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 _userid = 1;
  inline bool has__userid() const;
  inline void clear__userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::uint32 _userid() const;
  inline void set__userid(::google::protobuf::uint32 value);

  // optional .client_baseserver.user_summary _user_summary = 2;
  inline bool has__user_summary() const;
  inline void clear__user_summary();
  static const int kUserSummaryFieldNumber = 2;
  inline const ::client_baseserver::user_summary& _user_summary() const;
  inline ::client_baseserver::user_summary* mutable__user_summary();
  inline ::client_baseserver::user_summary* release__user_summary();
  inline void set_allocated__user_summary(::client_baseserver::user_summary* _user_summary);

  // @@protoc_insertion_point(class_scope:client_baseserver.chat_blacklist_user)
 private:
  inline void set_has__userid();
  inline void clear_has__userid();
  inline void set_has__user_summary();
  inline void clear_has__user_summary();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::user_summary* _user_summary_;
  ::google::protobuf::uint32 _userid_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static chat_blacklist_user* default_instance_;
};
// -------------------------------------------------------------------

class chat_blacklist : public ::google::protobuf::Message {
 public:
  chat_blacklist();
  virtual ~chat_blacklist();

  chat_blacklist(const chat_blacklist& from);

  inline chat_blacklist& operator=(const chat_blacklist& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const chat_blacklist& default_instance();

  void Swap(chat_blacklist* other);

  // implements Message ----------------------------------------------

  chat_blacklist* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const chat_blacklist& from);
  void MergeFrom(const chat_blacklist& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client_baseserver.chat_blacklist_user _chat_blacklist_user = 1;
  inline int _chat_blacklist_user_size() const;
  inline void clear__chat_blacklist_user();
  static const int kChatBlacklistUserFieldNumber = 1;
  inline const ::client_baseserver::chat_blacklist_user& _chat_blacklist_user(int index) const;
  inline ::client_baseserver::chat_blacklist_user* mutable__chat_blacklist_user(int index);
  inline ::client_baseserver::chat_blacklist_user* add__chat_blacklist_user();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::chat_blacklist_user >&
      _chat_blacklist_user() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::chat_blacklist_user >*
      mutable__chat_blacklist_user();

  // @@protoc_insertion_point(class_scope:client_baseserver.chat_blacklist)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::chat_blacklist_user > _chat_blacklist_user_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static chat_blacklist* default_instance_;
};
// -------------------------------------------------------------------

class chat_broad_say : public ::google::protobuf::Message {
 public:
  chat_broad_say();
  virtual ~chat_broad_say();

  chat_broad_say(const chat_broad_say& from);

  inline chat_broad_say& operator=(const chat_broad_say& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const chat_broad_say& default_instance();

  void Swap(chat_broad_say* other);

  // implements Message ----------------------------------------------

  chat_broad_say* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const chat_broad_say& from);
  void MergeFrom(const chat_broad_say& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client_baseserver.result _result = 1;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // optional .client_baseserver.chat_channel _channel = 2;
  inline bool has__channel() const;
  inline void clear__channel();
  static const int kChannelFieldNumber = 2;
  inline ::client_baseserver::chat_channel _channel() const;
  inline void set__channel(::client_baseserver::chat_channel value);

  // repeated .client_baseserver.chat_content _contents = 3;
  inline int _contents_size() const;
  inline void clear__contents();
  static const int kContentsFieldNumber = 3;
  inline const ::client_baseserver::chat_content& _contents(int index) const;
  inline ::client_baseserver::chat_content* mutable__contents(int index);
  inline ::client_baseserver::chat_content* add__contents();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::chat_content >&
      _contents() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::chat_content >*
      mutable__contents();

  // @@protoc_insertion_point(class_scope:client_baseserver.chat_broad_say)
 private:
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__channel();
  inline void clear_has__channel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  int _channel_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::chat_content > _contents_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static chat_broad_say* default_instance_;
};
// -------------------------------------------------------------------

class chat_say : public ::google::protobuf::Message {
 public:
  chat_say();
  virtual ~chat_say();

  chat_say(const chat_say& from);

  inline chat_say& operator=(const chat_say& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const chat_say& default_instance();

  void Swap(chat_say* other);

  // implements Message ----------------------------------------------

  chat_say* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const chat_say& from);
  void MergeFrom(const chat_say& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1 [default = success];
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // required .client_baseserver.chat_channel _channel = 2 [default = world_channel];
  inline bool has__channel() const;
  inline void clear__channel();
  static const int kChannelFieldNumber = 2;
  inline ::client_baseserver::chat_channel _channel() const;
  inline void set__channel(::client_baseserver::chat_channel value);

  // repeated .client_baseserver.chat_content _contents = 3;
  inline int _contents_size() const;
  inline void clear__contents();
  static const int kContentsFieldNumber = 3;
  inline const ::client_baseserver::chat_content& _contents(int index) const;
  inline ::client_baseserver::chat_content* mutable__contents(int index);
  inline ::client_baseserver::chat_content* add__contents();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::chat_content >&
      _contents() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::chat_content >*
      mutable__contents();

  // @@protoc_insertion_point(class_scope:client_baseserver.chat_say)
 private:
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__channel();
  inline void clear_has__channel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  int _channel_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::chat_content > _contents_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static chat_say* default_instance_;
};
// -------------------------------------------------------------------

class chat_fresh : public ::google::protobuf::Message {
 public:
  chat_fresh();
  virtual ~chat_fresh();

  chat_fresh(const chat_fresh& from);

  inline chat_fresh& operator=(const chat_fresh& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const chat_fresh& default_instance();

  void Swap(chat_fresh* other);

  // implements Message ----------------------------------------------

  chat_fresh* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const chat_fresh& from);
  void MergeFrom(const chat_fresh& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.chat_channel _channel = 1 [default = world_channel];
  inline bool has__channel() const;
  inline void clear__channel();
  static const int kChannelFieldNumber = 1;
  inline ::client_baseserver::chat_channel _channel() const;
  inline void set__channel(::client_baseserver::chat_channel value);

  // repeated .client_baseserver.chat_content _contents = 2;
  inline int _contents_size() const;
  inline void clear__contents();
  static const int kContentsFieldNumber = 2;
  inline const ::client_baseserver::chat_content& _contents(int index) const;
  inline ::client_baseserver::chat_content* mutable__contents(int index);
  inline ::client_baseserver::chat_content* add__contents();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::chat_content >&
      _contents() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::chat_content >*
      mutable__contents();

  // @@protoc_insertion_point(class_scope:client_baseserver.chat_fresh)
 private:
  inline void set_has__channel();
  inline void clear_has__channel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::chat_content > _contents_;
  int _channel_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static chat_fresh* default_instance_;
};
// -------------------------------------------------------------------

class chat_fetch : public ::google::protobuf::Message {
 public:
  chat_fetch();
  virtual ~chat_fetch();

  chat_fetch(const chat_fetch& from);

  inline chat_fetch& operator=(const chat_fetch& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const chat_fetch& default_instance();

  void Swap(chat_fetch* other);

  // implements Message ----------------------------------------------

  chat_fetch* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const chat_fetch& from);
  void MergeFrom(const chat_fetch& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.chat_channel _channel = 1 [default = world_channel];
  inline bool has__channel() const;
  inline void clear__channel();
  static const int kChannelFieldNumber = 1;
  inline ::client_baseserver::chat_channel _channel() const;
  inline void set__channel(::client_baseserver::chat_channel value);

  // required uint32 _chat_id = 2;
  inline bool has__chat_id() const;
  inline void clear__chat_id();
  static const int kChatIdFieldNumber = 2;
  inline ::google::protobuf::uint32 _chat_id() const;
  inline void set__chat_id(::google::protobuf::uint32 value);

  // optional .client_baseserver.chat_acc _accessory = 3;
  inline bool has__accessory() const;
  inline void clear__accessory();
  static const int kAccessoryFieldNumber = 3;
  inline const ::client_baseserver::chat_acc& _accessory() const;
  inline ::client_baseserver::chat_acc* mutable__accessory();
  inline ::client_baseserver::chat_acc* release__accessory();
  inline void set_allocated__accessory(::client_baseserver::chat_acc* _accessory);

  // @@protoc_insertion_point(class_scope:client_baseserver.chat_fetch)
 private:
  inline void set_has__channel();
  inline void clear_has__channel();
  inline void set_has__chat_id();
  inline void clear_has__chat_id();
  inline void set_has__accessory();
  inline void clear_has__accessory();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _channel_;
  ::google::protobuf::uint32 _chat_id_;
  ::client_baseserver::chat_acc* _accessory_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static chat_fetch* default_instance_;
};
// -------------------------------------------------------------------

class chat_acc : public ::google::protobuf::Message {
 public:
  chat_acc();
  virtual ~chat_acc();

  chat_acc(const chat_acc& from);

  inline chat_acc& operator=(const chat_acc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const chat_acc& default_instance();

  void Swap(chat_acc* other);

  // implements Message ----------------------------------------------

  chat_acc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const chat_acc& from);
  void MergeFrom(const chat_acc& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef chat_acc_chat_acc_t chat_acc_t;
  static const chat_acc_t binary = chat_acc_chat_acc_t_binary;
  static const chat_acc_t pvp_replay = chat_acc_chat_acc_t_pvp_replay;
  static inline bool chat_acc_t_IsValid(int value) {
    return chat_acc_chat_acc_t_IsValid(value);
  }
  static const chat_acc_t chat_acc_t_MIN =
    chat_acc_chat_acc_t_chat_acc_t_MIN;
  static const chat_acc_t chat_acc_t_MAX =
    chat_acc_chat_acc_t_chat_acc_t_MAX;
  static const int chat_acc_t_ARRAYSIZE =
    chat_acc_chat_acc_t_chat_acc_t_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  chat_acc_t_descriptor() {
    return chat_acc_chat_acc_t_descriptor();
  }
  static inline const ::std::string& chat_acc_t_Name(chat_acc_t value) {
    return chat_acc_chat_acc_t_Name(value);
  }
  static inline bool chat_acc_t_Parse(const ::std::string& name,
      chat_acc_t* value) {
    return chat_acc_chat_acc_t_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .client_baseserver.chat_acc.chat_acc_t _type = 1 [default = binary];
  inline bool has__type() const;
  inline void clear__type();
  static const int kTypeFieldNumber = 1;
  inline ::client_baseserver::chat_acc_chat_acc_t _type() const;
  inline void set__type(::client_baseserver::chat_acc_chat_acc_t value);

  // optional string _binary = 2;
  inline bool has__binary() const;
  inline void clear__binary();
  static const int kBinaryFieldNumber = 2;
  inline const ::std::string& _binary() const;
  inline void set__binary(const ::std::string& value);
  inline void set__binary(const char* value);
  inline void set__binary(const char* value, size_t size);
  inline ::std::string* mutable__binary();
  inline ::std::string* release__binary();
  inline void set_allocated__binary(::std::string* _binary);

  // optional .client_baseserver.pvp_record _replay = 3;
  inline bool has__replay() const;
  inline void clear__replay();
  static const int kReplayFieldNumber = 3;
  inline const ::client_baseserver::pvp_record& _replay() const;
  inline ::client_baseserver::pvp_record* mutable__replay();
  inline ::client_baseserver::pvp_record* release__replay();
  inline void set_allocated__replay(::client_baseserver::pvp_record* _replay);

  // @@protoc_insertion_point(class_scope:client_baseserver.chat_acc)
 private:
  inline void set_has__type();
  inline void clear_has__type();
  inline void set_has__binary();
  inline void clear_has__binary();
  inline void set_has__replay();
  inline void clear_has__replay();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* _binary_;
  ::client_baseserver::pvp_record* _replay_;
  int _type_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static chat_acc* default_instance_;
};
// -------------------------------------------------------------------

class chat_content : public ::google::protobuf::Message {
 public:
  chat_content();
  virtual ~chat_content();

  chat_content(const chat_content& from);

  inline chat_content& operator=(const chat_content& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const chat_content& default_instance();

  void Swap(chat_content* other);

  // implements Message ----------------------------------------------

  chat_content* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const chat_content& from);
  void MergeFrom(const chat_content& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _chat_id = 1;
  inline bool has__chat_id() const;
  inline void clear__chat_id();
  static const int kChatIdFieldNumber = 1;
  inline ::google::protobuf::uint32 _chat_id() const;
  inline void set__chat_id(::google::protobuf::uint32 value);

  // required uint32 _speaker_uid = 2;
  inline bool has__speaker_uid() const;
  inline void clear__speaker_uid();
  static const int kSpeakerUidFieldNumber = 2;
  inline ::google::protobuf::uint32 _speaker_uid() const;
  inline void set__speaker_uid(::google::protobuf::uint32 value);

  // required .client_baseserver.user_summary _speaker_summary = 3;
  inline bool has__speaker_summary() const;
  inline void clear__speaker_summary();
  static const int kSpeakerSummaryFieldNumber = 3;
  inline const ::client_baseserver::user_summary& _speaker_summary() const;
  inline ::client_baseserver::user_summary* mutable__speaker_summary();
  inline ::client_baseserver::user_summary* release__speaker_summary();
  inline void set_allocated__speaker_summary(::client_baseserver::user_summary* _speaker_summary);

  // optional uint32 _target_uid = 4;
  inline bool has__target_uid() const;
  inline void clear__target_uid();
  static const int kTargetUidFieldNumber = 4;
  inline ::google::protobuf::uint32 _target_uid() const;
  inline void set__target_uid(::google::protobuf::uint32 value);

  // optional .client_baseserver.user_summary _target_summary = 5;
  inline bool has__target_summary() const;
  inline void clear__target_summary();
  static const int kTargetSummaryFieldNumber = 5;
  inline const ::client_baseserver::user_summary& _target_summary() const;
  inline ::client_baseserver::user_summary* mutable__target_summary();
  inline ::client_baseserver::user_summary* release__target_summary();
  inline void set_allocated__target_summary(::client_baseserver::user_summary* _target_summary);

  // optional uint32 _speaker_post = 6;
  inline bool has__speaker_post() const;
  inline void clear__speaker_post();
  static const int kSpeakerPostFieldNumber = 6;
  inline ::google::protobuf::uint32 _speaker_post() const;
  inline void set__speaker_post(::google::protobuf::uint32 value);

  // required uint32 _speak_time = 7;
  inline bool has__speak_time() const;
  inline void clear__speak_time();
  static const int kSpeakTimeFieldNumber = 7;
  inline ::google::protobuf::uint32 _speak_time() const;
  inline void set__speak_time(::google::protobuf::uint32 value);

  // required uint32 _content_type = 8;
  inline bool has__content_type() const;
  inline void clear__content_type();
  static const int kContentTypeFieldNumber = 8;
  inline ::google::protobuf::uint32 _content_type() const;
  inline void set__content_type(::google::protobuf::uint32 value);

  // required string _content = 9;
  inline bool has__content() const;
  inline void clear__content();
  static const int kContentFieldNumber = 9;
  inline const ::std::string& _content() const;
  inline void set__content(const ::std::string& value);
  inline void set__content(const char* value);
  inline void set__content(const char* value, size_t size);
  inline ::std::string* mutable__content();
  inline ::std::string* release__content();
  inline void set_allocated__content(::std::string* _content);

  // @@protoc_insertion_point(class_scope:client_baseserver.chat_content)
 private:
  inline void set_has__chat_id();
  inline void clear_has__chat_id();
  inline void set_has__speaker_uid();
  inline void clear_has__speaker_uid();
  inline void set_has__speaker_summary();
  inline void clear_has__speaker_summary();
  inline void set_has__target_uid();
  inline void clear_has__target_uid();
  inline void set_has__target_summary();
  inline void clear_has__target_summary();
  inline void set_has__speaker_post();
  inline void clear_has__speaker_post();
  inline void set_has__speak_time();
  inline void clear_has__speak_time();
  inline void set_has__content_type();
  inline void clear_has__content_type();
  inline void set_has__content();
  inline void clear_has__content();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _chat_id_;
  ::google::protobuf::uint32 _speaker_uid_;
  ::client_baseserver::user_summary* _speaker_summary_;
  ::client_baseserver::user_summary* _target_summary_;
  ::google::protobuf::uint32 _target_uid_;
  ::google::protobuf::uint32 _speaker_post_;
  ::google::protobuf::uint32 _speak_time_;
  ::google::protobuf::uint32 _content_type_;
  ::std::string* _content_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static chat_content* default_instance_;
};
// -------------------------------------------------------------------

class chat_add_bl : public ::google::protobuf::Message {
 public:
  chat_add_bl();
  virtual ~chat_add_bl();

  chat_add_bl(const chat_add_bl& from);

  inline chat_add_bl& operator=(const chat_add_bl& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const chat_add_bl& default_instance();

  void Swap(chat_add_bl* other);

  // implements Message ----------------------------------------------

  chat_add_bl* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const chat_add_bl& from);
  void MergeFrom(const chat_add_bl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _ret = 1;
  inline bool has__ret() const;
  inline void clear__ret();
  static const int kRetFieldNumber = 1;
  inline ::client_baseserver::result _ret() const;
  inline void set__ret(::client_baseserver::result value);

  // @@protoc_insertion_point(class_scope:client_baseserver.chat_add_bl)
 private:
  inline void set_has__ret();
  inline void clear_has__ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _ret_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static chat_add_bl* default_instance_;
};
// -------------------------------------------------------------------

class chat_del_bl : public ::google::protobuf::Message {
 public:
  chat_del_bl();
  virtual ~chat_del_bl();

  chat_del_bl(const chat_del_bl& from);

  inline chat_del_bl& operator=(const chat_del_bl& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const chat_del_bl& default_instance();

  void Swap(chat_del_bl* other);

  // implements Message ----------------------------------------------

  chat_del_bl* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const chat_del_bl& from);
  void MergeFrom(const chat_del_bl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _ret = 1;
  inline bool has__ret() const;
  inline void clear__ret();
  static const int kRetFieldNumber = 1;
  inline ::client_baseserver::result _ret() const;
  inline void set__ret(::client_baseserver::result value);

  // @@protoc_insertion_point(class_scope:client_baseserver.chat_del_bl)
 private:
  inline void set_has__ret();
  inline void clear_has__ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _ret_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static chat_del_bl* default_instance_;
};
// -------------------------------------------------------------------

class chat : public ::google::protobuf::Message {
 public:
  chat();
  virtual ~chat();

  chat(const chat& from);

  inline chat& operator=(const chat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const chat& default_instance();

  void Swap(chat* other);

  // implements Message ----------------------------------------------

  chat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const chat& from);
  void MergeFrom(const chat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _world_chat_times = 1;
  inline bool has__world_chat_times() const;
  inline void clear__world_chat_times();
  static const int kWorldChatTimesFieldNumber = 1;
  inline ::google::protobuf::uint32 _world_chat_times() const;
  inline void set__world_chat_times(::google::protobuf::uint32 value);

  // required uint32 _last_reset_world_chat_time = 2;
  inline bool has__last_reset_world_chat_time() const;
  inline void clear__last_reset_world_chat_time();
  static const int kLastResetWorldChatTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 _last_reset_world_chat_time() const;
  inline void set__last_reset_world_chat_time(::google::protobuf::uint32 value);

  // repeated uint32 _black_list = 3;
  inline int _black_list_size() const;
  inline void clear__black_list();
  static const int kBlackListFieldNumber = 3;
  inline ::google::protobuf::uint32 _black_list(int index) const;
  inline void set__black_list(int index, ::google::protobuf::uint32 value);
  inline void add__black_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _black_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__black_list();

  // @@protoc_insertion_point(class_scope:client_baseserver.chat)
 private:
  inline void set_has__world_chat_times();
  inline void clear_has__world_chat_times();
  inline void set_has__last_reset_world_chat_time();
  inline void clear_has__last_reset_world_chat_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _world_chat_times_;
  ::google::protobuf::uint32 _last_reset_world_chat_time_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _black_list_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static chat* default_instance_;
};
// -------------------------------------------------------------------

class user_guild : public ::google::protobuf::Message {
 public:
  user_guild();
  virtual ~user_guild();

  user_guild(const user_guild& from);

  inline user_guild& operator=(const user_guild& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const user_guild& default_instance();

  void Swap(user_guild* other);

  // implements Message ----------------------------------------------

  user_guild* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const user_guild& from);
  void MergeFrom(const user_guild& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _id = 1;
  inline bool has__id() const;
  inline void clear__id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 _id() const;
  inline void set__id(::google::protobuf::uint32 value);

  // required string _name = 2;
  inline bool has__name() const;
  inline void clear__name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& _name() const;
  inline void set__name(const ::std::string& value);
  inline void set__name(const char* value);
  inline void set__name(const char* value, size_t size);
  inline ::std::string* mutable__name();
  inline ::std::string* release__name();
  inline void set_allocated__name(::std::string* _name);

  // optional .client_baseserver.guild_job_t _job = 3 [default = member];
  inline bool has__job() const;
  inline void clear__job();
  static const int kJobFieldNumber = 3;
  inline ::client_baseserver::guild_job_t _job() const;
  inline void set__job(::client_baseserver::guild_job_t value);

  // optional uint32 _req_guild_id = 4;
  inline bool has__req_guild_id() const;
  inline void clear__req_guild_id();
  static const int kReqGuildIdFieldNumber = 4;
  inline ::google::protobuf::uint32 _req_guild_id() const;
  inline void set__req_guild_id(::google::protobuf::uint32 value);

  // repeated uint32 _hire_hero = 5;
  inline int _hire_hero_size() const;
  inline void clear__hire_hero();
  static const int kHireHeroFieldNumber = 5;
  inline ::google::protobuf::uint32 _hire_hero(int index) const;
  inline void set__hire_hero(int index, ::google::protobuf::uint32 value);
  inline void add__hire_hero(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _hire_hero() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__hire_hero();

  // @@protoc_insertion_point(class_scope:client_baseserver.user_guild)
 private:
  inline void set_has__id();
  inline void clear_has__id();
  inline void set_has__name();
  inline void clear_has__name();
  inline void set_has__job();
  inline void clear_has__job();
  inline void set_has__req_guild_id();
  inline void clear_has__req_guild_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* _name_;
  ::google::protobuf::uint32 _id_;
  int _job_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _hire_hero_;
  ::google::protobuf::uint32 _req_guild_id_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static user_guild* default_instance_;
};
// -------------------------------------------------------------------

class guild_reply : public ::google::protobuf::Message {
 public:
  guild_reply();
  virtual ~guild_reply();

  guild_reply(const guild_reply& from);

  inline guild_reply& operator=(const guild_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_reply& default_instance();

  void Swap(guild_reply* other);

  // implements Message ----------------------------------------------

  guild_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_reply& from);
  void MergeFrom(const guild_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client_baseserver.guild_create _create = 1;
  inline bool has__create() const;
  inline void clear__create();
  static const int kCreateFieldNumber = 1;
  inline const ::client_baseserver::guild_create& _create() const;
  inline ::client_baseserver::guild_create* mutable__create();
  inline ::client_baseserver::guild_create* release__create();
  inline void set_allocated__create(::client_baseserver::guild_create* _create);

  // optional .client_baseserver.guild_dismiss _dismiss = 2;
  inline bool has__dismiss() const;
  inline void clear__dismiss();
  static const int kDismissFieldNumber = 2;
  inline const ::client_baseserver::guild_dismiss& _dismiss() const;
  inline ::client_baseserver::guild_dismiss* mutable__dismiss();
  inline ::client_baseserver::guild_dismiss* release__dismiss();
  inline void set_allocated__dismiss(::client_baseserver::guild_dismiss* _dismiss);

  // optional .client_baseserver.guild_list _list = 3;
  inline bool has__list() const;
  inline void clear__list();
  static const int kListFieldNumber = 3;
  inline const ::client_baseserver::guild_list& _list() const;
  inline ::client_baseserver::guild_list* mutable__list();
  inline ::client_baseserver::guild_list* release__list();
  inline void set_allocated__list(::client_baseserver::guild_list* _list);

  // optional .client_baseserver.guild_search _search = 4;
  inline bool has__search() const;
  inline void clear__search();
  static const int kSearchFieldNumber = 4;
  inline const ::client_baseserver::guild_search& _search() const;
  inline ::client_baseserver::guild_search* mutable__search();
  inline ::client_baseserver::guild_search* release__search();
  inline void set_allocated__search(::client_baseserver::guild_search* _search);

  // optional .client_baseserver.guild_join _join = 5;
  inline bool has__join() const;
  inline void clear__join();
  static const int kJoinFieldNumber = 5;
  inline const ::client_baseserver::guild_join& _join() const;
  inline ::client_baseserver::guild_join* mutable__join();
  inline ::client_baseserver::guild_join* release__join();
  inline void set_allocated__join(::client_baseserver::guild_join* _join);

  // optional .client_baseserver.guild_join_confirm _join_confirm = 6;
  inline bool has__join_confirm() const;
  inline void clear__join_confirm();
  static const int kJoinConfirmFieldNumber = 6;
  inline const ::client_baseserver::guild_join_confirm& _join_confirm() const;
  inline ::client_baseserver::guild_join_confirm* mutable__join_confirm();
  inline ::client_baseserver::guild_join_confirm* release__join_confirm();
  inline void set_allocated__join_confirm(::client_baseserver::guild_join_confirm* _join_confirm);

  // optional .client_baseserver.guild_leave _leave = 7;
  inline bool has__leave() const;
  inline void clear__leave();
  static const int kLeaveFieldNumber = 7;
  inline const ::client_baseserver::guild_leave& _leave() const;
  inline ::client_baseserver::guild_leave* mutable__leave();
  inline ::client_baseserver::guild_leave* release__leave();
  inline void set_allocated__leave(::client_baseserver::guild_leave* _leave);

  // optional .client_baseserver.guild_kick _kick = 8;
  inline bool has__kick() const;
  inline void clear__kick();
  static const int kKickFieldNumber = 8;
  inline const ::client_baseserver::guild_kick& _kick() const;
  inline ::client_baseserver::guild_kick* mutable__kick();
  inline ::client_baseserver::guild_kick* release__kick();
  inline void set_allocated__kick(::client_baseserver::guild_kick* _kick);

  // optional .client_baseserver.guild_set _set = 9;
  inline bool has__set() const;
  inline void clear__set();
  static const int kSetFieldNumber = 9;
  inline const ::client_baseserver::guild_set& _set() const;
  inline ::client_baseserver::guild_set* mutable__set();
  inline ::client_baseserver::guild_set* release__set();
  inline void set_allocated__set(::client_baseserver::guild_set* _set);

  // optional .client_baseserver.guild_query _query = 10;
  inline bool has__query() const;
  inline void clear__query();
  static const int kQueryFieldNumber = 10;
  inline const ::client_baseserver::guild_query& _query() const;
  inline ::client_baseserver::guild_query* mutable__query();
  inline ::client_baseserver::guild_query* release__query();
  inline void set_allocated__query(::client_baseserver::guild_query* _query);

  // optional .client_baseserver.guild_set_job _set_job = 11;
  inline bool has__set_job() const;
  inline void clear__set_job();
  static const int kSetJobFieldNumber = 11;
  inline const ::client_baseserver::guild_set_job& _set_job() const;
  inline ::client_baseserver::guild_set_job* mutable__set_job();
  inline ::client_baseserver::guild_set_job* release__set_job();
  inline void set_allocated__set_job(::client_baseserver::guild_set_job* _set_job);

  // optional .client_baseserver.guild_add_hire _add_hire = 12;
  inline bool has__add_hire() const;
  inline void clear__add_hire();
  static const int kAddHireFieldNumber = 12;
  inline const ::client_baseserver::guild_add_hire& _add_hire() const;
  inline ::client_baseserver::guild_add_hire* mutable__add_hire();
  inline ::client_baseserver::guild_add_hire* release__add_hire();
  inline void set_allocated__add_hire(::client_baseserver::guild_add_hire* _add_hire);

  // optional .client_baseserver.guild_del_hire _del_hire = 13;
  inline bool has__del_hire() const;
  inline void clear__del_hire();
  static const int kDelHireFieldNumber = 13;
  inline const ::client_baseserver::guild_del_hire& _del_hire() const;
  inline ::client_baseserver::guild_del_hire* mutable__del_hire();
  inline ::client_baseserver::guild_del_hire* release__del_hire();
  inline void set_allocated__del_hire(::client_baseserver::guild_del_hire* _del_hire);

  // optional .client_baseserver.guild_query_hires _query_hires = 14;
  inline bool has__query_hires() const;
  inline void clear__query_hires();
  static const int kQueryHiresFieldNumber = 14;
  inline const ::client_baseserver::guild_query_hires& _query_hires() const;
  inline ::client_baseserver::guild_query_hires* mutable__query_hires();
  inline ::client_baseserver::guild_query_hires* release__query_hires();
  inline void set_allocated__query_hires(::client_baseserver::guild_query_hires* _query_hires);

  // optional .client_baseserver.guild_hire_hero _hire_hero = 15;
  inline bool has__hire_hero() const;
  inline void clear__hire_hero();
  static const int kHireHeroFieldNumber = 15;
  inline const ::client_baseserver::guild_hire_hero& _hire_hero() const;
  inline ::client_baseserver::guild_hire_hero* mutable__hire_hero();
  inline ::client_baseserver::guild_hire_hero* release__hire_hero();
  inline void set_allocated__hire_hero(::client_baseserver::guild_hire_hero* _hire_hero);

  // optional .client_baseserver.guild_worship_req _worship_req = 16;
  inline bool has__worship_req() const;
  inline void clear__worship_req();
  static const int kWorshipReqFieldNumber = 16;
  inline const ::client_baseserver::guild_worship_req& _worship_req() const;
  inline ::client_baseserver::guild_worship_req* mutable__worship_req();
  inline ::client_baseserver::guild_worship_req* release__worship_req();
  inline void set_allocated__worship_req(::client_baseserver::guild_worship_req* _worship_req);

  // optional .client_baseserver.guild_worship_withdraw _worship_withdraw = 17;
  inline bool has__worship_withdraw() const;
  inline void clear__worship_withdraw();
  static const int kWorshipWithdrawFieldNumber = 17;
  inline const ::client_baseserver::guild_worship_withdraw& _worship_withdraw() const;
  inline ::client_baseserver::guild_worship_withdraw* mutable__worship_withdraw();
  inline ::client_baseserver::guild_worship_withdraw* release__worship_withdraw();
  inline void set_allocated__worship_withdraw(::client_baseserver::guild_worship_withdraw* _worship_withdraw);

  // optional .client_baseserver.guild_qurey_hh_detail _query_hh_detail = 18;
  inline bool has__query_hh_detail() const;
  inline void clear__query_hh_detail();
  static const int kQueryHhDetailFieldNumber = 18;
  inline const ::client_baseserver::guild_qurey_hh_detail& _query_hh_detail() const;
  inline ::client_baseserver::guild_qurey_hh_detail* mutable__query_hh_detail();
  inline ::client_baseserver::guild_qurey_hh_detail* release__query_hh_detail();
  inline void set_allocated__query_hh_detail(::client_baseserver::guild_qurey_hh_detail* _query_hh_detail);

  // required .client_baseserver.result _result = 19 [default = success];
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 19;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // optional .client_baseserver.guild_instance_query _instance_query = 20;
  inline bool has__instance_query() const;
  inline void clear__instance_query();
  static const int kInstanceQueryFieldNumber = 20;
  inline const ::client_baseserver::guild_instance_query& _instance_query() const;
  inline ::client_baseserver::guild_instance_query* mutable__instance_query();
  inline ::client_baseserver::guild_instance_query* release__instance_query();
  inline void set_allocated__instance_query(::client_baseserver::guild_instance_query* _instance_query);

  // optional .client_baseserver.guild_instance_detail _instance_detail = 21;
  inline bool has__instance_detail() const;
  inline void clear__instance_detail();
  static const int kInstanceDetailFieldNumber = 21;
  inline const ::client_baseserver::guild_instance_detail& _instance_detail() const;
  inline ::client_baseserver::guild_instance_detail* mutable__instance_detail();
  inline ::client_baseserver::guild_instance_detail* release__instance_detail();
  inline void set_allocated__instance_detail(::client_baseserver::guild_instance_detail* _instance_detail);

  // optional .client_baseserver.guild_instance_start _instance_start = 22;
  inline bool has__instance_start() const;
  inline void clear__instance_start();
  static const int kInstanceStartFieldNumber = 22;
  inline const ::client_baseserver::guild_instance_start& _instance_start() const;
  inline ::client_baseserver::guild_instance_start* mutable__instance_start();
  inline ::client_baseserver::guild_instance_start* release__instance_start();
  inline void set_allocated__instance_start(::client_baseserver::guild_instance_start* _instance_start);

  // optional .client_baseserver.guild_instance_end_down _instance_end = 23;
  inline bool has__instance_end() const;
  inline void clear__instance_end();
  static const int kInstanceEndFieldNumber = 23;
  inline const ::client_baseserver::guild_instance_end_down& _instance_end() const;
  inline ::client_baseserver::guild_instance_end_down* mutable__instance_end();
  inline ::client_baseserver::guild_instance_end_down* release__instance_end();
  inline void set_allocated__instance_end(::client_baseserver::guild_instance_end_down* _instance_end);

  // optional .client_baseserver.guild_instance_drop _instance_drop = 24;
  inline bool has__instance_drop() const;
  inline void clear__instance_drop();
  static const int kInstanceDropFieldNumber = 24;
  inline const ::client_baseserver::guild_instance_drop& _instance_drop() const;
  inline ::client_baseserver::guild_instance_drop* mutable__instance_drop();
  inline ::client_baseserver::guild_instance_drop* release__instance_drop();
  inline void set_allocated__instance_drop(::client_baseserver::guild_instance_drop* _instance_drop);

  // optional .client_baseserver.guild_instance_open _instance_open = 25;
  inline bool has__instance_open() const;
  inline void clear__instance_open();
  static const int kInstanceOpenFieldNumber = 25;
  inline const ::client_baseserver::guild_instance_open& _instance_open() const;
  inline ::client_baseserver::guild_instance_open* mutable__instance_open();
  inline ::client_baseserver::guild_instance_open* release__instance_open();
  inline void set_allocated__instance_open(::client_baseserver::guild_instance_open* _instance_open);

  // optional .client_baseserver.guild_instance_apply _instance_apply = 26;
  inline bool has__instance_apply() const;
  inline void clear__instance_apply();
  static const int kInstanceApplyFieldNumber = 26;
  inline const ::client_baseserver::guild_instance_apply& _instance_apply() const;
  inline ::client_baseserver::guild_instance_apply* mutable__instance_apply();
  inline ::client_baseserver::guild_instance_apply* release__instance_apply();
  inline void set_allocated__instance_apply(::client_baseserver::guild_instance_apply* _instance_apply);

  // optional .client_baseserver.guild_drop_info _drop_info = 27;
  inline bool has__drop_info() const;
  inline void clear__drop_info();
  static const int kDropInfoFieldNumber = 27;
  inline const ::client_baseserver::guild_drop_info& _drop_info() const;
  inline ::client_baseserver::guild_drop_info* mutable__drop_info();
  inline ::client_baseserver::guild_drop_info* release__drop_info();
  inline void set_allocated__drop_info(::client_baseserver::guild_drop_info* _drop_info);

  // optional .client_baseserver.guild_drop_give _drop_give = 28;
  inline bool has__drop_give() const;
  inline void clear__drop_give();
  static const int kDropGiveFieldNumber = 28;
  inline const ::client_baseserver::guild_drop_give& _drop_give() const;
  inline ::client_baseserver::guild_drop_give* mutable__drop_give();
  inline ::client_baseserver::guild_drop_give* release__drop_give();
  inline void set_allocated__drop_give(::client_baseserver::guild_drop_give* _drop_give);

  // optional .client_baseserver.guild_instance_damage _instance_damage = 29;
  inline bool has__instance_damage() const;
  inline void clear__instance_damage();
  static const int kInstanceDamageFieldNumber = 29;
  inline const ::client_baseserver::guild_instance_damage& _instance_damage() const;
  inline ::client_baseserver::guild_instance_damage* mutable__instance_damage();
  inline ::client_baseserver::guild_instance_damage* release__instance_damage();
  inline void set_allocated__instance_damage(::client_baseserver::guild_instance_damage* _instance_damage);

  // optional .client_baseserver.guild_items_history _items_history = 30;
  inline bool has__items_history() const;
  inline void clear__items_history();
  static const int kItemsHistoryFieldNumber = 30;
  inline const ::client_baseserver::guild_items_history& _items_history() const;
  inline ::client_baseserver::guild_items_history* mutable__items_history();
  inline ::client_baseserver::guild_items_history* release__items_history();
  inline void set_allocated__items_history(::client_baseserver::guild_items_history* _items_history);

  // optional .client_baseserver.guild_jump _guild_jump = 31;
  inline bool has__guild_jump() const;
  inline void clear__guild_jump();
  static const int kGuildJumpFieldNumber = 31;
  inline const ::client_baseserver::guild_jump& _guild_jump() const;
  inline ::client_baseserver::guild_jump* mutable__guild_jump();
  inline ::client_baseserver::guild_jump* release__guild_jump();
  inline void set_allocated__guild_jump(::client_baseserver::guild_jump* _guild_jump);

  // optional .client_baseserver.guild_app_queue _guild_app_queue = 32;
  inline bool has__guild_app_queue() const;
  inline void clear__guild_app_queue();
  static const int kGuildAppQueueFieldNumber = 32;
  inline const ::client_baseserver::guild_app_queue& _guild_app_queue() const;
  inline ::client_baseserver::guild_app_queue* mutable__guild_app_queue();
  inline ::client_baseserver::guild_app_queue* release__guild_app_queue();
  inline void set_allocated__guild_app_queue(::client_baseserver::guild_app_queue* _guild_app_queue);

  // optional .client_baseserver.guild_instance_prepare _instance_prepare = 33;
  inline bool has__instance_prepare() const;
  inline void clear__instance_prepare();
  static const int kInstancePrepareFieldNumber = 33;
  inline const ::client_baseserver::guild_instance_prepare& _instance_prepare() const;
  inline ::client_baseserver::guild_instance_prepare* mutable__instance_prepare();
  inline ::client_baseserver::guild_instance_prepare* release__instance_prepare();
  inline void set_allocated__instance_prepare(::client_baseserver::guild_instance_prepare* _instance_prepare);

  // optional .client_baseserver.guild_members _guild_members = 34;
  inline bool has__guild_members() const;
  inline void clear__guild_members();
  static const int kGuildMembersFieldNumber = 34;
  inline const ::client_baseserver::guild_members& _guild_members() const;
  inline ::client_baseserver::guild_members* mutable__guild_members();
  inline ::client_baseserver::guild_members* release__guild_members();
  inline void set_allocated__guild_members(::client_baseserver::guild_members* _guild_members);

  // optional .client_baseserver.guild_stage_rank _guild_stage_rank = 35;
  inline bool has__guild_stage_rank() const;
  inline void clear__guild_stage_rank();
  static const int kGuildStageRankFieldNumber = 35;
  inline const ::client_baseserver::guild_stage_rank& _guild_stage_rank() const;
  inline ::client_baseserver::guild_stage_rank* mutable__guild_stage_rank();
  inline ::client_baseserver::guild_stage_rank* release__guild_stage_rank();
  inline void set_allocated__guild_stage_rank(::client_baseserver::guild_stage_rank* _guild_stage_rank);

  // optional .client_baseserver.guild_set_jump _set_jump = 36;
  inline bool has__set_jump() const;
  inline void clear__set_jump();
  static const int kSetJumpFieldNumber = 36;
  inline const ::client_baseserver::guild_set_jump& _set_jump() const;
  inline ::client_baseserver::guild_set_jump* mutable__set_jump();
  inline ::client_baseserver::guild_set_jump* release__set_jump();
  inline void set_allocated__set_jump(::client_baseserver::guild_set_jump* _set_jump);

  // optional .client_baseserver.guild_send_mail _send_mail_reply = 37;
  inline bool has__send_mail_reply() const;
  inline void clear__send_mail_reply();
  static const int kSendMailReplyFieldNumber = 37;
  inline const ::client_baseserver::guild_send_mail& _send_mail_reply() const;
  inline ::client_baseserver::guild_send_mail* mutable__send_mail_reply();
  inline ::client_baseserver::guild_send_mail* release__send_mail_reply();
  inline void set_allocated__send_mail_reply(::client_baseserver::guild_send_mail* _send_mail_reply);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_reply)
 private:
  inline void set_has__create();
  inline void clear_has__create();
  inline void set_has__dismiss();
  inline void clear_has__dismiss();
  inline void set_has__list();
  inline void clear_has__list();
  inline void set_has__search();
  inline void clear_has__search();
  inline void set_has__join();
  inline void clear_has__join();
  inline void set_has__join_confirm();
  inline void clear_has__join_confirm();
  inline void set_has__leave();
  inline void clear_has__leave();
  inline void set_has__kick();
  inline void clear_has__kick();
  inline void set_has__set();
  inline void clear_has__set();
  inline void set_has__query();
  inline void clear_has__query();
  inline void set_has__set_job();
  inline void clear_has__set_job();
  inline void set_has__add_hire();
  inline void clear_has__add_hire();
  inline void set_has__del_hire();
  inline void clear_has__del_hire();
  inline void set_has__query_hires();
  inline void clear_has__query_hires();
  inline void set_has__hire_hero();
  inline void clear_has__hire_hero();
  inline void set_has__worship_req();
  inline void clear_has__worship_req();
  inline void set_has__worship_withdraw();
  inline void clear_has__worship_withdraw();
  inline void set_has__query_hh_detail();
  inline void clear_has__query_hh_detail();
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__instance_query();
  inline void clear_has__instance_query();
  inline void set_has__instance_detail();
  inline void clear_has__instance_detail();
  inline void set_has__instance_start();
  inline void clear_has__instance_start();
  inline void set_has__instance_end();
  inline void clear_has__instance_end();
  inline void set_has__instance_drop();
  inline void clear_has__instance_drop();
  inline void set_has__instance_open();
  inline void clear_has__instance_open();
  inline void set_has__instance_apply();
  inline void clear_has__instance_apply();
  inline void set_has__drop_info();
  inline void clear_has__drop_info();
  inline void set_has__drop_give();
  inline void clear_has__drop_give();
  inline void set_has__instance_damage();
  inline void clear_has__instance_damage();
  inline void set_has__items_history();
  inline void clear_has__items_history();
  inline void set_has__guild_jump();
  inline void clear_has__guild_jump();
  inline void set_has__guild_app_queue();
  inline void clear_has__guild_app_queue();
  inline void set_has__instance_prepare();
  inline void clear_has__instance_prepare();
  inline void set_has__guild_members();
  inline void clear_has__guild_members();
  inline void set_has__guild_stage_rank();
  inline void clear_has__guild_stage_rank();
  inline void set_has__set_jump();
  inline void clear_has__set_jump();
  inline void set_has__send_mail_reply();
  inline void clear_has__send_mail_reply();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[2];
  ::client_baseserver::guild_create* _create_;
  ::client_baseserver::guild_dismiss* _dismiss_;
  ::client_baseserver::guild_list* _list_;
  ::client_baseserver::guild_search* _search_;
  ::client_baseserver::guild_join* _join_;
  ::client_baseserver::guild_join_confirm* _join_confirm_;
  ::client_baseserver::guild_leave* _leave_;
  ::client_baseserver::guild_kick* _kick_;
  ::client_baseserver::guild_set* _set_;
  ::client_baseserver::guild_query* _query_;
  ::client_baseserver::guild_set_job* _set_job_;
  ::client_baseserver::guild_add_hire* _add_hire_;
  ::client_baseserver::guild_del_hire* _del_hire_;
  ::client_baseserver::guild_query_hires* _query_hires_;
  ::client_baseserver::guild_hire_hero* _hire_hero_;
  ::client_baseserver::guild_worship_req* _worship_req_;
  ::client_baseserver::guild_worship_withdraw* _worship_withdraw_;
  ::client_baseserver::guild_qurey_hh_detail* _query_hh_detail_;
  ::client_baseserver::guild_instance_query* _instance_query_;
  ::client_baseserver::guild_instance_detail* _instance_detail_;
  ::client_baseserver::guild_instance_start* _instance_start_;
  ::client_baseserver::guild_instance_end_down* _instance_end_;
  ::client_baseserver::guild_instance_drop* _instance_drop_;
  ::client_baseserver::guild_instance_open* _instance_open_;
  ::client_baseserver::guild_instance_apply* _instance_apply_;
  ::client_baseserver::guild_drop_info* _drop_info_;
  ::client_baseserver::guild_drop_give* _drop_give_;
  ::client_baseserver::guild_instance_damage* _instance_damage_;
  ::client_baseserver::guild_items_history* _items_history_;
  ::client_baseserver::guild_jump* _guild_jump_;
  ::client_baseserver::guild_app_queue* _guild_app_queue_;
  ::client_baseserver::guild_instance_prepare* _instance_prepare_;
  ::client_baseserver::guild_members* _guild_members_;
  ::client_baseserver::guild_stage_rank* _guild_stage_rank_;
  ::client_baseserver::guild_set_jump* _set_jump_;
  ::client_baseserver::guild_send_mail* _send_mail_reply_;
  int _result_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_reply* default_instance_;
};
// -------------------------------------------------------------------

class guild_send_mail : public ::google::protobuf::Message {
 public:
  guild_send_mail();
  virtual ~guild_send_mail();

  guild_send_mail(const guild_send_mail& from);

  inline guild_send_mail& operator=(const guild_send_mail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_send_mail& default_instance();

  void Swap(guild_send_mail* other);

  // implements Message ----------------------------------------------

  guild_send_mail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_send_mail& from);
  void MergeFrom(const guild_send_mail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_send_mail)
 private:
  inline void set_has__result();
  inline void clear_has__result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_send_mail* default_instance_;
};
// -------------------------------------------------------------------

class guild_set_jump : public ::google::protobuf::Message {
 public:
  guild_set_jump();
  virtual ~guild_set_jump();

  guild_set_jump(const guild_set_jump& from);

  inline guild_set_jump& operator=(const guild_set_jump& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_set_jump& default_instance();

  void Swap(guild_set_jump* other);

  // implements Message ----------------------------------------------

  guild_set_jump* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_set_jump& from);
  void MergeFrom(const guild_set_jump& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_set_jump)
 private:
  inline void set_has__result();
  inline void clear_has__result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_set_jump* default_instance_;
};
// -------------------------------------------------------------------

class guild_instance_prepare : public ::google::protobuf::Message {
 public:
  guild_instance_prepare();
  virtual ~guild_instance_prepare();

  guild_instance_prepare(const guild_instance_prepare& from);

  inline guild_instance_prepare& operator=(const guild_instance_prepare& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_instance_prepare& default_instance();

  void Swap(guild_instance_prepare* other);

  // implements Message ----------------------------------------------

  guild_instance_prepare* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_instance_prepare& from);
  void MergeFrom(const guild_instance_prepare& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // required uint32 _left_time = 2;
  inline bool has__left_time() const;
  inline void clear__left_time();
  static const int kLeftTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 _left_time() const;
  inline void set__left_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_instance_prepare)
 private:
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__left_time();
  inline void clear_has__left_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  ::google::protobuf::uint32 _left_time_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_instance_prepare* default_instance_;
};
// -------------------------------------------------------------------

class dps_rank : public ::google::protobuf::Message {
 public:
  dps_rank();
  virtual ~dps_rank();

  dps_rank(const dps_rank& from);

  inline dps_rank& operator=(const dps_rank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const dps_rank& default_instance();

  void Swap(dps_rank* other);

  // implements Message ----------------------------------------------

  dps_rank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const dps_rank& from);
  void MergeFrom(const dps_rank& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _dps = 1;
  inline bool has__dps() const;
  inline void clear__dps();
  static const int kDpsFieldNumber = 1;
  inline ::google::protobuf::uint32 _dps() const;
  inline void set__dps(::google::protobuf::uint32 value);

  // required .client_baseserver.user_summary _dps_user = 2;
  inline bool has__dps_user() const;
  inline void clear__dps_user();
  static const int kDpsUserFieldNumber = 2;
  inline const ::client_baseserver::user_summary& _dps_user() const;
  inline ::client_baseserver::user_summary* mutable__dps_user();
  inline ::client_baseserver::user_summary* release__dps_user();
  inline void set_allocated__dps_user(::client_baseserver::user_summary* _dps_user);

  // optional .client_baseserver.dps_rank_array _array = 3;
  inline bool has__array() const;
  inline void clear__array();
  static const int kArrayFieldNumber = 3;
  inline const ::client_baseserver::dps_rank_array& _array() const;
  inline ::client_baseserver::dps_rank_array* mutable__array();
  inline ::client_baseserver::dps_rank_array* release__array();
  inline void set_allocated__array(::client_baseserver::dps_rank_array* _array);

  // @@protoc_insertion_point(class_scope:client_baseserver.dps_rank)
 private:
  inline void set_has__dps();
  inline void clear_has__dps();
  inline void set_has__dps_user();
  inline void clear_has__dps_user();
  inline void set_has__array();
  inline void clear_has__array();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::user_summary* _dps_user_;
  ::client_baseserver::dps_rank_array* _array_;
  ::google::protobuf::uint32 _dps_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static dps_rank* default_instance_;
};
// -------------------------------------------------------------------

class dps_rank_array : public ::google::protobuf::Message {
 public:
  dps_rank_array();
  virtual ~dps_rank_array();

  dps_rank_array(const dps_rank_array& from);

  inline dps_rank_array& operator=(const dps_rank_array& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const dps_rank_array& default_instance();

  void Swap(dps_rank_array* other);

  // implements Message ----------------------------------------------

  dps_rank_array* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const dps_rank_array& from);
  void MergeFrom(const dps_rank_array& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client_baseserver.hero_summary _heros = 1;
  inline int _heros_size() const;
  inline void clear__heros();
  static const int kHerosFieldNumber = 1;
  inline const ::client_baseserver::hero_summary& _heros(int index) const;
  inline ::client_baseserver::hero_summary* mutable__heros(int index);
  inline ::client_baseserver::hero_summary* add__heros();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero_summary >&
      _heros() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero_summary >*
      mutable__heros();

  // @@protoc_insertion_point(class_scope:client_baseserver.dps_rank_array)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero_summary > _heros_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static dps_rank_array* default_instance_;
};
// -------------------------------------------------------------------

class guild_first_pass : public ::google::protobuf::Message {
 public:
  guild_first_pass();
  virtual ~guild_first_pass();

  guild_first_pass(const guild_first_pass& from);

  inline guild_first_pass& operator=(const guild_first_pass& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_first_pass& default_instance();

  void Swap(guild_first_pass* other);

  // implements Message ----------------------------------------------

  guild_first_pass* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_first_pass& from);
  void MergeFrom(const guild_first_pass& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.user_summary _summary = 1;
  inline bool has__summary() const;
  inline void clear__summary();
  static const int kSummaryFieldNumber = 1;
  inline const ::client_baseserver::user_summary& _summary() const;
  inline ::client_baseserver::user_summary* mutable__summary();
  inline ::client_baseserver::user_summary* release__summary();
  inline void set_allocated__summary(::client_baseserver::user_summary* _summary);

  // required uint32 _pass_time = 2;
  inline bool has__pass_time() const;
  inline void clear__pass_time();
  static const int kPassTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 _pass_time() const;
  inline void set__pass_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_first_pass)
 private:
  inline void set_has__summary();
  inline void clear_has__summary();
  inline void set_has__pass_time();
  inline void clear_has__pass_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::user_summary* _summary_;
  ::google::protobuf::uint32 _pass_time_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_first_pass* default_instance_;
};
// -------------------------------------------------------------------

class guild_fast_pass : public ::google::protobuf::Message {
 public:
  guild_fast_pass();
  virtual ~guild_fast_pass();

  guild_fast_pass(const guild_fast_pass& from);

  inline guild_fast_pass& operator=(const guild_fast_pass& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_fast_pass& default_instance();

  void Swap(guild_fast_pass* other);

  // implements Message ----------------------------------------------

  guild_fast_pass* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_fast_pass& from);
  void MergeFrom(const guild_fast_pass& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _id = 1;
  inline bool has__id() const;
  inline void clear__id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 _id() const;
  inline void set__id(::google::protobuf::uint32 value);

  // required uint32 _icon = 2;
  inline bool has__icon() const;
  inline void clear__icon();
  static const int kIconFieldNumber = 2;
  inline ::google::protobuf::uint32 _icon() const;
  inline void set__icon(::google::protobuf::uint32 value);

  // required uint32 _time = 3;
  inline bool has__time() const;
  inline void clear__time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 _time() const;
  inline void set__time(::google::protobuf::uint32 value);

  // required string _name = 4;
  inline bool has__name() const;
  inline void clear__name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& _name() const;
  inline void set__name(const ::std::string& value);
  inline void set__name(const char* value);
  inline void set__name(const char* value, size_t size);
  inline ::std::string* mutable__name();
  inline ::std::string* release__name();
  inline void set_allocated__name(::std::string* _name);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_fast_pass)
 private:
  inline void set_has__id();
  inline void clear_has__id();
  inline void set_has__icon();
  inline void clear_has__icon();
  inline void set_has__time();
  inline void clear_has__time();
  inline void set_has__name();
  inline void clear_has__name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _id_;
  ::google::protobuf::uint32 _icon_;
  ::std::string* _name_;
  ::google::protobuf::uint32 _time_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_fast_pass* default_instance_;
};
// -------------------------------------------------------------------

class guild_stage_rank : public ::google::protobuf::Message {
 public:
  guild_stage_rank();
  virtual ~guild_stage_rank();

  guild_stage_rank(const guild_stage_rank& from);

  inline guild_stage_rank& operator=(const guild_stage_rank& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_stage_rank& default_instance();

  void Swap(guild_stage_rank* other);

  // implements Message ----------------------------------------------

  guild_stage_rank* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_stage_rank& from);
  void MergeFrom(const guild_stage_rank& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _stage_id = 1;
  inline bool has__stage_id() const;
  inline void clear__stage_id();
  static const int kStageIdFieldNumber = 1;
  inline ::google::protobuf::uint32 _stage_id() const;
  inline void set__stage_id(::google::protobuf::uint32 value);

  // repeated .client_baseserver.dps_rank _dps_rank = 2;
  inline int _dps_rank_size() const;
  inline void clear__dps_rank();
  static const int kDpsRankFieldNumber = 2;
  inline const ::client_baseserver::dps_rank& _dps_rank(int index) const;
  inline ::client_baseserver::dps_rank* mutable__dps_rank(int index);
  inline ::client_baseserver::dps_rank* add__dps_rank();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::dps_rank >&
      _dps_rank() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::dps_rank >*
      mutable__dps_rank();

  // optional .client_baseserver.guild_first_pass _first_pass = 3;
  inline bool has__first_pass() const;
  inline void clear__first_pass();
  static const int kFirstPassFieldNumber = 3;
  inline const ::client_baseserver::guild_first_pass& _first_pass() const;
  inline ::client_baseserver::guild_first_pass* mutable__first_pass();
  inline ::client_baseserver::guild_first_pass* release__first_pass();
  inline void set_allocated__first_pass(::client_baseserver::guild_first_pass* _first_pass);

  // optional .client_baseserver.guild_fast_pass _fast_pass = 4;
  inline bool has__fast_pass() const;
  inline void clear__fast_pass();
  static const int kFastPassFieldNumber = 4;
  inline const ::client_baseserver::guild_fast_pass& _fast_pass() const;
  inline ::client_baseserver::guild_fast_pass* mutable__fast_pass();
  inline ::client_baseserver::guild_fast_pass* release__fast_pass();
  inline void set_allocated__fast_pass(::client_baseserver::guild_fast_pass* _fast_pass);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_stage_rank)
 private:
  inline void set_has__stage_id();
  inline void clear_has__stage_id();
  inline void set_has__first_pass();
  inline void clear_has__first_pass();
  inline void set_has__fast_pass();
  inline void clear_has__fast_pass();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::dps_rank > _dps_rank_;
  ::client_baseserver::guild_first_pass* _first_pass_;
  ::client_baseserver::guild_fast_pass* _fast_pass_;
  ::google::protobuf::uint32 _stage_id_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_stage_rank* default_instance_;
};
// -------------------------------------------------------------------

class guild_app_queue : public ::google::protobuf::Message {
 public:
  guild_app_queue();
  virtual ~guild_app_queue();

  guild_app_queue(const guild_app_queue& from);

  inline guild_app_queue& operator=(const guild_app_queue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_app_queue& default_instance();

  void Swap(guild_app_queue* other);

  // implements Message ----------------------------------------------

  guild_app_queue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_app_queue& from);
  void MergeFrom(const guild_app_queue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client_baseserver.user_summary _summary = 1;
  inline int _summary_size() const;
  inline void clear__summary();
  static const int kSummaryFieldNumber = 1;
  inline const ::client_baseserver::user_summary& _summary(int index) const;
  inline ::client_baseserver::user_summary* mutable__summary(int index);
  inline ::client_baseserver::user_summary* add__summary();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::user_summary >&
      _summary() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::user_summary >*
      mutable__summary();

  // required uint32 _timeout = 2;
  inline bool has__timeout() const;
  inline void clear__timeout();
  static const int kTimeoutFieldNumber = 2;
  inline ::google::protobuf::uint32 _timeout() const;
  inline void set__timeout(::google::protobuf::uint32 value);

  // required uint32 _item_count = 3;
  inline bool has__item_count() const;
  inline void clear__item_count();
  static const int kItemCountFieldNumber = 3;
  inline ::google::protobuf::uint32 _item_count() const;
  inline void set__item_count(::google::protobuf::uint32 value);

  // required uint32 _rank = 4;
  inline bool has__rank() const;
  inline void clear__rank();
  static const int kRankFieldNumber = 4;
  inline ::google::protobuf::uint32 _rank() const;
  inline void set__rank(::google::protobuf::uint32 value);

  // required uint32 _item_id = 5;
  inline bool has__item_id() const;
  inline void clear__item_id();
  static const int kItemIdFieldNumber = 5;
  inline ::google::protobuf::uint32 _item_id() const;
  inline void set__item_id(::google::protobuf::uint32 value);

  // required uint32 _jump_times = 6;
  inline bool has__jump_times() const;
  inline void clear__jump_times();
  static const int kJumpTimesFieldNumber = 6;
  inline ::google::protobuf::uint32 _jump_times() const;
  inline void set__jump_times(::google::protobuf::uint32 value);

  // required uint32 _cost_money = 7;
  inline bool has__cost_money() const;
  inline void clear__cost_money();
  static const int kCostMoneyFieldNumber = 7;
  inline ::google::protobuf::uint32 _cost_money() const;
  inline void set__cost_money(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_app_queue)
 private:
  inline void set_has__timeout();
  inline void clear_has__timeout();
  inline void set_has__item_count();
  inline void clear_has__item_count();
  inline void set_has__rank();
  inline void clear_has__rank();
  inline void set_has__item_id();
  inline void clear_has__item_id();
  inline void set_has__jump_times();
  inline void clear_has__jump_times();
  inline void set_has__cost_money();
  inline void clear_has__cost_money();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::user_summary > _summary_;
  ::google::protobuf::uint32 _timeout_;
  ::google::protobuf::uint32 _item_count_;
  ::google::protobuf::uint32 _rank_;
  ::google::protobuf::uint32 _item_id_;
  ::google::protobuf::uint32 _jump_times_;
  ::google::protobuf::uint32 _cost_money_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_app_queue* default_instance_;
};
// -------------------------------------------------------------------

class guild_members : public ::google::protobuf::Message {
 public:
  guild_members();
  virtual ~guild_members();

  guild_members(const guild_members& from);

  inline guild_members& operator=(const guild_members& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_members& default_instance();

  void Swap(guild_members* other);

  // implements Message ----------------------------------------------

  guild_members* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_members& from);
  void MergeFrom(const guild_members& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client_baseserver.guild_member _guild_member = 1;
  inline int _guild_member_size() const;
  inline void clear__guild_member();
  static const int kGuildMemberFieldNumber = 1;
  inline const ::client_baseserver::guild_member& _guild_member(int index) const;
  inline ::client_baseserver::guild_member* mutable__guild_member(int index);
  inline ::client_baseserver::guild_member* add__guild_member();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_member >&
      _guild_member() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_member >*
      mutable__guild_member();

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_members)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_member > _guild_member_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_members* default_instance_;
};
// -------------------------------------------------------------------

class guild_jump : public ::google::protobuf::Message {
 public:
  guild_jump();
  virtual ~guild_jump();

  guild_jump(const guild_jump& from);

  inline guild_jump& operator=(const guild_jump& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_jump& default_instance();

  void Swap(guild_jump* other);

  // implements Message ----------------------------------------------

  guild_jump* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_jump& from);
  void MergeFrom(const guild_jump& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // required .client_baseserver.guild_app_queue _app_queue = 2;
  inline bool has__app_queue() const;
  inline void clear__app_queue();
  static const int kAppQueueFieldNumber = 2;
  inline const ::client_baseserver::guild_app_queue& _app_queue() const;
  inline ::client_baseserver::guild_app_queue* mutable__app_queue();
  inline ::client_baseserver::guild_app_queue* release__app_queue();
  inline void set_allocated__app_queue(::client_baseserver::guild_app_queue* _app_queue);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_jump)
 private:
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__app_queue();
  inline void clear_has__app_queue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::guild_app_queue* _app_queue_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_jump* default_instance_;
};
// -------------------------------------------------------------------

class guild_items_history : public ::google::protobuf::Message {
 public:
  guild_items_history();
  virtual ~guild_items_history();

  guild_items_history(const guild_items_history& from);

  inline guild_items_history& operator=(const guild_items_history& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_items_history& default_instance();

  void Swap(guild_items_history* other);

  // implements Message ----------------------------------------------

  guild_items_history* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_items_history& from);
  void MergeFrom(const guild_items_history& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _isthere = 1;
  inline bool has__isthere() const;
  inline void clear__isthere();
  static const int kIsthereFieldNumber = 1;
  inline ::google::protobuf::uint32 _isthere() const;
  inline void set__isthere(::google::protobuf::uint32 value);

  // repeated .client_baseserver.guild_item_history _item_historys = 2;
  inline int _item_historys_size() const;
  inline void clear__item_historys();
  static const int kItemHistorysFieldNumber = 2;
  inline const ::client_baseserver::guild_item_history& _item_historys(int index) const;
  inline ::client_baseserver::guild_item_history* mutable__item_historys(int index);
  inline ::client_baseserver::guild_item_history* add__item_historys();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_item_history >&
      _item_historys() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_item_history >*
      mutable__item_historys();

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_items_history)
 private:
  inline void set_has__isthere();
  inline void clear_has__isthere();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_item_history > _item_historys_;
  ::google::protobuf::uint32 _isthere_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_items_history* default_instance_;
};
// -------------------------------------------------------------------

class guild_item_history : public ::google::protobuf::Message {
 public:
  guild_item_history();
  virtual ~guild_item_history();

  guild_item_history(const guild_item_history& from);

  inline guild_item_history& operator=(const guild_item_history& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_item_history& default_instance();

  void Swap(guild_item_history* other);

  // implements Message ----------------------------------------------

  guild_item_history* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_item_history& from);
  void MergeFrom(const guild_item_history& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _item_id = 1;
  inline bool has__item_id() const;
  inline void clear__item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint32 _item_id() const;
  inline void set__item_id(::google::protobuf::uint32 value);

  // required string _receiver_name = 2;
  inline bool has__receiver_name() const;
  inline void clear__receiver_name();
  static const int kReceiverNameFieldNumber = 2;
  inline const ::std::string& _receiver_name() const;
  inline void set__receiver_name(const ::std::string& value);
  inline void set__receiver_name(const char* value);
  inline void set__receiver_name(const char* value, size_t size);
  inline ::std::string* mutable__receiver_name();
  inline ::std::string* release__receiver_name();
  inline void set_allocated__receiver_name(::std::string* _receiver_name);

  // required uint32 _send_time = 3;
  inline bool has__send_time() const;
  inline void clear__send_time();
  static const int kSendTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 _send_time() const;
  inline void set__send_time(::google::protobuf::uint32 value);

  // optional string _sender_name = 4;
  inline bool has__sender_name() const;
  inline void clear__sender_name();
  static const int kSenderNameFieldNumber = 4;
  inline const ::std::string& _sender_name() const;
  inline void set__sender_name(const ::std::string& value);
  inline void set__sender_name(const char* value);
  inline void set__sender_name(const char* value, size_t size);
  inline ::std::string* mutable__sender_name();
  inline ::std::string* release__sender_name();
  inline void set_allocated__sender_name(::std::string* _sender_name);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_item_history)
 private:
  inline void set_has__item_id();
  inline void clear_has__item_id();
  inline void set_has__receiver_name();
  inline void clear_has__receiver_name();
  inline void set_has__send_time();
  inline void clear_has__send_time();
  inline void set_has__sender_name();
  inline void clear_has__sender_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* _receiver_name_;
  ::google::protobuf::uint32 _item_id_;
  ::google::protobuf::uint32 _send_time_;
  ::std::string* _sender_name_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_item_history* default_instance_;
};
// -------------------------------------------------------------------

class guild_challenger_damage : public ::google::protobuf::Message {
 public:
  guild_challenger_damage();
  virtual ~guild_challenger_damage();

  guild_challenger_damage(const guild_challenger_damage& from);

  inline guild_challenger_damage& operator=(const guild_challenger_damage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_challenger_damage& default_instance();

  void Swap(guild_challenger_damage* other);

  // implements Message ----------------------------------------------

  guild_challenger_damage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_challenger_damage& from);
  void MergeFrom(const guild_challenger_damage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.guild_challenger _challenger = 1;
  inline bool has__challenger() const;
  inline void clear__challenger();
  static const int kChallengerFieldNumber = 1;
  inline const ::client_baseserver::guild_challenger& _challenger() const;
  inline ::client_baseserver::guild_challenger* mutable__challenger();
  inline ::client_baseserver::guild_challenger* release__challenger();
  inline void set_allocated__challenger(::client_baseserver::guild_challenger* _challenger);

  // required uint32 _damage = 2;
  inline bool has__damage() const;
  inline void clear__damage();
  static const int kDamageFieldNumber = 2;
  inline ::google::protobuf::uint32 _damage() const;
  inline void set__damage(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_challenger_damage)
 private:
  inline void set_has__challenger();
  inline void clear_has__challenger();
  inline void set_has__damage();
  inline void clear_has__damage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::guild_challenger* _challenger_;
  ::google::protobuf::uint32 _damage_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_challenger_damage* default_instance_;
};
// -------------------------------------------------------------------

class guild_instance_damage : public ::google::protobuf::Message {
 public:
  guild_instance_damage();
  virtual ~guild_instance_damage();

  guild_instance_damage(const guild_instance_damage& from);

  inline guild_instance_damage& operator=(const guild_instance_damage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_instance_damage& default_instance();

  void Swap(guild_instance_damage* other);

  // implements Message ----------------------------------------------

  guild_instance_damage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_instance_damage& from);
  void MergeFrom(const guild_instance_damage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _isthere = 1;
  inline bool has__isthere() const;
  inline void clear__isthere();
  static const int kIsthereFieldNumber = 1;
  inline ::google::protobuf::uint32 _isthere() const;
  inline void set__isthere(::google::protobuf::uint32 value);

  // repeated .client_baseserver.guild_challenger_damage _damages = 2;
  inline int _damages_size() const;
  inline void clear__damages();
  static const int kDamagesFieldNumber = 2;
  inline const ::client_baseserver::guild_challenger_damage& _damages(int index) const;
  inline ::client_baseserver::guild_challenger_damage* mutable__damages(int index);
  inline ::client_baseserver::guild_challenger_damage* add__damages();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_challenger_damage >&
      _damages() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_challenger_damage >*
      mutable__damages();

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_instance_damage)
 private:
  inline void set_has__isthere();
  inline void clear_has__isthere();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_challenger_damage > _damages_;
  ::google::protobuf::uint32 _isthere_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_instance_damage* default_instance_;
};
// -------------------------------------------------------------------

class guild_drop_give : public ::google::protobuf::Message {
 public:
  guild_drop_give();
  virtual ~guild_drop_give();

  guild_drop_give(const guild_drop_give& from);

  inline guild_drop_give& operator=(const guild_drop_give& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_drop_give& default_instance();

  void Swap(guild_drop_give* other);

  // implements Message ----------------------------------------------

  guild_drop_give* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_drop_give& from);
  void MergeFrom(const guild_drop_give& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_drop_give)
 private:
  inline void set_has__result();
  inline void clear_has__result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_drop_give* default_instance_;
};
// -------------------------------------------------------------------

class guild_drop_item_info : public ::google::protobuf::Message {
 public:
  guild_drop_item_info();
  virtual ~guild_drop_item_info();

  guild_drop_item_info(const guild_drop_item_info& from);

  inline guild_drop_item_info& operator=(const guild_drop_item_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_drop_item_info& default_instance();

  void Swap(guild_drop_item_info* other);

  // implements Message ----------------------------------------------

  guild_drop_item_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_drop_item_info& from);
  void MergeFrom(const guild_drop_item_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _item_id = 1;
  inline bool has__item_id() const;
  inline void clear__item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint32 _item_id() const;
  inline void set__item_id(::google::protobuf::uint32 value);

  // required uint32 _time_out_end = 2;
  inline bool has__time_out_end() const;
  inline void clear__time_out_end();
  static const int kTimeOutEndFieldNumber = 2;
  inline ::google::protobuf::uint32 _time_out_end() const;
  inline void set__time_out_end(::google::protobuf::uint32 value);

  // repeated uint32 _user_id = 3;
  inline int _user_id_size() const;
  inline void clear__user_id();
  static const int kUserIdFieldNumber = 3;
  inline ::google::protobuf::uint32 _user_id(int index) const;
  inline void set__user_id(int index, ::google::protobuf::uint32 value);
  inline void add__user_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _user_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__user_id();

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_drop_item_info)
 private:
  inline void set_has__item_id();
  inline void clear_has__item_id();
  inline void set_has__time_out_end();
  inline void clear_has__time_out_end();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _item_id_;
  ::google::protobuf::uint32 _time_out_end_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _user_id_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_drop_item_info* default_instance_;
};
// -------------------------------------------------------------------

class guild_drop_item : public ::google::protobuf::Message {
 public:
  guild_drop_item();
  virtual ~guild_drop_item();

  guild_drop_item(const guild_drop_item& from);

  inline guild_drop_item& operator=(const guild_drop_item& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_drop_item& default_instance();

  void Swap(guild_drop_item* other);

  // implements Message ----------------------------------------------

  guild_drop_item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_drop_item& from);
  void MergeFrom(const guild_drop_item& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _raid_id = 1;
  inline bool has__raid_id() const;
  inline void clear__raid_id();
  static const int kRaidIdFieldNumber = 1;
  inline ::google::protobuf::uint32 _raid_id() const;
  inline void set__raid_id(::google::protobuf::uint32 value);

  // repeated .client_baseserver.guild_instance_dps _dps_list = 2;
  inline int _dps_list_size() const;
  inline void clear__dps_list();
  static const int kDpsListFieldNumber = 2;
  inline const ::client_baseserver::guild_instance_dps& _dps_list(int index) const;
  inline ::client_baseserver::guild_instance_dps* mutable__dps_list(int index);
  inline ::client_baseserver::guild_instance_dps* add__dps_list();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_instance_dps >&
      _dps_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_instance_dps >*
      mutable__dps_list();

  // repeated .client_baseserver.guild_drop_item_info _item_info = 3;
  inline int _item_info_size() const;
  inline void clear__item_info();
  static const int kItemInfoFieldNumber = 3;
  inline const ::client_baseserver::guild_drop_item_info& _item_info(int index) const;
  inline ::client_baseserver::guild_drop_item_info* mutable__item_info(int index);
  inline ::client_baseserver::guild_drop_item_info* add__item_info();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_drop_item_info >&
      _item_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_drop_item_info >*
      mutable__item_info();

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_drop_item)
 private:
  inline void set_has__raid_id();
  inline void clear_has__raid_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_instance_dps > _dps_list_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_drop_item_info > _item_info_;
  ::google::protobuf::uint32 _raid_id_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_drop_item* default_instance_;
};
// -------------------------------------------------------------------

class guild_instance_dps : public ::google::protobuf::Message {
 public:
  guild_instance_dps();
  virtual ~guild_instance_dps();

  guild_instance_dps(const guild_instance_dps& from);

  inline guild_instance_dps& operator=(const guild_instance_dps& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_instance_dps& default_instance();

  void Swap(guild_instance_dps* other);

  // implements Message ----------------------------------------------

  guild_instance_dps* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_instance_dps& from);
  void MergeFrom(const guild_instance_dps& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _uid = 1;
  inline bool has__uid() const;
  inline void clear__uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 _uid() const;
  inline void set__uid(::google::protobuf::uint32 value);

  // required uint32 _dps = 2;
  inline bool has__dps() const;
  inline void clear__dps();
  static const int kDpsFieldNumber = 2;
  inline ::google::protobuf::uint32 _dps() const;
  inline void set__dps(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_instance_dps)
 private:
  inline void set_has__uid();
  inline void clear_has__uid();
  inline void set_has__dps();
  inline void clear_has__dps();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _uid_;
  ::google::protobuf::uint32 _dps_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_instance_dps* default_instance_;
};
// -------------------------------------------------------------------

class guild_drop_info : public ::google::protobuf::Message {
 public:
  guild_drop_info();
  virtual ~guild_drop_info();

  guild_drop_info(const guild_drop_info& from);

  inline guild_drop_info& operator=(const guild_drop_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_drop_info& default_instance();

  void Swap(guild_drop_info* other);

  // implements Message ----------------------------------------------

  guild_drop_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_drop_info& from);
  void MergeFrom(const guild_drop_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client_baseserver.guild_member _members = 1;
  inline int _members_size() const;
  inline void clear__members();
  static const int kMembersFieldNumber = 1;
  inline const ::client_baseserver::guild_member& _members(int index) const;
  inline ::client_baseserver::guild_member* mutable__members(int index);
  inline ::client_baseserver::guild_member* add__members();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_member >&
      _members() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_member >*
      mutable__members();

  // repeated .client_baseserver.guild_drop_item _items = 2;
  inline int _items_size() const;
  inline void clear__items();
  static const int kItemsFieldNumber = 2;
  inline const ::client_baseserver::guild_drop_item& _items(int index) const;
  inline ::client_baseserver::guild_drop_item* mutable__items(int index);
  inline ::client_baseserver::guild_drop_item* add__items();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_drop_item >&
      _items() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_drop_item >*
      mutable__items();

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_drop_info)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_member > _members_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_drop_item > _items_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_drop_info* default_instance_;
};
// -------------------------------------------------------------------

class guild_instance_apply : public ::google::protobuf::Message {
 public:
  guild_instance_apply();
  virtual ~guild_instance_apply();

  guild_instance_apply(const guild_instance_apply& from);

  inline guild_instance_apply& operator=(const guild_instance_apply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_instance_apply& default_instance();

  void Swap(guild_instance_apply* other);

  // implements Message ----------------------------------------------

  guild_instance_apply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_instance_apply& from);
  void MergeFrom(const guild_instance_apply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // required .client_baseserver.guild_app_queue _app_queue = 2;
  inline bool has__app_queue() const;
  inline void clear__app_queue();
  static const int kAppQueueFieldNumber = 2;
  inline const ::client_baseserver::guild_app_queue& _app_queue() const;
  inline ::client_baseserver::guild_app_queue* mutable__app_queue();
  inline ::client_baseserver::guild_app_queue* release__app_queue();
  inline void set_allocated__app_queue(::client_baseserver::guild_app_queue* _app_queue);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_instance_apply)
 private:
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__app_queue();
  inline void clear_has__app_queue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::guild_app_queue* _app_queue_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_instance_apply* default_instance_;
};
// -------------------------------------------------------------------

class guild_instance_info : public ::google::protobuf::Message {
 public:
  guild_instance_info();
  virtual ~guild_instance_info();

  guild_instance_info(const guild_instance_info& from);

  inline guild_instance_info& operator=(const guild_instance_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_instance_info& default_instance();

  void Swap(guild_instance_info* other);

  // implements Message ----------------------------------------------

  guild_instance_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_instance_info& from);
  void MergeFrom(const guild_instance_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _raid_id = 1;
  inline bool has__raid_id() const;
  inline void clear__raid_id();
  static const int kRaidIdFieldNumber = 1;
  inline ::google::protobuf::uint32 _raid_id() const;
  inline void set__raid_id(::google::protobuf::uint32 value);

  // required uint32 _stage_index = 2;
  inline bool has__stage_index() const;
  inline void clear__stage_index();
  static const int kStageIndexFieldNumber = 2;
  inline ::google::protobuf::uint32 _stage_index() const;
  inline void set__stage_index(::google::protobuf::uint32 value);

  // required uint32 _wave_index = 3;
  inline bool has__wave_index() const;
  inline void clear__wave_index();
  static const int kWaveIndexFieldNumber = 3;
  inline ::google::protobuf::uint32 _wave_index() const;
  inline void set__wave_index(::google::protobuf::uint32 value);

  // repeated uint32 _hp_info = 4;
  inline int _hp_info_size() const;
  inline void clear__hp_info();
  static const int kHpInfoFieldNumber = 4;
  inline ::google::protobuf::uint32 _hp_info(int index) const;
  inline void set__hp_info(int index, ::google::protobuf::uint32 value);
  inline void add__hp_info(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _hp_info() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__hp_info();

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_instance_info)
 private:
  inline void set_has__raid_id();
  inline void clear_has__raid_id();
  inline void set_has__stage_index();
  inline void clear_has__stage_index();
  inline void set_has__wave_index();
  inline void clear_has__wave_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _raid_id_;
  ::google::protobuf::uint32 _stage_index_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _hp_info_;
  ::google::protobuf::uint32 _wave_index_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_instance_info* default_instance_;
};
// -------------------------------------------------------------------

class guild_instance_start : public ::google::protobuf::Message {
 public:
  guild_instance_start();
  virtual ~guild_instance_start();

  guild_instance_start(const guild_instance_start& from);

  inline guild_instance_start& operator=(const guild_instance_start& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_instance_start& default_instance();

  void Swap(guild_instance_start* other);

  // implements Message ----------------------------------------------

  guild_instance_start* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_instance_start& from);
  void MergeFrom(const guild_instance_start& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.guild_instance_info _instance_info = 1;
  inline bool has__instance_info() const;
  inline void clear__instance_info();
  static const int kInstanceInfoFieldNumber = 1;
  inline const ::client_baseserver::guild_instance_info& _instance_info() const;
  inline ::client_baseserver::guild_instance_info* mutable__instance_info();
  inline ::client_baseserver::guild_instance_info* release__instance_info();
  inline void set_allocated__instance_info(::client_baseserver::guild_instance_info* _instance_info);

  // required uint32 _rseed = 2;
  inline bool has__rseed() const;
  inline void clear__rseed();
  static const int kRseedFieldNumber = 2;
  inline ::google::protobuf::uint32 _rseed() const;
  inline void set__rseed(::google::protobuf::uint32 value);

  // repeated uint32 _loots = 3;
  inline int _loots_size() const;
  inline void clear__loots();
  static const int kLootsFieldNumber = 3;
  inline ::google::protobuf::uint32 _loots(int index) const;
  inline void set__loots(int index, ::google::protobuf::uint32 value);
  inline void add__loots(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _loots() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__loots();

  // repeated .client_baseserver.guild_stage_hp_drop _hp_drop = 4;
  inline int _hp_drop_size() const;
  inline void clear__hp_drop();
  static const int kHpDropFieldNumber = 4;
  inline const ::client_baseserver::guild_stage_hp_drop& _hp_drop(int index) const;
  inline ::client_baseserver::guild_stage_hp_drop* mutable__hp_drop(int index);
  inline ::client_baseserver::guild_stage_hp_drop* add__hp_drop();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_stage_hp_drop >&
      _hp_drop() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_stage_hp_drop >*
      mutable__hp_drop();

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_instance_start)
 private:
  inline void set_has__instance_info();
  inline void clear_has__instance_info();
  inline void set_has__rseed();
  inline void clear_has__rseed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::guild_instance_info* _instance_info_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _loots_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_stage_hp_drop > _hp_drop_;
  ::google::protobuf::uint32 _rseed_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_instance_start* default_instance_;
};
// -------------------------------------------------------------------

class guild_stage_hp_drop : public ::google::protobuf::Message {
 public:
  guild_stage_hp_drop();
  virtual ~guild_stage_hp_drop();

  guild_stage_hp_drop(const guild_stage_hp_drop& from);

  inline guild_stage_hp_drop& operator=(const guild_stage_hp_drop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_stage_hp_drop& default_instance();

  void Swap(guild_stage_hp_drop* other);

  // implements Message ----------------------------------------------

  guild_stage_hp_drop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_stage_hp_drop& from);
  void MergeFrom(const guild_stage_hp_drop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _monster_info = 1;
  inline bool has__monster_info() const;
  inline void clear__monster_info();
  static const int kMonsterInfoFieldNumber = 1;
  inline ::google::protobuf::uint32 _monster_info() const;
  inline void set__monster_info(::google::protobuf::uint32 value);

  // repeated .client_baseserver.hp_drop _loots = 2;
  inline int _loots_size() const;
  inline void clear__loots();
  static const int kLootsFieldNumber = 2;
  inline const ::client_baseserver::hp_drop& _loots(int index) const;
  inline ::client_baseserver::hp_drop* mutable__loots(int index);
  inline ::client_baseserver::hp_drop* add__loots();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hp_drop >&
      _loots() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hp_drop >*
      mutable__loots();

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_stage_hp_drop)
 private:
  inline void set_has__monster_info();
  inline void clear_has__monster_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::hp_drop > _loots_;
  ::google::protobuf::uint32 _monster_info_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_stage_hp_drop* default_instance_;
};
// -------------------------------------------------------------------

class hp_drop : public ::google::protobuf::Message {
 public:
  hp_drop();
  virtual ~hp_drop();

  hp_drop(const hp_drop& from);

  inline hp_drop& operator=(const hp_drop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const hp_drop& default_instance();

  void Swap(hp_drop* other);

  // implements Message ----------------------------------------------

  hp_drop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const hp_drop& from);
  void MergeFrom(const hp_drop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _per = 1;
  inline bool has__per() const;
  inline void clear__per();
  static const int kPerFieldNumber = 1;
  inline ::google::protobuf::uint32 _per() const;
  inline void set__per(::google::protobuf::uint32 value);

  // repeated uint32 _items = 2;
  inline int _items_size() const;
  inline void clear__items();
  static const int kItemsFieldNumber = 2;
  inline ::google::protobuf::uint32 _items(int index) const;
  inline void set__items(int index, ::google::protobuf::uint32 value);
  inline void add__items(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _items() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__items();

  // @@protoc_insertion_point(class_scope:client_baseserver.hp_drop)
 private:
  inline void set_has__per();
  inline void clear_has__per();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _items_;
  ::google::protobuf::uint32 _per_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static hp_drop* default_instance_;
};
// -------------------------------------------------------------------

class guild_instance_end_down : public ::google::protobuf::Message {
 public:
  guild_instance_end_down();
  virtual ~guild_instance_end_down();

  guild_instance_end_down(const guild_instance_end_down& from);

  inline guild_instance_end_down& operator=(const guild_instance_end_down& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_instance_end_down& default_instance();

  void Swap(guild_instance_end_down* other);

  // implements Message ----------------------------------------------

  guild_instance_end_down* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_instance_end_down& from);
  void MergeFrom(const guild_instance_end_down& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.guild_instance_summary _summary = 1;
  inline bool has__summary() const;
  inline void clear__summary();
  static const int kSummaryFieldNumber = 1;
  inline const ::client_baseserver::guild_instance_summary& _summary() const;
  inline ::client_baseserver::guild_instance_summary* mutable__summary();
  inline ::client_baseserver::guild_instance_summary* release__summary();
  inline void set_allocated__summary(::client_baseserver::guild_instance_summary* _summary);

  // required .client_baseserver.battle_result _result = 2;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 2;
  inline ::client_baseserver::battle_result _result() const;
  inline void set__result(::client_baseserver::battle_result value);

  // repeated uint32 _rewards = 3;
  inline int _rewards_size() const;
  inline void clear__rewards();
  static const int kRewardsFieldNumber = 3;
  inline ::google::protobuf::uint32 _rewards(int index) const;
  inline void set__rewards(int index, ::google::protobuf::uint32 value);
  inline void add__rewards(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _rewards() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__rewards();

  // repeated uint32 _apply_rewards = 4;
  inline int _apply_rewards_size() const;
  inline void clear__apply_rewards();
  static const int kApplyRewardsFieldNumber = 4;
  inline ::google::protobuf::uint32 _apply_rewards(int index) const;
  inline void set__apply_rewards(int index, ::google::protobuf::uint32 value);
  inline void add__apply_rewards(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _apply_rewards() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__apply_rewards();

  // required uint32 _stage_old_progress = 5;
  inline bool has__stage_old_progress() const;
  inline void clear__stage_old_progress();
  static const int kStageOldProgressFieldNumber = 5;
  inline ::google::protobuf::uint32 _stage_old_progress() const;
  inline void set__stage_old_progress(::google::protobuf::uint32 value);

  // required uint32 _join_times = 6;
  inline bool has__join_times() const;
  inline void clear__join_times();
  static const int kJoinTimesFieldNumber = 6;
  inline ::google::protobuf::uint32 _join_times() const;
  inline void set__join_times(::google::protobuf::uint32 value);

  // optional .client_baseserver.break_history _break_history = 7;
  inline bool has__break_history() const;
  inline void clear__break_history();
  static const int kBreakHistoryFieldNumber = 7;
  inline const ::client_baseserver::break_history& _break_history() const;
  inline ::client_baseserver::break_history* mutable__break_history();
  inline ::client_baseserver::break_history* release__break_history();
  inline void set_allocated__break_history(::client_baseserver::break_history* _break_history);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_instance_end_down)
 private:
  inline void set_has__summary();
  inline void clear_has__summary();
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__stage_old_progress();
  inline void clear_has__stage_old_progress();
  inline void set_has__join_times();
  inline void clear_has__join_times();
  inline void set_has__break_history();
  inline void clear_has__break_history();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::guild_instance_summary* _summary_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _rewards_;
  int _result_;
  ::google::protobuf::uint32 _stage_old_progress_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _apply_rewards_;
  ::client_baseserver::break_history* _break_history_;
  ::google::protobuf::uint32 _join_times_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_instance_end_down* default_instance_;
};
// -------------------------------------------------------------------

class break_history : public ::google::protobuf::Message {
 public:
  break_history();
  virtual ~break_history();

  break_history(const break_history& from);

  inline break_history& operator=(const break_history& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const break_history& default_instance();

  void Swap(break_history* other);

  // implements Message ----------------------------------------------

  break_history* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const break_history& from);
  void MergeFrom(const break_history& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _diamond = 1;
  inline bool has__diamond() const;
  inline void clear__diamond();
  static const int kDiamondFieldNumber = 1;
  inline ::google::protobuf::uint32 _diamond() const;
  inline void set__diamond(::google::protobuf::uint32 value);

  // required uint32 _guildpoint = 2;
  inline bool has__guildpoint() const;
  inline void clear__guildpoint();
  static const int kGuildpointFieldNumber = 2;
  inline ::google::protobuf::uint32 _guildpoint() const;
  inline void set__guildpoint(::google::protobuf::uint32 value);

  // required uint32 _dps = 3;
  inline bool has__dps() const;
  inline void clear__dps();
  static const int kDpsFieldNumber = 3;
  inline ::google::protobuf::uint32 _dps() const;
  inline void set__dps(::google::protobuf::uint32 value);

  // optional uint32 _old_dps = 4;
  inline bool has__old_dps() const;
  inline void clear__old_dps();
  static const int kOldDpsFieldNumber = 4;
  inline ::google::protobuf::uint32 _old_dps() const;
  inline void set__old_dps(::google::protobuf::uint32 value);

  // optional .client_baseserver.user_summary _old_summary = 5;
  inline bool has__old_summary() const;
  inline void clear__old_summary();
  static const int kOldSummaryFieldNumber = 5;
  inline const ::client_baseserver::user_summary& _old_summary() const;
  inline ::client_baseserver::user_summary* mutable__old_summary();
  inline ::client_baseserver::user_summary* release__old_summary();
  inline void set_allocated__old_summary(::client_baseserver::user_summary* _old_summary);

  // @@protoc_insertion_point(class_scope:client_baseserver.break_history)
 private:
  inline void set_has__diamond();
  inline void clear_has__diamond();
  inline void set_has__guildpoint();
  inline void clear_has__guildpoint();
  inline void set_has__dps();
  inline void clear_has__dps();
  inline void set_has__old_dps();
  inline void clear_has__old_dps();
  inline void set_has__old_summary();
  inline void clear_has__old_summary();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _diamond_;
  ::google::protobuf::uint32 _guildpoint_;
  ::google::protobuf::uint32 _dps_;
  ::google::protobuf::uint32 _old_dps_;
  ::client_baseserver::user_summary* _old_summary_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static break_history* default_instance_;
};
// -------------------------------------------------------------------

class guild_instance_open : public ::google::protobuf::Message {
 public:
  guild_instance_open();
  virtual ~guild_instance_open();

  guild_instance_open(const guild_instance_open& from);

  inline guild_instance_open& operator=(const guild_instance_open& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_instance_open& default_instance();

  void Swap(guild_instance_open* other);

  // implements Message ----------------------------------------------

  guild_instance_open* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_instance_open& from);
  void MergeFrom(const guild_instance_open& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // required uint32 _raid_id = 2;
  inline bool has__raid_id() const;
  inline void clear__raid_id();
  static const int kRaidIdFieldNumber = 2;
  inline ::google::protobuf::uint32 _raid_id() const;
  inline void set__raid_id(::google::protobuf::uint32 value);

  // required uint32 _left_time = 3;
  inline bool has__left_time() const;
  inline void clear__left_time();
  static const int kLeftTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 _left_time() const;
  inline void set__left_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_instance_open)
 private:
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__raid_id();
  inline void clear_has__raid_id();
  inline void set_has__left_time();
  inline void clear_has__left_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  ::google::protobuf::uint32 _raid_id_;
  ::google::protobuf::uint32 _left_time_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_instance_open* default_instance_;
};
// -------------------------------------------------------------------

class guild_create : public ::google::protobuf::Message {
 public:
  guild_create();
  virtual ~guild_create();

  guild_create(const guild_create& from);

  inline guild_create& operator=(const guild_create& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_create& default_instance();

  void Swap(guild_create* other);

  // implements Message ----------------------------------------------

  guild_create* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_create& from);
  void MergeFrom(const guild_create& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // optional .client_baseserver.guild_info _guild_info = 2;
  inline bool has__guild_info() const;
  inline void clear__guild_info();
  static const int kGuildInfoFieldNumber = 2;
  inline const ::client_baseserver::guild_info& _guild_info() const;
  inline ::client_baseserver::guild_info* mutable__guild_info();
  inline ::client_baseserver::guild_info* release__guild_info();
  inline void set_allocated__guild_info(::client_baseserver::guild_info* _guild_info);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_create)
 private:
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__guild_info();
  inline void clear_has__guild_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::guild_info* _guild_info_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_create* default_instance_;
};
// -------------------------------------------------------------------

class guild_dismiss : public ::google::protobuf::Message {
 public:
  guild_dismiss();
  virtual ~guild_dismiss();

  guild_dismiss(const guild_dismiss& from);

  inline guild_dismiss& operator=(const guild_dismiss& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_dismiss& default_instance();

  void Swap(guild_dismiss* other);

  // implements Message ----------------------------------------------

  guild_dismiss* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_dismiss& from);
  void MergeFrom(const guild_dismiss& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_dismiss)
 private:
  inline void set_has__result();
  inline void clear_has__result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_dismiss* default_instance_;
};
// -------------------------------------------------------------------

class guild_info : public ::google::protobuf::Message {
 public:
  guild_info();
  virtual ~guild_info();

  guild_info(const guild_info& from);

  inline guild_info& operator=(const guild_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_info& default_instance();

  void Swap(guild_info* other);

  // implements Message ----------------------------------------------

  guild_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_info& from);
  void MergeFrom(const guild_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.guild_summary _summary = 1;
  inline bool has__summary() const;
  inline void clear__summary();
  static const int kSummaryFieldNumber = 1;
  inline const ::client_baseserver::guild_summary& _summary() const;
  inline ::client_baseserver::guild_summary* mutable__summary();
  inline ::client_baseserver::guild_summary* release__summary();
  inline void set_allocated__summary(::client_baseserver::guild_summary* _summary);

  // repeated .client_baseserver.guild_member _members = 2;
  inline int _members_size() const;
  inline void clear__members();
  static const int kMembersFieldNumber = 2;
  inline const ::client_baseserver::guild_member& _members(int index) const;
  inline ::client_baseserver::guild_member* mutable__members(int index);
  inline ::client_baseserver::guild_member* add__members();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_member >&
      _members() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_member >*
      mutable__members();

  // repeated .client_baseserver.guild_applier _appliers = 3;
  inline int _appliers_size() const;
  inline void clear__appliers();
  static const int kAppliersFieldNumber = 3;
  inline const ::client_baseserver::guild_applier& _appliers(int index) const;
  inline ::client_baseserver::guild_applier* mutable__appliers(int index);
  inline ::client_baseserver::guild_applier* add__appliers();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_applier >&
      _appliers() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_applier >*
      mutable__appliers();

  // required uint32 _vitality = 4;
  inline bool has__vitality() const;
  inline void clear__vitality();
  static const int kVitalityFieldNumber = 4;
  inline ::google::protobuf::uint32 _vitality() const;
  inline void set__vitality(::google::protobuf::uint32 value);

  // required uint32 _self_vitality = 5;
  inline bool has__self_vitality() const;
  inline void clear__self_vitality();
  static const int kSelfVitalityFieldNumber = 5;
  inline ::google::protobuf::uint32 _self_vitality() const;
  inline void set__self_vitality(::google::protobuf::uint32 value);

  // required uint32 _left_distribute_time = 6;
  inline bool has__left_distribute_time() const;
  inline void clear__left_distribute_time();
  static const int kLeftDistributeTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 _left_distribute_time() const;
  inline void set__left_distribute_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_info)
 private:
  inline void set_has__summary();
  inline void clear_has__summary();
  inline void set_has__vitality();
  inline void clear_has__vitality();
  inline void set_has__self_vitality();
  inline void clear_has__self_vitality();
  inline void set_has__left_distribute_time();
  inline void clear_has__left_distribute_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::guild_summary* _summary_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_member > _members_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_applier > _appliers_;
  ::google::protobuf::uint32 _vitality_;
  ::google::protobuf::uint32 _self_vitality_;
  ::google::protobuf::uint32 _left_distribute_time_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_info* default_instance_;
};
// -------------------------------------------------------------------

class guild_summary : public ::google::protobuf::Message {
 public:
  guild_summary();
  virtual ~guild_summary();

  guild_summary(const guild_summary& from);

  inline guild_summary& operator=(const guild_summary& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_summary& default_instance();

  void Swap(guild_summary* other);

  // implements Message ----------------------------------------------

  guild_summary* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_summary& from);
  void MergeFrom(const guild_summary& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _id = 1;
  inline bool has__id() const;
  inline void clear__id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 _id() const;
  inline void set__id(::google::protobuf::uint32 value);

  // required string _name = 2;
  inline bool has__name() const;
  inline void clear__name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& _name() const;
  inline void set__name(const ::std::string& value);
  inline void set__name(const char* value);
  inline void set__name(const char* value, size_t size);
  inline ::std::string* mutable__name();
  inline ::std::string* release__name();
  inline void set_allocated__name(::std::string* _name);

  // required uint32 _avatar = 3;
  inline bool has__avatar() const;
  inline void clear__avatar();
  static const int kAvatarFieldNumber = 3;
  inline ::google::protobuf::uint32 _avatar() const;
  inline void set__avatar(::google::protobuf::uint32 value);

  // required string _slogan = 4;
  inline bool has__slogan() const;
  inline void clear__slogan();
  static const int kSloganFieldNumber = 4;
  inline const ::std::string& _slogan() const;
  inline void set__slogan(const ::std::string& value);
  inline void set__slogan(const char* value);
  inline void set__slogan(const char* value, size_t size);
  inline ::std::string* mutable__slogan();
  inline ::std::string* release__slogan();
  inline void set_allocated__slogan(::std::string* _slogan);

  // required .client_baseserver.guild_join_t _join_type = 5;
  inline bool has__join_type() const;
  inline void clear__join_type();
  static const int kJoinTypeFieldNumber = 5;
  inline ::client_baseserver::guild_join_t _join_type() const;
  inline void set__join_type(::client_baseserver::guild_join_t value);

  // required uint32 _join_limit = 6;
  inline bool has__join_limit() const;
  inline void clear__join_limit();
  static const int kJoinLimitFieldNumber = 6;
  inline ::google::protobuf::uint32 _join_limit() const;
  inline void set__join_limit(::google::protobuf::uint32 value);

  // required uint32 _member_cnt = 7;
  inline bool has__member_cnt() const;
  inline void clear__member_cnt();
  static const int kMemberCntFieldNumber = 7;
  inline ::google::protobuf::uint32 _member_cnt() const;
  inline void set__member_cnt(::google::protobuf::uint32 value);

  // required .client_baseserver.user_summary _president = 8;
  inline bool has__president() const;
  inline void clear__president();
  static const int kPresidentFieldNumber = 8;
  inline const ::client_baseserver::user_summary& _president() const;
  inline ::client_baseserver::user_summary* mutable__president();
  inline ::client_baseserver::user_summary* release__president();
  inline void set_allocated__president(::client_baseserver::user_summary* _president);

  // optional uint32 _liveness = 9;
  inline bool has__liveness() const;
  inline void clear__liveness();
  static const int kLivenessFieldNumber = 9;
  inline ::google::protobuf::uint32 _liveness() const;
  inline void set__liveness(::google::protobuf::uint32 value);

  // optional uint32 _can_jump = 10;
  inline bool has__can_jump() const;
  inline void clear__can_jump();
  static const int kCanJumpFieldNumber = 10;
  inline ::google::protobuf::uint32 _can_jump() const;
  inline void set__can_jump(::google::protobuf::uint32 value);

  // optional uint32 _host_id = 11;
  inline bool has__host_id() const;
  inline void clear__host_id();
  static const int kHostIdFieldNumber = 11;
  inline ::google::protobuf::uint32 _host_id() const;
  inline void set__host_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_summary)
 private:
  inline void set_has__id();
  inline void clear_has__id();
  inline void set_has__name();
  inline void clear_has__name();
  inline void set_has__avatar();
  inline void clear_has__avatar();
  inline void set_has__slogan();
  inline void clear_has__slogan();
  inline void set_has__join_type();
  inline void clear_has__join_type();
  inline void set_has__join_limit();
  inline void clear_has__join_limit();
  inline void set_has__member_cnt();
  inline void clear_has__member_cnt();
  inline void set_has__president();
  inline void clear_has__president();
  inline void set_has__liveness();
  inline void clear_has__liveness();
  inline void set_has__can_jump();
  inline void clear_has__can_jump();
  inline void set_has__host_id();
  inline void clear_has__host_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* _name_;
  ::google::protobuf::uint32 _id_;
  ::google::protobuf::uint32 _avatar_;
  ::std::string* _slogan_;
  int _join_type_;
  ::google::protobuf::uint32 _join_limit_;
  ::client_baseserver::user_summary* _president_;
  ::google::protobuf::uint32 _member_cnt_;
  ::google::protobuf::uint32 _liveness_;
  ::google::protobuf::uint32 _can_jump_;
  ::google::protobuf::uint32 _host_id_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_summary* default_instance_;
};
// -------------------------------------------------------------------

class guild_member : public ::google::protobuf::Message {
 public:
  guild_member();
  virtual ~guild_member();

  guild_member(const guild_member& from);

  inline guild_member& operator=(const guild_member& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_member& default_instance();

  void Swap(guild_member* other);

  // implements Message ----------------------------------------------

  guild_member* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_member& from);
  void MergeFrom(const guild_member& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _uid = 1;
  inline bool has__uid() const;
  inline void clear__uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 _uid() const;
  inline void set__uid(::google::protobuf::uint32 value);

  // required .client_baseserver.user_summary _summary = 2;
  inline bool has__summary() const;
  inline void clear__summary();
  static const int kSummaryFieldNumber = 2;
  inline const ::client_baseserver::user_summary& _summary() const;
  inline ::client_baseserver::user_summary* mutable__summary();
  inline ::client_baseserver::user_summary* release__summary();
  inline void set_allocated__summary(::client_baseserver::user_summary* _summary);

  // required .client_baseserver.guild_job_t _job = 3;
  inline bool has__job() const;
  inline void clear__job();
  static const int kJobFieldNumber = 3;
  inline ::client_baseserver::guild_job_t _job() const;
  inline void set__job(::client_baseserver::guild_job_t value);

  // required uint32 _last_login = 4;
  inline bool has__last_login() const;
  inline void clear__last_login();
  static const int kLastLoginFieldNumber = 4;
  inline ::google::protobuf::uint32 _last_login() const;
  inline void set__last_login(::google::protobuf::uint32 value);

  // optional uint32 _active = 5;
  inline bool has__active() const;
  inline void clear__active();
  static const int kActiveFieldNumber = 5;
  inline ::google::protobuf::uint32 _active() const;
  inline void set__active(::google::protobuf::uint32 value);

  // optional uint32 _join_instance_time = 6;
  inline bool has__join_instance_time() const;
  inline void clear__join_instance_time();
  static const int kJoinInstanceTimeFieldNumber = 6;
  inline ::google::protobuf::uint32 _join_instance_time() const;
  inline void set__join_instance_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_member)
 private:
  inline void set_has__uid();
  inline void clear_has__uid();
  inline void set_has__summary();
  inline void clear_has__summary();
  inline void set_has__job();
  inline void clear_has__job();
  inline void set_has__last_login();
  inline void clear_has__last_login();
  inline void set_has__active();
  inline void clear_has__active();
  inline void set_has__join_instance_time();
  inline void clear_has__join_instance_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::user_summary* _summary_;
  ::google::protobuf::uint32 _uid_;
  int _job_;
  ::google::protobuf::uint32 _last_login_;
  ::google::protobuf::uint32 _active_;
  ::google::protobuf::uint32 _join_instance_time_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_member* default_instance_;
};
// -------------------------------------------------------------------

class guild_applier : public ::google::protobuf::Message {
 public:
  guild_applier();
  virtual ~guild_applier();

  guild_applier(const guild_applier& from);

  inline guild_applier& operator=(const guild_applier& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_applier& default_instance();

  void Swap(guild_applier* other);

  // implements Message ----------------------------------------------

  guild_applier* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_applier& from);
  void MergeFrom(const guild_applier& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _uid = 1;
  inline bool has__uid() const;
  inline void clear__uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 _uid() const;
  inline void set__uid(::google::protobuf::uint32 value);

  // optional .client_baseserver.user_summary _user_summary = 2;
  inline bool has__user_summary() const;
  inline void clear__user_summary();
  static const int kUserSummaryFieldNumber = 2;
  inline const ::client_baseserver::user_summary& _user_summary() const;
  inline ::client_baseserver::user_summary* mutable__user_summary();
  inline ::client_baseserver::user_summary* release__user_summary();
  inline void set_allocated__user_summary(::client_baseserver::user_summary* _user_summary);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_applier)
 private:
  inline void set_has__uid();
  inline void clear_has__uid();
  inline void set_has__user_summary();
  inline void clear_has__user_summary();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::user_summary* _user_summary_;
  ::google::protobuf::uint32 _uid_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_applier* default_instance_;
};
// -------------------------------------------------------------------

class guild_list : public ::google::protobuf::Message {
 public:
  guild_list();
  virtual ~guild_list();

  guild_list(const guild_list& from);

  inline guild_list& operator=(const guild_list& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_list& default_instance();

  void Swap(guild_list* other);

  // implements Message ----------------------------------------------

  guild_list* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_list& from);
  void MergeFrom(const guild_list& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client_baseserver.guild_summary _guilds = 1;
  inline int _guilds_size() const;
  inline void clear__guilds();
  static const int kGuildsFieldNumber = 1;
  inline const ::client_baseserver::guild_summary& _guilds(int index) const;
  inline ::client_baseserver::guild_summary* mutable__guilds(int index);
  inline ::client_baseserver::guild_summary* add__guilds();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_summary >&
      _guilds() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_summary >*
      mutable__guilds();

  // required .client_baseserver.result _result = 2 [default = success];
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 2;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // optional uint32 _create_cost = 3;
  inline bool has__create_cost() const;
  inline void clear__create_cost();
  static const int kCreateCostFieldNumber = 3;
  inline ::google::protobuf::uint32 _create_cost() const;
  inline void set__create_cost(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_list)
 private:
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__create_cost();
  inline void clear_has__create_cost();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_summary > _guilds_;
  int _result_;
  ::google::protobuf::uint32 _create_cost_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_list* default_instance_;
};
// -------------------------------------------------------------------

class guild_search : public ::google::protobuf::Message {
 public:
  guild_search();
  virtual ~guild_search();

  guild_search(const guild_search& from);

  inline guild_search& operator=(const guild_search& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_search& default_instance();

  void Swap(guild_search* other);

  // implements Message ----------------------------------------------

  guild_search* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_search& from);
  void MergeFrom(const guild_search& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client_baseserver.guild_summary _guilds = 1;
  inline bool has__guilds() const;
  inline void clear__guilds();
  static const int kGuildsFieldNumber = 1;
  inline const ::client_baseserver::guild_summary& _guilds() const;
  inline ::client_baseserver::guild_summary* mutable__guilds();
  inline ::client_baseserver::guild_summary* release__guilds();
  inline void set_allocated__guilds(::client_baseserver::guild_summary* _guilds);

  // required .client_baseserver.result _result = 2 [default = success];
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 2;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // optional uint32 _create_cost = 3;
  inline bool has__create_cost() const;
  inline void clear__create_cost();
  static const int kCreateCostFieldNumber = 3;
  inline ::google::protobuf::uint32 _create_cost() const;
  inline void set__create_cost(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_search)
 private:
  inline void set_has__guilds();
  inline void clear_has__guilds();
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__create_cost();
  inline void clear_has__create_cost();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::guild_summary* _guilds_;
  int _result_;
  ::google::protobuf::uint32 _create_cost_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_search* default_instance_;
};
// -------------------------------------------------------------------

class guild_join : public ::google::protobuf::Message {
 public:
  guild_join();
  virtual ~guild_join();

  guild_join(const guild_join& from);

  inline guild_join& operator=(const guild_join& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_join& default_instance();

  void Swap(guild_join* other);

  // implements Message ----------------------------------------------

  guild_join* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_join& from);
  void MergeFrom(const guild_join& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef guild_join_join_result join_result;
  static const join_result join_fail = guild_join_join_result_join_fail;
  static const join_result join_enter = guild_join_join_result_join_enter;
  static const join_result join_wait = guild_join_join_result_join_wait;
  static inline bool join_result_IsValid(int value) {
    return guild_join_join_result_IsValid(value);
  }
  static const join_result join_result_MIN =
    guild_join_join_result_join_result_MIN;
  static const join_result join_result_MAX =
    guild_join_join_result_join_result_MAX;
  static const int join_result_ARRAYSIZE =
    guild_join_join_result_join_result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  join_result_descriptor() {
    return guild_join_join_result_descriptor();
  }
  static inline const ::std::string& join_result_Name(join_result value) {
    return guild_join_join_result_Name(value);
  }
  static inline bool join_result_Parse(const ::std::string& name,
      join_result* value) {
    return guild_join_join_result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .client_baseserver.guild_join.join_result _result = 1;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::guild_join_join_result _result() const;
  inline void set__result(::client_baseserver::guild_join_join_result value);

  // required uint32 _join_guild_id = 2;
  inline bool has__join_guild_id() const;
  inline void clear__join_guild_id();
  static const int kJoinGuildIdFieldNumber = 2;
  inline ::google::protobuf::uint32 _join_guild_id() const;
  inline void set__join_guild_id(::google::protobuf::uint32 value);

  // optional .client_baseserver.guild_info _guild_info = 3;
  inline bool has__guild_info() const;
  inline void clear__guild_info();
  static const int kGuildInfoFieldNumber = 3;
  inline const ::client_baseserver::guild_info& _guild_info() const;
  inline ::client_baseserver::guild_info* mutable__guild_info();
  inline ::client_baseserver::guild_info* release__guild_info();
  inline void set_allocated__guild_info(::client_baseserver::guild_info* _guild_info);

  // optional uint32 _cd_time = 4;
  inline bool has__cd_time() const;
  inline void clear__cd_time();
  static const int kCdTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 _cd_time() const;
  inline void set__cd_time(::google::protobuf::uint32 value);

  // optional string _fail_reason = 5;
  inline bool has__fail_reason() const;
  inline void clear__fail_reason();
  static const int kFailReasonFieldNumber = 5;
  inline const ::std::string& _fail_reason() const;
  inline void set__fail_reason(const ::std::string& value);
  inline void set__fail_reason(const char* value);
  inline void set__fail_reason(const char* value, size_t size);
  inline ::std::string* mutable__fail_reason();
  inline ::std::string* release__fail_reason();
  inline void set_allocated__fail_reason(::std::string* _fail_reason);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_join)
 private:
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__join_guild_id();
  inline void clear_has__join_guild_id();
  inline void set_has__guild_info();
  inline void clear_has__guild_info();
  inline void set_has__cd_time();
  inline void clear_has__cd_time();
  inline void set_has__fail_reason();
  inline void clear_has__fail_reason();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  ::google::protobuf::uint32 _join_guild_id_;
  ::client_baseserver::guild_info* _guild_info_;
  ::std::string* _fail_reason_;
  ::google::protobuf::uint32 _cd_time_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_join* default_instance_;
};
// -------------------------------------------------------------------

class guild_join_confirm : public ::google::protobuf::Message {
 public:
  guild_join_confirm();
  virtual ~guild_join_confirm();

  guild_join_confirm(const guild_join_confirm& from);

  inline guild_join_confirm& operator=(const guild_join_confirm& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_join_confirm& default_instance();

  void Swap(guild_join_confirm* other);

  // implements Message ----------------------------------------------

  guild_join_confirm* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_join_confirm& from);
  void MergeFrom(const guild_join_confirm& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // optional .client_baseserver.guild_member _new_man = 2;
  inline bool has__new_man() const;
  inline void clear__new_man();
  static const int kNewManFieldNumber = 2;
  inline const ::client_baseserver::guild_member& _new_man() const;
  inline ::client_baseserver::guild_member* mutable__new_man();
  inline ::client_baseserver::guild_member* release__new_man();
  inline void set_allocated__new_man(::client_baseserver::guild_member* _new_man);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_join_confirm)
 private:
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__new_man();
  inline void clear_has__new_man();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::guild_member* _new_man_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_join_confirm* default_instance_;
};
// -------------------------------------------------------------------

class guild_leave : public ::google::protobuf::Message {
 public:
  guild_leave();
  virtual ~guild_leave();

  guild_leave(const guild_leave& from);

  inline guild_leave& operator=(const guild_leave& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_leave& default_instance();

  void Swap(guild_leave* other);

  // implements Message ----------------------------------------------

  guild_leave* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_leave& from);
  void MergeFrom(const guild_leave& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_leave)
 private:
  inline void set_has__result();
  inline void clear_has__result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_leave* default_instance_;
};
// -------------------------------------------------------------------

class guild_kick : public ::google::protobuf::Message {
 public:
  guild_kick();
  virtual ~guild_kick();

  guild_kick(const guild_kick& from);

  inline guild_kick& operator=(const guild_kick& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_kick& default_instance();

  void Swap(guild_kick* other);

  // implements Message ----------------------------------------------

  guild_kick* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_kick& from);
  void MergeFrom(const guild_kick& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_kick)
 private:
  inline void set_has__result();
  inline void clear_has__result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_kick* default_instance_;
};
// -------------------------------------------------------------------

class guild_set : public ::google::protobuf::Message {
 public:
  guild_set();
  virtual ~guild_set();

  guild_set(const guild_set& from);

  inline guild_set& operator=(const guild_set& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_set& default_instance();

  void Swap(guild_set* other);

  // implements Message ----------------------------------------------

  guild_set* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_set& from);
  void MergeFrom(const guild_set& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_set)
 private:
  inline void set_has__result();
  inline void clear_has__result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_set* default_instance_;
};
// -------------------------------------------------------------------

class guild_query : public ::google::protobuf::Message {
 public:
  guild_query();
  virtual ~guild_query();

  guild_query(const guild_query& from);

  inline guild_query& operator=(const guild_query& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_query& default_instance();

  void Swap(guild_query* other);

  // implements Message ----------------------------------------------

  guild_query* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_query& from);
  void MergeFrom(const guild_query& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client_baseserver.guild_info _info = 1;
  inline bool has__info() const;
  inline void clear__info();
  static const int kInfoFieldNumber = 1;
  inline const ::client_baseserver::guild_info& _info() const;
  inline ::client_baseserver::guild_info* mutable__info();
  inline ::client_baseserver::guild_info* release__info();
  inline void set_allocated__info(::client_baseserver::guild_info* _info);

  // optional .client_baseserver.guild_worship _worship = 2;
  inline bool has__worship() const;
  inline void clear__worship();
  static const int kWorshipFieldNumber = 2;
  inline const ::client_baseserver::guild_worship& _worship() const;
  inline ::client_baseserver::guild_worship* mutable__worship();
  inline ::client_baseserver::guild_worship* release__worship();
  inline void set_allocated__worship(::client_baseserver::guild_worship* _worship);

  // optional uint32 _drop_info = 3;
  inline bool has__drop_info() const;
  inline void clear__drop_info();
  static const int kDropInfoFieldNumber = 3;
  inline ::google::protobuf::uint32 _drop_info() const;
  inline void set__drop_info(::google::protobuf::uint32 value);

  // optional uint32 _to_chairman = 4;
  inline bool has__to_chairman() const;
  inline void clear__to_chairman();
  static const int kToChairmanFieldNumber = 4;
  inline ::google::protobuf::uint32 _to_chairman() const;
  inline void set__to_chairman(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_query)
 private:
  inline void set_has__info();
  inline void clear_has__info();
  inline void set_has__worship();
  inline void clear_has__worship();
  inline void set_has__drop_info();
  inline void clear_has__drop_info();
  inline void set_has__to_chairman();
  inline void clear_has__to_chairman();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::guild_info* _info_;
  ::client_baseserver::guild_worship* _worship_;
  ::google::protobuf::uint32 _drop_info_;
  ::google::protobuf::uint32 _to_chairman_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_query* default_instance_;
};
// -------------------------------------------------------------------

class guild_worship : public ::google::protobuf::Message {
 public:
  guild_worship();
  virtual ~guild_worship();

  guild_worship(const guild_worship& from);

  inline guild_worship& operator=(const guild_worship& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_worship& default_instance();

  void Swap(guild_worship* other);

  // implements Message ----------------------------------------------

  guild_worship* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_worship& from);
  void MergeFrom(const guild_worship& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _use_times = 1;
  inline bool has__use_times() const;
  inline void clear__use_times();
  static const int kUseTimesFieldNumber = 1;
  inline ::google::protobuf::uint32 _use_times() const;
  inline void set__use_times(::google::protobuf::uint32 value);

  // repeated .client_baseserver.worship_reward _rewards = 2;
  inline int _rewards_size() const;
  inline void clear__rewards();
  static const int kRewardsFieldNumber = 2;
  inline const ::client_baseserver::worship_reward& _rewards(int index) const;
  inline ::client_baseserver::worship_reward* mutable__rewards(int index);
  inline ::client_baseserver::worship_reward* add__rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::worship_reward >&
      _rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::worship_reward >*
      mutable__rewards();

  // required uint32 _times = 3;
  inline bool has__times() const;
  inline void clear__times();
  static const int kTimesFieldNumber = 3;
  inline ::google::protobuf::uint32 _times() const;
  inline void set__times(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_worship)
 private:
  inline void set_has__use_times();
  inline void clear_has__use_times();
  inline void set_has__times();
  inline void clear_has__times();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::worship_reward > _rewards_;
  ::google::protobuf::uint32 _use_times_;
  ::google::protobuf::uint32 _times_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_worship* default_instance_;
};
// -------------------------------------------------------------------

class guild_set_job : public ::google::protobuf::Message {
 public:
  guild_set_job();
  virtual ~guild_set_job();

  guild_set_job(const guild_set_job& from);

  inline guild_set_job& operator=(const guild_set_job& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_set_job& default_instance();

  void Swap(guild_set_job* other);

  // implements Message ----------------------------------------------

  guild_set_job* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_set_job& from);
  void MergeFrom(const guild_set_job& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_set_job)
 private:
  inline void set_has__result();
  inline void clear_has__result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_set_job* default_instance_;
};
// -------------------------------------------------------------------

class guild_add_hire : public ::google::protobuf::Message {
 public:
  guild_add_hire();
  virtual ~guild_add_hire();

  guild_add_hire(const guild_add_hire& from);

  inline guild_add_hire& operator=(const guild_add_hire& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_add_hire& default_instance();

  void Swap(guild_add_hire* other);

  // implements Message ----------------------------------------------

  guild_add_hire* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_add_hire& from);
  void MergeFrom(const guild_add_hire& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // required uint32 _income = 2;
  inline bool has__income() const;
  inline void clear__income();
  static const int kIncomeFieldNumber = 2;
  inline ::google::protobuf::uint32 _income() const;
  inline void set__income(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_add_hire)
 private:
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__income();
  inline void clear_has__income();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  ::google::protobuf::uint32 _income_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_add_hire* default_instance_;
};
// -------------------------------------------------------------------

class guild_del_hire : public ::google::protobuf::Message {
 public:
  guild_del_hire();
  virtual ~guild_del_hire();

  guild_del_hire(const guild_del_hire& from);

  inline guild_del_hire& operator=(const guild_del_hire& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_del_hire& default_instance();

  void Swap(guild_del_hire* other);

  // implements Message ----------------------------------------------

  guild_del_hire* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_del_hire& from);
  void MergeFrom(const guild_del_hire& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // optional uint32 _hire_reward = 2;
  inline bool has__hire_reward() const;
  inline void clear__hire_reward();
  static const int kHireRewardFieldNumber = 2;
  inline ::google::protobuf::uint32 _hire_reward() const;
  inline void set__hire_reward(::google::protobuf::uint32 value);

  // optional uint32 _stay_reward = 3;
  inline bool has__stay_reward() const;
  inline void clear__stay_reward();
  static const int kStayRewardFieldNumber = 3;
  inline ::google::protobuf::uint32 _stay_reward() const;
  inline void set__stay_reward(::google::protobuf::uint32 value);

  // optional uint32 _heroid = 4;
  inline bool has__heroid() const;
  inline void clear__heroid();
  static const int kHeroidFieldNumber = 4;
  inline ::google::protobuf::uint32 _heroid() const;
  inline void set__heroid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_del_hire)
 private:
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__hire_reward();
  inline void clear_has__hire_reward();
  inline void set_has__stay_reward();
  inline void clear_has__stay_reward();
  inline void set_has__heroid();
  inline void clear_has__heroid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  ::google::protobuf::uint32 _hire_reward_;
  ::google::protobuf::uint32 _stay_reward_;
  ::google::protobuf::uint32 _heroid_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_del_hire* default_instance_;
};
// -------------------------------------------------------------------

class guild_query_hires : public ::google::protobuf::Message {
 public:
  guild_query_hires();
  virtual ~guild_query_hires();

  guild_query_hires(const guild_query_hires& from);

  inline guild_query_hires& operator=(const guild_query_hires& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_query_hires& default_instance();

  void Swap(guild_query_hires* other);

  // implements Message ----------------------------------------------

  guild_query_hires* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_query_hires& from);
  void MergeFrom(const guild_query_hires& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client_baseserver.guild_hire_user _users = 1;
  inline int _users_size() const;
  inline void clear__users();
  static const int kUsersFieldNumber = 1;
  inline const ::client_baseserver::guild_hire_user& _users(int index) const;
  inline ::client_baseserver::guild_hire_user* mutable__users(int index);
  inline ::client_baseserver::guild_hire_user* add__users();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_hire_user >&
      _users() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_hire_user >*
      mutable__users();

  // repeated uint32 _hire_uids = 2;
  inline int _hire_uids_size() const;
  inline void clear__hire_uids();
  static const int kHireUidsFieldNumber = 2;
  inline ::google::protobuf::uint32 _hire_uids(int index) const;
  inline void set__hire_uids(int index, ::google::protobuf::uint32 value);
  inline void add__hire_uids(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _hire_uids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__hire_uids();

  // required .client_baseserver.hire_from _from = 3;
  inline bool has__from() const;
  inline void clear__from();
  static const int kFromFieldNumber = 3;
  inline ::client_baseserver::hire_from _from() const;
  inline void set__from(::client_baseserver::hire_from value);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_query_hires)
 private:
  inline void set_has__from();
  inline void clear_has__from();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_hire_user > _users_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _hire_uids_;
  int _from_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_query_hires* default_instance_;
};
// -------------------------------------------------------------------

class guild_hire_user : public ::google::protobuf::Message {
 public:
  guild_hire_user();
  virtual ~guild_hire_user();

  guild_hire_user(const guild_hire_user& from);

  inline guild_hire_user& operator=(const guild_hire_user& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_hire_user& default_instance();

  void Swap(guild_hire_user* other);

  // implements Message ----------------------------------------------

  guild_hire_user* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_hire_user& from);
  void MergeFrom(const guild_hire_user& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _uid = 1;
  inline bool has__uid() const;
  inline void clear__uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 _uid() const;
  inline void set__uid(::google::protobuf::uint32 value);

  // required string _name = 2;
  inline bool has__name() const;
  inline void clear__name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& _name() const;
  inline void set__name(const ::std::string& value);
  inline void set__name(const char* value);
  inline void set__name(const char* value, size_t size);
  inline ::std::string* mutable__name();
  inline ::std::string* release__name();
  inline void set_allocated__name(::std::string* _name);

  // required uint32 _level = 3;
  inline bool has__level() const;
  inline void clear__level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 _level() const;
  inline void set__level(::google::protobuf::uint32 value);

  // required uint32 _avatar = 4;
  inline bool has__avatar() const;
  inline void clear__avatar();
  static const int kAvatarFieldNumber = 4;
  inline ::google::protobuf::uint32 _avatar() const;
  inline void set__avatar(::google::protobuf::uint32 value);

  // repeated .client_baseserver.hire_hero_summary _heroes = 5;
  inline int _heroes_size() const;
  inline void clear__heroes();
  static const int kHeroesFieldNumber = 5;
  inline const ::client_baseserver::hire_hero_summary& _heroes(int index) const;
  inline ::client_baseserver::hire_hero_summary* mutable__heroes(int index);
  inline ::client_baseserver::hire_hero_summary* add__heroes();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hire_hero_summary >&
      _heroes() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hire_hero_summary >*
      mutable__heroes();

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_hire_user)
 private:
  inline void set_has__uid();
  inline void clear_has__uid();
  inline void set_has__name();
  inline void clear_has__name();
  inline void set_has__level();
  inline void clear_has__level();
  inline void set_has__avatar();
  inline void clear_has__avatar();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* _name_;
  ::google::protobuf::uint32 _uid_;
  ::google::protobuf::uint32 _level_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::hire_hero_summary > _heroes_;
  ::google::protobuf::uint32 _avatar_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_hire_user* default_instance_;
};
// -------------------------------------------------------------------

class hire_hero_summary : public ::google::protobuf::Message {
 public:
  hire_hero_summary();
  virtual ~hire_hero_summary();

  hire_hero_summary(const hire_hero_summary& from);

  inline hire_hero_summary& operator=(const hire_hero_summary& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const hire_hero_summary& default_instance();

  void Swap(hire_hero_summary* other);

  // implements Message ----------------------------------------------

  hire_hero_summary* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const hire_hero_summary& from);
  void MergeFrom(const hire_hero_summary& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.hero_summary _hero = 1;
  inline bool has__hero() const;
  inline void clear__hero();
  static const int kHeroFieldNumber = 1;
  inline const ::client_baseserver::hero_summary& _hero() const;
  inline ::client_baseserver::hero_summary* mutable__hero();
  inline ::client_baseserver::hero_summary* release__hero();
  inline void set_allocated__hero(::client_baseserver::hero_summary* _hero);

  // required uint32 _cost = 2;
  inline bool has__cost() const;
  inline void clear__cost();
  static const int kCostFieldNumber = 2;
  inline ::google::protobuf::uint32 _cost() const;
  inline void set__cost(::google::protobuf::uint32 value);

  // required uint32 _income = 3;
  inline bool has__income() const;
  inline void clear__income();
  static const int kIncomeFieldNumber = 3;
  inline ::google::protobuf::uint32 _income() const;
  inline void set__income(::google::protobuf::uint32 value);

  // required uint32 _hire_ts = 4;
  inline bool has__hire_ts() const;
  inline void clear__hire_ts();
  static const int kHireTsFieldNumber = 4;
  inline ::google::protobuf::uint32 _hire_ts() const;
  inline void set__hire_ts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.hire_hero_summary)
 private:
  inline void set_has__hero();
  inline void clear_has__hero();
  inline void set_has__cost();
  inline void clear_has__cost();
  inline void set_has__income();
  inline void clear_has__income();
  inline void set_has__hire_ts();
  inline void clear_has__hire_ts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::hero_summary* _hero_;
  ::google::protobuf::uint32 _cost_;
  ::google::protobuf::uint32 _income_;
  ::google::protobuf::uint32 _hire_ts_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static hire_hero_summary* default_instance_;
};
// -------------------------------------------------------------------

class guild_hire_hero : public ::google::protobuf::Message {
 public:
  guild_hire_hero();
  virtual ~guild_hire_hero();

  guild_hire_hero(const guild_hire_hero& from);

  inline guild_hire_hero& operator=(const guild_hire_hero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_hire_hero& default_instance();

  void Swap(guild_hire_hero* other);

  // implements Message ----------------------------------------------

  guild_hire_hero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_hire_hero& from);
  void MergeFrom(const guild_hire_hero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.hire_result _result = 1;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::hire_result _result() const;
  inline void set__result(::client_baseserver::hire_result value);

  // optional .client_baseserver.hire_from _from = 2;
  inline bool has__from() const;
  inline void clear__from();
  static const int kFromFieldNumber = 2;
  inline ::client_baseserver::hire_from _from() const;
  inline void set__from(::client_baseserver::hire_from value);

  // optional uint32 _uid = 3;
  inline bool has__uid() const;
  inline void clear__uid();
  static const int kUidFieldNumber = 3;
  inline ::google::protobuf::uint32 _uid() const;
  inline void set__uid(::google::protobuf::uint32 value);

  // optional .client_baseserver.hero _hero = 4;
  inline bool has__hero() const;
  inline void clear__hero();
  static const int kHeroFieldNumber = 4;
  inline const ::client_baseserver::hero& _hero() const;
  inline ::client_baseserver::hero* mutable__hero();
  inline ::client_baseserver::hero* release__hero();
  inline void set_allocated__hero(::client_baseserver::hero* _hero);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_hire_hero)
 private:
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__from();
  inline void clear_has__from();
  inline void set_has__uid();
  inline void clear_has__uid();
  inline void set_has__hero();
  inline void clear_has__hero();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  int _from_;
  ::client_baseserver::hero* _hero_;
  ::google::protobuf::uint32 _uid_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_hire_hero* default_instance_;
};
// -------------------------------------------------------------------

class guild_worship_req : public ::google::protobuf::Message {
 public:
  guild_worship_req();
  virtual ~guild_worship_req();

  guild_worship_req(const guild_worship_req& from);

  inline guild_worship_req& operator=(const guild_worship_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_worship_req& default_instance();

  void Swap(guild_worship_req* other);

  // implements Message ----------------------------------------------

  guild_worship_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_worship_req& from);
  void MergeFrom(const guild_worship_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_worship_req)
 private:
  inline void set_has__result();
  inline void clear_has__result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_worship_req* default_instance_;
};
// -------------------------------------------------------------------

class guild_worship_withdraw : public ::google::protobuf::Message {
 public:
  guild_worship_withdraw();
  virtual ~guild_worship_withdraw();

  guild_worship_withdraw(const guild_worship_withdraw& from);

  inline guild_worship_withdraw& operator=(const guild_worship_withdraw& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_worship_withdraw& default_instance();

  void Swap(guild_worship_withdraw* other);

  // implements Message ----------------------------------------------

  guild_worship_withdraw* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_worship_withdraw& from);
  void MergeFrom(const guild_worship_withdraw& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // repeated .client_baseserver.worship_reward _rewards = 2;
  inline int _rewards_size() const;
  inline void clear__rewards();
  static const int kRewardsFieldNumber = 2;
  inline const ::client_baseserver::worship_reward& _rewards(int index) const;
  inline ::client_baseserver::worship_reward* mutable__rewards(int index);
  inline ::client_baseserver::worship_reward* add__rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::worship_reward >&
      _rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::worship_reward >*
      mutable__rewards();

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_worship_withdraw)
 private:
  inline void set_has__result();
  inline void clear_has__result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::worship_reward > _rewards_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_worship_withdraw* default_instance_;
};
// -------------------------------------------------------------------

class guild_qurey_hh_detail : public ::google::protobuf::Message {
 public:
  guild_qurey_hh_detail();
  virtual ~guild_qurey_hh_detail();

  guild_qurey_hh_detail(const guild_qurey_hh_detail& from);

  inline guild_qurey_hh_detail& operator=(const guild_qurey_hh_detail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_qurey_hh_detail& default_instance();

  void Swap(guild_qurey_hh_detail* other);

  // implements Message ----------------------------------------------

  guild_qurey_hh_detail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_qurey_hh_detail& from);
  void MergeFrom(const guild_qurey_hh_detail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client_baseserver.hero _hero = 1;
  inline bool has__hero() const;
  inline void clear__hero();
  static const int kHeroFieldNumber = 1;
  inline const ::client_baseserver::hero& _hero() const;
  inline ::client_baseserver::hero* mutable__hero();
  inline ::client_baseserver::hero* release__hero();
  inline void set_allocated__hero(::client_baseserver::hero* _hero);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_qurey_hh_detail)
 private:
  inline void set_has__hero();
  inline void clear_has__hero();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::hero* _hero_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_qurey_hh_detail* default_instance_;
};
// -------------------------------------------------------------------

class worship_reward : public ::google::protobuf::Message {
 public:
  worship_reward();
  virtual ~worship_reward();

  worship_reward(const worship_reward& from);

  inline worship_reward& operator=(const worship_reward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const worship_reward& default_instance();

  void Swap(worship_reward* other);

  // implements Message ----------------------------------------------

  worship_reward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const worship_reward& from);
  void MergeFrom(const worship_reward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef worship_reward_type type;
  static const type gold = worship_reward_type_gold;
  static const type diamond = worship_reward_type_diamond;
  static inline bool type_IsValid(int value) {
    return worship_reward_type_IsValid(value);
  }
  static const type type_MIN =
    worship_reward_type_type_MIN;
  static const type type_MAX =
    worship_reward_type_type_MAX;
  static const int type_ARRAYSIZE =
    worship_reward_type_type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  type_descriptor() {
    return worship_reward_type_descriptor();
  }
  static inline const ::std::string& type_Name(type value) {
    return worship_reward_type_Name(value);
  }
  static inline bool type_Parse(const ::std::string& name,
      type* value) {
    return worship_reward_type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .client_baseserver.worship_reward.type _type = 1;
  inline bool has__type() const;
  inline void clear__type();
  static const int kTypeFieldNumber = 1;
  inline ::client_baseserver::worship_reward_type _type() const;
  inline void set__type(::client_baseserver::worship_reward_type value);

  // optional uint32 _param1 = 2;
  inline bool has__param1() const;
  inline void clear__param1();
  static const int kParam1FieldNumber = 2;
  inline ::google::protobuf::uint32 _param1() const;
  inline void set__param1(::google::protobuf::uint32 value);

  // optional uint32 _param2 = 3;
  inline bool has__param2() const;
  inline void clear__param2();
  static const int kParam2FieldNumber = 3;
  inline ::google::protobuf::uint32 _param2() const;
  inline void set__param2(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.worship_reward)
 private:
  inline void set_has__type();
  inline void clear_has__type();
  inline void set_has__param1();
  inline void clear_has__param1();
  inline void set_has__param2();
  inline void clear_has__param2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _type_;
  ::google::protobuf::uint32 _param1_;
  ::google::protobuf::uint32 _param2_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static worship_reward* default_instance_;
};
// -------------------------------------------------------------------

class activity_reward : public ::google::protobuf::Message {
 public:
  activity_reward();
  virtual ~activity_reward();

  activity_reward(const activity_reward& from);

  inline activity_reward& operator=(const activity_reward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activity_reward& default_instance();

  void Swap(activity_reward* other);

  // implements Message ----------------------------------------------

  activity_reward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activity_reward& from);
  void MergeFrom(const activity_reward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef activity_reward_type type;
  static const type rmb = activity_reward_type_rmb;
  static const type money = activity_reward_type_money;
  static const type item = activity_reward_type_item;
  static const type hero = activity_reward_type_hero;
  static const type rand_soul = activity_reward_type_rand_soul;
  static inline bool type_IsValid(int value) {
    return activity_reward_type_IsValid(value);
  }
  static const type type_MIN =
    activity_reward_type_type_MIN;
  static const type type_MAX =
    activity_reward_type_type_MAX;
  static const int type_ARRAYSIZE =
    activity_reward_type_type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  type_descriptor() {
    return activity_reward_type_descriptor();
  }
  static inline const ::std::string& type_Name(type value) {
    return activity_reward_type_Name(value);
  }
  static inline bool type_Parse(const ::std::string& name,
      type* value) {
    return activity_reward_type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .client_baseserver.activity_reward.type _type = 1;
  inline bool has__type() const;
  inline void clear__type();
  static const int kTypeFieldNumber = 1;
  inline ::client_baseserver::activity_reward_type _type() const;
  inline void set__type(::client_baseserver::activity_reward_type value);

  // optional uint32 _id = 2;
  inline bool has__id() const;
  inline void clear__id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 _id() const;
  inline void set__id(::google::protobuf::uint32 value);

  // optional uint32 _amount = 3;
  inline bool has__amount() const;
  inline void clear__amount();
  static const int kAmountFieldNumber = 3;
  inline ::google::protobuf::uint32 _amount() const;
  inline void set__amount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.activity_reward)
 private:
  inline void set_has__type();
  inline void clear_has__type();
  inline void set_has__id();
  inline void clear_has__id();
  inline void set_has__amount();
  inline void clear_has__amount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _type_;
  ::google::protobuf::uint32 _id_;
  ::google::protobuf::uint32 _amount_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static activity_reward* default_instance_;
};
// -------------------------------------------------------------------

class activity_infos : public ::google::protobuf::Message {
 public:
  activity_infos();
  virtual ~activity_infos();

  activity_infos(const activity_infos& from);

  inline activity_infos& operator=(const activity_infos& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activity_infos& default_instance();

  void Swap(activity_infos* other);

  // implements Message ----------------------------------------------

  activity_infos* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activity_infos& from);
  void MergeFrom(const activity_infos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client_baseserver.activity_info _activity_info = 1;
  inline int _activity_info_size() const;
  inline void clear__activity_info();
  static const int kActivityInfoFieldNumber = 1;
  inline const ::client_baseserver::activity_info& _activity_info(int index) const;
  inline ::client_baseserver::activity_info* mutable__activity_info(int index);
  inline ::client_baseserver::activity_info* add__activity_info();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::activity_info >&
      _activity_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::activity_info >*
      mutable__activity_info();

  // @@protoc_insertion_point(class_scope:client_baseserver.activity_infos)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::activity_info > _activity_info_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static activity_infos* default_instance_;
};
// -------------------------------------------------------------------

class activity_rewards : public ::google::protobuf::Message {
 public:
  activity_rewards();
  virtual ~activity_rewards();

  activity_rewards(const activity_rewards& from);

  inline activity_rewards& operator=(const activity_rewards& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activity_rewards& default_instance();

  void Swap(activity_rewards* other);

  // implements Message ----------------------------------------------

  activity_rewards* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activity_rewards& from);
  void MergeFrom(const activity_rewards& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 _amount = 1;
  inline bool has__amount() const;
  inline void clear__amount();
  static const int kAmountFieldNumber = 1;
  inline ::google::protobuf::uint32 _amount() const;
  inline void set__amount(::google::protobuf::uint32 value);

  // repeated .client_baseserver.activity_reward _rewards = 2;
  inline int _rewards_size() const;
  inline void clear__rewards();
  static const int kRewardsFieldNumber = 2;
  inline const ::client_baseserver::activity_reward& _rewards(int index) const;
  inline ::client_baseserver::activity_reward* mutable__rewards(int index);
  inline ::client_baseserver::activity_reward* add__rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::activity_reward >&
      _rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::activity_reward >*
      mutable__rewards();

  // optional .client_baseserver.dailyjob _dailyjob = 3;
  inline bool has__dailyjob() const;
  inline void clear__dailyjob();
  static const int kDailyjobFieldNumber = 3;
  inline const ::client_baseserver::dailyjob& _dailyjob() const;
  inline ::client_baseserver::dailyjob* mutable__dailyjob();
  inline ::client_baseserver::dailyjob* release__dailyjob();
  inline void set_allocated__dailyjob(::client_baseserver::dailyjob* _dailyjob);

  // @@protoc_insertion_point(class_scope:client_baseserver.activity_rewards)
 private:
  inline void set_has__amount();
  inline void clear_has__amount();
  inline void set_has__dailyjob();
  inline void clear_has__dailyjob();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::activity_reward > _rewards_;
  ::client_baseserver::dailyjob* _dailyjob_;
  ::google::protobuf::uint32 _amount_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static activity_rewards* default_instance_;
};
// -------------------------------------------------------------------

class activity_info : public ::google::protobuf::Message {
 public:
  activity_info();
  virtual ~activity_info();

  activity_info(const activity_info& from);

  inline activity_info& operator=(const activity_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const activity_info& default_instance();

  void Swap(activity_info* other);

  // implements Message ----------------------------------------------

  activity_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const activity_info& from);
  void MergeFrom(const activity_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef activity_info_type type;
  static const type single_br_tavern = activity_info_type_single_br_tavern;
  static const type combo_br_tavern = activity_info_type_combo_br_tavern;
  static const type single_gd_tavern = activity_info_type_single_gd_tavern;
  static const type combo_gd_tavern = activity_info_type_combo_gd_tavern;
  static const type magic_soul_tavern = activity_info_type_magic_soul_tavern;
  static const type rmb_recharge = activity_info_type_rmb_recharge;
  static const type diamond_consume = activity_info_type_diamond_consume;
  static inline bool type_IsValid(int value) {
    return activity_info_type_IsValid(value);
  }
  static const type type_MIN =
    activity_info_type_type_MIN;
  static const type type_MAX =
    activity_info_type_type_MAX;
  static const int type_ARRAYSIZE =
    activity_info_type_type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  type_descriptor() {
    return activity_info_type_descriptor();
  }
  static inline const ::std::string& type_Name(type value) {
    return activity_info_type_Name(value);
  }
  static inline bool type_Parse(const ::std::string& name,
      type* value) {
    return activity_info_type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint32 _id = 1;
  inline bool has__id() const;
  inline void clear__id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 _id() const;
  inline void set__id(::google::protobuf::uint32 value);

  // optional .client_baseserver.activity_info.type _type = 2;
  inline bool has__type() const;
  inline void clear__type();
  static const int kTypeFieldNumber = 2;
  inline ::client_baseserver::activity_info_type _type() const;
  inline void set__type(::client_baseserver::activity_info_type value);

  // optional uint32 _start_time = 3;
  inline bool has__start_time() const;
  inline void clear__start_time();
  static const int kStartTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 _start_time() const;
  inline void set__start_time(::google::protobuf::uint32 value);

  // optional uint32 _end_time = 4;
  inline bool has__end_time() const;
  inline void clear__end_time();
  static const int kEndTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 _end_time() const;
  inline void set__end_time(::google::protobuf::uint32 value);

  // repeated .client_baseserver.activity_rewards _rewards = 5;
  inline int _rewards_size() const;
  inline void clear__rewards();
  static const int kRewardsFieldNumber = 5;
  inline const ::client_baseserver::activity_rewards& _rewards(int index) const;
  inline ::client_baseserver::activity_rewards* mutable__rewards(int index);
  inline ::client_baseserver::activity_rewards* add__rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::activity_rewards >&
      _rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::activity_rewards >*
      mutable__rewards();

  // optional string _title = 6;
  inline bool has__title() const;
  inline void clear__title();
  static const int kTitleFieldNumber = 6;
  inline const ::std::string& _title() const;
  inline void set__title(const ::std::string& value);
  inline void set__title(const char* value);
  inline void set__title(const char* value, size_t size);
  inline ::std::string* mutable__title();
  inline ::std::string* release__title();
  inline void set_allocated__title(::std::string* _title);

  // optional string _desc = 7;
  inline bool has__desc() const;
  inline void clear__desc();
  static const int kDescFieldNumber = 7;
  inline const ::std::string& _desc() const;
  inline void set__desc(const ::std::string& value);
  inline void set__desc(const char* value);
  inline void set__desc(const char* value, size_t size);
  inline ::std::string* mutable__desc();
  inline ::std::string* release__desc();
  inline void set_allocated__desc(::std::string* _desc);

  // optional string _rules = 8;
  inline bool has__rules() const;
  inline void clear__rules();
  static const int kRulesFieldNumber = 8;
  inline const ::std::string& _rules() const;
  inline void set__rules(const ::std::string& value);
  inline void set__rules(const char* value);
  inline void set__rules(const char* value, size_t size);
  inline ::std::string* mutable__rules();
  inline ::std::string* release__rules();
  inline void set_allocated__rules(::std::string* _rules);

  // @@protoc_insertion_point(class_scope:client_baseserver.activity_info)
 private:
  inline void set_has__id();
  inline void clear_has__id();
  inline void set_has__type();
  inline void clear_has__type();
  inline void set_has__start_time();
  inline void clear_has__start_time();
  inline void set_has__end_time();
  inline void clear_has__end_time();
  inline void set_has__title();
  inline void clear_has__title();
  inline void set_has__desc();
  inline void clear_has__desc();
  inline void set_has__rules();
  inline void clear_has__rules();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _id_;
  int _type_;
  ::google::protobuf::uint32 _start_time_;
  ::google::protobuf::uint32 _end_time_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::activity_rewards > _rewards_;
  ::std::string* _title_;
  ::std::string* _desc_;
  ::std::string* _rules_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static activity_info* default_instance_;
};
// -------------------------------------------------------------------

class cdkey_gift_reply : public ::google::protobuf::Message {
 public:
  cdkey_gift_reply();
  virtual ~cdkey_gift_reply();

  cdkey_gift_reply(const cdkey_gift_reply& from);

  inline cdkey_gift_reply& operator=(const cdkey_gift_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const cdkey_gift_reply& default_instance();

  void Swap(cdkey_gift_reply* other);

  // implements Message ----------------------------------------------

  cdkey_gift_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const cdkey_gift_reply& from);
  void MergeFrom(const cdkey_gift_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef cdkey_gift_reply_cdkey_result cdkey_result;
  static const cdkey_result success = cdkey_gift_reply_cdkey_result_success;
  static const cdkey_result already_used = cdkey_gift_reply_cdkey_result_already_used;
  static const cdkey_result not_exists = cdkey_gift_reply_cdkey_result_not_exists;
  static const cdkey_result once_only = cdkey_gift_reply_cdkey_result_once_only;
  static inline bool cdkey_result_IsValid(int value) {
    return cdkey_gift_reply_cdkey_result_IsValid(value);
  }
  static const cdkey_result cdkey_result_MIN =
    cdkey_gift_reply_cdkey_result_cdkey_result_MIN;
  static const cdkey_result cdkey_result_MAX =
    cdkey_gift_reply_cdkey_result_cdkey_result_MAX;
  static const int cdkey_result_ARRAYSIZE =
    cdkey_gift_reply_cdkey_result_cdkey_result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  cdkey_result_descriptor() {
    return cdkey_gift_reply_cdkey_result_descriptor();
  }
  static inline const ::std::string& cdkey_result_Name(cdkey_result value) {
    return cdkey_gift_reply_cdkey_result_Name(value);
  }
  static inline bool cdkey_result_Parse(const ::std::string& name,
      cdkey_result* value) {
    return cdkey_gift_reply_cdkey_result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .client_baseserver.cdkey_gift_reply.cdkey_result _result = 1;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::cdkey_gift_reply_cdkey_result _result() const;
  inline void set__result(::client_baseserver::cdkey_gift_reply_cdkey_result value);

  // optional .client_baseserver.res_pack _pack = 2;
  inline bool has__pack() const;
  inline void clear__pack();
  static const int kPackFieldNumber = 2;
  inline const ::client_baseserver::res_pack& _pack() const;
  inline ::client_baseserver::res_pack* mutable__pack();
  inline ::client_baseserver::res_pack* release__pack();
  inline void set_allocated__pack(::client_baseserver::res_pack* _pack);

  // @@protoc_insertion_point(class_scope:client_baseserver.cdkey_gift_reply)
 private:
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__pack();
  inline void clear_has__pack();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::res_pack* _pack_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static cdkey_gift_reply* default_instance_;
};
// -------------------------------------------------------------------

class res_pack : public ::google::protobuf::Message {
 public:
  res_pack();
  virtual ~res_pack();

  res_pack(const res_pack& from);

  inline res_pack& operator=(const res_pack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const res_pack& default_instance();

  void Swap(res_pack* other);

  // implements Message ----------------------------------------------

  res_pack* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const res_pack& from);
  void MergeFrom(const res_pack& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 _money = 1;
  inline bool has__money() const;
  inline void clear__money();
  static const int kMoneyFieldNumber = 1;
  inline ::google::protobuf::uint32 _money() const;
  inline void set__money(::google::protobuf::uint32 value);

  // optional uint32 _diamond = 2;
  inline bool has__diamond() const;
  inline void clear__diamond();
  static const int kDiamondFieldNumber = 2;
  inline ::google::protobuf::uint32 _diamond() const;
  inline void set__diamond(::google::protobuf::uint32 value);

  // repeated uint32 _items = 3;
  inline int _items_size() const;
  inline void clear__items();
  static const int kItemsFieldNumber = 3;
  inline ::google::protobuf::uint32 _items(int index) const;
  inline void set__items(int index, ::google::protobuf::uint32 value);
  inline void add__items(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _items() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__items();

  // repeated .client_baseserver.hero _heroes = 4;
  inline int _heroes_size() const;
  inline void clear__heroes();
  static const int kHeroesFieldNumber = 4;
  inline const ::client_baseserver::hero& _heroes(int index) const;
  inline ::client_baseserver::hero* mutable__heroes(int index);
  inline ::client_baseserver::hero* add__heroes();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >&
      _heroes() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >*
      mutable__heroes();

  // optional .client_baseserver.monthcard _month_card = 5;
  inline bool has__month_card() const;
  inline void clear__month_card();
  static const int kMonthCardFieldNumber = 5;
  inline const ::client_baseserver::monthcard& _month_card() const;
  inline ::client_baseserver::monthcard* mutable__month_card();
  inline ::client_baseserver::monthcard* release__month_card();
  inline void set_allocated__month_card(::client_baseserver::monthcard* _month_card);

  // @@protoc_insertion_point(class_scope:client_baseserver.res_pack)
 private:
  inline void set_has__money();
  inline void clear_has__money();
  inline void set_has__diamond();
  inline void clear_has__diamond();
  inline void set_has__month_card();
  inline void clear_has__month_card();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _money_;
  ::google::protobuf::uint32 _diamond_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _items_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero > _heroes_;
  ::client_baseserver::monthcard* _month_card_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static res_pack* default_instance_;
};
// -------------------------------------------------------------------

class ask_magicsoul_reply : public ::google::protobuf::Message {
 public:
  ask_magicsoul_reply();
  virtual ~ask_magicsoul_reply();

  ask_magicsoul_reply(const ask_magicsoul_reply& from);

  inline ask_magicsoul_reply& operator=(const ask_magicsoul_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ask_magicsoul_reply& default_instance();

  void Swap(ask_magicsoul_reply* other);

  // implements Message ----------------------------------------------

  ask_magicsoul_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ask_magicsoul_reply& from);
  void MergeFrom(const ask_magicsoul_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 _id = 1;
  inline int _id_size() const;
  inline void clear__id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 _id(int index) const;
  inline void set__id(int index, ::google::protobuf::uint32 value);
  inline void add__id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__id();

  // @@protoc_insertion_point(class_scope:client_baseserver.ask_magicsoul_reply)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _id_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static ask_magicsoul_reply* default_instance_;
};
// -------------------------------------------------------------------

class important_data : public ::google::protobuf::Message {
 public:
  important_data();
  virtual ~important_data();

  important_data(const important_data& from);

  inline important_data& operator=(const important_data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const important_data& default_instance();

  void Swap(important_data* other);

  // implements Message ----------------------------------------------

  important_data* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const important_data& from);
  void MergeFrom(const important_data& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _money = 1;
  inline bool has__money() const;
  inline void clear__money();
  static const int kMoneyFieldNumber = 1;
  inline ::google::protobuf::uint32 _money() const;
  inline void set__money(::google::protobuf::uint32 value);

  // required uint32 _rmb = 2;
  inline bool has__rmb() const;
  inline void clear__rmb();
  static const int kRmbFieldNumber = 2;
  inline ::google::protobuf::uint32 _rmb() const;
  inline void set__rmb(::google::protobuf::uint32 value);

  // repeated .client_baseserver.hero _heroes = 3;
  inline int _heroes_size() const;
  inline void clear__heroes();
  static const int kHeroesFieldNumber = 3;
  inline const ::client_baseserver::hero& _heroes(int index) const;
  inline ::client_baseserver::hero* mutable__heroes(int index);
  inline ::client_baseserver::hero* add__heroes();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >&
      _heroes() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >*
      mutable__heroes();

  // repeated uint32 _items = 4;
  inline int _items_size() const;
  inline void clear__items();
  static const int kItemsFieldNumber = 4;
  inline ::google::protobuf::uint32 _items(int index) const;
  inline void set__items(int index, ::google::protobuf::uint32 value);
  inline void add__items(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _items() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__items();

  // @@protoc_insertion_point(class_scope:client_baseserver.important_data)
 private:
  inline void set_has__money();
  inline void clear_has__money();
  inline void set_has__rmb();
  inline void clear_has__rmb();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _money_;
  ::google::protobuf::uint32 _rmb_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero > _heroes_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _items_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static important_data* default_instance_;
};
// -------------------------------------------------------------------

class monthcard : public ::google::protobuf::Message {
 public:
  monthcard();
  virtual ~monthcard();

  monthcard(const monthcard& from);

  inline monthcard& operator=(const monthcard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const monthcard& default_instance();

  void Swap(monthcard* other);

  // implements Message ----------------------------------------------

  monthcard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const monthcard& from);
  void MergeFrom(const monthcard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _id = 1;
  inline bool has__id() const;
  inline void clear__id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 _id() const;
  inline void set__id(::google::protobuf::uint32 value);

  // required uint32 _expire_time = 2;
  inline bool has__expire_time() const;
  inline void clear__expire_time();
  static const int kExpireTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 _expire_time() const;
  inline void set__expire_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.monthcard)
 private:
  inline void set_has__id();
  inline void clear_has__id();
  inline void set_has__expire_time();
  inline void clear_has__expire_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _id_;
  ::google::protobuf::uint32 _expire_time_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static monthcard* default_instance_;
};
// -------------------------------------------------------------------

class excavate_reply : public ::google::protobuf::Message {
 public:
  excavate_reply();
  virtual ~excavate_reply();

  excavate_reply(const excavate_reply& from);

  inline excavate_reply& operator=(const excavate_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const excavate_reply& default_instance();

  void Swap(excavate_reply* other);

  // implements Message ----------------------------------------------

  excavate_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const excavate_reply& from);
  void MergeFrom(const excavate_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client_baseserver.search_excavate_reply _search_excavate_reply = 1;
  inline bool has__search_excavate_reply() const;
  inline void clear__search_excavate_reply();
  static const int kSearchExcavateReplyFieldNumber = 1;
  inline const ::client_baseserver::search_excavate_reply& _search_excavate_reply() const;
  inline ::client_baseserver::search_excavate_reply* mutable__search_excavate_reply();
  inline ::client_baseserver::search_excavate_reply* release__search_excavate_reply();
  inline void set_allocated__search_excavate_reply(::client_baseserver::search_excavate_reply* _search_excavate_reply);

  // optional .client_baseserver.query_excavate_data_reply _query_excavate_data_reply = 2;
  inline bool has__query_excavate_data_reply() const;
  inline void clear__query_excavate_data_reply();
  static const int kQueryExcavateDataReplyFieldNumber = 2;
  inline const ::client_baseserver::query_excavate_data_reply& _query_excavate_data_reply() const;
  inline ::client_baseserver::query_excavate_data_reply* mutable__query_excavate_data_reply();
  inline ::client_baseserver::query_excavate_data_reply* release__query_excavate_data_reply();
  inline void set_allocated__query_excavate_data_reply(::client_baseserver::query_excavate_data_reply* _query_excavate_data_reply);

  // optional .client_baseserver.query_excavate_history_reply _query_excavate_history_reply = 3;
  inline bool has__query_excavate_history_reply() const;
  inline void clear__query_excavate_history_reply();
  static const int kQueryExcavateHistoryReplyFieldNumber = 3;
  inline const ::client_baseserver::query_excavate_history_reply& _query_excavate_history_reply() const;
  inline ::client_baseserver::query_excavate_history_reply* mutable__query_excavate_history_reply();
  inline ::client_baseserver::query_excavate_history_reply* release__query_excavate_history_reply();
  inline void set_allocated__query_excavate_history_reply(::client_baseserver::query_excavate_history_reply* _query_excavate_history_reply);

  // optional .client_baseserver.query_excavate_battle_reply _query_excavate_battle_reply = 4;
  inline bool has__query_excavate_battle_reply() const;
  inline void clear__query_excavate_battle_reply();
  static const int kQueryExcavateBattleReplyFieldNumber = 4;
  inline const ::client_baseserver::query_excavate_battle_reply& _query_excavate_battle_reply() const;
  inline ::client_baseserver::query_excavate_battle_reply* mutable__query_excavate_battle_reply();
  inline ::client_baseserver::query_excavate_battle_reply* release__query_excavate_battle_reply();
  inline void set_allocated__query_excavate_battle_reply(::client_baseserver::query_excavate_battle_reply* _query_excavate_battle_reply);

  // optional .client_baseserver.set_excavate_team_reply _set_excavate_team_reply = 5;
  inline bool has__set_excavate_team_reply() const;
  inline void clear__set_excavate_team_reply();
  static const int kSetExcavateTeamReplyFieldNumber = 5;
  inline const ::client_baseserver::set_excavate_team_reply& _set_excavate_team_reply() const;
  inline ::client_baseserver::set_excavate_team_reply* mutable__set_excavate_team_reply();
  inline ::client_baseserver::set_excavate_team_reply* release__set_excavate_team_reply();
  inline void set_allocated__set_excavate_team_reply(::client_baseserver::set_excavate_team_reply* _set_excavate_team_reply);

  // optional .client_baseserver.excavate_start_battle_reply _excavate_start_battle_reply = 6;
  inline bool has__excavate_start_battle_reply() const;
  inline void clear__excavate_start_battle_reply();
  static const int kExcavateStartBattleReplyFieldNumber = 6;
  inline const ::client_baseserver::excavate_start_battle_reply& _excavate_start_battle_reply() const;
  inline ::client_baseserver::excavate_start_battle_reply* mutable__excavate_start_battle_reply();
  inline ::client_baseserver::excavate_start_battle_reply* release__excavate_start_battle_reply();
  inline void set_allocated__excavate_start_battle_reply(::client_baseserver::excavate_start_battle_reply* _excavate_start_battle_reply);

  // optional .client_baseserver.excavate_end_battle_reply _excavate_end_battle_reply = 7;
  inline bool has__excavate_end_battle_reply() const;
  inline void clear__excavate_end_battle_reply();
  static const int kExcavateEndBattleReplyFieldNumber = 7;
  inline const ::client_baseserver::excavate_end_battle_reply& _excavate_end_battle_reply() const;
  inline ::client_baseserver::excavate_end_battle_reply* mutable__excavate_end_battle_reply();
  inline ::client_baseserver::excavate_end_battle_reply* release__excavate_end_battle_reply();
  inline void set_allocated__excavate_end_battle_reply(::client_baseserver::excavate_end_battle_reply* _excavate_end_battle_reply);

  // optional .client_baseserver.query_excavate_def_reply _query_excavate_def_reply = 8;
  inline bool has__query_excavate_def_reply() const;
  inline void clear__query_excavate_def_reply();
  static const int kQueryExcavateDefReplyFieldNumber = 8;
  inline const ::client_baseserver::query_excavate_def_reply& _query_excavate_def_reply() const;
  inline ::client_baseserver::query_excavate_def_reply* mutable__query_excavate_def_reply();
  inline ::client_baseserver::query_excavate_def_reply* release__query_excavate_def_reply();
  inline void set_allocated__query_excavate_def_reply(::client_baseserver::query_excavate_def_reply* _query_excavate_def_reply);

  // optional .client_baseserver.clear_excavate_battle_reply _clear_excavate_battle_reply = 9;
  inline bool has__clear_excavate_battle_reply() const;
  inline void clear__clear_excavate_battle_reply();
  static const int kClearExcavateBattleReplyFieldNumber = 9;
  inline const ::client_baseserver::clear_excavate_battle_reply& _clear_excavate_battle_reply() const;
  inline ::client_baseserver::clear_excavate_battle_reply* mutable__clear_excavate_battle_reply();
  inline ::client_baseserver::clear_excavate_battle_reply* release__clear_excavate_battle_reply();
  inline void set_allocated__clear_excavate_battle_reply(::client_baseserver::clear_excavate_battle_reply* _clear_excavate_battle_reply);

  // optional .client_baseserver.draw_excavate_def_rwd_reply _draw_excavate_def_rwd_reply = 10;
  inline bool has__draw_excavate_def_rwd_reply() const;
  inline void clear__draw_excavate_def_rwd_reply();
  static const int kDrawExcavateDefRwdReplyFieldNumber = 10;
  inline const ::client_baseserver::draw_excavate_def_rwd_reply& _draw_excavate_def_rwd_reply() const;
  inline ::client_baseserver::draw_excavate_def_rwd_reply* mutable__draw_excavate_def_rwd_reply();
  inline ::client_baseserver::draw_excavate_def_rwd_reply* release__draw_excavate_def_rwd_reply();
  inline void set_allocated__draw_excavate_def_rwd_reply(::client_baseserver::draw_excavate_def_rwd_reply* _draw_excavate_def_rwd_reply);

  // optional .client_baseserver.revenge_excavate_reply _revenge_excavate_reply = 11;
  inline bool has__revenge_excavate_reply() const;
  inline void clear__revenge_excavate_reply();
  static const int kRevengeExcavateReplyFieldNumber = 11;
  inline const ::client_baseserver::revenge_excavate_reply& _revenge_excavate_reply() const;
  inline ::client_baseserver::revenge_excavate_reply* mutable__revenge_excavate_reply();
  inline ::client_baseserver::revenge_excavate_reply* release__revenge_excavate_reply();
  inline void set_allocated__revenge_excavate_reply(::client_baseserver::revenge_excavate_reply* _revenge_excavate_reply);

  // optional .client_baseserver.draw_excav_res_reply _draw_excav_res_reply = 12;
  inline bool has__draw_excav_res_reply() const;
  inline void clear__draw_excav_res_reply();
  static const int kDrawExcavResReplyFieldNumber = 12;
  inline const ::client_baseserver::draw_excav_res_reply& _draw_excav_res_reply() const;
  inline ::client_baseserver::draw_excav_res_reply* mutable__draw_excav_res_reply();
  inline ::client_baseserver::draw_excav_res_reply* release__draw_excav_res_reply();
  inline void set_allocated__draw_excav_res_reply(::client_baseserver::draw_excav_res_reply* _draw_excav_res_reply);

  // optional .client_baseserver.withdraw_excavate_hero_reply _withdraw_excavate_hero_reply = 13;
  inline bool has__withdraw_excavate_hero_reply() const;
  inline void clear__withdraw_excavate_hero_reply();
  static const int kWithdrawExcavateHeroReplyFieldNumber = 13;
  inline const ::client_baseserver::withdraw_excavate_hero_reply& _withdraw_excavate_hero_reply() const;
  inline ::client_baseserver::withdraw_excavate_hero_reply* mutable__withdraw_excavate_hero_reply();
  inline ::client_baseserver::withdraw_excavate_hero_reply* release__withdraw_excavate_hero_reply();
  inline void set_allocated__withdraw_excavate_hero_reply(::client_baseserver::withdraw_excavate_hero_reply* _withdraw_excavate_hero_reply);

  // @@protoc_insertion_point(class_scope:client_baseserver.excavate_reply)
 private:
  inline void set_has__search_excavate_reply();
  inline void clear_has__search_excavate_reply();
  inline void set_has__query_excavate_data_reply();
  inline void clear_has__query_excavate_data_reply();
  inline void set_has__query_excavate_history_reply();
  inline void clear_has__query_excavate_history_reply();
  inline void set_has__query_excavate_battle_reply();
  inline void clear_has__query_excavate_battle_reply();
  inline void set_has__set_excavate_team_reply();
  inline void clear_has__set_excavate_team_reply();
  inline void set_has__excavate_start_battle_reply();
  inline void clear_has__excavate_start_battle_reply();
  inline void set_has__excavate_end_battle_reply();
  inline void clear_has__excavate_end_battle_reply();
  inline void set_has__query_excavate_def_reply();
  inline void clear_has__query_excavate_def_reply();
  inline void set_has__clear_excavate_battle_reply();
  inline void clear_has__clear_excavate_battle_reply();
  inline void set_has__draw_excavate_def_rwd_reply();
  inline void clear_has__draw_excavate_def_rwd_reply();
  inline void set_has__revenge_excavate_reply();
  inline void clear_has__revenge_excavate_reply();
  inline void set_has__draw_excav_res_reply();
  inline void clear_has__draw_excav_res_reply();
  inline void set_has__withdraw_excavate_hero_reply();
  inline void clear_has__withdraw_excavate_hero_reply();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::search_excavate_reply* _search_excavate_reply_;
  ::client_baseserver::query_excavate_data_reply* _query_excavate_data_reply_;
  ::client_baseserver::query_excavate_history_reply* _query_excavate_history_reply_;
  ::client_baseserver::query_excavate_battle_reply* _query_excavate_battle_reply_;
  ::client_baseserver::set_excavate_team_reply* _set_excavate_team_reply_;
  ::client_baseserver::excavate_start_battle_reply* _excavate_start_battle_reply_;
  ::client_baseserver::excavate_end_battle_reply* _excavate_end_battle_reply_;
  ::client_baseserver::query_excavate_def_reply* _query_excavate_def_reply_;
  ::client_baseserver::clear_excavate_battle_reply* _clear_excavate_battle_reply_;
  ::client_baseserver::draw_excavate_def_rwd_reply* _draw_excavate_def_rwd_reply_;
  ::client_baseserver::revenge_excavate_reply* _revenge_excavate_reply_;
  ::client_baseserver::draw_excav_res_reply* _draw_excav_res_reply_;
  ::client_baseserver::withdraw_excavate_hero_reply* _withdraw_excavate_hero_reply_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static excavate_reply* default_instance_;
};
// -------------------------------------------------------------------

class revenge_excavate_reply : public ::google::protobuf::Message {
 public:
  revenge_excavate_reply();
  virtual ~revenge_excavate_reply();

  revenge_excavate_reply(const revenge_excavate_reply& from);

  inline revenge_excavate_reply& operator=(const revenge_excavate_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const revenge_excavate_reply& default_instance();

  void Swap(revenge_excavate_reply* other);

  // implements Message ----------------------------------------------

  revenge_excavate_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const revenge_excavate_reply& from);
  void MergeFrom(const revenge_excavate_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client_baseserver.excavate _excavate = 1;
  inline bool has__excavate() const;
  inline void clear__excavate();
  static const int kExcavateFieldNumber = 1;
  inline const ::client_baseserver::excavate& _excavate() const;
  inline ::client_baseserver::excavate* mutable__excavate();
  inline ::client_baseserver::excavate* release__excavate();
  inline void set_allocated__excavate(::client_baseserver::excavate* _excavate);

  // @@protoc_insertion_point(class_scope:client_baseserver.revenge_excavate_reply)
 private:
  inline void set_has__excavate();
  inline void clear_has__excavate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::excavate* _excavate_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static revenge_excavate_reply* default_instance_;
};
// -------------------------------------------------------------------

class search_excavate_reply : public ::google::protobuf::Message {
 public:
  search_excavate_reply();
  virtual ~search_excavate_reply();

  search_excavate_reply(const search_excavate_reply& from);

  inline search_excavate_reply& operator=(const search_excavate_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const search_excavate_reply& default_instance();

  void Swap(search_excavate_reply* other);

  // implements Message ----------------------------------------------

  search_excavate_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const search_excavate_reply& from);
  void MergeFrom(const search_excavate_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef search_excavate_reply_search_result search_result;
  static const search_result success = search_excavate_reply_search_result_success;
  static const search_result failed = search_excavate_reply_search_result_failed;
  static const search_result lack_money = search_excavate_reply_search_result_lack_money;
  static inline bool search_result_IsValid(int value) {
    return search_excavate_reply_search_result_IsValid(value);
  }
  static const search_result search_result_MIN =
    search_excavate_reply_search_result_search_result_MIN;
  static const search_result search_result_MAX =
    search_excavate_reply_search_result_search_result_MAX;
  static const int search_result_ARRAYSIZE =
    search_excavate_reply_search_result_search_result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  search_result_descriptor() {
    return search_excavate_reply_search_result_descriptor();
  }
  static inline const ::std::string& search_result_Name(search_result value) {
    return search_excavate_reply_search_result_Name(value);
  }
  static inline bool search_result_Parse(const ::std::string& name,
      search_result* value) {
    return search_excavate_reply_search_result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .client_baseserver.search_excavate_reply.search_result _result = 1;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::search_excavate_reply_search_result _result() const;
  inline void set__result(::client_baseserver::search_excavate_reply_search_result value);

  // optional .client_baseserver.excavate _excavate = 2;
  inline bool has__excavate() const;
  inline void clear__excavate();
  static const int kExcavateFieldNumber = 2;
  inline const ::client_baseserver::excavate& _excavate() const;
  inline ::client_baseserver::excavate* mutable__excavate();
  inline ::client_baseserver::excavate* release__excavate();
  inline void set_allocated__excavate(::client_baseserver::excavate* _excavate);

  // @@protoc_insertion_point(class_scope:client_baseserver.search_excavate_reply)
 private:
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__excavate();
  inline void clear_has__excavate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::excavate* _excavate_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static search_excavate_reply* default_instance_;
};
// -------------------------------------------------------------------

class query_excavate_data_reply : public ::google::protobuf::Message {
 public:
  query_excavate_data_reply();
  virtual ~query_excavate_data_reply();

  query_excavate_data_reply(const query_excavate_data_reply& from);

  inline query_excavate_data_reply& operator=(const query_excavate_data_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const query_excavate_data_reply& default_instance();

  void Swap(query_excavate_data_reply* other);

  // implements Message ----------------------------------------------

  query_excavate_data_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const query_excavate_data_reply& from);
  void MergeFrom(const query_excavate_data_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client_baseserver.excavate _excavate = 1;
  inline int _excavate_size() const;
  inline void clear__excavate();
  static const int kExcavateFieldNumber = 1;
  inline const ::client_baseserver::excavate& _excavate(int index) const;
  inline ::client_baseserver::excavate* mutable__excavate(int index);
  inline ::client_baseserver::excavate* add__excavate();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate >&
      _excavate() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate >*
      mutable__excavate();

  // required uint32 _searched_id = 2;
  inline bool has__searched_id() const;
  inline void clear__searched_id();
  static const int kSearchedIdFieldNumber = 2;
  inline ::google::protobuf::uint32 _searched_id() const;
  inline void set__searched_id(::google::protobuf::uint32 value);

  // required uint32 _search_times = 3;
  inline bool has__search_times() const;
  inline void clear__search_times();
  static const int kSearchTimesFieldNumber = 3;
  inline ::google::protobuf::uint32 _search_times() const;
  inline void set__search_times(::google::protobuf::uint32 value);

  // required uint32 _last_search_ts = 4;
  inline bool has__last_search_ts() const;
  inline void clear__last_search_ts();
  static const int kLastSearchTsFieldNumber = 4;
  inline ::google::protobuf::uint32 _last_search_ts() const;
  inline void set__last_search_ts(::google::protobuf::uint32 value);

  // optional uint32 _attacking_id = 5;
  inline bool has__attacking_id() const;
  inline void clear__attacking_id();
  static const int kAttackingIdFieldNumber = 5;
  inline ::google::protobuf::uint32 _attacking_id() const;
  inline void set__attacking_id(::google::protobuf::uint32 value);

  // repeated .client_baseserver.excavate_self_hero _bat_heroes = 6;
  inline int _bat_heroes_size() const;
  inline void clear__bat_heroes();
  static const int kBatHeroesFieldNumber = 6;
  inline const ::client_baseserver::excavate_self_hero& _bat_heroes(int index) const;
  inline ::client_baseserver::excavate_self_hero* mutable__bat_heroes(int index);
  inline ::client_baseserver::excavate_self_hero* add__bat_heroes();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate_self_hero >&
      _bat_heroes() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate_self_hero >*
      mutable__bat_heroes();

  // optional .client_baseserver.excavate_cfg _cfg = 7;
  inline bool has__cfg() const;
  inline void clear__cfg();
  static const int kCfgFieldNumber = 7;
  inline const ::client_baseserver::excavate_cfg& _cfg() const;
  inline ::client_baseserver::excavate_cfg* mutable__cfg();
  inline ::client_baseserver::excavate_cfg* release__cfg();
  inline void set_allocated__cfg(::client_baseserver::excavate_cfg* _cfg);

  // optional .client_baseserver.hire_data _hire = 8;
  inline bool has__hire() const;
  inline void clear__hire();
  static const int kHireFieldNumber = 8;
  inline const ::client_baseserver::hire_data& _hire() const;
  inline ::client_baseserver::hire_data* mutable__hire();
  inline ::client_baseserver::hire_data* release__hire();
  inline void set_allocated__hire(::client_baseserver::hire_data* _hire);

  // @@protoc_insertion_point(class_scope:client_baseserver.query_excavate_data_reply)
 private:
  inline void set_has__searched_id();
  inline void clear_has__searched_id();
  inline void set_has__search_times();
  inline void clear_has__search_times();
  inline void set_has__last_search_ts();
  inline void clear_has__last_search_ts();
  inline void set_has__attacking_id();
  inline void clear_has__attacking_id();
  inline void set_has__cfg();
  inline void clear_has__cfg();
  inline void set_has__hire();
  inline void clear_has__hire();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate > _excavate_;
  ::google::protobuf::uint32 _searched_id_;
  ::google::protobuf::uint32 _search_times_;
  ::google::protobuf::uint32 _last_search_ts_;
  ::google::protobuf::uint32 _attacking_id_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate_self_hero > _bat_heroes_;
  ::client_baseserver::excavate_cfg* _cfg_;
  ::client_baseserver::hire_data* _hire_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static query_excavate_data_reply* default_instance_;
};
// -------------------------------------------------------------------

class excavate_self_hero : public ::google::protobuf::Message {
 public:
  excavate_self_hero();
  virtual ~excavate_self_hero();

  excavate_self_hero(const excavate_self_hero& from);

  inline excavate_self_hero& operator=(const excavate_self_hero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const excavate_self_hero& default_instance();

  void Swap(excavate_self_hero* other);

  // implements Message ----------------------------------------------

  excavate_self_hero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const excavate_self_hero& from);
  void MergeFrom(const excavate_self_hero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _hero_id = 1;
  inline bool has__hero_id() const;
  inline void clear__hero_id();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::uint32 _hero_id() const;
  inline void set__hero_id(::google::protobuf::uint32 value);

  // required .client_baseserver.hero_dyna _dyna = 2;
  inline bool has__dyna() const;
  inline void clear__dyna();
  static const int kDynaFieldNumber = 2;
  inline const ::client_baseserver::hero_dyna& _dyna() const;
  inline ::client_baseserver::hero_dyna* mutable__dyna();
  inline ::client_baseserver::hero_dyna* release__dyna();
  inline void set_allocated__dyna(::client_baseserver::hero_dyna* _dyna);

  // @@protoc_insertion_point(class_scope:client_baseserver.excavate_self_hero)
 private:
  inline void set_has__hero_id();
  inline void clear_has__hero_id();
  inline void set_has__dyna();
  inline void clear_has__dyna();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::hero_dyna* _dyna_;
  ::google::protobuf::uint32 _hero_id_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static excavate_self_hero* default_instance_;
};
// -------------------------------------------------------------------

class excavate_cfg : public ::google::protobuf::Message {
 public:
  excavate_cfg();
  virtual ~excavate_cfg();

  excavate_cfg(const excavate_cfg& from);

  inline excavate_cfg& operator=(const excavate_cfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const excavate_cfg& default_instance();

  void Swap(excavate_cfg* other);

  // implements Message ----------------------------------------------

  excavate_cfg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const excavate_cfg& from);
  void MergeFrom(const excavate_cfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 _attack_timeout = 1;
  inline bool has__attack_timeout() const;
  inline void clear__attack_timeout();
  static const int kAttackTimeoutFieldNumber = 1;
  inline ::google::protobuf::uint32 _attack_timeout() const;
  inline void set__attack_timeout(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.excavate_cfg)
 private:
  inline void set_has__attack_timeout();
  inline void clear_has__attack_timeout();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _attack_timeout_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static excavate_cfg* default_instance_;
};
// -------------------------------------------------------------------

class excavate_team : public ::google::protobuf::Message {
 public:
  excavate_team();
  virtual ~excavate_team();

  excavate_team(const excavate_team& from);

  inline excavate_team& operator=(const excavate_team& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const excavate_team& default_instance();

  void Swap(excavate_team* other);

  // implements Message ----------------------------------------------

  excavate_team* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const excavate_team& from);
  void MergeFrom(const excavate_team& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _team_id = 1;
  inline bool has__team_id() const;
  inline void clear__team_id();
  static const int kTeamIdFieldNumber = 1;
  inline ::google::protobuf::uint32 _team_id() const;
  inline void set__team_id(::google::protobuf::uint32 value);

  // optional .client_baseserver.user_summary _player = 2;
  inline bool has__player() const;
  inline void clear__player();
  static const int kPlayerFieldNumber = 2;
  inline const ::client_baseserver::user_summary& _player() const;
  inline ::client_baseserver::user_summary* mutable__player();
  inline ::client_baseserver::user_summary* release__player();
  inline void set_allocated__player(::client_baseserver::user_summary* _player);

  // repeated .client_baseserver.hero_summary _hero_bases = 3;
  inline int _hero_bases_size() const;
  inline void clear__hero_bases();
  static const int kHeroBasesFieldNumber = 3;
  inline const ::client_baseserver::hero_summary& _hero_bases(int index) const;
  inline ::client_baseserver::hero_summary* mutable__hero_bases(int index);
  inline ::client_baseserver::hero_summary* add__hero_bases();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero_summary >&
      _hero_bases() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero_summary >*
      mutable__hero_bases();

  // repeated .client_baseserver.hero_dyna _hero_dynas = 4;
  inline int _hero_dynas_size() const;
  inline void clear__hero_dynas();
  static const int kHeroDynasFieldNumber = 4;
  inline const ::client_baseserver::hero_dyna& _hero_dynas(int index) const;
  inline ::client_baseserver::hero_dyna* mutable__hero_dynas(int index);
  inline ::client_baseserver::hero_dyna* add__hero_dynas();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero_dyna >&
      _hero_dynas() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero_dyna >*
      mutable__hero_dynas();

  // required uint32 _res_got = 5;
  inline bool has__res_got() const;
  inline void clear__res_got();
  static const int kResGotFieldNumber = 5;
  inline ::google::protobuf::uint32 _res_got() const;
  inline void set__res_got(::google::protobuf::uint32 value);

  // optional uint32 _svr_id = 6;
  inline bool has__svr_id() const;
  inline void clear__svr_id();
  static const int kSvrIdFieldNumber = 6;
  inline ::google::protobuf::uint32 _svr_id() const;
  inline void set__svr_id(::google::protobuf::uint32 value);

  // optional uint32 _display_svr_id = 7;
  inline bool has__display_svr_id() const;
  inline void clear__display_svr_id();
  static const int kDisplaySvrIdFieldNumber = 7;
  inline ::google::protobuf::uint32 _display_svr_id() const;
  inline void set__display_svr_id(::google::protobuf::uint32 value);

  // optional string _svr_name = 8;
  inline bool has__svr_name() const;
  inline void clear__svr_name();
  static const int kSvrNameFieldNumber = 8;
  inline const ::std::string& _svr_name() const;
  inline void set__svr_name(const ::std::string& value);
  inline void set__svr_name(const char* value);
  inline void set__svr_name(const char* value, size_t size);
  inline ::std::string* mutable__svr_name();
  inline ::std::string* release__svr_name();
  inline void set_allocated__svr_name(::std::string* _svr_name);

  // optional uint32 _team_gs = 9;
  inline bool has__team_gs() const;
  inline void clear__team_gs();
  static const int kTeamGsFieldNumber = 9;
  inline ::google::protobuf::uint32 _team_gs() const;
  inline void set__team_gs(::google::protobuf::uint32 value);

  // optional uint32 _speed = 10;
  inline bool has__speed() const;
  inline void clear__speed();
  static const int kSpeedFieldNumber = 10;
  inline ::google::protobuf::uint32 _speed() const;
  inline void set__speed(::google::protobuf::uint32 value);

  // optional uint32 _robbed = 11;
  inline bool has__robbed() const;
  inline void clear__robbed();
  static const int kRobbedFieldNumber = 11;
  inline ::google::protobuf::uint32 _robbed() const;
  inline void set__robbed(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.excavate_team)
 private:
  inline void set_has__team_id();
  inline void clear_has__team_id();
  inline void set_has__player();
  inline void clear_has__player();
  inline void set_has__res_got();
  inline void clear_has__res_got();
  inline void set_has__svr_id();
  inline void clear_has__svr_id();
  inline void set_has__display_svr_id();
  inline void clear_has__display_svr_id();
  inline void set_has__svr_name();
  inline void clear_has__svr_name();
  inline void set_has__team_gs();
  inline void clear_has__team_gs();
  inline void set_has__speed();
  inline void clear_has__speed();
  inline void set_has__robbed();
  inline void clear_has__robbed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::user_summary* _player_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero_summary > _hero_bases_;
  ::google::protobuf::uint32 _team_id_;
  ::google::protobuf::uint32 _res_got_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero_dyna > _hero_dynas_;
  ::google::protobuf::uint32 _svr_id_;
  ::google::protobuf::uint32 _display_svr_id_;
  ::std::string* _svr_name_;
  ::google::protobuf::uint32 _team_gs_;
  ::google::protobuf::uint32 _speed_;
  ::google::protobuf::uint32 _robbed_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static excavate_team* default_instance_;
};
// -------------------------------------------------------------------

class excavate : public ::google::protobuf::Message {
 public:
  excavate();
  virtual ~excavate();

  excavate(const excavate& from);

  inline excavate& operator=(const excavate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const excavate& default_instance();

  void Swap(excavate* other);

  // implements Message ----------------------------------------------

  excavate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const excavate& from);
  void MergeFrom(const excavate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef excavate_owner owner;
  static const owner mine = excavate_owner_mine;
  static const owner others = excavate_owner_others;
  static const owner robot = excavate_owner_robot;
  static inline bool owner_IsValid(int value) {
    return excavate_owner_IsValid(value);
  }
  static const owner owner_MIN =
    excavate_owner_owner_MIN;
  static const owner owner_MAX =
    excavate_owner_owner_MAX;
  static const int owner_ARRAYSIZE =
    excavate_owner_owner_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  owner_descriptor() {
    return excavate_owner_descriptor();
  }
  static inline const ::std::string& owner_Name(owner value) {
    return excavate_owner_Name(value);
  }
  static inline bool owner_Parse(const ::std::string& name,
      owner* value) {
    return excavate_owner_Parse(name, value);
  }

  typedef excavate_state state;
  static const state searched = excavate_state_searched;
  static const state battle = excavate_state_battle;
  static const state shield = excavate_state_shield;
  static const state occupy = excavate_state_occupy;
  static const state protect = excavate_state_protect;
  static const state dead = excavate_state_dead;
  static inline bool state_IsValid(int value) {
    return excavate_state_IsValid(value);
  }
  static const state state_MIN =
    excavate_state_state_MIN;
  static const state state_MAX =
    excavate_state_state_MAX;
  static const int state_ARRAYSIZE =
    excavate_state_state_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  state_descriptor() {
    return excavate_state_descriptor();
  }
  static inline const ::std::string& state_Name(state value) {
    return excavate_state_Name(value);
  }
  static inline bool state_Parse(const ::std::string& name,
      state* value) {
    return excavate_state_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .client_baseserver.excavate.owner _owner = 1;
  inline bool has__owner() const;
  inline void clear__owner();
  static const int kOwnerFieldNumber = 1;
  inline ::client_baseserver::excavate_owner _owner() const;
  inline void set__owner(::client_baseserver::excavate_owner value);

  // required uint32 _id = 2;
  inline bool has__id() const;
  inline void clear__id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 _id() const;
  inline void set__id(::google::protobuf::uint32 value);

  // required uint32 _type_id = 3;
  inline bool has__type_id() const;
  inline void clear__type_id();
  static const int kTypeIdFieldNumber = 3;
  inline ::google::protobuf::uint32 _type_id() const;
  inline void set__type_id(::google::protobuf::uint32 value);

  // repeated .client_baseserver.excavate_team _team = 4;
  inline int _team_size() const;
  inline void clear__team();
  static const int kTeamFieldNumber = 4;
  inline const ::client_baseserver::excavate_team& _team(int index) const;
  inline ::client_baseserver::excavate_team* mutable__team(int index);
  inline ::client_baseserver::excavate_team* add__team();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate_team >&
      _team() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate_team >*
      mutable__team();

  // required .client_baseserver.excavate.state _state = 5;
  inline bool has__state() const;
  inline void clear__state();
  static const int kStateFieldNumber = 5;
  inline ::client_baseserver::excavate_state _state() const;
  inline void set__state(::client_baseserver::excavate_state value);

  // optional uint32 _state_end_ts = 6;
  inline bool has__state_end_ts() const;
  inline void clear__state_end_ts();
  static const int kStateEndTsFieldNumber = 6;
  inline ::google::protobuf::uint32 _state_end_ts() const;
  inline void set__state_end_ts(::google::protobuf::uint32 value);

  // optional uint32 _create_time = 7;
  inline bool has__create_time() const;
  inline void clear__create_time();
  static const int kCreateTimeFieldNumber = 7;
  inline ::google::protobuf::uint32 _create_time() const;
  inline void set__create_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.excavate)
 private:
  inline void set_has__owner();
  inline void clear_has__owner();
  inline void set_has__id();
  inline void clear_has__id();
  inline void set_has__type_id();
  inline void clear_has__type_id();
  inline void set_has__state();
  inline void clear_has__state();
  inline void set_has__state_end_ts();
  inline void clear_has__state_end_ts();
  inline void set_has__create_time();
  inline void clear_has__create_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _owner_;
  ::google::protobuf::uint32 _id_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate_team > _team_;
  ::google::protobuf::uint32 _type_id_;
  int _state_;
  ::google::protobuf::uint32 _state_end_ts_;
  ::google::protobuf::uint32 _create_time_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static excavate* default_instance_;
};
// -------------------------------------------------------------------

class excavate_history : public ::google::protobuf::Message {
 public:
  excavate_history();
  virtual ~excavate_history();

  excavate_history(const excavate_history& from);

  inline excavate_history& operator=(const excavate_history& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const excavate_history& default_instance();

  void Swap(excavate_history* other);

  // implements Message ----------------------------------------------

  excavate_history* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const excavate_history& from);
  void MergeFrom(const excavate_history& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef excavate_history_def_result def_result;
  static const def_result win = excavate_history_def_result_win;
  static const def_result fail = excavate_history_def_result_fail;
  static inline bool def_result_IsValid(int value) {
    return excavate_history_def_result_IsValid(value);
  }
  static const def_result def_result_MIN =
    excavate_history_def_result_def_result_MIN;
  static const def_result def_result_MAX =
    excavate_history_def_result_def_result_MAX;
  static const int def_result_ARRAYSIZE =
    excavate_history_def_result_def_result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  def_result_descriptor() {
    return excavate_history_def_result_descriptor();
  }
  static inline const ::std::string& def_result_Name(def_result value) {
    return excavate_history_def_result_Name(value);
  }
  static inline bool def_result_Parse(const ::std::string& name,
      def_result* value) {
    return excavate_history_def_result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required string _id = 1;
  inline bool has__id() const;
  inline void clear__id();
  static const int kIdFieldNumber = 1;
  inline const ::std::string& _id() const;
  inline void set__id(const ::std::string& value);
  inline void set__id(const char* value);
  inline void set__id(const char* value, size_t size);
  inline ::std::string* mutable__id();
  inline ::std::string* release__id();
  inline void set_allocated__id(::std::string* _id);

  // required uint32 _excavate_id = 2;
  inline bool has__excavate_id() const;
  inline void clear__excavate_id();
  static const int kExcavateIdFieldNumber = 2;
  inline ::google::protobuf::uint32 _excavate_id() const;
  inline void set__excavate_id(::google::protobuf::uint32 value);

  // required .client_baseserver.excavate_history.def_result _result = 3;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 3;
  inline ::client_baseserver::excavate_history_def_result _result() const;
  inline void set__result(::client_baseserver::excavate_history_def_result value);

  // required string _enemy_name = 4;
  inline bool has__enemy_name() const;
  inline void clear__enemy_name();
  static const int kEnemyNameFieldNumber = 4;
  inline const ::std::string& _enemy_name() const;
  inline void set__enemy_name(const ::std::string& value);
  inline void set__enemy_name(const char* value);
  inline void set__enemy_name(const char* value, size_t size);
  inline ::std::string* mutable__enemy_name();
  inline ::std::string* release__enemy_name();
  inline void set_allocated__enemy_name(::std::string* _enemy_name);

  // optional uint32 _enemy_svrid = 5;
  inline bool has__enemy_svrid() const;
  inline void clear__enemy_svrid();
  static const int kEnemySvridFieldNumber = 5;
  inline ::google::protobuf::uint32 _enemy_svrid() const;
  inline void set__enemy_svrid(::google::protobuf::uint32 value);

  // optional string _enemy_svrname = 6;
  inline bool has__enemy_svrname() const;
  inline void clear__enemy_svrname();
  static const int kEnemySvrnameFieldNumber = 6;
  inline const ::std::string& _enemy_svrname() const;
  inline void set__enemy_svrname(const ::std::string& value);
  inline void set__enemy_svrname(const char* value);
  inline void set__enemy_svrname(const char* value, size_t size);
  inline ::std::string* mutable__enemy_svrname();
  inline ::std::string* release__enemy_svrname();
  inline void set_allocated__enemy_svrname(::std::string* _enemy_svrname);

  // required uint32 _time = 7;
  inline bool has__time() const;
  inline void clear__time();
  static const int kTimeFieldNumber = 7;
  inline ::google::protobuf::uint32 _time() const;
  inline void set__time(::google::protobuf::uint32 value);

  // optional uint32 _vatility = 8;
  inline bool has__vatility() const;
  inline void clear__vatility();
  static const int kVatilityFieldNumber = 8;
  inline ::google::protobuf::uint32 _vatility() const;
  inline void set__vatility(::google::protobuf::uint32 value);

  // repeated .client_baseserver.excavate_reward _reward = 9;
  inline int _reward_size() const;
  inline void clear__reward();
  static const int kRewardFieldNumber = 9;
  inline const ::client_baseserver::excavate_reward& _reward(int index) const;
  inline ::client_baseserver::excavate_reward* mutable__reward(int index);
  inline ::client_baseserver::excavate_reward* add__reward();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate_reward >&
      _reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate_reward >*
      mutable__reward();

  // @@protoc_insertion_point(class_scope:client_baseserver.excavate_history)
 private:
  inline void set_has__id();
  inline void clear_has__id();
  inline void set_has__excavate_id();
  inline void clear_has__excavate_id();
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__enemy_name();
  inline void clear_has__enemy_name();
  inline void set_has__enemy_svrid();
  inline void clear_has__enemy_svrid();
  inline void set_has__enemy_svrname();
  inline void clear_has__enemy_svrname();
  inline void set_has__time();
  inline void clear_has__time();
  inline void set_has__vatility();
  inline void clear_has__vatility();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* _id_;
  ::google::protobuf::uint32 _excavate_id_;
  int _result_;
  ::std::string* _enemy_name_;
  ::std::string* _enemy_svrname_;
  ::google::protobuf::uint32 _enemy_svrid_;
  ::google::protobuf::uint32 _time_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate_reward > _reward_;
  ::google::protobuf::uint32 _vatility_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static excavate_history* default_instance_;
};
// -------------------------------------------------------------------

class query_excavate_history_reply : public ::google::protobuf::Message {
 public:
  query_excavate_history_reply();
  virtual ~query_excavate_history_reply();

  query_excavate_history_reply(const query_excavate_history_reply& from);

  inline query_excavate_history_reply& operator=(const query_excavate_history_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const query_excavate_history_reply& default_instance();

  void Swap(query_excavate_history_reply* other);

  // implements Message ----------------------------------------------

  query_excavate_history_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const query_excavate_history_reply& from);
  void MergeFrom(const query_excavate_history_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client_baseserver.excavate_history _excavate_history = 1;
  inline int _excavate_history_size() const;
  inline void clear__excavate_history();
  static const int kExcavateHistoryFieldNumber = 1;
  inline const ::client_baseserver::excavate_history& _excavate_history(int index) const;
  inline ::client_baseserver::excavate_history* mutable__excavate_history(int index);
  inline ::client_baseserver::excavate_history* add__excavate_history();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate_history >&
      _excavate_history() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate_history >*
      mutable__excavate_history();

  // optional uint32 _draw_def_vitality = 2;
  inline bool has__draw_def_vitality() const;
  inline void clear__draw_def_vitality();
  static const int kDrawDefVitalityFieldNumber = 2;
  inline ::google::protobuf::uint32 _draw_def_vitality() const;
  inline void set__draw_def_vitality(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.query_excavate_history_reply)
 private:
  inline void set_has__draw_def_vitality();
  inline void clear_has__draw_def_vitality();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate_history > _excavate_history_;
  ::google::protobuf::uint32 _draw_def_vitality_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static query_excavate_history_reply* default_instance_;
};
// -------------------------------------------------------------------

class excavate_battle_hero : public ::google::protobuf::Message {
 public:
  excavate_battle_hero();
  virtual ~excavate_battle_hero();

  excavate_battle_hero(const excavate_battle_hero& from);

  inline excavate_battle_hero& operator=(const excavate_battle_hero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const excavate_battle_hero& default_instance();

  void Swap(excavate_battle_hero* other);

  // implements Message ----------------------------------------------

  excavate_battle_hero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const excavate_battle_hero& from);
  void MergeFrom(const excavate_battle_hero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.hero_summary _base = 1;
  inline bool has__base() const;
  inline void clear__base();
  static const int kBaseFieldNumber = 1;
  inline const ::client_baseserver::hero_summary& _base() const;
  inline ::client_baseserver::hero_summary* mutable__base();
  inline ::client_baseserver::hero_summary* release__base();
  inline void set_allocated__base(::client_baseserver::hero_summary* _base);

  // required .client_baseserver.hero_dyna _dyna = 2;
  inline bool has__dyna() const;
  inline void clear__dyna();
  static const int kDynaFieldNumber = 2;
  inline const ::client_baseserver::hero_dyna& _dyna() const;
  inline ::client_baseserver::hero_dyna* mutable__dyna();
  inline ::client_baseserver::hero_dyna* release__dyna();
  inline void set_allocated__dyna(::client_baseserver::hero_dyna* _dyna);

  // @@protoc_insertion_point(class_scope:client_baseserver.excavate_battle_hero)
 private:
  inline void set_has__base();
  inline void clear_has__base();
  inline void set_has__dyna();
  inline void clear_has__dyna();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::hero_summary* _base_;
  ::client_baseserver::hero_dyna* _dyna_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static excavate_battle_hero* default_instance_;
};
// -------------------------------------------------------------------

class excavate_battle_team : public ::google::protobuf::Message {
 public:
  excavate_battle_team();
  virtual ~excavate_battle_team();

  excavate_battle_team(const excavate_battle_team& from);

  inline excavate_battle_team& operator=(const excavate_battle_team& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const excavate_battle_team& default_instance();

  void Swap(excavate_battle_team* other);

  // implements Message ----------------------------------------------

  excavate_battle_team* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const excavate_battle_team& from);
  void MergeFrom(const excavate_battle_team& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.user_summary _player = 1;
  inline bool has__player() const;
  inline void clear__player();
  static const int kPlayerFieldNumber = 1;
  inline const ::client_baseserver::user_summary& _player() const;
  inline ::client_baseserver::user_summary* mutable__player();
  inline ::client_baseserver::user_summary* release__player();
  inline void set_allocated__player(::client_baseserver::user_summary* _player);

  // repeated .client_baseserver.excavate_battle_hero _hero = 2;
  inline int _hero_size() const;
  inline void clear__hero();
  static const int kHeroFieldNumber = 2;
  inline const ::client_baseserver::excavate_battle_hero& _hero(int index) const;
  inline ::client_baseserver::excavate_battle_hero* mutable__hero(int index);
  inline ::client_baseserver::excavate_battle_hero* add__hero();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate_battle_hero >&
      _hero() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate_battle_hero >*
      mutable__hero();

  // @@protoc_insertion_point(class_scope:client_baseserver.excavate_battle_team)
 private:
  inline void set_has__player();
  inline void clear_has__player();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::user_summary* _player_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate_battle_hero > _hero_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static excavate_battle_team* default_instance_;
};
// -------------------------------------------------------------------

class excavate_battle : public ::google::protobuf::Message {
 public:
  excavate_battle();
  virtual ~excavate_battle();

  excavate_battle(const excavate_battle& from);

  inline excavate_battle& operator=(const excavate_battle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const excavate_battle& default_instance();

  void Swap(excavate_battle* other);

  // implements Message ----------------------------------------------

  excavate_battle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const excavate_battle& from);
  void MergeFrom(const excavate_battle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.excavate_battle_team _self_team = 1;
  inline bool has__self_team() const;
  inline void clear__self_team();
  static const int kSelfTeamFieldNumber = 1;
  inline const ::client_baseserver::excavate_battle_team& _self_team() const;
  inline ::client_baseserver::excavate_battle_team* mutable__self_team();
  inline ::client_baseserver::excavate_battle_team* release__self_team();
  inline void set_allocated__self_team(::client_baseserver::excavate_battle_team* _self_team);

  // required .client_baseserver.excavate_battle_team _oppo_team = 2;
  inline bool has__oppo_team() const;
  inline void clear__oppo_team();
  static const int kOppoTeamFieldNumber = 2;
  inline const ::client_baseserver::excavate_battle_team& _oppo_team() const;
  inline ::client_baseserver::excavate_battle_team* mutable__oppo_team();
  inline ::client_baseserver::excavate_battle_team* release__oppo_team();
  inline void set_allocated__oppo_team(::client_baseserver::excavate_battle_team* _oppo_team);

  // required .client_baseserver.battle_result _result = 3;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 3;
  inline ::client_baseserver::battle_result _result() const;
  inline void set__result(::client_baseserver::battle_result value);

  // required uint32 _record_id = 4;
  inline bool has__record_id() const;
  inline void clear__record_id();
  static const int kRecordIdFieldNumber = 4;
  inline ::google::protobuf::uint32 _record_id() const;
  inline void set__record_id(::google::protobuf::uint32 value);

  // required uint32 _record_svrid = 5;
  inline bool has__record_svrid() const;
  inline void clear__record_svrid();
  static const int kRecordSvridFieldNumber = 5;
  inline ::google::protobuf::uint32 _record_svrid() const;
  inline void set__record_svrid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.excavate_battle)
 private:
  inline void set_has__self_team();
  inline void clear_has__self_team();
  inline void set_has__oppo_team();
  inline void clear_has__oppo_team();
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__record_id();
  inline void clear_has__record_id();
  inline void set_has__record_svrid();
  inline void clear_has__record_svrid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::excavate_battle_team* _self_team_;
  ::client_baseserver::excavate_battle_team* _oppo_team_;
  int _result_;
  ::google::protobuf::uint32 _record_id_;
  ::google::protobuf::uint32 _record_svrid_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static excavate_battle* default_instance_;
};
// -------------------------------------------------------------------

class query_excavate_battle_reply : public ::google::protobuf::Message {
 public:
  query_excavate_battle_reply();
  virtual ~query_excavate_battle_reply();

  query_excavate_battle_reply(const query_excavate_battle_reply& from);

  inline query_excavate_battle_reply& operator=(const query_excavate_battle_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const query_excavate_battle_reply& default_instance();

  void Swap(query_excavate_battle_reply* other);

  // implements Message ----------------------------------------------

  query_excavate_battle_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const query_excavate_battle_reply& from);
  void MergeFrom(const query_excavate_battle_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client_baseserver.excavate_battle _battles = 1;
  inline int _battles_size() const;
  inline void clear__battles();
  static const int kBattlesFieldNumber = 1;
  inline const ::client_baseserver::excavate_battle& _battles(int index) const;
  inline ::client_baseserver::excavate_battle* mutable__battles(int index);
  inline ::client_baseserver::excavate_battle* add__battles();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate_battle >&
      _battles() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate_battle >*
      mutable__battles();

  // @@protoc_insertion_point(class_scope:client_baseserver.query_excavate_battle_reply)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate_battle > _battles_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static query_excavate_battle_reply* default_instance_;
};
// -------------------------------------------------------------------

class set_excavate_team_reply : public ::google::protobuf::Message {
 public:
  set_excavate_team_reply();
  virtual ~set_excavate_team_reply();

  set_excavate_team_reply(const set_excavate_team_reply& from);

  inline set_excavate_team_reply& operator=(const set_excavate_team_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const set_excavate_team_reply& default_instance();

  void Swap(set_excavate_team_reply* other);

  // implements Message ----------------------------------------------

  set_excavate_team_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const set_excavate_team_reply& from);
  void MergeFrom(const set_excavate_team_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef set_excavate_team_reply_result result;
  static const result success = set_excavate_team_reply_result_success;
  static const result failed = set_excavate_team_reply_result_failed;
  static const result expired = set_excavate_team_reply_result_expired;
  static const result fall = set_excavate_team_reply_result_fall;
  static inline bool result_IsValid(int value) {
    return set_excavate_team_reply_result_IsValid(value);
  }
  static const result result_MIN =
    set_excavate_team_reply_result_result_MIN;
  static const result result_MAX =
    set_excavate_team_reply_result_result_MAX;
  static const int result_ARRAYSIZE =
    set_excavate_team_reply_result_result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  result_descriptor() {
    return set_excavate_team_reply_result_descriptor();
  }
  static inline const ::std::string& result_Name(result value) {
    return set_excavate_team_reply_result_Name(value);
  }
  static inline bool result_Parse(const ::std::string& name,
      result* value) {
    return set_excavate_team_reply_result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .client_baseserver.set_excavate_team_reply.result _result = 1;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::set_excavate_team_reply_result _result() const;
  inline void set__result(::client_baseserver::set_excavate_team_reply_result value);

  // optional .client_baseserver.excavate _mine = 2;
  inline bool has__mine() const;
  inline void clear__mine();
  static const int kMineFieldNumber = 2;
  inline const ::client_baseserver::excavate& _mine() const;
  inline ::client_baseserver::excavate* mutable__mine();
  inline ::client_baseserver::excavate* release__mine();
  inline void set_allocated__mine(::client_baseserver::excavate* _mine);

  // @@protoc_insertion_point(class_scope:client_baseserver.set_excavate_team_reply)
 private:
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__mine();
  inline void clear_has__mine();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::excavate* _mine_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static set_excavate_team_reply* default_instance_;
};
// -------------------------------------------------------------------

class excavate_start_battle_reply : public ::google::protobuf::Message {
 public:
  excavate_start_battle_reply();
  virtual ~excavate_start_battle_reply();

  excavate_start_battle_reply(const excavate_start_battle_reply& from);

  inline excavate_start_battle_reply& operator=(const excavate_start_battle_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const excavate_start_battle_reply& default_instance();

  void Swap(excavate_start_battle_reply* other);

  // implements Message ----------------------------------------------

  excavate_start_battle_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const excavate_start_battle_reply& from);
  void MergeFrom(const excavate_start_battle_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1 [default = success];
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // required uint32 _rseed = 2;
  inline bool has__rseed() const;
  inline void clear__rseed();
  static const int kRseedFieldNumber = 2;
  inline ::google::protobuf::uint32 _rseed() const;
  inline void set__rseed(::google::protobuf::uint32 value);

  // repeated .client_baseserver.hero _hero_bases = 3;
  inline int _hero_bases_size() const;
  inline void clear__hero_bases();
  static const int kHeroBasesFieldNumber = 3;
  inline const ::client_baseserver::hero& _hero_bases(int index) const;
  inline ::client_baseserver::hero* mutable__hero_bases(int index);
  inline ::client_baseserver::hero* add__hero_bases();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >&
      _hero_bases() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >*
      mutable__hero_bases();

  // repeated .client_baseserver.hero_dyna _hero_dynas = 4;
  inline int _hero_dynas_size() const;
  inline void clear__hero_dynas();
  static const int kHeroDynasFieldNumber = 4;
  inline const ::client_baseserver::hero_dyna& _hero_dynas(int index) const;
  inline ::client_baseserver::hero_dyna* mutable__hero_dynas(int index);
  inline ::client_baseserver::hero_dyna* add__hero_dynas();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero_dyna >&
      _hero_dynas() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero_dyna >*
      mutable__hero_dynas();

  // @@protoc_insertion_point(class_scope:client_baseserver.excavate_start_battle_reply)
 private:
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__rseed();
  inline void clear_has__rseed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  ::google::protobuf::uint32 _rseed_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero > _hero_bases_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero_dyna > _hero_dynas_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static excavate_start_battle_reply* default_instance_;
};
// -------------------------------------------------------------------

class excavate_end_battle_reply : public ::google::protobuf::Message {
 public:
  excavate_end_battle_reply();
  virtual ~excavate_end_battle_reply();

  excavate_end_battle_reply(const excavate_end_battle_reply& from);

  inline excavate_end_battle_reply& operator=(const excavate_end_battle_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const excavate_end_battle_reply& default_instance();

  void Swap(excavate_end_battle_reply* other);

  // implements Message ----------------------------------------------

  excavate_end_battle_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const excavate_end_battle_reply& from);
  void MergeFrom(const excavate_end_battle_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef excavate_end_battle_reply_mine_battle_result mine_battle_result;
  static const mine_battle_result success = excavate_end_battle_reply_mine_battle_result_success;
  static const mine_battle_result timeout = excavate_end_battle_reply_mine_battle_result_timeout;
  static inline bool mine_battle_result_IsValid(int value) {
    return excavate_end_battle_reply_mine_battle_result_IsValid(value);
  }
  static const mine_battle_result mine_battle_result_MIN =
    excavate_end_battle_reply_mine_battle_result_mine_battle_result_MIN;
  static const mine_battle_result mine_battle_result_MAX =
    excavate_end_battle_reply_mine_battle_result_mine_battle_result_MAX;
  static const int mine_battle_result_ARRAYSIZE =
    excavate_end_battle_reply_mine_battle_result_mine_battle_result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  mine_battle_result_descriptor() {
    return excavate_end_battle_reply_mine_battle_result_descriptor();
  }
  static inline const ::std::string& mine_battle_result_Name(mine_battle_result value) {
    return excavate_end_battle_reply_mine_battle_result_Name(value);
  }
  static inline bool mine_battle_result_Parse(const ::std::string& name,
      mine_battle_result* value) {
    return excavate_end_battle_reply_mine_battle_result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .client_baseserver.battle_result _result = 1 [default = victory];
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::battle_result _result() const;
  inline void set__result(::client_baseserver::battle_result value);

  // optional .client_baseserver.excavate _excavate = 2;
  inline bool has__excavate() const;
  inline void clear__excavate();
  static const int kExcavateFieldNumber = 2;
  inline const ::client_baseserver::excavate& _excavate() const;
  inline ::client_baseserver::excavate* mutable__excavate();
  inline ::client_baseserver::excavate* release__excavate();
  inline void set_allocated__excavate(::client_baseserver::excavate* _excavate);

  // repeated .client_baseserver.excavate_reward _reward = 3;
  inline int _reward_size() const;
  inline void clear__reward();
  static const int kRewardFieldNumber = 3;
  inline const ::client_baseserver::excavate_reward& _reward(int index) const;
  inline ::client_baseserver::excavate_reward* mutable__reward(int index);
  inline ::client_baseserver::excavate_reward* add__reward();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate_reward >&
      _reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate_reward >*
      mutable__reward();

  // optional .client_baseserver.excavate_end_battle_reply.mine_battle_result _mine_battle_result = 4 [default = success];
  inline bool has__mine_battle_result() const;
  inline void clear__mine_battle_result();
  static const int kMineBattleResultFieldNumber = 4;
  inline ::client_baseserver::excavate_end_battle_reply_mine_battle_result _mine_battle_result() const;
  inline void set__mine_battle_result(::client_baseserver::excavate_end_battle_reply_mine_battle_result value);

  // @@protoc_insertion_point(class_scope:client_baseserver.excavate_end_battle_reply)
 private:
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__excavate();
  inline void clear_has__excavate();
  inline void set_has__mine_battle_result();
  inline void clear_has__mine_battle_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::excavate* _excavate_;
  int _result_;
  int _mine_battle_result_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate_reward > _reward_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static excavate_end_battle_reply* default_instance_;
};
// -------------------------------------------------------------------

class draw_excav_res_reply : public ::google::protobuf::Message {
 public:
  draw_excav_res_reply();
  virtual ~draw_excav_res_reply();

  draw_excav_res_reply(const draw_excav_res_reply& from);

  inline draw_excav_res_reply& operator=(const draw_excav_res_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const draw_excav_res_reply& default_instance();

  void Swap(draw_excav_res_reply* other);

  // implements Message ----------------------------------------------

  draw_excav_res_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const draw_excav_res_reply& from);
  void MergeFrom(const draw_excav_res_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 _diamond = 1;
  inline bool has__diamond() const;
  inline void clear__diamond();
  static const int kDiamondFieldNumber = 1;
  inline ::google::protobuf::uint32 _diamond() const;
  inline void set__diamond(::google::protobuf::uint32 value);

  // repeated .client_baseserver.excavate_reward _reward = 2;
  inline int _reward_size() const;
  inline void clear__reward();
  static const int kRewardFieldNumber = 2;
  inline const ::client_baseserver::excavate_reward& _reward(int index) const;
  inline ::client_baseserver::excavate_reward* mutable__reward(int index);
  inline ::client_baseserver::excavate_reward* add__reward();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate_reward >&
      _reward() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate_reward >*
      mutable__reward();

  // @@protoc_insertion_point(class_scope:client_baseserver.draw_excav_res_reply)
 private:
  inline void set_has__diamond();
  inline void clear_has__diamond();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate_reward > _reward_;
  ::google::protobuf::uint32 _diamond_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static draw_excav_res_reply* default_instance_;
};
// -------------------------------------------------------------------

class excavate_reward : public ::google::protobuf::Message {
 public:
  excavate_reward();
  virtual ~excavate_reward();

  excavate_reward(const excavate_reward& from);

  inline excavate_reward& operator=(const excavate_reward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const excavate_reward& default_instance();

  void Swap(excavate_reward* other);

  // implements Message ----------------------------------------------

  excavate_reward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const excavate_reward& from);
  void MergeFrom(const excavate_reward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef excavate_reward_type type;
  static const type gold = excavate_reward_type_gold;
  static const type diamond = excavate_reward_type_diamond;
  static const type item = excavate_reward_type_item;
  static const type wood = excavate_reward_type_wood;
  static const type iron = excavate_reward_type_iron;
  static const type crystal = excavate_reward_type_crystal;
  static inline bool type_IsValid(int value) {
    return excavate_reward_type_IsValid(value);
  }
  static const type type_MIN =
    excavate_reward_type_type_MIN;
  static const type type_MAX =
    excavate_reward_type_type_MAX;
  static const int type_ARRAYSIZE =
    excavate_reward_type_type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  type_descriptor() {
    return excavate_reward_type_descriptor();
  }
  static inline const ::std::string& type_Name(type value) {
    return excavate_reward_type_Name(value);
  }
  static inline bool type_Parse(const ::std::string& name,
      type* value) {
    return excavate_reward_type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .client_baseserver.excavate_reward.type _type = 1;
  inline bool has__type() const;
  inline void clear__type();
  static const int kTypeFieldNumber = 1;
  inline ::client_baseserver::excavate_reward_type _type() const;
  inline void set__type(::client_baseserver::excavate_reward_type value);

  // optional uint32 _team_id = 2;
  inline bool has__team_id() const;
  inline void clear__team_id();
  static const int kTeamIdFieldNumber = 2;
  inline ::google::protobuf::uint32 _team_id() const;
  inline void set__team_id(::google::protobuf::uint32 value);

  // optional uint32 _param1 = 3;
  inline bool has__param1() const;
  inline void clear__param1();
  static const int kParam1FieldNumber = 3;
  inline ::google::protobuf::uint32 _param1() const;
  inline void set__param1(::google::protobuf::uint32 value);

  // optional uint32 _param2 = 4;
  inline bool has__param2() const;
  inline void clear__param2();
  static const int kParam2FieldNumber = 4;
  inline ::google::protobuf::uint32 _param2() const;
  inline void set__param2(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.excavate_reward)
 private:
  inline void set_has__type();
  inline void clear_has__type();
  inline void set_has__team_id();
  inline void clear_has__team_id();
  inline void set_has__param1();
  inline void clear_has__param1();
  inline void set_has__param2();
  inline void clear_has__param2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _type_;
  ::google::protobuf::uint32 _team_id_;
  ::google::protobuf::uint32 _param1_;
  ::google::protobuf::uint32 _param2_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static excavate_reward* default_instance_;
};
// -------------------------------------------------------------------

class query_excavate_def_reply : public ::google::protobuf::Message {
 public:
  query_excavate_def_reply();
  virtual ~query_excavate_def_reply();

  query_excavate_def_reply(const query_excavate_def_reply& from);

  inline query_excavate_def_reply& operator=(const query_excavate_def_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const query_excavate_def_reply& default_instance();

  void Swap(query_excavate_def_reply* other);

  // implements Message ----------------------------------------------

  query_excavate_def_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const query_excavate_def_reply& from);
  void MergeFrom(const query_excavate_def_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client_baseserver.excavate _excavate = 1;
  inline bool has__excavate() const;
  inline void clear__excavate();
  static const int kExcavateFieldNumber = 1;
  inline const ::client_baseserver::excavate& _excavate() const;
  inline ::client_baseserver::excavate* mutable__excavate();
  inline ::client_baseserver::excavate* release__excavate();
  inline void set_allocated__excavate(::client_baseserver::excavate* _excavate);

  // @@protoc_insertion_point(class_scope:client_baseserver.query_excavate_def_reply)
 private:
  inline void set_has__excavate();
  inline void clear_has__excavate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::excavate* _excavate_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static query_excavate_def_reply* default_instance_;
};
// -------------------------------------------------------------------

class clear_excavate_battle_reply : public ::google::protobuf::Message {
 public:
  clear_excavate_battle_reply();
  virtual ~clear_excavate_battle_reply();

  clear_excavate_battle_reply(const clear_excavate_battle_reply& from);

  inline clear_excavate_battle_reply& operator=(const clear_excavate_battle_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const clear_excavate_battle_reply& default_instance();

  void Swap(clear_excavate_battle_reply* other);

  // implements Message ----------------------------------------------

  clear_excavate_battle_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const clear_excavate_battle_reply& from);
  void MergeFrom(const clear_excavate_battle_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1 [default = success];
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // @@protoc_insertion_point(class_scope:client_baseserver.clear_excavate_battle_reply)
 private:
  inline void set_has__result();
  inline void clear_has__result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static clear_excavate_battle_reply* default_instance_;
};
// -------------------------------------------------------------------

class withdraw_excavate_hero_reply : public ::google::protobuf::Message {
 public:
  withdraw_excavate_hero_reply();
  virtual ~withdraw_excavate_hero_reply();

  withdraw_excavate_hero_reply(const withdraw_excavate_hero_reply& from);

  inline withdraw_excavate_hero_reply& operator=(const withdraw_excavate_hero_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const withdraw_excavate_hero_reply& default_instance();

  void Swap(withdraw_excavate_hero_reply* other);

  // implements Message ----------------------------------------------

  withdraw_excavate_hero_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const withdraw_excavate_hero_reply& from);
  void MergeFrom(const withdraw_excavate_hero_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1 [default = success];
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // @@protoc_insertion_point(class_scope:client_baseserver.withdraw_excavate_hero_reply)
 private:
  inline void set_has__result();
  inline void clear_has__result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static withdraw_excavate_hero_reply* default_instance_;
};
// -------------------------------------------------------------------

class draw_excavate_def_rwd_reply : public ::google::protobuf::Message {
 public:
  draw_excavate_def_rwd_reply();
  virtual ~draw_excavate_def_rwd_reply();

  draw_excavate_def_rwd_reply(const draw_excavate_def_rwd_reply& from);

  inline draw_excavate_def_rwd_reply& operator=(const draw_excavate_def_rwd_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const draw_excavate_def_rwd_reply& default_instance();

  void Swap(draw_excavate_def_rwd_reply* other);

  // implements Message ----------------------------------------------

  draw_excavate_def_rwd_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const draw_excavate_def_rwd_reply& from);
  void MergeFrom(const draw_excavate_def_rwd_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1 [default = success];
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // optional uint32 _draw_vitality = 2;
  inline bool has__draw_vitality() const;
  inline void clear__draw_vitality();
  static const int kDrawVitalityFieldNumber = 2;
  inline ::google::protobuf::uint32 _draw_vitality() const;
  inline void set__draw_vitality(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.draw_excavate_def_rwd_reply)
 private:
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__draw_vitality();
  inline void clear_has__draw_vitality();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  ::google::protobuf::uint32 _draw_vitality_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static draw_excavate_def_rwd_reply* default_instance_;
};
// -------------------------------------------------------------------

class drop_excavate_reply : public ::google::protobuf::Message {
 public:
  drop_excavate_reply();
  virtual ~drop_excavate_reply();

  drop_excavate_reply(const drop_excavate_reply& from);

  inline drop_excavate_reply& operator=(const drop_excavate_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const drop_excavate_reply& default_instance();

  void Swap(drop_excavate_reply* other);

  // implements Message ----------------------------------------------

  drop_excavate_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const drop_excavate_reply& from);
  void MergeFrom(const drop_excavate_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1 [default = success];
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // optional .client_baseserver.excavate_reward _reward = 2;
  inline bool has__reward() const;
  inline void clear__reward();
  static const int kRewardFieldNumber = 2;
  inline const ::client_baseserver::excavate_reward& _reward() const;
  inline ::client_baseserver::excavate_reward* mutable__reward();
  inline ::client_baseserver::excavate_reward* release__reward();
  inline void set_allocated__reward(::client_baseserver::excavate_reward* _reward);

  // @@protoc_insertion_point(class_scope:client_baseserver.drop_excavate_reply)
 private:
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__reward();
  inline void clear_has__reward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::excavate_reward* _reward_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static drop_excavate_reply* default_instance_;
};
// -------------------------------------------------------------------

class change_server_reply : public ::google::protobuf::Message {
 public:
  change_server_reply();
  virtual ~change_server_reply();

  change_server_reply(const change_server_reply& from);

  inline change_server_reply& operator=(const change_server_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const change_server_reply& default_instance();

  void Swap(change_server_reply* other);

  // implements Message ----------------------------------------------

  change_server_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const change_server_reply& from);
  void MergeFrom(const change_server_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.server_opt_result _result = 1;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::server_opt_result _result() const;
  inline void set__result(::client_baseserver::server_opt_result value);

  // repeated .client_baseserver.server_info _server_info = 2;
  inline int _server_info_size() const;
  inline void clear__server_info();
  static const int kServerInfoFieldNumber = 2;
  inline const ::client_baseserver::server_info& _server_info(int index) const;
  inline ::client_baseserver::server_info* mutable__server_info(int index);
  inline ::client_baseserver::server_info* add__server_info();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::server_info >&
      _server_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::server_info >*
      mutable__server_info();

  // @@protoc_insertion_point(class_scope:client_baseserver.change_server_reply)
 private:
  inline void set_has__result();
  inline void clear_has__result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::server_info > _server_info_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static change_server_reply* default_instance_;
};
// -------------------------------------------------------------------

class server_info : public ::google::protobuf::Message {
 public:
  server_info();
  virtual ~server_info();

  server_info(const server_info& from);

  inline server_info& operator=(const server_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const server_info& default_instance();

  void Swap(server_info* other);

  // implements Message ----------------------------------------------

  server_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const server_info& from);
  void MergeFrom(const server_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _server_id = 1;
  inline bool has__server_id() const;
  inline void clear__server_id();
  static const int kServerIdFieldNumber = 1;
  inline ::google::protobuf::uint32 _server_id() const;
  inline void set__server_id(::google::protobuf::uint32 value);

  // required string _server_name = 2;
  inline bool has__server_name() const;
  inline void clear__server_name();
  static const int kServerNameFieldNumber = 2;
  inline const ::std::string& _server_name() const;
  inline void set__server_name(const ::std::string& value);
  inline void set__server_name(const char* value);
  inline void set__server_name(const char* value, size_t size);
  inline ::std::string* mutable__server_name();
  inline ::std::string* release__server_name();
  inline void set_allocated__server_name(::std::string* _server_name);

  // optional string _player_name = 3;
  inline bool has__player_name() const;
  inline void clear__player_name();
  static const int kPlayerNameFieldNumber = 3;
  inline const ::std::string& _player_name() const;
  inline void set__player_name(const ::std::string& value);
  inline void set__player_name(const char* value);
  inline void set__player_name(const char* value, size_t size);
  inline ::std::string* mutable__player_name();
  inline ::std::string* release__player_name();
  inline void set_allocated__player_name(::std::string* _player_name);

  // optional uint32 _player_level = 4;
  inline bool has__player_level() const;
  inline void clear__player_level();
  static const int kPlayerLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 _player_level() const;
  inline void set__player_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.server_info)
 private:
  inline void set_has__server_id();
  inline void clear_has__server_id();
  inline void set_has__server_name();
  inline void clear_has__server_name();
  inline void set_has__player_name();
  inline void clear_has__player_name();
  inline void set_has__player_level();
  inline void clear_has__player_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* _server_name_;
  ::google::protobuf::uint32 _server_id_;
  ::google::protobuf::uint32 _player_level_;
  ::std::string* _player_name_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static server_info* default_instance_;
};
// -------------------------------------------------------------------

class guild_instance_query : public ::google::protobuf::Message {
 public:
  guild_instance_query();
  virtual ~guild_instance_query();

  guild_instance_query(const guild_instance_query& from);

  inline guild_instance_query& operator=(const guild_instance_query& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_instance_query& default_instance();

  void Swap(guild_instance_query* other);

  // implements Message ----------------------------------------------

  guild_instance_query* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_instance_query& from);
  void MergeFrom(const guild_instance_query& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef guild_instance_query_is_can_jump is_can_jump;
  static const is_can_jump true = guild_instance_query_is_can_jump_true;
  static const is_can_jump false = guild_instance_query_is_can_jump_false;
  static inline bool is_can_jump_IsValid(int value) {
    return guild_instance_query_is_can_jump_IsValid(value);
  }
  static const is_can_jump is_can_jump_MIN =
    guild_instance_query_is_can_jump_is_can_jump_MIN;
  static const is_can_jump is_can_jump_MAX =
    guild_instance_query_is_can_jump_is_can_jump_MAX;
  static const int is_can_jump_ARRAYSIZE =
    guild_instance_query_is_can_jump_is_can_jump_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  is_can_jump_descriptor() {
    return guild_instance_query_is_can_jump_descriptor();
  }
  static inline const ::std::string& is_can_jump_Name(is_can_jump value) {
    return guild_instance_query_is_can_jump_Name(value);
  }
  static inline bool is_can_jump_Parse(const ::std::string& name,
      is_can_jump* value) {
    return guild_instance_query_is_can_jump_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint32 _current_raid_id = 1;
  inline bool has__current_raid_id() const;
  inline void clear__current_raid_id();
  static const int kCurrentRaidIdFieldNumber = 1;
  inline ::google::protobuf::uint32 _current_raid_id() const;
  inline void set__current_raid_id(::google::protobuf::uint32 value);

  // repeated .client_baseserver.guild_instance_summary _summary = 2;
  inline int _summary_size() const;
  inline void clear__summary();
  static const int kSummaryFieldNumber = 2;
  inline const ::client_baseserver::guild_instance_summary& _summary(int index) const;
  inline ::client_baseserver::guild_instance_summary* mutable__summary(int index);
  inline ::client_baseserver::guild_instance_summary* add__summary();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_instance_summary >&
      _summary() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_instance_summary >*
      mutable__summary();

  // optional uint32 _stage_pass = 3;
  inline bool has__stage_pass() const;
  inline void clear__stage_pass();
  static const int kStagePassFieldNumber = 3;
  inline ::google::protobuf::uint32 _stage_pass() const;
  inline void set__stage_pass(::google::protobuf::uint32 value);

  // required .client_baseserver.guild_instance_query.is_can_jump _is_can_jump = 4;
  inline bool has__is_can_jump() const;
  inline void clear__is_can_jump();
  static const int kIsCanJumpFieldNumber = 4;
  inline ::client_baseserver::guild_instance_query_is_can_jump _is_can_jump() const;
  inline void set__is_can_jump(::client_baseserver::guild_instance_query_is_can_jump value);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_instance_query)
 private:
  inline void set_has__current_raid_id();
  inline void clear_has__current_raid_id();
  inline void set_has__stage_pass();
  inline void clear_has__stage_pass();
  inline void set_has__is_can_jump();
  inline void clear_has__is_can_jump();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_instance_summary > _summary_;
  ::google::protobuf::uint32 _current_raid_id_;
  ::google::protobuf::uint32 _stage_pass_;
  int _is_can_jump_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_instance_query* default_instance_;
};
// -------------------------------------------------------------------

class guild_chapter : public ::google::protobuf::Message {
 public:
  guild_chapter();
  virtual ~guild_chapter();

  guild_chapter(const guild_chapter& from);

  inline guild_chapter& operator=(const guild_chapter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_chapter& default_instance();

  void Swap(guild_chapter* other);

  // implements Message ----------------------------------------------

  guild_chapter* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_chapter& from);
  void MergeFrom(const guild_chapter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _id = 1;
  inline bool has__id() const;
  inline void clear__id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 _id() const;
  inline void set__id(::google::protobuf::uint32 value);

  // required uint32 _progress = 2;
  inline bool has__progress() const;
  inline void clear__progress();
  static const int kProgressFieldNumber = 2;
  inline ::google::protobuf::uint32 _progress() const;
  inline void set__progress(::google::protobuf::uint32 value);

  // required uint32 _begin_time = 3;
  inline bool has__begin_time() const;
  inline void clear__begin_time();
  static const int kBeginTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 _begin_time() const;
  inline void set__begin_time(::google::protobuf::uint32 value);

  // required uint32 _rest_times = 4;
  inline bool has__rest_times() const;
  inline void clear__rest_times();
  static const int kRestTimesFieldNumber = 4;
  inline ::google::protobuf::uint32 _rest_times() const;
  inline void set__rest_times(::google::protobuf::uint32 value);

  // required uint32 _cur_stage_id = 5;
  inline bool has__cur_stage_id() const;
  inline void clear__cur_stage_id();
  static const int kCurStageIdFieldNumber = 5;
  inline ::google::protobuf::uint32 _cur_stage_id() const;
  inline void set__cur_stage_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_chapter)
 private:
  inline void set_has__id();
  inline void clear_has__id();
  inline void set_has__progress();
  inline void clear_has__progress();
  inline void set_has__begin_time();
  inline void clear_has__begin_time();
  inline void set_has__rest_times();
  inline void clear_has__rest_times();
  inline void set_has__cur_stage_id();
  inline void clear_has__cur_stage_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _id_;
  ::google::protobuf::uint32 _progress_;
  ::google::protobuf::uint32 _begin_time_;
  ::google::protobuf::uint32 _rest_times_;
  ::google::protobuf::uint32 _cur_stage_id_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_chapter* default_instance_;
};
// -------------------------------------------------------------------

class guild_instance_detail : public ::google::protobuf::Message {
 public:
  guild_instance_detail();
  virtual ~guild_instance_detail();

  guild_instance_detail(const guild_instance_detail& from);

  inline guild_instance_detail& operator=(const guild_instance_detail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_instance_detail& default_instance();

  void Swap(guild_instance_detail* other);

  // implements Message ----------------------------------------------

  guild_instance_detail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_instance_detail& from);
  void MergeFrom(const guild_instance_detail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef guild_instance_detail_challenger_status challenger_status;
  static const challenger_status battle = guild_instance_detail_challenger_status_battle;
  static const challenger_status prepare = guild_instance_detail_challenger_status_prepare;
  static inline bool challenger_status_IsValid(int value) {
    return guild_instance_detail_challenger_status_IsValid(value);
  }
  static const challenger_status challenger_status_MIN =
    guild_instance_detail_challenger_status_challenger_status_MIN;
  static const challenger_status challenger_status_MAX =
    guild_instance_detail_challenger_status_challenger_status_MAX;
  static const int challenger_status_ARRAYSIZE =
    guild_instance_detail_challenger_status_challenger_status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  challenger_status_descriptor() {
    return guild_instance_detail_challenger_status_descriptor();
  }
  static inline const ::std::string& challenger_status_Name(challenger_status value) {
    return guild_instance_detail_challenger_status_Name(value);
  }
  static inline bool challenger_status_Parse(const ::std::string& name,
      challenger_status* value) {
    return guild_instance_detail_challenger_status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint32 _stage = 1;
  inline bool has__stage() const;
  inline void clear__stage();
  static const int kStageFieldNumber = 1;
  inline ::google::protobuf::uint32 _stage() const;
  inline void set__stage(::google::protobuf::uint32 value);

  // required uint32 _wave = 2;
  inline bool has__wave() const;
  inline void clear__wave();
  static const int kWaveFieldNumber = 2;
  inline ::google::protobuf::uint32 _wave() const;
  inline void set__wave(::google::protobuf::uint32 value);

  // repeated uint32 _hp = 3;
  inline int _hp_size() const;
  inline void clear__hp();
  static const int kHpFieldNumber = 3;
  inline ::google::protobuf::uint32 _hp(int index) const;
  inline void set__hp(int index, ::google::protobuf::uint32 value);
  inline void add__hp(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _hp() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__hp();

  // repeated .client_baseserver.guild_instance_record _record = 4;
  inline int _record_size() const;
  inline void clear__record();
  static const int kRecordFieldNumber = 4;
  inline const ::client_baseserver::guild_instance_record& _record(int index) const;
  inline ::client_baseserver::guild_instance_record* mutable__record(int index);
  inline ::client_baseserver::guild_instance_record* add__record();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_instance_record >&
      _record() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_instance_record >*
      mutable__record();

  // optional .client_baseserver.guild_challenger _challenger = 5;
  inline bool has__challenger() const;
  inline void clear__challenger();
  static const int kChallengerFieldNumber = 5;
  inline const ::client_baseserver::guild_challenger& _challenger() const;
  inline ::client_baseserver::guild_challenger* mutable__challenger();
  inline ::client_baseserver::guild_challenger* release__challenger();
  inline void set_allocated__challenger(::client_baseserver::guild_challenger* _challenger);

  // optional .client_baseserver.guild_instance_detail.challenger_status _challenger_status = 6;
  inline bool has__challenger_status() const;
  inline void clear__challenger_status();
  static const int kChallengerStatusFieldNumber = 6;
  inline ::client_baseserver::guild_instance_detail_challenger_status _challenger_status() const;
  inline void set__challenger_status(::client_baseserver::guild_instance_detail_challenger_status value);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_instance_detail)
 private:
  inline void set_has__stage();
  inline void clear_has__stage();
  inline void set_has__wave();
  inline void clear_has__wave();
  inline void set_has__challenger();
  inline void clear_has__challenger();
  inline void set_has__challenger_status();
  inline void clear_has__challenger_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _stage_;
  ::google::protobuf::uint32 _wave_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _hp_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_instance_record > _record_;
  ::client_baseserver::guild_challenger* _challenger_;
  int _challenger_status_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_instance_detail* default_instance_;
};
// -------------------------------------------------------------------

class guild_challenger : public ::google::protobuf::Message {
 public:
  guild_challenger();
  virtual ~guild_challenger();

  guild_challenger(const guild_challenger& from);

  inline guild_challenger& operator=(const guild_challenger& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_challenger& default_instance();

  void Swap(guild_challenger* other);

  // implements Message ----------------------------------------------

  guild_challenger* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_challenger& from);
  void MergeFrom(const guild_challenger& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.user_summary _summary = 1;
  inline bool has__summary() const;
  inline void clear__summary();
  static const int kSummaryFieldNumber = 1;
  inline const ::client_baseserver::user_summary& _summary() const;
  inline ::client_baseserver::user_summary* mutable__summary();
  inline ::client_baseserver::user_summary* release__summary();
  inline void set_allocated__summary(::client_baseserver::user_summary* _summary);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_challenger)
 private:
  inline void set_has__summary();
  inline void clear_has__summary();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::user_summary* _summary_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_challenger* default_instance_;
};
// -------------------------------------------------------------------

class guild_instance_record : public ::google::protobuf::Message {
 public:
  guild_instance_record();
  virtual ~guild_instance_record();

  guild_instance_record(const guild_instance_record& from);

  inline guild_instance_record& operator=(const guild_instance_record& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_instance_record& default_instance();

  void Swap(guild_instance_record* other);

  // implements Message ----------------------------------------------

  guild_instance_record* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_instance_record& from);
  void MergeFrom(const guild_instance_record& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.guild_challenger _challenger = 1;
  inline bool has__challenger() const;
  inline void clear__challenger();
  static const int kChallengerFieldNumber = 1;
  inline const ::client_baseserver::guild_challenger& _challenger() const;
  inline ::client_baseserver::guild_challenger* mutable__challenger();
  inline ::client_baseserver::guild_challenger* release__challenger();
  inline void set_allocated__challenger(::client_baseserver::guild_challenger* _challenger);

  // required uint32 _damage = 2;
  inline bool has__damage() const;
  inline void clear__damage();
  static const int kDamageFieldNumber = 2;
  inline ::google::protobuf::uint32 _damage() const;
  inline void set__damage(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_instance_record)
 private:
  inline void set_has__challenger();
  inline void clear_has__challenger();
  inline void set_has__damage();
  inline void clear_has__damage();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::guild_challenger* _challenger_;
  ::google::protobuf::uint32 _damage_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_instance_record* default_instance_;
};
// -------------------------------------------------------------------

class guild_instance_summary : public ::google::protobuf::Message {
 public:
  guild_instance_summary();
  virtual ~guild_instance_summary();

  guild_instance_summary(const guild_instance_summary& from);

  inline guild_instance_summary& operator=(const guild_instance_summary& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_instance_summary& default_instance();

  void Swap(guild_instance_summary* other);

  // implements Message ----------------------------------------------

  guild_instance_summary* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_instance_summary& from);
  void MergeFrom(const guild_instance_summary& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _id = 1;
  inline bool has__id() const;
  inline void clear__id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 _id() const;
  inline void set__id(::google::protobuf::uint32 value);

  // required uint32 _stage_id = 2;
  inline bool has__stage_id() const;
  inline void clear__stage_id();
  static const int kStageIdFieldNumber = 2;
  inline ::google::protobuf::uint32 _stage_id() const;
  inline void set__stage_id(::google::protobuf::uint32 value);

  // required uint32 _left_time = 3;
  inline bool has__left_time() const;
  inline void clear__left_time();
  static const int kLeftTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 _left_time() const;
  inline void set__left_time(::google::protobuf::uint32 value);

  // required uint32 _start_time = 4;
  inline bool has__start_time() const;
  inline void clear__start_time();
  static const int kStartTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 _start_time() const;
  inline void set__start_time(::google::protobuf::uint32 value);

  // required uint32 _progress = 5;
  inline bool has__progress() const;
  inline void clear__progress();
  static const int kProgressFieldNumber = 5;
  inline ::google::protobuf::uint32 _progress() const;
  inline void set__progress(::google::protobuf::uint32 value);

  // required uint32 _stage_progress = 6;
  inline bool has__stage_progress() const;
  inline void clear__stage_progress();
  static const int kStageProgressFieldNumber = 6;
  inline ::google::protobuf::uint32 _stage_progress() const;
  inline void set__stage_progress(::google::protobuf::uint32 value);

  // optional uint32 _battle_user_id = 7;
  inline bool has__battle_user_id() const;
  inline void clear__battle_user_id();
  static const int kBattleUserIdFieldNumber = 7;
  inline ::google::protobuf::uint32 _battle_user_id() const;
  inline void set__battle_user_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_instance_summary)
 private:
  inline void set_has__id();
  inline void clear_has__id();
  inline void set_has__stage_id();
  inline void clear_has__stage_id();
  inline void set_has__left_time();
  inline void clear_has__left_time();
  inline void set_has__start_time();
  inline void clear_has__start_time();
  inline void set_has__progress();
  inline void clear_has__progress();
  inline void set_has__stage_progress();
  inline void clear_has__stage_progress();
  inline void set_has__battle_user_id();
  inline void clear_has__battle_user_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _id_;
  ::google::protobuf::uint32 _stage_id_;
  ::google::protobuf::uint32 _left_time_;
  ::google::protobuf::uint32 _start_time_;
  ::google::protobuf::uint32 _progress_;
  ::google::protobuf::uint32 _stage_progress_;
  ::google::protobuf::uint32 _battle_user_id_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_instance_summary* default_instance_;
};
// -------------------------------------------------------------------

class guild_instance_item : public ::google::protobuf::Message {
 public:
  guild_instance_item();
  virtual ~guild_instance_item();

  guild_instance_item(const guild_instance_item& from);

  inline guild_instance_item& operator=(const guild_instance_item& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_instance_item& default_instance();

  void Swap(guild_instance_item* other);

  // implements Message ----------------------------------------------

  guild_instance_item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_instance_item& from);
  void MergeFrom(const guild_instance_item& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef guild_instance_item_drop_state drop_state;
  static const drop_state no_apply = guild_instance_item_drop_state_no_apply;
  static const drop_state apply = guild_instance_item_drop_state_apply;
  static inline bool drop_state_IsValid(int value) {
    return guild_instance_item_drop_state_IsValid(value);
  }
  static const drop_state drop_state_MIN =
    guild_instance_item_drop_state_drop_state_MIN;
  static const drop_state drop_state_MAX =
    guild_instance_item_drop_state_drop_state_MAX;
  static const int drop_state_ARRAYSIZE =
    guild_instance_item_drop_state_drop_state_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  drop_state_descriptor() {
    return guild_instance_item_drop_state_descriptor();
  }
  static inline const ::std::string& drop_state_Name(drop_state value) {
    return guild_instance_item_drop_state_Name(value);
  }
  static inline bool drop_state_Parse(const ::std::string& name,
      drop_state* value) {
    return guild_instance_item_drop_state_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint32 _item_id = 1;
  inline bool has__item_id() const;
  inline void clear__item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::uint32 _item_id() const;
  inline void set__item_id(::google::protobuf::uint32 value);

  // required uint32 _num = 2;
  inline bool has__num() const;
  inline void clear__num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::uint32 _num() const;
  inline void set__num(::google::protobuf::uint32 value);

  // required .client_baseserver.guild_instance_item.drop_state _state = 3;
  inline bool has__state() const;
  inline void clear__state();
  static const int kStateFieldNumber = 3;
  inline ::client_baseserver::guild_instance_item_drop_state _state() const;
  inline void set__state(::client_baseserver::guild_instance_item_drop_state value);

  // required uint32 _apply_num = 4;
  inline bool has__apply_num() const;
  inline void clear__apply_num();
  static const int kApplyNumFieldNumber = 4;
  inline ::google::protobuf::uint32 _apply_num() const;
  inline void set__apply_num(::google::protobuf::uint32 value);

  // required uint32 _able_app_count = 5;
  inline bool has__able_app_count() const;
  inline void clear__able_app_count();
  static const int kAbleAppCountFieldNumber = 5;
  inline ::google::protobuf::uint32 _able_app_count() const;
  inline void set__able_app_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_instance_item)
 private:
  inline void set_has__item_id();
  inline void clear_has__item_id();
  inline void set_has__num();
  inline void clear_has__num();
  inline void set_has__state();
  inline void clear_has__state();
  inline void set_has__apply_num();
  inline void clear_has__apply_num();
  inline void set_has__able_app_count();
  inline void clear_has__able_app_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _item_id_;
  ::google::protobuf::uint32 _num_;
  int _state_;
  ::google::protobuf::uint32 _apply_num_;
  ::google::protobuf::uint32 _able_app_count_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_instance_item* default_instance_;
};
// -------------------------------------------------------------------

class guild_instance_drop : public ::google::protobuf::Message {
 public:
  guild_instance_drop();
  virtual ~guild_instance_drop();

  guild_instance_drop(const guild_instance_drop& from);

  inline guild_instance_drop& operator=(const guild_instance_drop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_instance_drop& default_instance();

  void Swap(guild_instance_drop* other);

  // implements Message ----------------------------------------------

  guild_instance_drop* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_instance_drop& from);
  void MergeFrom(const guild_instance_drop& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client_baseserver.guild_instance_item _items = 1;
  inline int _items_size() const;
  inline void clear__items();
  static const int kItemsFieldNumber = 1;
  inline const ::client_baseserver::guild_instance_item& _items(int index) const;
  inline ::client_baseserver::guild_instance_item* mutable__items(int index);
  inline ::client_baseserver::guild_instance_item* add__items();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_instance_item >&
      _items() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_instance_item >*
      mutable__items();

  // required uint32 _raid_id = 2;
  inline bool has__raid_id() const;
  inline void clear__raid_id();
  static const int kRaidIdFieldNumber = 2;
  inline ::google::protobuf::uint32 _raid_id() const;
  inline void set__raid_id(::google::protobuf::uint32 value);

  // optional uint32 _apply_item_id = 3;
  inline bool has__apply_item_id() const;
  inline void clear__apply_item_id();
  static const int kApplyItemIdFieldNumber = 3;
  inline ::google::protobuf::uint32 _apply_item_id() const;
  inline void set__apply_item_id(::google::protobuf::uint32 value);

  // optional uint32 _rank = 4;
  inline bool has__rank() const;
  inline void clear__rank();
  static const int kRankFieldNumber = 4;
  inline ::google::protobuf::uint32 _rank() const;
  inline void set__rank(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_instance_drop)
 private:
  inline void set_has__raid_id();
  inline void clear_has__raid_id();
  inline void set_has__apply_item_id();
  inline void clear_has__apply_item_id();
  inline void set_has__rank();
  inline void clear_has__rank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_instance_item > _items_;
  ::google::protobuf::uint32 _raid_id_;
  ::google::protobuf::uint32 _apply_item_id_;
  ::google::protobuf::uint32 _rank_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_instance_drop* default_instance_;
};
// -------------------------------------------------------------------

class splitable_hero : public ::google::protobuf::Message {
 public:
  splitable_hero();
  virtual ~splitable_hero();

  splitable_hero(const splitable_hero& from);

  inline splitable_hero& operator=(const splitable_hero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const splitable_hero& default_instance();

  void Swap(splitable_hero* other);

  // implements Message ----------------------------------------------

  splitable_hero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const splitable_hero& from);
  void MergeFrom(const splitable_hero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _tid = 1;
  inline bool has__tid() const;
  inline void clear__tid();
  static const int kTidFieldNumber = 1;
  inline ::google::protobuf::uint32 _tid() const;
  inline void set__tid(::google::protobuf::uint32 value);

  // required uint32 _split_times = 2;
  inline bool has__split_times() const;
  inline void clear__split_times();
  static const int kSplitTimesFieldNumber = 2;
  inline ::google::protobuf::uint32 _split_times() const;
  inline void set__split_times(::google::protobuf::uint32 value);

  // required uint32 _end_point = 3;
  inline bool has__end_point() const;
  inline void clear__end_point();
  static const int kEndPointFieldNumber = 3;
  inline ::google::protobuf::uint32 _end_point() const;
  inline void set__end_point(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.splitable_hero)
 private:
  inline void set_has__tid();
  inline void clear_has__tid();
  inline void set_has__split_times();
  inline void clear_has__split_times();
  inline void set_has__end_point();
  inline void clear_has__end_point();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _tid_;
  ::google::protobuf::uint32 _split_times_;
  ::google::protobuf::uint32 _end_point_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static splitable_hero* default_instance_;
};
// -------------------------------------------------------------------

class query_split_data_reply : public ::google::protobuf::Message {
 public:
  query_split_data_reply();
  virtual ~query_split_data_reply();

  query_split_data_reply(const query_split_data_reply& from);

  inline query_split_data_reply& operator=(const query_split_data_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const query_split_data_reply& default_instance();

  void Swap(query_split_data_reply* other);

  // implements Message ----------------------------------------------

  query_split_data_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const query_split_data_reply& from);
  void MergeFrom(const query_split_data_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client_baseserver.splitable_hero _heroes = 1;
  inline int _heroes_size() const;
  inline void clear__heroes();
  static const int kHeroesFieldNumber = 1;
  inline const ::client_baseserver::splitable_hero& _heroes(int index) const;
  inline ::client_baseserver::splitable_hero* mutable__heroes(int index);
  inline ::client_baseserver::splitable_hero* add__heroes();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::splitable_hero >&
      _heroes() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::splitable_hero >*
      mutable__heroes();

  // @@protoc_insertion_point(class_scope:client_baseserver.query_split_data_reply)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::splitable_hero > _heroes_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static query_split_data_reply* default_instance_;
};
// -------------------------------------------------------------------

class query_split_return_reply : public ::google::protobuf::Message {
 public:
  query_split_return_reply();
  virtual ~query_split_return_reply();

  query_split_return_reply(const query_split_return_reply& from);

  inline query_split_return_reply& operator=(const query_split_return_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const query_split_return_reply& default_instance();

  void Swap(query_split_return_reply* other);

  // implements Message ----------------------------------------------

  query_split_return_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const query_split_return_reply& from);
  void MergeFrom(const query_split_return_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 _items = 1;
  inline int _items_size() const;
  inline void clear__items();
  static const int kItemsFieldNumber = 1;
  inline ::google::protobuf::uint32 _items(int index) const;
  inline void set__items(int index, ::google::protobuf::uint32 value);
  inline void add__items(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _items() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__items();

  // required uint32 _gold = 2;
  inline bool has__gold() const;
  inline void clear__gold();
  static const int kGoldFieldNumber = 2;
  inline ::google::protobuf::uint32 _gold() const;
  inline void set__gold(::google::protobuf::uint32 value);

  // required uint32 _skill_point = 3;
  inline bool has__skill_point() const;
  inline void clear__skill_point();
  static const int kSkillPointFieldNumber = 3;
  inline ::google::protobuf::uint32 _skill_point() const;
  inline void set__skill_point(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.query_split_return_reply)
 private:
  inline void set_has__gold();
  inline void clear_has__gold();
  inline void set_has__skill_point();
  inline void clear_has__skill_point();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _items_;
  ::google::protobuf::uint32 _gold_;
  ::google::protobuf::uint32 _skill_point_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static query_split_return_reply* default_instance_;
};
// -------------------------------------------------------------------

class split_hero_reply : public ::google::protobuf::Message {
 public:
  split_hero_reply();
  virtual ~split_hero_reply();

  split_hero_reply(const split_hero_reply& from);

  inline split_hero_reply& operator=(const split_hero_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const split_hero_reply& default_instance();

  void Swap(split_hero_reply* other);

  // implements Message ----------------------------------------------

  split_hero_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const split_hero_reply& from);
  void MergeFrom(const split_hero_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // optional .client_baseserver.hero _hero = 2;
  inline bool has__hero() const;
  inline void clear__hero();
  static const int kHeroFieldNumber = 2;
  inline const ::client_baseserver::hero& _hero() const;
  inline ::client_baseserver::hero* mutable__hero();
  inline ::client_baseserver::hero* release__hero();
  inline void set_allocated__hero(::client_baseserver::hero* _hero);

  // @@protoc_insertion_point(class_scope:client_baseserver.split_hero_reply)
 private:
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__hero();
  inline void clear_has__hero();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::hero* _hero_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static split_hero_reply* default_instance_;
};
// -------------------------------------------------------------------

class worldcup_reply : public ::google::protobuf::Message {
 public:
  worldcup_reply();
  virtual ~worldcup_reply();

  worldcup_reply(const worldcup_reply& from);

  inline worldcup_reply& operator=(const worldcup_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const worldcup_reply& default_instance();

  void Swap(worldcup_reply* other);

  // implements Message ----------------------------------------------

  worldcup_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const worldcup_reply& from);
  void MergeFrom(const worldcup_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client_baseserver.worldcup_query_reply _worldcup_query_reply = 1;
  inline bool has__worldcup_query_reply() const;
  inline void clear__worldcup_query_reply();
  static const int kWorldcupQueryReplyFieldNumber = 1;
  inline const ::client_baseserver::worldcup_query_reply& _worldcup_query_reply() const;
  inline ::client_baseserver::worldcup_query_reply* mutable__worldcup_query_reply();
  inline ::client_baseserver::worldcup_query_reply* release__worldcup_query_reply();
  inline void set_allocated__worldcup_query_reply(::client_baseserver::worldcup_query_reply* _worldcup_query_reply);

  // optional .client_baseserver.worldcup_submit_reply _worldcup_submit_reply = 2;
  inline bool has__worldcup_submit_reply() const;
  inline void clear__worldcup_submit_reply();
  static const int kWorldcupSubmitReplyFieldNumber = 2;
  inline const ::client_baseserver::worldcup_submit_reply& _worldcup_submit_reply() const;
  inline ::client_baseserver::worldcup_submit_reply* mutable__worldcup_submit_reply();
  inline ::client_baseserver::worldcup_submit_reply* release__worldcup_submit_reply();
  inline void set_allocated__worldcup_submit_reply(::client_baseserver::worldcup_submit_reply* _worldcup_submit_reply);

  // @@protoc_insertion_point(class_scope:client_baseserver.worldcup_reply)
 private:
  inline void set_has__worldcup_query_reply();
  inline void clear_has__worldcup_query_reply();
  inline void set_has__worldcup_submit_reply();
  inline void clear_has__worldcup_submit_reply();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::worldcup_query_reply* _worldcup_query_reply_;
  ::client_baseserver::worldcup_submit_reply* _worldcup_submit_reply_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static worldcup_reply* default_instance_;
};
// -------------------------------------------------------------------

class worldcup_reward : public ::google::protobuf::Message {
 public:
  worldcup_reward();
  virtual ~worldcup_reward();

  worldcup_reward(const worldcup_reward& from);

  inline worldcup_reward& operator=(const worldcup_reward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const worldcup_reward& default_instance();

  void Swap(worldcup_reward* other);

  // implements Message ----------------------------------------------

  worldcup_reward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const worldcup_reward& from);
  void MergeFrom(const worldcup_reward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 _gold = 1;
  inline bool has__gold() const;
  inline void clear__gold();
  static const int kGoldFieldNumber = 1;
  inline ::google::protobuf::uint32 _gold() const;
  inline void set__gold(::google::protobuf::uint32 value);

  // optional uint32 _diamond = 2;
  inline bool has__diamond() const;
  inline void clear__diamond();
  static const int kDiamondFieldNumber = 2;
  inline ::google::protobuf::uint32 _diamond() const;
  inline void set__diamond(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.worldcup_reward)
 private:
  inline void set_has__gold();
  inline void clear_has__gold();
  inline void set_has__diamond();
  inline void clear_has__diamond();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _gold_;
  ::google::protobuf::uint32 _diamond_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static worldcup_reward* default_instance_;
};
// -------------------------------------------------------------------

class worldcup_comp : public ::google::protobuf::Message {
 public:
  worldcup_comp();
  virtual ~worldcup_comp();

  worldcup_comp(const worldcup_comp& from);

  inline worldcup_comp& operator=(const worldcup_comp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const worldcup_comp& default_instance();

  void Swap(worldcup_comp* other);

  // implements Message ----------------------------------------------

  worldcup_comp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const worldcup_comp& from);
  void MergeFrom(const worldcup_comp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 _teams = 1;
  inline int _teams_size() const;
  inline void clear__teams();
  static const int kTeamsFieldNumber = 1;
  inline ::google::protobuf::uint32 _teams(int index) const;
  inline void set__teams(int index, ::google::protobuf::uint32 value);
  inline void add__teams(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _teams() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__teams();

  // required .client_baseserver.worldcup_reward _reward = 2;
  inline bool has__reward() const;
  inline void clear__reward();
  static const int kRewardFieldNumber = 2;
  inline const ::client_baseserver::worldcup_reward& _reward() const;
  inline ::client_baseserver::worldcup_reward* mutable__reward();
  inline ::client_baseserver::worldcup_reward* release__reward();
  inline void set_allocated__reward(::client_baseserver::worldcup_reward* _reward);

  // optional uint32 _guess = 3;
  inline bool has__guess() const;
  inline void clear__guess();
  static const int kGuessFieldNumber = 3;
  inline ::google::protobuf::uint32 _guess() const;
  inline void set__guess(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.worldcup_comp)
 private:
  inline void set_has__reward();
  inline void clear_has__reward();
  inline void set_has__guess();
  inline void clear_has__guess();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _teams_;
  ::client_baseserver::worldcup_reward* _reward_;
  ::google::protobuf::uint32 _guess_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static worldcup_comp* default_instance_;
};
// -------------------------------------------------------------------

class worldcup_query_reply : public ::google::protobuf::Message {
 public:
  worldcup_query_reply();
  virtual ~worldcup_query_reply();

  worldcup_query_reply(const worldcup_query_reply& from);

  inline worldcup_query_reply& operator=(const worldcup_query_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const worldcup_query_reply& default_instance();

  void Swap(worldcup_query_reply* other);

  // implements Message ----------------------------------------------

  worldcup_query_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const worldcup_query_reply& from);
  void MergeFrom(const worldcup_query_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client_baseserver.worldcup_comp _comp = 1;
  inline int _comp_size() const;
  inline void clear__comp();
  static const int kCompFieldNumber = 1;
  inline const ::client_baseserver::worldcup_comp& _comp(int index) const;
  inline ::client_baseserver::worldcup_comp* mutable__comp(int index);
  inline ::client_baseserver::worldcup_comp* add__comp();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::worldcup_comp >&
      _comp() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::worldcup_comp >*
      mutable__comp();

  // @@protoc_insertion_point(class_scope:client_baseserver.worldcup_query_reply)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::worldcup_comp > _comp_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static worldcup_query_reply* default_instance_;
};
// -------------------------------------------------------------------

class worldcup_submit_reply : public ::google::protobuf::Message {
 public:
  worldcup_submit_reply();
  virtual ~worldcup_submit_reply();

  worldcup_submit_reply(const worldcup_submit_reply& from);

  inline worldcup_submit_reply& operator=(const worldcup_submit_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const worldcup_submit_reply& default_instance();

  void Swap(worldcup_submit_reply* other);

  // implements Message ----------------------------------------------

  worldcup_submit_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const worldcup_submit_reply& from);
  void MergeFrom(const worldcup_submit_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .client_baseserver.result _result = 1;
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 1;
  inline ::client_baseserver::result _result() const;
  inline void set__result(::client_baseserver::result value);

  // @@protoc_insertion_point(class_scope:client_baseserver.worldcup_submit_reply)
 private:
  inline void set_has__result();
  inline void clear_has__result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int _result_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static worldcup_submit_reply* default_instance_;
};
// -------------------------------------------------------------------

class battle_check_fail : public ::google::protobuf::Message {
 public:
  battle_check_fail();
  virtual ~battle_check_fail();

  battle_check_fail(const battle_check_fail& from);

  inline battle_check_fail& operator=(const battle_check_fail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const battle_check_fail& default_instance();

  void Swap(battle_check_fail* other);

  // implements Message ----------------------------------------------

  battle_check_fail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const battle_check_fail& from);
  void MergeFrom(const battle_check_fail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _checkid = 1;
  inline bool has__checkid() const;
  inline void clear__checkid();
  static const int kCheckidFieldNumber = 1;
  inline ::google::protobuf::uint32 _checkid() const;
  inline void set__checkid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.battle_check_fail)
 private:
  inline void set_has__checkid();
  inline void clear_has__checkid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _checkid_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static battle_check_fail* default_instance_;
};
// -------------------------------------------------------------------

class super_link : public ::google::protobuf::Message {
 public:
  super_link();
  virtual ~super_link();

  super_link(const super_link& from);

  inline super_link& operator=(const super_link& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const super_link& default_instance();

  void Swap(super_link* other);

  // implements Message ----------------------------------------------

  super_link* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const super_link& from);
  void MergeFrom(const super_link& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string _info = 2;
  inline bool has__info() const;
  inline void clear__info();
  static const int kInfoFieldNumber = 2;
  inline const ::std::string& _info() const;
  inline void set__info(const ::std::string& value);
  inline void set__info(const char* value);
  inline void set__info(const char* value, size_t size);
  inline ::std::string* mutable__info();
  inline ::std::string* release__info();
  inline void set_allocated__info(::std::string* _info);

  // required string _addr = 1;
  inline bool has__addr() const;
  inline void clear__addr();
  static const int kAddrFieldNumber = 1;
  inline const ::std::string& _addr() const;
  inline void set__addr(const ::std::string& value);
  inline void set__addr(const char* value);
  inline void set__addr(const char* value, size_t size);
  inline ::std::string* mutable__addr();
  inline ::std::string* release__addr();
  inline void set_allocated__addr(::std::string* _addr);

  // @@protoc_insertion_point(class_scope:client_baseserver.super_link)
 private:
  inline void set_has__info();
  inline void clear_has__info();
  inline void set_has__addr();
  inline void clear_has__addr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* _info_;
  ::std::string* _addr_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static super_link* default_instance_;
};
// -------------------------------------------------------------------

class ranklist_item : public ::google::protobuf::Message {
 public:
  ranklist_item();
  virtual ~ranklist_item();

  ranklist_item(const ranklist_item& from);

  inline ranklist_item& operator=(const ranklist_item& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ranklist_item& default_instance();

  void Swap(ranklist_item* other);

  // implements Message ----------------------------------------------

  ranklist_item* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ranklist_item& from);
  void MergeFrom(const ranklist_item& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .client_baseserver.user_summary _user_summary = 1;
  inline bool has__user_summary() const;
  inline void clear__user_summary();
  static const int kUserSummaryFieldNumber = 1;
  inline const ::client_baseserver::user_summary& _user_summary() const;
  inline ::client_baseserver::user_summary* mutable__user_summary();
  inline ::client_baseserver::user_summary* release__user_summary();
  inline void set_allocated__user_summary(::client_baseserver::user_summary* _user_summary);

  // optional .client_baseserver.guild_summary _guild_summary = 2;
  inline bool has__guild_summary() const;
  inline void clear__guild_summary();
  static const int kGuildSummaryFieldNumber = 2;
  inline const ::client_baseserver::guild_summary& _guild_summary() const;
  inline ::client_baseserver::guild_summary* mutable__guild_summary();
  inline ::client_baseserver::guild_summary* release__guild_summary();
  inline void set_allocated__guild_summary(::client_baseserver::guild_summary* _guild_summary);

  // optional uint32 _param1 = 3;
  inline bool has__param1() const;
  inline void clear__param1();
  static const int kParam1FieldNumber = 3;
  inline ::google::protobuf::uint32 _param1() const;
  inline void set__param1(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.ranklist_item)
 private:
  inline void set_has__user_summary();
  inline void clear_has__user_summary();
  inline void set_has__guild_summary();
  inline void clear_has__guild_summary();
  inline void set_has__param1();
  inline void clear_has__param1();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::client_baseserver::user_summary* _user_summary_;
  ::client_baseserver::guild_summary* _guild_summary_;
  ::google::protobuf::uint32 _param1_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static ranklist_item* default_instance_;
};
// -------------------------------------------------------------------

class query_ranklist_reply : public ::google::protobuf::Message {
 public:
  query_ranklist_reply();
  virtual ~query_ranklist_reply();

  query_ranklist_reply(const query_ranklist_reply& from);

  inline query_ranklist_reply& operator=(const query_ranklist_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const query_ranklist_reply& default_instance();

  void Swap(query_ranklist_reply* other);

  // implements Message ----------------------------------------------

  query_ranklist_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const query_ranklist_reply& from);
  void MergeFrom(const query_ranklist_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef query_ranklist_reply_rank_type rank_type;
  static const rank_type guildliveness = query_ranklist_reply_rank_type_guildliveness;
  static const rank_type excavate_rob = query_ranklist_reply_rank_type_excavate_rob;
  static const rank_type excavate_gold = query_ranklist_reply_rank_type_excavate_gold;
  static const rank_type excavate_exp = query_ranklist_reply_rank_type_excavate_exp;
  static const rank_type top_gs = query_ranklist_reply_rank_type_top_gs;
  static const rank_type full_hero_gs = query_ranklist_reply_rank_type_full_hero_gs;
  static const rank_type hero_team_gs = query_ranklist_reply_rank_type_hero_team_gs;
  static const rank_type hero_evo_star = query_ranklist_reply_rank_type_hero_evo_star;
  static const rank_type hero_arousal = query_ranklist_reply_rank_type_hero_arousal;
  static const rank_type top_arena = query_ranklist_reply_rank_type_top_arena;
  static inline bool rank_type_IsValid(int value) {
    return query_ranklist_reply_rank_type_IsValid(value);
  }
  static const rank_type rank_type_MIN =
    query_ranklist_reply_rank_type_rank_type_MIN;
  static const rank_type rank_type_MAX =
    query_ranklist_reply_rank_type_rank_type_MAX;
  static const int rank_type_ARRAYSIZE =
    query_ranklist_reply_rank_type_rank_type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  rank_type_descriptor() {
    return query_ranklist_reply_rank_type_descriptor();
  }
  static inline const ::std::string& rank_type_Name(rank_type value) {
    return query_ranklist_reply_rank_type_Name(value);
  }
  static inline bool rank_type_Parse(const ::std::string& name,
      rank_type* value) {
    return query_ranklist_reply_rank_type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .client_baseserver.query_ranklist_reply.rank_type _rank_type = 1;
  inline bool has__rank_type() const;
  inline void clear__rank_type();
  static const int kRankTypeFieldNumber = 1;
  inline ::client_baseserver::query_ranklist_reply_rank_type _rank_type() const;
  inline void set__rank_type(::client_baseserver::query_ranklist_reply_rank_type value);

  // repeated .client_baseserver.ranklist_item _ranklist_item = 2;
  inline int _ranklist_item_size() const;
  inline void clear__ranklist_item();
  static const int kRanklistItemFieldNumber = 2;
  inline const ::client_baseserver::ranklist_item& _ranklist_item(int index) const;
  inline ::client_baseserver::ranklist_item* mutable__ranklist_item(int index);
  inline ::client_baseserver::ranklist_item* add__ranklist_item();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::ranklist_item >&
      _ranklist_item() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::ranklist_item >*
      mutable__ranklist_item();

  // optional uint32 _self_ranking = 3;
  inline bool has__self_ranking() const;
  inline void clear__self_ranking();
  static const int kSelfRankingFieldNumber = 3;
  inline ::google::protobuf::uint32 _self_ranking() const;
  inline void set__self_ranking(::google::protobuf::uint32 value);

  // optional .client_baseserver.ranklist_item _self_item = 4;
  inline bool has__self_item() const;
  inline void clear__self_item();
  static const int kSelfItemFieldNumber = 4;
  inline const ::client_baseserver::ranklist_item& _self_item() const;
  inline ::client_baseserver::ranklist_item* mutable__self_item();
  inline ::client_baseserver::ranklist_item* release__self_item();
  inline void set_allocated__self_item(::client_baseserver::ranklist_item* _self_item);

  // optional uint32 _self_prev_pos = 5;
  inline bool has__self_prev_pos() const;
  inline void clear__self_prev_pos();
  static const int kSelfPrevPosFieldNumber = 5;
  inline ::google::protobuf::uint32 _self_prev_pos() const;
  inline void set__self_prev_pos(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.query_ranklist_reply)
 private:
  inline void set_has__rank_type();
  inline void clear_has__rank_type();
  inline void set_has__self_ranking();
  inline void clear_has__self_ranking();
  inline void set_has__self_item();
  inline void clear_has__self_item();
  inline void set_has__self_prev_pos();
  inline void clear_has__self_prev_pos();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::ranklist_item > _ranklist_item_;
  int _rank_type_;
  ::google::protobuf::uint32 _self_ranking_;
  ::client_baseserver::ranklist_item* _self_item_;
  ::google::protobuf::uint32 _self_prev_pos_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static query_ranklist_reply* default_instance_;
};
// -------------------------------------------------------------------

class request_guild_log_reply : public ::google::protobuf::Message {
 public:
  request_guild_log_reply();
  virtual ~request_guild_log_reply();

  request_guild_log_reply(const request_guild_log_reply& from);

  inline request_guild_log_reply& operator=(const request_guild_log_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const request_guild_log_reply& default_instance();

  void Swap(request_guild_log_reply* other);

  // implements Message ----------------------------------------------

  request_guild_log_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const request_guild_log_reply& from);
  void MergeFrom(const request_guild_log_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .client_baseserver.guild_log _guild_log = 1;
  inline int _guild_log_size() const;
  inline void clear__guild_log();
  static const int kGuildLogFieldNumber = 1;
  inline const ::client_baseserver::guild_log& _guild_log(int index) const;
  inline ::client_baseserver::guild_log* mutable__guild_log(int index);
  inline ::client_baseserver::guild_log* add__guild_log();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_log >&
      _guild_log() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_log >*
      mutable__guild_log();

  // @@protoc_insertion_point(class_scope:client_baseserver.request_guild_log_reply)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_log > _guild_log_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static request_guild_log_reply* default_instance_;
};
// -------------------------------------------------------------------

class guild_log : public ::google::protobuf::Message {
 public:
  guild_log();
  virtual ~guild_log();

  guild_log(const guild_log& from);

  inline guild_log& operator=(const guild_log& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_log& default_instance();

  void Swap(guild_log* other);

  // implements Message ----------------------------------------------

  guild_log* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_log& from);
  void MergeFrom(const guild_log& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _id = 1;
  inline bool has__id() const;
  inline void clear__id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 _id() const;
  inline void set__id(::google::protobuf::uint32 value);

  // repeated .client_baseserver.guild_log_content _guild_log_content = 2;
  inline int _guild_log_content_size() const;
  inline void clear__guild_log_content();
  static const int kGuildLogContentFieldNumber = 2;
  inline const ::client_baseserver::guild_log_content& _guild_log_content(int index) const;
  inline ::client_baseserver::guild_log_content* mutable__guild_log_content(int index);
  inline ::client_baseserver::guild_log_content* add__guild_log_content();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_log_content >&
      _guild_log_content() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_log_content >*
      mutable__guild_log_content();

  // required uint32 _date = 3;
  inline bool has__date() const;
  inline void clear__date();
  static const int kDateFieldNumber = 3;
  inline ::google::protobuf::uint32 _date() const;
  inline void set__date(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_log)
 private:
  inline void set_has__id();
  inline void clear_has__id();
  inline void set_has__date();
  inline void clear_has__date();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_log_content > _guild_log_content_;
  ::google::protobuf::uint32 _id_;
  ::google::protobuf::uint32 _date_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_log* default_instance_;
};
// -------------------------------------------------------------------

class guild_log_content : public ::google::protobuf::Message {
 public:
  guild_log_content();
  virtual ~guild_log_content();

  guild_log_content(const guild_log_content& from);

  inline guild_log_content& operator=(const guild_log_content& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const guild_log_content& default_instance();

  void Swap(guild_log_content* other);

  // implements Message ----------------------------------------------

  guild_log_content* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const guild_log_content& from);
  void MergeFrom(const guild_log_content& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _time = 1;
  inline bool has__time() const;
  inline void clear__time();
  static const int kTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 _time() const;
  inline void set__time(::google::protobuf::uint32 value);

  // required string _content = 2;
  inline bool has__content() const;
  inline void clear__content();
  static const int kContentFieldNumber = 2;
  inline const ::std::string& _content() const;
  inline void set__content(const ::std::string& value);
  inline void set__content(const char* value);
  inline void set__content(const char* value, size_t size);
  inline ::std::string* mutable__content();
  inline ::std::string* release__content();
  inline void set_allocated__content(::std::string* _content);

  // @@protoc_insertion_point(class_scope:client_baseserver.guild_log_content)
 private:
  inline void set_has__time();
  inline void clear_has__time();
  inline void set_has__content();
  inline void clear_has__content();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* _content_;
  ::google::protobuf::uint32 _time_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static guild_log_content* default_instance_;
};
// -------------------------------------------------------------------

class client_update_version : public ::google::protobuf::Message {
 public:
  client_update_version();
  virtual ~client_update_version();

  client_update_version(const client_update_version& from);

  inline client_update_version& operator=(const client_update_version& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const client_update_version& default_instance();

  void Swap(client_update_version* other);

  // implements Message ----------------------------------------------

  client_update_version* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const client_update_version& from);
  void MergeFrom(const client_update_version& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _version = 1;
  inline bool has__version() const;
  inline void clear__version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::uint32 _version() const;
  inline void set__version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.client_update_version)
 private:
  inline void set_has__version();
  inline void clear_has__version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _version_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static client_update_version* default_instance_;
};
// -------------------------------------------------------------------

class query_act_stage_reply : public ::google::protobuf::Message {
 public:
  query_act_stage_reply();
  virtual ~query_act_stage_reply();

  query_act_stage_reply(const query_act_stage_reply& from);

  inline query_act_stage_reply& operator=(const query_act_stage_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const query_act_stage_reply& default_instance();

  void Swap(query_act_stage_reply* other);

  // implements Message ----------------------------------------------

  query_act_stage_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const query_act_stage_reply& from);
  void MergeFrom(const query_act_stage_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 _opened_act_stage = 1;
  inline int _opened_act_stage_size() const;
  inline void clear__opened_act_stage();
  static const int kOpenedActStageFieldNumber = 1;
  inline ::google::protobuf::uint32 _opened_act_stage(int index) const;
  inline void set__opened_act_stage(int index, ::google::protobuf::uint32 value);
  inline void add__opened_act_stage(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _opened_act_stage() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__opened_act_stage();

  // @@protoc_insertion_point(class_scope:client_baseserver.query_act_stage_reply)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _opened_act_stage_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static query_act_stage_reply* default_instance_;
};
// -------------------------------------------------------------------

class fb_attention_reply : public ::google::protobuf::Message {
 public:
  fb_attention_reply();
  virtual ~fb_attention_reply();

  fb_attention_reply(const fb_attention_reply& from);

  inline fb_attention_reply& operator=(const fb_attention_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const fb_attention_reply& default_instance();

  void Swap(fb_attention_reply* other);

  // implements Message ----------------------------------------------

  fb_attention_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const fb_attention_reply& from);
  void MergeFrom(const fb_attention_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _attention = 1;
  inline bool has__attention() const;
  inline void clear__attention();
  static const int kAttentionFieldNumber = 1;
  inline ::google::protobuf::uint32 _attention() const;
  inline void set__attention(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.fb_attention_reply)
 private:
  inline void set_has__attention();
  inline void clear_has__attention();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _attention_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static fb_attention_reply* default_instance_;
};
// -------------------------------------------------------------------

class continue_pay_reply : public ::google::protobuf::Message {
 public:
  continue_pay_reply();
  virtual ~continue_pay_reply();

  continue_pay_reply(const continue_pay_reply& from);

  inline continue_pay_reply& operator=(const continue_pay_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const continue_pay_reply& default_instance();

  void Swap(continue_pay_reply* other);

  // implements Message ----------------------------------------------

  continue_pay_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const continue_pay_reply& from);
  void MergeFrom(const continue_pay_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _time = 1;
  inline bool has__time() const;
  inline void clear__time();
  static const int kTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 _time() const;
  inline void set__time(::google::protobuf::uint32 value);

  // repeated uint32 _status = 2;
  inline int _status_size() const;
  inline void clear__status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 _status(int index) const;
  inline void set__status(int index, ::google::protobuf::uint32 value);
  inline void add__status(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _status() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__status();

  // @@protoc_insertion_point(class_scope:client_baseserver.continue_pay_reply)
 private:
  inline void set_has__time();
  inline void clear_has__time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _status_;
  ::google::protobuf::uint32 _time_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static continue_pay_reply* default_instance_;
};
// -------------------------------------------------------------------

class recharge_rebate_reply : public ::google::protobuf::Message {
 public:
  recharge_rebate_reply();
  virtual ~recharge_rebate_reply();

  recharge_rebate_reply(const recharge_rebate_reply& from);

  inline recharge_rebate_reply& operator=(const recharge_rebate_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const recharge_rebate_reply& default_instance();

  void Swap(recharge_rebate_reply* other);

  // implements Message ----------------------------------------------

  recharge_rebate_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const recharge_rebate_reply& from);
  void MergeFrom(const recharge_rebate_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _time = 1;
  inline bool has__time() const;
  inline void clear__time();
  static const int kTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 _time() const;
  inline void set__time(::google::protobuf::uint32 value);

  // required uint32 _status = 2;
  inline bool has__status() const;
  inline void clear__status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 _status() const;
  inline void set__status(::google::protobuf::uint32 value);

  // required uint32 _recharge_money = 3;
  inline bool has__recharge_money() const;
  inline void clear__recharge_money();
  static const int kRechargeMoneyFieldNumber = 3;
  inline ::google::protobuf::uint32 _recharge_money() const;
  inline void set__recharge_money(::google::protobuf::uint32 value);

  // optional uint32 _get_day = 4;
  inline bool has__get_day() const;
  inline void clear__get_day();
  static const int kGetDayFieldNumber = 4;
  inline ::google::protobuf::uint32 _get_day() const;
  inline void set__get_day(::google::protobuf::uint32 value);

  // optional uint32 _get_status = 5;
  inline bool has__get_status() const;
  inline void clear__get_status();
  static const int kGetStatusFieldNumber = 5;
  inline ::google::protobuf::uint32 _get_status() const;
  inline void set__get_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:client_baseserver.recharge_rebate_reply)
 private:
  inline void set_has__time();
  inline void clear_has__time();
  inline void set_has__status();
  inline void clear_has__status();
  inline void set_has__recharge_money();
  inline void clear_has__recharge_money();
  inline void set_has__get_day();
  inline void clear_has__get_day();
  inline void set_has__get_status();
  inline void clear_has__get_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _time_;
  ::google::protobuf::uint32 _status_;
  ::google::protobuf::uint32 _recharge_money_;
  ::google::protobuf::uint32 _get_day_;
  ::google::protobuf::uint32 _get_status_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static recharge_rebate_reply* default_instance_;
};
// -------------------------------------------------------------------

class every_day_happy_reply : public ::google::protobuf::Message {
 public:
  every_day_happy_reply();
  virtual ~every_day_happy_reply();

  every_day_happy_reply(const every_day_happy_reply& from);

  inline every_day_happy_reply& operator=(const every_day_happy_reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const every_day_happy_reply& default_instance();

  void Swap(every_day_happy_reply* other);

  // implements Message ----------------------------------------------

  every_day_happy_reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const every_day_happy_reply& from);
  void MergeFrom(const every_day_happy_reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _status = 5;
  inline bool has__status() const;
  inline void clear__status();
  static const int kStatusFieldNumber = 5;
  inline ::google::protobuf::uint32 _status() const;
  inline void set__status(::google::protobuf::uint32 value);

  // required uint32 _goldcard_number = 1;
  inline bool has__goldcard_number() const;
  inline void clear__goldcard_number();
  static const int kGoldcardNumberFieldNumber = 1;
  inline ::google::protobuf::uint32 _goldcard_number() const;
  inline void set__goldcard_number(::google::protobuf::uint32 value);

  // required uint32 _silvercard_number = 2;
  inline bool has__silvercard_number() const;
  inline void clear__silvercard_number();
  static const int kSilvercardNumberFieldNumber = 2;
  inline ::google::protobuf::uint32 _silvercard_number() const;
  inline void set__silvercard_number(::google::protobuf::uint32 value);

  // required uint32 _coppercard_number = 3;
  inline bool has__coppercard_number() const;
  inline void clear__coppercard_number();
  static const int kCoppercardNumberFieldNumber = 3;
  inline ::google::protobuf::uint32 _coppercard_number() const;
  inline void set__coppercard_number(::google::protobuf::uint32 value);

  // repeated .client_baseserver.activity_reward _rewards = 4;
  inline int _rewards_size() const;
  inline void clear__rewards();
  static const int kRewardsFieldNumber = 4;
  inline const ::client_baseserver::activity_reward& _rewards(int index) const;
  inline ::client_baseserver::activity_reward* mutable__rewards(int index);
  inline ::client_baseserver::activity_reward* add__rewards();
  inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::activity_reward >&
      _rewards() const;
  inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::activity_reward >*
      mutable__rewards();

  // @@protoc_insertion_point(class_scope:client_baseserver.every_day_happy_reply)
 private:
  inline void set_has__status();
  inline void clear_has__status();
  inline void set_has__goldcard_number();
  inline void clear_has__goldcard_number();
  inline void set_has__silvercard_number();
  inline void clear_has__silvercard_number();
  inline void set_has__coppercard_number();
  inline void clear_has__coppercard_number();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 _status_;
  ::google::protobuf::uint32 _goldcard_number_;
  ::google::protobuf::uint32 _silvercard_number_;
  ::google::protobuf::uint32 _coppercard_number_;
  ::google::protobuf::RepeatedPtrField< ::client_baseserver::activity_reward > _rewards_;
  friend void  protobuf_AddDesc_cb_2eproto();
  friend void protobuf_AssignDesc_cb_2eproto();
  friend void protobuf_ShutdownFile_cb_2eproto();

  void InitAsDefaultInstance();
  static every_day_happy_reply* default_instance_;
};
// ===================================================================


// ===================================================================

// Hello

// optional uint32 version = 1;
inline bool Hello::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Hello::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Hello::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Hello::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 Hello::version() const {
  // @@protoc_insertion_point(field_get:client_baseserver.Hello.version)
  return version_;
}
inline void Hello::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.Hello.version)
}

// optional string extraData = 2;
inline bool Hello::has_extradata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Hello::set_has_extradata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Hello::clear_has_extradata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Hello::clear_extradata() {
  if (extradata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extradata_->clear();
  }
  clear_has_extradata();
}
inline const ::std::string& Hello::extradata() const {
  // @@protoc_insertion_point(field_get:client_baseserver.Hello.extraData)
  return *extradata_;
}
inline void Hello::set_extradata(const ::std::string& value) {
  set_has_extradata();
  if (extradata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extradata_ = new ::std::string;
  }
  extradata_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.Hello.extraData)
}
inline void Hello::set_extradata(const char* value) {
  set_has_extradata();
  if (extradata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extradata_ = new ::std::string;
  }
  extradata_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.Hello.extraData)
}
inline void Hello::set_extradata(const char* value, size_t size) {
  set_has_extradata();
  if (extradata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extradata_ = new ::std::string;
  }
  extradata_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.Hello.extraData)
}
inline ::std::string* Hello::mutable_extradata() {
  set_has_extradata();
  if (extradata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extradata_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.Hello.extraData)
  return extradata_;
}
inline ::std::string* Hello::release_extradata() {
  clear_has_extradata();
  if (extradata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = extradata_;
    extradata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Hello::set_allocated_extradata(::std::string* extradata) {
  if (extradata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete extradata_;
  }
  if (extradata) {
    set_has_extradata();
    extradata_ = extradata;
  } else {
    clear_has_extradata();
    extradata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.Hello.extraData)
}

// -------------------------------------------------------------------

// HelloCB

// optional uint32 result = 1;
inline bool HelloCB::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HelloCB::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HelloCB::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HelloCB::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 HelloCB::result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.HelloCB.result)
  return result_;
}
inline void HelloCB::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.HelloCB.result)
}

// optional uint32 version = 2;
inline bool HelloCB::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HelloCB::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HelloCB::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HelloCB::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 HelloCB::version() const {
  // @@protoc_insertion_point(field_get:client_baseserver.HelloCB.version)
  return version_;
}
inline void HelloCB::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.HelloCB.version)
}

// optional string extraData = 3;
inline bool HelloCB::has_extradata() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HelloCB::set_has_extradata() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HelloCB::clear_has_extradata() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HelloCB::clear_extradata() {
  if (extradata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extradata_->clear();
  }
  clear_has_extradata();
}
inline const ::std::string& HelloCB::extradata() const {
  // @@protoc_insertion_point(field_get:client_baseserver.HelloCB.extraData)
  return *extradata_;
}
inline void HelloCB::set_extradata(const ::std::string& value) {
  set_has_extradata();
  if (extradata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extradata_ = new ::std::string;
  }
  extradata_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.HelloCB.extraData)
}
inline void HelloCB::set_extradata(const char* value) {
  set_has_extradata();
  if (extradata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extradata_ = new ::std::string;
  }
  extradata_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.HelloCB.extraData)
}
inline void HelloCB::set_extradata(const char* value, size_t size) {
  set_has_extradata();
  if (extradata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extradata_ = new ::std::string;
  }
  extradata_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.HelloCB.extraData)
}
inline ::std::string* HelloCB::mutable_extradata() {
  set_has_extradata();
  if (extradata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extradata_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.HelloCB.extraData)
  return extradata_;
}
inline ::std::string* HelloCB::release_extradata() {
  clear_has_extradata();
  if (extradata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = extradata_;
    extradata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HelloCB::set_allocated_extradata(::std::string* extradata) {
  if (extradata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete extradata_;
  }
  if (extradata) {
    set_has_extradata();
    extradata_ = extradata;
  } else {
    clear_has_extradata();
    extradata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.HelloCB.extraData)
}

// -------------------------------------------------------------------

// Login

// optional string account = 1;
inline bool Login::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Login::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Login::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Login::clear_account() {
  if (account_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& Login::account() const {
  // @@protoc_insertion_point(field_get:client_baseserver.Login.account)
  return *account_;
}
inline void Login::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  account_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.Login.account)
}
inline void Login::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  account_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.Login.account)
}
inline void Login::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.Login.account)
}
inline ::std::string* Login::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.Login.account)
  return account_;
}
inline ::std::string* Login::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Login::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.Login.account)
}

// optional string password = 2;
inline bool Login::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Login::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Login::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Login::clear_password() {
  if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_->clear();
  }
  clear_has_password();
}
inline const ::std::string& Login::password() const {
  // @@protoc_insertion_point(field_get:client_baseserver.Login.password)
  return *password_;
}
inline void Login::set_password(const ::std::string& value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.Login.password)
}
inline void Login::set_password(const char* value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.Login.password)
}
inline void Login::set_password(const char* value, size_t size) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.Login.password)
}
inline ::std::string* Login::mutable_password() {
  set_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    password_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.Login.password)
  return password_;
}
inline ::std::string* Login::release_password() {
  clear_has_password();
  if (password_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = password_;
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Login::set_allocated_password(::std::string* password) {
  if (password_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete password_;
  }
  if (password) {
    set_has_password();
    password_ = password;
  } else {
    clear_has_password();
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.Login.password)
}

// -------------------------------------------------------------------

// LoginBaseappFailed

// optional uint32 retCode = 1;
inline bool LoginBaseappFailed::has_retcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginBaseappFailed::set_has_retcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginBaseappFailed::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginBaseappFailed::clear_retcode() {
  retcode_ = 0u;
  clear_has_retcode();
}
inline ::google::protobuf::uint32 LoginBaseappFailed::retcode() const {
  // @@protoc_insertion_point(field_get:client_baseserver.LoginBaseappFailed.retCode)
  return retcode_;
}
inline void LoginBaseappFailed::set_retcode(::google::protobuf::uint32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.LoginBaseappFailed.retCode)
}

// -------------------------------------------------------------------

// CreatedProxies

// optional int32 entityID = 1;
inline bool CreatedProxies::has_entityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreatedProxies::set_has_entityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreatedProxies::clear_has_entityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreatedProxies::clear_entityid() {
  entityid_ = 0;
  clear_has_entityid();
}
inline ::google::protobuf::int32 CreatedProxies::entityid() const {
  // @@protoc_insertion_point(field_get:client_baseserver.CreatedProxies.entityID)
  return entityid_;
}
inline void CreatedProxies::set_entityid(::google::protobuf::int32 value) {
  set_has_entityid();
  entityid_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.CreatedProxies.entityID)
}

// -------------------------------------------------------------------

// hire_data

// required uint32 _uid = 1;
inline bool hire_data::has__uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void hire_data::set_has__uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void hire_data::clear_has__uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void hire_data::clear__uid() {
  _uid_ = 0u;
  clear_has__uid();
}
inline ::google::protobuf::uint32 hire_data::_uid() const {
  // @@protoc_insertion_point(field_get:client_baseserver.hire_data._uid)
  return _uid_;
}
inline void hire_data::set__uid(::google::protobuf::uint32 value) {
  set_has__uid();
  _uid_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.hire_data._uid)
}

// required string _name = 2;
inline bool hire_data::has__name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void hire_data::set_has__name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void hire_data::clear_has__name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void hire_data::clear__name() {
  if (_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _name_->clear();
  }
  clear_has__name();
}
inline const ::std::string& hire_data::_name() const {
  // @@protoc_insertion_point(field_get:client_baseserver.hire_data._name)
  return *_name_;
}
inline void hire_data::set__name(const ::std::string& value) {
  set_has__name();
  if (_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _name_ = new ::std::string;
  }
  _name_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.hire_data._name)
}
inline void hire_data::set__name(const char* value) {
  set_has__name();
  if (_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _name_ = new ::std::string;
  }
  _name_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.hire_data._name)
}
inline void hire_data::set__name(const char* value, size_t size) {
  set_has__name();
  if (_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _name_ = new ::std::string;
  }
  _name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.hire_data._name)
}
inline ::std::string* hire_data::mutable__name() {
  set_has__name();
  if (_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.hire_data._name)
  return _name_;
}
inline ::std::string* hire_data::release__name() {
  clear_has__name();
  if (_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = _name_;
    _name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void hire_data::set_allocated__name(::std::string* _name) {
  if (_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete _name_;
  }
  if (_name) {
    set_has__name();
    _name_ = _name;
  } else {
    clear_has__name();
    _name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.hire_data._name)
}

// required .client_baseserver.hire_hero _hero = 3;
inline bool hire_data::has__hero() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void hire_data::set_has__hero() {
  _has_bits_[0] |= 0x00000004u;
}
inline void hire_data::clear_has__hero() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void hire_data::clear__hero() {
  if (_hero_ != NULL) _hero_->::client_baseserver::hire_hero::Clear();
  clear_has__hero();
}
inline const ::client_baseserver::hire_hero& hire_data::_hero() const {
  // @@protoc_insertion_point(field_get:client_baseserver.hire_data._hero)
  return _hero_ != NULL ? *_hero_ : *default_instance_->_hero_;
}
inline ::client_baseserver::hire_hero* hire_data::mutable__hero() {
  set_has__hero();
  if (_hero_ == NULL) _hero_ = new ::client_baseserver::hire_hero;
  // @@protoc_insertion_point(field_mutable:client_baseserver.hire_data._hero)
  return _hero_;
}
inline ::client_baseserver::hire_hero* hire_data::release__hero() {
  clear_has__hero();
  ::client_baseserver::hire_hero* temp = _hero_;
  _hero_ = NULL;
  return temp;
}
inline void hire_data::set_allocated__hero(::client_baseserver::hire_hero* _hero) {
  delete _hero_;
  _hero_ = _hero;
  if (_hero) {
    set_has__hero();
  } else {
    clear_has__hero();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.hire_data._hero)
}

// -------------------------------------------------------------------

// hire_hero

// required .client_baseserver.hero _base = 1;
inline bool hire_hero::has__base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void hire_hero::set_has__base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void hire_hero::clear_has__base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void hire_hero::clear__base() {
  if (_base_ != NULL) _base_->::client_baseserver::hero::Clear();
  clear_has__base();
}
inline const ::client_baseserver::hero& hire_hero::_base() const {
  // @@protoc_insertion_point(field_get:client_baseserver.hire_hero._base)
  return _base_ != NULL ? *_base_ : *default_instance_->_base_;
}
inline ::client_baseserver::hero* hire_hero::mutable__base() {
  set_has__base();
  if (_base_ == NULL) _base_ = new ::client_baseserver::hero;
  // @@protoc_insertion_point(field_mutable:client_baseserver.hire_hero._base)
  return _base_;
}
inline ::client_baseserver::hero* hire_hero::release__base() {
  clear_has__base();
  ::client_baseserver::hero* temp = _base_;
  _base_ = NULL;
  return temp;
}
inline void hire_hero::set_allocated__base(::client_baseserver::hero* _base) {
  delete _base_;
  _base_ = _base;
  if (_base) {
    set_has__base();
  } else {
    clear_has__base();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.hire_hero._base)
}

// required .client_baseserver.hero_dyna _dyna = 2;
inline bool hire_hero::has__dyna() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void hire_hero::set_has__dyna() {
  _has_bits_[0] |= 0x00000002u;
}
inline void hire_hero::clear_has__dyna() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void hire_hero::clear__dyna() {
  if (_dyna_ != NULL) _dyna_->::client_baseserver::hero_dyna::Clear();
  clear_has__dyna();
}
inline const ::client_baseserver::hero_dyna& hire_hero::_dyna() const {
  // @@protoc_insertion_point(field_get:client_baseserver.hire_hero._dyna)
  return _dyna_ != NULL ? *_dyna_ : *default_instance_->_dyna_;
}
inline ::client_baseserver::hero_dyna* hire_hero::mutable__dyna() {
  set_has__dyna();
  if (_dyna_ == NULL) _dyna_ = new ::client_baseserver::hero_dyna;
  // @@protoc_insertion_point(field_mutable:client_baseserver.hire_hero._dyna)
  return _dyna_;
}
inline ::client_baseserver::hero_dyna* hire_hero::release__dyna() {
  clear_has__dyna();
  ::client_baseserver::hero_dyna* temp = _dyna_;
  _dyna_ = NULL;
  return temp;
}
inline void hire_hero::set_allocated__dyna(::client_baseserver::hero_dyna* _dyna) {
  delete _dyna_;
  _dyna_ = _dyna;
  if (_dyna) {
    set_has__dyna();
  } else {
    clear_has__dyna();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.hire_hero._dyna)
}

// -------------------------------------------------------------------

// down_msg

// optional .client_baseserver.login_reply _login_reply = 1;
inline bool down_msg::has__login_reply() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void down_msg::set_has__login_reply() {
  _has_bits_[0] |= 0x00000001u;
}
inline void down_msg::clear_has__login_reply() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void down_msg::clear__login_reply() {
  if (_login_reply_ != NULL) _login_reply_->::client_baseserver::login_reply::Clear();
  clear_has__login_reply();
}
inline const ::client_baseserver::login_reply& down_msg::_login_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._login_reply)
  return _login_reply_ != NULL ? *_login_reply_ : *default_instance_->_login_reply_;
}
inline ::client_baseserver::login_reply* down_msg::mutable__login_reply() {
  set_has__login_reply();
  if (_login_reply_ == NULL) _login_reply_ = new ::client_baseserver::login_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._login_reply)
  return _login_reply_;
}
inline ::client_baseserver::login_reply* down_msg::release__login_reply() {
  clear_has__login_reply();
  ::client_baseserver::login_reply* temp = _login_reply_;
  _login_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__login_reply(::client_baseserver::login_reply* _login_reply) {
  delete _login_reply_;
  _login_reply_ = _login_reply;
  if (_login_reply) {
    set_has__login_reply();
  } else {
    clear_has__login_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._login_reply)
}

// optional .client_baseserver.reset _reset = 2;
inline bool down_msg::has__reset() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void down_msg::set_has__reset() {
  _has_bits_[0] |= 0x00000002u;
}
inline void down_msg::clear_has__reset() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void down_msg::clear__reset() {
  if (_reset_ != NULL) _reset_->::client_baseserver::reset::Clear();
  clear_has__reset();
}
inline const ::client_baseserver::reset& down_msg::_reset() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._reset)
  return _reset_ != NULL ? *_reset_ : *default_instance_->_reset_;
}
inline ::client_baseserver::reset* down_msg::mutable__reset() {
  set_has__reset();
  if (_reset_ == NULL) _reset_ = new ::client_baseserver::reset;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._reset)
  return _reset_;
}
inline ::client_baseserver::reset* down_msg::release__reset() {
  clear_has__reset();
  ::client_baseserver::reset* temp = _reset_;
  _reset_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__reset(::client_baseserver::reset* _reset) {
  delete _reset_;
  _reset_ = _reset;
  if (_reset) {
    set_has__reset();
  } else {
    clear_has__reset();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._reset)
}

// optional .client_baseserver.enter_stage_reply _enter_stage_reply = 3;
inline bool down_msg::has__enter_stage_reply() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void down_msg::set_has__enter_stage_reply() {
  _has_bits_[0] |= 0x00000004u;
}
inline void down_msg::clear_has__enter_stage_reply() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void down_msg::clear__enter_stage_reply() {
  if (_enter_stage_reply_ != NULL) _enter_stage_reply_->::client_baseserver::enter_stage_reply::Clear();
  clear_has__enter_stage_reply();
}
inline const ::client_baseserver::enter_stage_reply& down_msg::_enter_stage_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._enter_stage_reply)
  return _enter_stage_reply_ != NULL ? *_enter_stage_reply_ : *default_instance_->_enter_stage_reply_;
}
inline ::client_baseserver::enter_stage_reply* down_msg::mutable__enter_stage_reply() {
  set_has__enter_stage_reply();
  if (_enter_stage_reply_ == NULL) _enter_stage_reply_ = new ::client_baseserver::enter_stage_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._enter_stage_reply)
  return _enter_stage_reply_;
}
inline ::client_baseserver::enter_stage_reply* down_msg::release__enter_stage_reply() {
  clear_has__enter_stage_reply();
  ::client_baseserver::enter_stage_reply* temp = _enter_stage_reply_;
  _enter_stage_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__enter_stage_reply(::client_baseserver::enter_stage_reply* _enter_stage_reply) {
  delete _enter_stage_reply_;
  _enter_stage_reply_ = _enter_stage_reply;
  if (_enter_stage_reply) {
    set_has__enter_stage_reply();
  } else {
    clear_has__enter_stage_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._enter_stage_reply)
}

// optional .client_baseserver.exit_stage_reply _exit_stage_reply = 4;
inline bool down_msg::has__exit_stage_reply() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void down_msg::set_has__exit_stage_reply() {
  _has_bits_[0] |= 0x00000008u;
}
inline void down_msg::clear_has__exit_stage_reply() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void down_msg::clear__exit_stage_reply() {
  if (_exit_stage_reply_ != NULL) _exit_stage_reply_->::client_baseserver::exit_stage_reply::Clear();
  clear_has__exit_stage_reply();
}
inline const ::client_baseserver::exit_stage_reply& down_msg::_exit_stage_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._exit_stage_reply)
  return _exit_stage_reply_ != NULL ? *_exit_stage_reply_ : *default_instance_->_exit_stage_reply_;
}
inline ::client_baseserver::exit_stage_reply* down_msg::mutable__exit_stage_reply() {
  set_has__exit_stage_reply();
  if (_exit_stage_reply_ == NULL) _exit_stage_reply_ = new ::client_baseserver::exit_stage_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._exit_stage_reply)
  return _exit_stage_reply_;
}
inline ::client_baseserver::exit_stage_reply* down_msg::release__exit_stage_reply() {
  clear_has__exit_stage_reply();
  ::client_baseserver::exit_stage_reply* temp = _exit_stage_reply_;
  _exit_stage_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__exit_stage_reply(::client_baseserver::exit_stage_reply* _exit_stage_reply) {
  delete _exit_stage_reply_;
  _exit_stage_reply_ = _exit_stage_reply;
  if (_exit_stage_reply) {
    set_has__exit_stage_reply();
  } else {
    clear_has__exit_stage_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._exit_stage_reply)
}

// optional .client_baseserver.hero_upgrade_reply _hero_upgrade_reply = 5;
inline bool down_msg::has__hero_upgrade_reply() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void down_msg::set_has__hero_upgrade_reply() {
  _has_bits_[0] |= 0x00000010u;
}
inline void down_msg::clear_has__hero_upgrade_reply() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void down_msg::clear__hero_upgrade_reply() {
  if (_hero_upgrade_reply_ != NULL) _hero_upgrade_reply_->::client_baseserver::hero_upgrade_reply::Clear();
  clear_has__hero_upgrade_reply();
}
inline const ::client_baseserver::hero_upgrade_reply& down_msg::_hero_upgrade_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._hero_upgrade_reply)
  return _hero_upgrade_reply_ != NULL ? *_hero_upgrade_reply_ : *default_instance_->_hero_upgrade_reply_;
}
inline ::client_baseserver::hero_upgrade_reply* down_msg::mutable__hero_upgrade_reply() {
  set_has__hero_upgrade_reply();
  if (_hero_upgrade_reply_ == NULL) _hero_upgrade_reply_ = new ::client_baseserver::hero_upgrade_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._hero_upgrade_reply)
  return _hero_upgrade_reply_;
}
inline ::client_baseserver::hero_upgrade_reply* down_msg::release__hero_upgrade_reply() {
  clear_has__hero_upgrade_reply();
  ::client_baseserver::hero_upgrade_reply* temp = _hero_upgrade_reply_;
  _hero_upgrade_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__hero_upgrade_reply(::client_baseserver::hero_upgrade_reply* _hero_upgrade_reply) {
  delete _hero_upgrade_reply_;
  _hero_upgrade_reply_ = _hero_upgrade_reply;
  if (_hero_upgrade_reply) {
    set_has__hero_upgrade_reply();
  } else {
    clear_has__hero_upgrade_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._hero_upgrade_reply)
}

// optional .client_baseserver.equip_synthesis_reply _equip_synthesis_reply = 6;
inline bool down_msg::has__equip_synthesis_reply() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void down_msg::set_has__equip_synthesis_reply() {
  _has_bits_[0] |= 0x00000020u;
}
inline void down_msg::clear_has__equip_synthesis_reply() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void down_msg::clear__equip_synthesis_reply() {
  if (_equip_synthesis_reply_ != NULL) _equip_synthesis_reply_->::client_baseserver::equip_synthesis_reply::Clear();
  clear_has__equip_synthesis_reply();
}
inline const ::client_baseserver::equip_synthesis_reply& down_msg::_equip_synthesis_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._equip_synthesis_reply)
  return _equip_synthesis_reply_ != NULL ? *_equip_synthesis_reply_ : *default_instance_->_equip_synthesis_reply_;
}
inline ::client_baseserver::equip_synthesis_reply* down_msg::mutable__equip_synthesis_reply() {
  set_has__equip_synthesis_reply();
  if (_equip_synthesis_reply_ == NULL) _equip_synthesis_reply_ = new ::client_baseserver::equip_synthesis_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._equip_synthesis_reply)
  return _equip_synthesis_reply_;
}
inline ::client_baseserver::equip_synthesis_reply* down_msg::release__equip_synthesis_reply() {
  clear_has__equip_synthesis_reply();
  ::client_baseserver::equip_synthesis_reply* temp = _equip_synthesis_reply_;
  _equip_synthesis_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__equip_synthesis_reply(::client_baseserver::equip_synthesis_reply* _equip_synthesis_reply) {
  delete _equip_synthesis_reply_;
  _equip_synthesis_reply_ = _equip_synthesis_reply;
  if (_equip_synthesis_reply) {
    set_has__equip_synthesis_reply();
  } else {
    clear_has__equip_synthesis_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._equip_synthesis_reply)
}

// optional .client_baseserver.wear_equip_reply _wear_equip_reply = 7;
inline bool down_msg::has__wear_equip_reply() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void down_msg::set_has__wear_equip_reply() {
  _has_bits_[0] |= 0x00000040u;
}
inline void down_msg::clear_has__wear_equip_reply() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void down_msg::clear__wear_equip_reply() {
  if (_wear_equip_reply_ != NULL) _wear_equip_reply_->::client_baseserver::wear_equip_reply::Clear();
  clear_has__wear_equip_reply();
}
inline const ::client_baseserver::wear_equip_reply& down_msg::_wear_equip_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._wear_equip_reply)
  return _wear_equip_reply_ != NULL ? *_wear_equip_reply_ : *default_instance_->_wear_equip_reply_;
}
inline ::client_baseserver::wear_equip_reply* down_msg::mutable__wear_equip_reply() {
  set_has__wear_equip_reply();
  if (_wear_equip_reply_ == NULL) _wear_equip_reply_ = new ::client_baseserver::wear_equip_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._wear_equip_reply)
  return _wear_equip_reply_;
}
inline ::client_baseserver::wear_equip_reply* down_msg::release__wear_equip_reply() {
  clear_has__wear_equip_reply();
  ::client_baseserver::wear_equip_reply* temp = _wear_equip_reply_;
  _wear_equip_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__wear_equip_reply(::client_baseserver::wear_equip_reply* _wear_equip_reply) {
  delete _wear_equip_reply_;
  _wear_equip_reply_ = _wear_equip_reply;
  if (_wear_equip_reply) {
    set_has__wear_equip_reply();
  } else {
    clear_has__wear_equip_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._wear_equip_reply)
}

// optional .client_baseserver.consume_item_reply _consume_item_reply = 8;
inline bool down_msg::has__consume_item_reply() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void down_msg::set_has__consume_item_reply() {
  _has_bits_[0] |= 0x00000080u;
}
inline void down_msg::clear_has__consume_item_reply() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void down_msg::clear__consume_item_reply() {
  if (_consume_item_reply_ != NULL) _consume_item_reply_->::client_baseserver::consume_item_reply::Clear();
  clear_has__consume_item_reply();
}
inline const ::client_baseserver::consume_item_reply& down_msg::_consume_item_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._consume_item_reply)
  return _consume_item_reply_ != NULL ? *_consume_item_reply_ : *default_instance_->_consume_item_reply_;
}
inline ::client_baseserver::consume_item_reply* down_msg::mutable__consume_item_reply() {
  set_has__consume_item_reply();
  if (_consume_item_reply_ == NULL) _consume_item_reply_ = new ::client_baseserver::consume_item_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._consume_item_reply)
  return _consume_item_reply_;
}
inline ::client_baseserver::consume_item_reply* down_msg::release__consume_item_reply() {
  clear_has__consume_item_reply();
  ::client_baseserver::consume_item_reply* temp = _consume_item_reply_;
  _consume_item_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__consume_item_reply(::client_baseserver::consume_item_reply* _consume_item_reply) {
  delete _consume_item_reply_;
  _consume_item_reply_ = _consume_item_reply;
  if (_consume_item_reply) {
    set_has__consume_item_reply();
  } else {
    clear_has__consume_item_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._consume_item_reply)
}

// optional .client_baseserver.user_shop _shop_refresh_reply = 9;
inline bool down_msg::has__shop_refresh_reply() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void down_msg::set_has__shop_refresh_reply() {
  _has_bits_[0] |= 0x00000100u;
}
inline void down_msg::clear_has__shop_refresh_reply() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void down_msg::clear__shop_refresh_reply() {
  if (_shop_refresh_reply_ != NULL) _shop_refresh_reply_->::client_baseserver::user_shop::Clear();
  clear_has__shop_refresh_reply();
}
inline const ::client_baseserver::user_shop& down_msg::_shop_refresh_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._shop_refresh_reply)
  return _shop_refresh_reply_ != NULL ? *_shop_refresh_reply_ : *default_instance_->_shop_refresh_reply_;
}
inline ::client_baseserver::user_shop* down_msg::mutable__shop_refresh_reply() {
  set_has__shop_refresh_reply();
  if (_shop_refresh_reply_ == NULL) _shop_refresh_reply_ = new ::client_baseserver::user_shop;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._shop_refresh_reply)
  return _shop_refresh_reply_;
}
inline ::client_baseserver::user_shop* down_msg::release__shop_refresh_reply() {
  clear_has__shop_refresh_reply();
  ::client_baseserver::user_shop* temp = _shop_refresh_reply_;
  _shop_refresh_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__shop_refresh_reply(::client_baseserver::user_shop* _shop_refresh_reply) {
  delete _shop_refresh_reply_;
  _shop_refresh_reply_ = _shop_refresh_reply;
  if (_shop_refresh_reply) {
    set_has__shop_refresh_reply();
  } else {
    clear_has__shop_refresh_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._shop_refresh_reply)
}

// optional .client_baseserver.shop_consume_reply _shop_consume_reply = 10;
inline bool down_msg::has__shop_consume_reply() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void down_msg::set_has__shop_consume_reply() {
  _has_bits_[0] |= 0x00000200u;
}
inline void down_msg::clear_has__shop_consume_reply() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void down_msg::clear__shop_consume_reply() {
  if (_shop_consume_reply_ != NULL) _shop_consume_reply_->::client_baseserver::shop_consume_reply::Clear();
  clear_has__shop_consume_reply();
}
inline const ::client_baseserver::shop_consume_reply& down_msg::_shop_consume_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._shop_consume_reply)
  return _shop_consume_reply_ != NULL ? *_shop_consume_reply_ : *default_instance_->_shop_consume_reply_;
}
inline ::client_baseserver::shop_consume_reply* down_msg::mutable__shop_consume_reply() {
  set_has__shop_consume_reply();
  if (_shop_consume_reply_ == NULL) _shop_consume_reply_ = new ::client_baseserver::shop_consume_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._shop_consume_reply)
  return _shop_consume_reply_;
}
inline ::client_baseserver::shop_consume_reply* down_msg::release__shop_consume_reply() {
  clear_has__shop_consume_reply();
  ::client_baseserver::shop_consume_reply* temp = _shop_consume_reply_;
  _shop_consume_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__shop_consume_reply(::client_baseserver::shop_consume_reply* _shop_consume_reply) {
  delete _shop_consume_reply_;
  _shop_consume_reply_ = _shop_consume_reply;
  if (_shop_consume_reply) {
    set_has__shop_consume_reply();
  } else {
    clear_has__shop_consume_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._shop_consume_reply)
}

// optional .client_baseserver.skill_levelup_reply _skill_levelup_reply = 11;
inline bool down_msg::has__skill_levelup_reply() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void down_msg::set_has__skill_levelup_reply() {
  _has_bits_[0] |= 0x00000400u;
}
inline void down_msg::clear_has__skill_levelup_reply() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void down_msg::clear__skill_levelup_reply() {
  if (_skill_levelup_reply_ != NULL) _skill_levelup_reply_->::client_baseserver::skill_levelup_reply::Clear();
  clear_has__skill_levelup_reply();
}
inline const ::client_baseserver::skill_levelup_reply& down_msg::_skill_levelup_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._skill_levelup_reply)
  return _skill_levelup_reply_ != NULL ? *_skill_levelup_reply_ : *default_instance_->_skill_levelup_reply_;
}
inline ::client_baseserver::skill_levelup_reply* down_msg::mutable__skill_levelup_reply() {
  set_has__skill_levelup_reply();
  if (_skill_levelup_reply_ == NULL) _skill_levelup_reply_ = new ::client_baseserver::skill_levelup_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._skill_levelup_reply)
  return _skill_levelup_reply_;
}
inline ::client_baseserver::skill_levelup_reply* down_msg::release__skill_levelup_reply() {
  clear_has__skill_levelup_reply();
  ::client_baseserver::skill_levelup_reply* temp = _skill_levelup_reply_;
  _skill_levelup_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__skill_levelup_reply(::client_baseserver::skill_levelup_reply* _skill_levelup_reply) {
  delete _skill_levelup_reply_;
  _skill_levelup_reply_ = _skill_levelup_reply;
  if (_skill_levelup_reply) {
    set_has__skill_levelup_reply();
  } else {
    clear_has__skill_levelup_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._skill_levelup_reply)
}

// optional .client_baseserver.sell_item_reply _sell_item_reply = 12;
inline bool down_msg::has__sell_item_reply() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void down_msg::set_has__sell_item_reply() {
  _has_bits_[0] |= 0x00000800u;
}
inline void down_msg::clear_has__sell_item_reply() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void down_msg::clear__sell_item_reply() {
  if (_sell_item_reply_ != NULL) _sell_item_reply_->::client_baseserver::sell_item_reply::Clear();
  clear_has__sell_item_reply();
}
inline const ::client_baseserver::sell_item_reply& down_msg::_sell_item_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._sell_item_reply)
  return _sell_item_reply_ != NULL ? *_sell_item_reply_ : *default_instance_->_sell_item_reply_;
}
inline ::client_baseserver::sell_item_reply* down_msg::mutable__sell_item_reply() {
  set_has__sell_item_reply();
  if (_sell_item_reply_ == NULL) _sell_item_reply_ = new ::client_baseserver::sell_item_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._sell_item_reply)
  return _sell_item_reply_;
}
inline ::client_baseserver::sell_item_reply* down_msg::release__sell_item_reply() {
  clear_has__sell_item_reply();
  ::client_baseserver::sell_item_reply* temp = _sell_item_reply_;
  _sell_item_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__sell_item_reply(::client_baseserver::sell_item_reply* _sell_item_reply) {
  delete _sell_item_reply_;
  _sell_item_reply_ = _sell_item_reply;
  if (_sell_item_reply) {
    set_has__sell_item_reply();
  } else {
    clear_has__sell_item_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._sell_item_reply)
}

// optional .client_baseserver.fragment_compose_reply _fragment_compose_reply = 13;
inline bool down_msg::has__fragment_compose_reply() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void down_msg::set_has__fragment_compose_reply() {
  _has_bits_[0] |= 0x00001000u;
}
inline void down_msg::clear_has__fragment_compose_reply() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void down_msg::clear__fragment_compose_reply() {
  if (_fragment_compose_reply_ != NULL) _fragment_compose_reply_->::client_baseserver::fragment_compose_reply::Clear();
  clear_has__fragment_compose_reply();
}
inline const ::client_baseserver::fragment_compose_reply& down_msg::_fragment_compose_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._fragment_compose_reply)
  return _fragment_compose_reply_ != NULL ? *_fragment_compose_reply_ : *default_instance_->_fragment_compose_reply_;
}
inline ::client_baseserver::fragment_compose_reply* down_msg::mutable__fragment_compose_reply() {
  set_has__fragment_compose_reply();
  if (_fragment_compose_reply_ == NULL) _fragment_compose_reply_ = new ::client_baseserver::fragment_compose_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._fragment_compose_reply)
  return _fragment_compose_reply_;
}
inline ::client_baseserver::fragment_compose_reply* down_msg::release__fragment_compose_reply() {
  clear_has__fragment_compose_reply();
  ::client_baseserver::fragment_compose_reply* temp = _fragment_compose_reply_;
  _fragment_compose_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__fragment_compose_reply(::client_baseserver::fragment_compose_reply* _fragment_compose_reply) {
  delete _fragment_compose_reply_;
  _fragment_compose_reply_ = _fragment_compose_reply;
  if (_fragment_compose_reply) {
    set_has__fragment_compose_reply();
  } else {
    clear_has__fragment_compose_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._fragment_compose_reply)
}

// optional .client_baseserver.hero_equip_upgrade_reply _hero_equip_upgrade_reply = 14;
inline bool down_msg::has__hero_equip_upgrade_reply() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void down_msg::set_has__hero_equip_upgrade_reply() {
  _has_bits_[0] |= 0x00002000u;
}
inline void down_msg::clear_has__hero_equip_upgrade_reply() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void down_msg::clear__hero_equip_upgrade_reply() {
  if (_hero_equip_upgrade_reply_ != NULL) _hero_equip_upgrade_reply_->::client_baseserver::hero_equip_upgrade_reply::Clear();
  clear_has__hero_equip_upgrade_reply();
}
inline const ::client_baseserver::hero_equip_upgrade_reply& down_msg::_hero_equip_upgrade_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._hero_equip_upgrade_reply)
  return _hero_equip_upgrade_reply_ != NULL ? *_hero_equip_upgrade_reply_ : *default_instance_->_hero_equip_upgrade_reply_;
}
inline ::client_baseserver::hero_equip_upgrade_reply* down_msg::mutable__hero_equip_upgrade_reply() {
  set_has__hero_equip_upgrade_reply();
  if (_hero_equip_upgrade_reply_ == NULL) _hero_equip_upgrade_reply_ = new ::client_baseserver::hero_equip_upgrade_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._hero_equip_upgrade_reply)
  return _hero_equip_upgrade_reply_;
}
inline ::client_baseserver::hero_equip_upgrade_reply* down_msg::release__hero_equip_upgrade_reply() {
  clear_has__hero_equip_upgrade_reply();
  ::client_baseserver::hero_equip_upgrade_reply* temp = _hero_equip_upgrade_reply_;
  _hero_equip_upgrade_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__hero_equip_upgrade_reply(::client_baseserver::hero_equip_upgrade_reply* _hero_equip_upgrade_reply) {
  delete _hero_equip_upgrade_reply_;
  _hero_equip_upgrade_reply_ = _hero_equip_upgrade_reply;
  if (_hero_equip_upgrade_reply) {
    set_has__hero_equip_upgrade_reply();
  } else {
    clear_has__hero_equip_upgrade_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._hero_equip_upgrade_reply)
}

// optional .client_baseserver.trigger_task_reply _trigger_task_reply = 15;
inline bool down_msg::has__trigger_task_reply() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void down_msg::set_has__trigger_task_reply() {
  _has_bits_[0] |= 0x00004000u;
}
inline void down_msg::clear_has__trigger_task_reply() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void down_msg::clear__trigger_task_reply() {
  if (_trigger_task_reply_ != NULL) _trigger_task_reply_->::client_baseserver::trigger_task_reply::Clear();
  clear_has__trigger_task_reply();
}
inline const ::client_baseserver::trigger_task_reply& down_msg::_trigger_task_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._trigger_task_reply)
  return _trigger_task_reply_ != NULL ? *_trigger_task_reply_ : *default_instance_->_trigger_task_reply_;
}
inline ::client_baseserver::trigger_task_reply* down_msg::mutable__trigger_task_reply() {
  set_has__trigger_task_reply();
  if (_trigger_task_reply_ == NULL) _trigger_task_reply_ = new ::client_baseserver::trigger_task_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._trigger_task_reply)
  return _trigger_task_reply_;
}
inline ::client_baseserver::trigger_task_reply* down_msg::release__trigger_task_reply() {
  clear_has__trigger_task_reply();
  ::client_baseserver::trigger_task_reply* temp = _trigger_task_reply_;
  _trigger_task_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__trigger_task_reply(::client_baseserver::trigger_task_reply* _trigger_task_reply) {
  delete _trigger_task_reply_;
  _trigger_task_reply_ = _trigger_task_reply;
  if (_trigger_task_reply) {
    set_has__trigger_task_reply();
  } else {
    clear_has__trigger_task_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._trigger_task_reply)
}

// optional .client_baseserver.require_rewards_reply _require_rewards_reply = 16;
inline bool down_msg::has__require_rewards_reply() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void down_msg::set_has__require_rewards_reply() {
  _has_bits_[0] |= 0x00008000u;
}
inline void down_msg::clear_has__require_rewards_reply() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void down_msg::clear__require_rewards_reply() {
  if (_require_rewards_reply_ != NULL) _require_rewards_reply_->::client_baseserver::require_rewards_reply::Clear();
  clear_has__require_rewards_reply();
}
inline const ::client_baseserver::require_rewards_reply& down_msg::_require_rewards_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._require_rewards_reply)
  return _require_rewards_reply_ != NULL ? *_require_rewards_reply_ : *default_instance_->_require_rewards_reply_;
}
inline ::client_baseserver::require_rewards_reply* down_msg::mutable__require_rewards_reply() {
  set_has__require_rewards_reply();
  if (_require_rewards_reply_ == NULL) _require_rewards_reply_ = new ::client_baseserver::require_rewards_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._require_rewards_reply)
  return _require_rewards_reply_;
}
inline ::client_baseserver::require_rewards_reply* down_msg::release__require_rewards_reply() {
  clear_has__require_rewards_reply();
  ::client_baseserver::require_rewards_reply* temp = _require_rewards_reply_;
  _require_rewards_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__require_rewards_reply(::client_baseserver::require_rewards_reply* _require_rewards_reply) {
  delete _require_rewards_reply_;
  _require_rewards_reply_ = _require_rewards_reply;
  if (_require_rewards_reply) {
    set_has__require_rewards_reply();
  } else {
    clear_has__require_rewards_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._require_rewards_reply)
}

// optional .client_baseserver.trigger_job_reply _trigger_job_reply = 17;
inline bool down_msg::has__trigger_job_reply() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void down_msg::set_has__trigger_job_reply() {
  _has_bits_[0] |= 0x00010000u;
}
inline void down_msg::clear_has__trigger_job_reply() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void down_msg::clear__trigger_job_reply() {
  if (_trigger_job_reply_ != NULL) _trigger_job_reply_->::client_baseserver::trigger_job_reply::Clear();
  clear_has__trigger_job_reply();
}
inline const ::client_baseserver::trigger_job_reply& down_msg::_trigger_job_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._trigger_job_reply)
  return _trigger_job_reply_ != NULL ? *_trigger_job_reply_ : *default_instance_->_trigger_job_reply_;
}
inline ::client_baseserver::trigger_job_reply* down_msg::mutable__trigger_job_reply() {
  set_has__trigger_job_reply();
  if (_trigger_job_reply_ == NULL) _trigger_job_reply_ = new ::client_baseserver::trigger_job_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._trigger_job_reply)
  return _trigger_job_reply_;
}
inline ::client_baseserver::trigger_job_reply* down_msg::release__trigger_job_reply() {
  clear_has__trigger_job_reply();
  ::client_baseserver::trigger_job_reply* temp = _trigger_job_reply_;
  _trigger_job_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__trigger_job_reply(::client_baseserver::trigger_job_reply* _trigger_job_reply) {
  delete _trigger_job_reply_;
  _trigger_job_reply_ = _trigger_job_reply;
  if (_trigger_job_reply) {
    set_has__trigger_job_reply();
  } else {
    clear_has__trigger_job_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._trigger_job_reply)
}

// optional .client_baseserver.job_rewards_reply _job_rewards_reply = 18;
inline bool down_msg::has__job_rewards_reply() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void down_msg::set_has__job_rewards_reply() {
  _has_bits_[0] |= 0x00020000u;
}
inline void down_msg::clear_has__job_rewards_reply() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void down_msg::clear__job_rewards_reply() {
  if (_job_rewards_reply_ != NULL) _job_rewards_reply_->::client_baseserver::job_rewards_reply::Clear();
  clear_has__job_rewards_reply();
}
inline const ::client_baseserver::job_rewards_reply& down_msg::_job_rewards_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._job_rewards_reply)
  return _job_rewards_reply_ != NULL ? *_job_rewards_reply_ : *default_instance_->_job_rewards_reply_;
}
inline ::client_baseserver::job_rewards_reply* down_msg::mutable__job_rewards_reply() {
  set_has__job_rewards_reply();
  if (_job_rewards_reply_ == NULL) _job_rewards_reply_ = new ::client_baseserver::job_rewards_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._job_rewards_reply)
  return _job_rewards_reply_;
}
inline ::client_baseserver::job_rewards_reply* down_msg::release__job_rewards_reply() {
  clear_has__job_rewards_reply();
  ::client_baseserver::job_rewards_reply* temp = _job_rewards_reply_;
  _job_rewards_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__job_rewards_reply(::client_baseserver::job_rewards_reply* _job_rewards_reply) {
  delete _job_rewards_reply_;
  _job_rewards_reply_ = _job_rewards_reply;
  if (_job_rewards_reply) {
    set_has__job_rewards_reply();
  } else {
    clear_has__job_rewards_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._job_rewards_reply)
}

// optional .client_baseserver.reset_elite_reply _reset_elite_reply = 19;
inline bool down_msg::has__reset_elite_reply() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void down_msg::set_has__reset_elite_reply() {
  _has_bits_[0] |= 0x00040000u;
}
inline void down_msg::clear_has__reset_elite_reply() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void down_msg::clear__reset_elite_reply() {
  if (_reset_elite_reply_ != NULL) _reset_elite_reply_->::client_baseserver::reset_elite_reply::Clear();
  clear_has__reset_elite_reply();
}
inline const ::client_baseserver::reset_elite_reply& down_msg::_reset_elite_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._reset_elite_reply)
  return _reset_elite_reply_ != NULL ? *_reset_elite_reply_ : *default_instance_->_reset_elite_reply_;
}
inline ::client_baseserver::reset_elite_reply* down_msg::mutable__reset_elite_reply() {
  set_has__reset_elite_reply();
  if (_reset_elite_reply_ == NULL) _reset_elite_reply_ = new ::client_baseserver::reset_elite_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._reset_elite_reply)
  return _reset_elite_reply_;
}
inline ::client_baseserver::reset_elite_reply* down_msg::release__reset_elite_reply() {
  clear_has__reset_elite_reply();
  ::client_baseserver::reset_elite_reply* temp = _reset_elite_reply_;
  _reset_elite_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__reset_elite_reply(::client_baseserver::reset_elite_reply* _reset_elite_reply) {
  delete _reset_elite_reply_;
  _reset_elite_reply_ = _reset_elite_reply;
  if (_reset_elite_reply) {
    set_has__reset_elite_reply();
  } else {
    clear_has__reset_elite_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._reset_elite_reply)
}

// optional .client_baseserver.sweep_stage_reply _sweep_stage_reply = 20;
inline bool down_msg::has__sweep_stage_reply() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void down_msg::set_has__sweep_stage_reply() {
  _has_bits_[0] |= 0x00080000u;
}
inline void down_msg::clear_has__sweep_stage_reply() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void down_msg::clear__sweep_stage_reply() {
  if (_sweep_stage_reply_ != NULL) _sweep_stage_reply_->::client_baseserver::sweep_stage_reply::Clear();
  clear_has__sweep_stage_reply();
}
inline const ::client_baseserver::sweep_stage_reply& down_msg::_sweep_stage_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._sweep_stage_reply)
  return _sweep_stage_reply_ != NULL ? *_sweep_stage_reply_ : *default_instance_->_sweep_stage_reply_;
}
inline ::client_baseserver::sweep_stage_reply* down_msg::mutable__sweep_stage_reply() {
  set_has__sweep_stage_reply();
  if (_sweep_stage_reply_ == NULL) _sweep_stage_reply_ = new ::client_baseserver::sweep_stage_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._sweep_stage_reply)
  return _sweep_stage_reply_;
}
inline ::client_baseserver::sweep_stage_reply* down_msg::release__sweep_stage_reply() {
  clear_has__sweep_stage_reply();
  ::client_baseserver::sweep_stage_reply* temp = _sweep_stage_reply_;
  _sweep_stage_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__sweep_stage_reply(::client_baseserver::sweep_stage_reply* _sweep_stage_reply) {
  delete _sweep_stage_reply_;
  _sweep_stage_reply_ = _sweep_stage_reply;
  if (_sweep_stage_reply) {
    set_has__sweep_stage_reply();
  } else {
    clear_has__sweep_stage_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._sweep_stage_reply)
}

// optional .client_baseserver.tavern_draw_reply _tavern_draw_reply = 21;
inline bool down_msg::has__tavern_draw_reply() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void down_msg::set_has__tavern_draw_reply() {
  _has_bits_[0] |= 0x00100000u;
}
inline void down_msg::clear_has__tavern_draw_reply() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void down_msg::clear__tavern_draw_reply() {
  if (_tavern_draw_reply_ != NULL) _tavern_draw_reply_->::client_baseserver::tavern_draw_reply::Clear();
  clear_has__tavern_draw_reply();
}
inline const ::client_baseserver::tavern_draw_reply& down_msg::_tavern_draw_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._tavern_draw_reply)
  return _tavern_draw_reply_ != NULL ? *_tavern_draw_reply_ : *default_instance_->_tavern_draw_reply_;
}
inline ::client_baseserver::tavern_draw_reply* down_msg::mutable__tavern_draw_reply() {
  set_has__tavern_draw_reply();
  if (_tavern_draw_reply_ == NULL) _tavern_draw_reply_ = new ::client_baseserver::tavern_draw_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._tavern_draw_reply)
  return _tavern_draw_reply_;
}
inline ::client_baseserver::tavern_draw_reply* down_msg::release__tavern_draw_reply() {
  clear_has__tavern_draw_reply();
  ::client_baseserver::tavern_draw_reply* temp = _tavern_draw_reply_;
  _tavern_draw_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__tavern_draw_reply(::client_baseserver::tavern_draw_reply* _tavern_draw_reply) {
  delete _tavern_draw_reply_;
  _tavern_draw_reply_ = _tavern_draw_reply;
  if (_tavern_draw_reply) {
    set_has__tavern_draw_reply();
  } else {
    clear_has__tavern_draw_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._tavern_draw_reply)
}

// optional .client_baseserver.sync_skill_stren_reply _sync_skill_stren_reply = 22;
inline bool down_msg::has__sync_skill_stren_reply() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void down_msg::set_has__sync_skill_stren_reply() {
  _has_bits_[0] |= 0x00200000u;
}
inline void down_msg::clear_has__sync_skill_stren_reply() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void down_msg::clear__sync_skill_stren_reply() {
  if (_sync_skill_stren_reply_ != NULL) _sync_skill_stren_reply_->::client_baseserver::sync_skill_stren_reply::Clear();
  clear_has__sync_skill_stren_reply();
}
inline const ::client_baseserver::sync_skill_stren_reply& down_msg::_sync_skill_stren_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._sync_skill_stren_reply)
  return _sync_skill_stren_reply_ != NULL ? *_sync_skill_stren_reply_ : *default_instance_->_sync_skill_stren_reply_;
}
inline ::client_baseserver::sync_skill_stren_reply* down_msg::mutable__sync_skill_stren_reply() {
  set_has__sync_skill_stren_reply();
  if (_sync_skill_stren_reply_ == NULL) _sync_skill_stren_reply_ = new ::client_baseserver::sync_skill_stren_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._sync_skill_stren_reply)
  return _sync_skill_stren_reply_;
}
inline ::client_baseserver::sync_skill_stren_reply* down_msg::release__sync_skill_stren_reply() {
  clear_has__sync_skill_stren_reply();
  ::client_baseserver::sync_skill_stren_reply* temp = _sync_skill_stren_reply_;
  _sync_skill_stren_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__sync_skill_stren_reply(::client_baseserver::sync_skill_stren_reply* _sync_skill_stren_reply) {
  delete _sync_skill_stren_reply_;
  _sync_skill_stren_reply_ = _sync_skill_stren_reply;
  if (_sync_skill_stren_reply) {
    set_has__sync_skill_stren_reply();
  } else {
    clear_has__sync_skill_stren_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._sync_skill_stren_reply)
}

// optional .client_baseserver.query_data_reply _query_data_reply = 23;
inline bool down_msg::has__query_data_reply() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void down_msg::set_has__query_data_reply() {
  _has_bits_[0] |= 0x00400000u;
}
inline void down_msg::clear_has__query_data_reply() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void down_msg::clear__query_data_reply() {
  if (_query_data_reply_ != NULL) _query_data_reply_->::client_baseserver::query_data_reply::Clear();
  clear_has__query_data_reply();
}
inline const ::client_baseserver::query_data_reply& down_msg::_query_data_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._query_data_reply)
  return _query_data_reply_ != NULL ? *_query_data_reply_ : *default_instance_->_query_data_reply_;
}
inline ::client_baseserver::query_data_reply* down_msg::mutable__query_data_reply() {
  set_has__query_data_reply();
  if (_query_data_reply_ == NULL) _query_data_reply_ = new ::client_baseserver::query_data_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._query_data_reply)
  return _query_data_reply_;
}
inline ::client_baseserver::query_data_reply* down_msg::release__query_data_reply() {
  clear_has__query_data_reply();
  ::client_baseserver::query_data_reply* temp = _query_data_reply_;
  _query_data_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__query_data_reply(::client_baseserver::query_data_reply* _query_data_reply) {
  delete _query_data_reply_;
  _query_data_reply_ = _query_data_reply;
  if (_query_data_reply) {
    set_has__query_data_reply();
  } else {
    clear_has__query_data_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._query_data_reply)
}

// optional .client_baseserver.hero_evolve_reply _hero_evolve_reply = 24;
inline bool down_msg::has__hero_evolve_reply() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void down_msg::set_has__hero_evolve_reply() {
  _has_bits_[0] |= 0x00800000u;
}
inline void down_msg::clear_has__hero_evolve_reply() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void down_msg::clear__hero_evolve_reply() {
  if (_hero_evolve_reply_ != NULL) _hero_evolve_reply_->::client_baseserver::hero_evolve_reply::Clear();
  clear_has__hero_evolve_reply();
}
inline const ::client_baseserver::hero_evolve_reply& down_msg::_hero_evolve_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._hero_evolve_reply)
  return _hero_evolve_reply_ != NULL ? *_hero_evolve_reply_ : *default_instance_->_hero_evolve_reply_;
}
inline ::client_baseserver::hero_evolve_reply* down_msg::mutable__hero_evolve_reply() {
  set_has__hero_evolve_reply();
  if (_hero_evolve_reply_ == NULL) _hero_evolve_reply_ = new ::client_baseserver::hero_evolve_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._hero_evolve_reply)
  return _hero_evolve_reply_;
}
inline ::client_baseserver::hero_evolve_reply* down_msg::release__hero_evolve_reply() {
  clear_has__hero_evolve_reply();
  ::client_baseserver::hero_evolve_reply* temp = _hero_evolve_reply_;
  _hero_evolve_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__hero_evolve_reply(::client_baseserver::hero_evolve_reply* _hero_evolve_reply) {
  delete _hero_evolve_reply_;
  _hero_evolve_reply_ = _hero_evolve_reply;
  if (_hero_evolve_reply) {
    set_has__hero_evolve_reply();
  } else {
    clear_has__hero_evolve_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._hero_evolve_reply)
}

// optional .client_baseserver.sync_vitality_reply _sync_vitality_reply = 25;
inline bool down_msg::has__sync_vitality_reply() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void down_msg::set_has__sync_vitality_reply() {
  _has_bits_[0] |= 0x01000000u;
}
inline void down_msg::clear_has__sync_vitality_reply() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void down_msg::clear__sync_vitality_reply() {
  if (_sync_vitality_reply_ != NULL) _sync_vitality_reply_->::client_baseserver::sync_vitality_reply::Clear();
  clear_has__sync_vitality_reply();
}
inline const ::client_baseserver::sync_vitality_reply& down_msg::_sync_vitality_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._sync_vitality_reply)
  return _sync_vitality_reply_ != NULL ? *_sync_vitality_reply_ : *default_instance_->_sync_vitality_reply_;
}
inline ::client_baseserver::sync_vitality_reply* down_msg::mutable__sync_vitality_reply() {
  set_has__sync_vitality_reply();
  if (_sync_vitality_reply_ == NULL) _sync_vitality_reply_ = new ::client_baseserver::sync_vitality_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._sync_vitality_reply)
  return _sync_vitality_reply_;
}
inline ::client_baseserver::sync_vitality_reply* down_msg::release__sync_vitality_reply() {
  clear_has__sync_vitality_reply();
  ::client_baseserver::sync_vitality_reply* temp = _sync_vitality_reply_;
  _sync_vitality_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__sync_vitality_reply(::client_baseserver::sync_vitality_reply* _sync_vitality_reply) {
  delete _sync_vitality_reply_;
  _sync_vitality_reply_ = _sync_vitality_reply;
  if (_sync_vitality_reply) {
    set_has__sync_vitality_reply();
  } else {
    clear_has__sync_vitality_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._sync_vitality_reply)
}

// optional .client_baseserver.user_check _user_check = 26;
inline bool down_msg::has__user_check() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void down_msg::set_has__user_check() {
  _has_bits_[0] |= 0x02000000u;
}
inline void down_msg::clear_has__user_check() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void down_msg::clear__user_check() {
  if (_user_check_ != NULL) _user_check_->::client_baseserver::user_check::Clear();
  clear_has__user_check();
}
inline const ::client_baseserver::user_check& down_msg::_user_check() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._user_check)
  return _user_check_ != NULL ? *_user_check_ : *default_instance_->_user_check_;
}
inline ::client_baseserver::user_check* down_msg::mutable__user_check() {
  set_has__user_check();
  if (_user_check_ == NULL) _user_check_ = new ::client_baseserver::user_check;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._user_check)
  return _user_check_;
}
inline ::client_baseserver::user_check* down_msg::release__user_check() {
  clear_has__user_check();
  ::client_baseserver::user_check* temp = _user_check_;
  _user_check_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__user_check(::client_baseserver::user_check* _user_check) {
  delete _user_check_;
  _user_check_ = _user_check;
  if (_user_check) {
    set_has__user_check();
  } else {
    clear_has__user_check();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._user_check)
}

// optional .client_baseserver.tutorial_reply _tutorial_reply = 27;
inline bool down_msg::has__tutorial_reply() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void down_msg::set_has__tutorial_reply() {
  _has_bits_[0] |= 0x04000000u;
}
inline void down_msg::clear_has__tutorial_reply() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void down_msg::clear__tutorial_reply() {
  if (_tutorial_reply_ != NULL) _tutorial_reply_->::client_baseserver::tutorial_reply::Clear();
  clear_has__tutorial_reply();
}
inline const ::client_baseserver::tutorial_reply& down_msg::_tutorial_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._tutorial_reply)
  return _tutorial_reply_ != NULL ? *_tutorial_reply_ : *default_instance_->_tutorial_reply_;
}
inline ::client_baseserver::tutorial_reply* down_msg::mutable__tutorial_reply() {
  set_has__tutorial_reply();
  if (_tutorial_reply_ == NULL) _tutorial_reply_ = new ::client_baseserver::tutorial_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._tutorial_reply)
  return _tutorial_reply_;
}
inline ::client_baseserver::tutorial_reply* down_msg::release__tutorial_reply() {
  clear_has__tutorial_reply();
  ::client_baseserver::tutorial_reply* temp = _tutorial_reply_;
  _tutorial_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__tutorial_reply(::client_baseserver::tutorial_reply* _tutorial_reply) {
  delete _tutorial_reply_;
  _tutorial_reply_ = _tutorial_reply;
  if (_tutorial_reply) {
    set_has__tutorial_reply();
  } else {
    clear_has__tutorial_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._tutorial_reply)
}

// optional .client_baseserver.error_info _error_info = 28;
inline bool down_msg::has__error_info() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void down_msg::set_has__error_info() {
  _has_bits_[0] |= 0x08000000u;
}
inline void down_msg::clear_has__error_info() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void down_msg::clear__error_info() {
  if (_error_info_ != NULL) _error_info_->::client_baseserver::error_info::Clear();
  clear_has__error_info();
}
inline const ::client_baseserver::error_info& down_msg::_error_info() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._error_info)
  return _error_info_ != NULL ? *_error_info_ : *default_instance_->_error_info_;
}
inline ::client_baseserver::error_info* down_msg::mutable__error_info() {
  set_has__error_info();
  if (_error_info_ == NULL) _error_info_ = new ::client_baseserver::error_info;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._error_info)
  return _error_info_;
}
inline ::client_baseserver::error_info* down_msg::release__error_info() {
  clear_has__error_info();
  ::client_baseserver::error_info* temp = _error_info_;
  _error_info_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__error_info(::client_baseserver::error_info* _error_info) {
  delete _error_info_;
  _error_info_ = _error_info;
  if (_error_info) {
    set_has__error_info();
  } else {
    clear_has__error_info();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._error_info)
}

// optional .client_baseserver.ladder_reply _ladder_reply = 29;
inline bool down_msg::has__ladder_reply() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void down_msg::set_has__ladder_reply() {
  _has_bits_[0] |= 0x10000000u;
}
inline void down_msg::clear_has__ladder_reply() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void down_msg::clear__ladder_reply() {
  if (_ladder_reply_ != NULL) _ladder_reply_->::client_baseserver::ladder_reply::Clear();
  clear_has__ladder_reply();
}
inline const ::client_baseserver::ladder_reply& down_msg::_ladder_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._ladder_reply)
  return _ladder_reply_ != NULL ? *_ladder_reply_ : *default_instance_->_ladder_reply_;
}
inline ::client_baseserver::ladder_reply* down_msg::mutable__ladder_reply() {
  set_has__ladder_reply();
  if (_ladder_reply_ == NULL) _ladder_reply_ = new ::client_baseserver::ladder_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._ladder_reply)
  return _ladder_reply_;
}
inline ::client_baseserver::ladder_reply* down_msg::release__ladder_reply() {
  clear_has__ladder_reply();
  ::client_baseserver::ladder_reply* temp = _ladder_reply_;
  _ladder_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__ladder_reply(::client_baseserver::ladder_reply* _ladder_reply) {
  delete _ladder_reply_;
  _ladder_reply_ = _ladder_reply;
  if (_ladder_reply) {
    set_has__ladder_reply();
  } else {
    clear_has__ladder_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._ladder_reply)
}

// optional .client_baseserver.set_name_reply _set_name_reply = 30;
inline bool down_msg::has__set_name_reply() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void down_msg::set_has__set_name_reply() {
  _has_bits_[0] |= 0x20000000u;
}
inline void down_msg::clear_has__set_name_reply() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void down_msg::clear__set_name_reply() {
  if (_set_name_reply_ != NULL) _set_name_reply_->::client_baseserver::set_name_reply::Clear();
  clear_has__set_name_reply();
}
inline const ::client_baseserver::set_name_reply& down_msg::_set_name_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._set_name_reply)
  return _set_name_reply_ != NULL ? *_set_name_reply_ : *default_instance_->_set_name_reply_;
}
inline ::client_baseserver::set_name_reply* down_msg::mutable__set_name_reply() {
  set_has__set_name_reply();
  if (_set_name_reply_ == NULL) _set_name_reply_ = new ::client_baseserver::set_name_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._set_name_reply)
  return _set_name_reply_;
}
inline ::client_baseserver::set_name_reply* down_msg::release__set_name_reply() {
  clear_has__set_name_reply();
  ::client_baseserver::set_name_reply* temp = _set_name_reply_;
  _set_name_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__set_name_reply(::client_baseserver::set_name_reply* _set_name_reply) {
  delete _set_name_reply_;
  _set_name_reply_ = _set_name_reply;
  if (_set_name_reply) {
    set_has__set_name_reply();
  } else {
    clear_has__set_name_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._set_name_reply)
}

// optional .client_baseserver.midas_reply _midas_reply = 31;
inline bool down_msg::has__midas_reply() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void down_msg::set_has__midas_reply() {
  _has_bits_[0] |= 0x40000000u;
}
inline void down_msg::clear_has__midas_reply() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void down_msg::clear__midas_reply() {
  if (_midas_reply_ != NULL) _midas_reply_->::client_baseserver::midas_reply::Clear();
  clear_has__midas_reply();
}
inline const ::client_baseserver::midas_reply& down_msg::_midas_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._midas_reply)
  return _midas_reply_ != NULL ? *_midas_reply_ : *default_instance_->_midas_reply_;
}
inline ::client_baseserver::midas_reply* down_msg::mutable__midas_reply() {
  set_has__midas_reply();
  if (_midas_reply_ == NULL) _midas_reply_ = new ::client_baseserver::midas_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._midas_reply)
  return _midas_reply_;
}
inline ::client_baseserver::midas_reply* down_msg::release__midas_reply() {
  clear_has__midas_reply();
  ::client_baseserver::midas_reply* temp = _midas_reply_;
  _midas_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__midas_reply(::client_baseserver::midas_reply* _midas_reply) {
  delete _midas_reply_;
  _midas_reply_ = _midas_reply;
  if (_midas_reply) {
    set_has__midas_reply();
  } else {
    clear_has__midas_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._midas_reply)
}

// optional .client_baseserver.open_shop_reply _open_shop_reply = 32;
inline bool down_msg::has__open_shop_reply() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void down_msg::set_has__open_shop_reply() {
  _has_bits_[0] |= 0x80000000u;
}
inline void down_msg::clear_has__open_shop_reply() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void down_msg::clear__open_shop_reply() {
  if (_open_shop_reply_ != NULL) _open_shop_reply_->::client_baseserver::open_shop_reply::Clear();
  clear_has__open_shop_reply();
}
inline const ::client_baseserver::open_shop_reply& down_msg::_open_shop_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._open_shop_reply)
  return _open_shop_reply_ != NULL ? *_open_shop_reply_ : *default_instance_->_open_shop_reply_;
}
inline ::client_baseserver::open_shop_reply* down_msg::mutable__open_shop_reply() {
  set_has__open_shop_reply();
  if (_open_shop_reply_ == NULL) _open_shop_reply_ = new ::client_baseserver::open_shop_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._open_shop_reply)
  return _open_shop_reply_;
}
inline ::client_baseserver::open_shop_reply* down_msg::release__open_shop_reply() {
  clear_has__open_shop_reply();
  ::client_baseserver::open_shop_reply* temp = _open_shop_reply_;
  _open_shop_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__open_shop_reply(::client_baseserver::open_shop_reply* _open_shop_reply) {
  delete _open_shop_reply_;
  _open_shop_reply_ = _open_shop_reply;
  if (_open_shop_reply) {
    set_has__open_shop_reply();
  } else {
    clear_has__open_shop_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._open_shop_reply)
}

// optional .client_baseserver.charge_reply _charge_reply = 33;
inline bool down_msg::has__charge_reply() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void down_msg::set_has__charge_reply() {
  _has_bits_[1] |= 0x00000001u;
}
inline void down_msg::clear_has__charge_reply() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void down_msg::clear__charge_reply() {
  if (_charge_reply_ != NULL) _charge_reply_->::client_baseserver::charge_reply::Clear();
  clear_has__charge_reply();
}
inline const ::client_baseserver::charge_reply& down_msg::_charge_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._charge_reply)
  return _charge_reply_ != NULL ? *_charge_reply_ : *default_instance_->_charge_reply_;
}
inline ::client_baseserver::charge_reply* down_msg::mutable__charge_reply() {
  set_has__charge_reply();
  if (_charge_reply_ == NULL) _charge_reply_ = new ::client_baseserver::charge_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._charge_reply)
  return _charge_reply_;
}
inline ::client_baseserver::charge_reply* down_msg::release__charge_reply() {
  clear_has__charge_reply();
  ::client_baseserver::charge_reply* temp = _charge_reply_;
  _charge_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__charge_reply(::client_baseserver::charge_reply* _charge_reply) {
  delete _charge_reply_;
  _charge_reply_ = _charge_reply;
  if (_charge_reply) {
    set_has__charge_reply();
  } else {
    clear_has__charge_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._charge_reply)
}

// optional .client_baseserver.sdk_login_reply _sdk_login_reply = 34;
inline bool down_msg::has__sdk_login_reply() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void down_msg::set_has__sdk_login_reply() {
  _has_bits_[1] |= 0x00000002u;
}
inline void down_msg::clear_has__sdk_login_reply() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void down_msg::clear__sdk_login_reply() {
  if (_sdk_login_reply_ != NULL) _sdk_login_reply_->::client_baseserver::sdk_login_reply::Clear();
  clear_has__sdk_login_reply();
}
inline const ::client_baseserver::sdk_login_reply& down_msg::_sdk_login_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._sdk_login_reply)
  return _sdk_login_reply_ != NULL ? *_sdk_login_reply_ : *default_instance_->_sdk_login_reply_;
}
inline ::client_baseserver::sdk_login_reply* down_msg::mutable__sdk_login_reply() {
  set_has__sdk_login_reply();
  if (_sdk_login_reply_ == NULL) _sdk_login_reply_ = new ::client_baseserver::sdk_login_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._sdk_login_reply)
  return _sdk_login_reply_;
}
inline ::client_baseserver::sdk_login_reply* down_msg::release__sdk_login_reply() {
  clear_has__sdk_login_reply();
  ::client_baseserver::sdk_login_reply* temp = _sdk_login_reply_;
  _sdk_login_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__sdk_login_reply(::client_baseserver::sdk_login_reply* _sdk_login_reply) {
  delete _sdk_login_reply_;
  _sdk_login_reply_ = _sdk_login_reply;
  if (_sdk_login_reply) {
    set_has__sdk_login_reply();
  } else {
    clear_has__sdk_login_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._sdk_login_reply)
}

// optional .client_baseserver.set_avatar_reply _set_avatar_reply = 35;
inline bool down_msg::has__set_avatar_reply() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void down_msg::set_has__set_avatar_reply() {
  _has_bits_[1] |= 0x00000004u;
}
inline void down_msg::clear_has__set_avatar_reply() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void down_msg::clear__set_avatar_reply() {
  if (_set_avatar_reply_ != NULL) _set_avatar_reply_->::client_baseserver::set_avatar_reply::Clear();
  clear_has__set_avatar_reply();
}
inline const ::client_baseserver::set_avatar_reply& down_msg::_set_avatar_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._set_avatar_reply)
  return _set_avatar_reply_ != NULL ? *_set_avatar_reply_ : *default_instance_->_set_avatar_reply_;
}
inline ::client_baseserver::set_avatar_reply* down_msg::mutable__set_avatar_reply() {
  set_has__set_avatar_reply();
  if (_set_avatar_reply_ == NULL) _set_avatar_reply_ = new ::client_baseserver::set_avatar_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._set_avatar_reply)
  return _set_avatar_reply_;
}
inline ::client_baseserver::set_avatar_reply* down_msg::release__set_avatar_reply() {
  clear_has__set_avatar_reply();
  ::client_baseserver::set_avatar_reply* temp = _set_avatar_reply_;
  _set_avatar_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__set_avatar_reply(::client_baseserver::set_avatar_reply* _set_avatar_reply) {
  delete _set_avatar_reply_;
  _set_avatar_reply_ = _set_avatar_reply;
  if (_set_avatar_reply) {
    set_has__set_avatar_reply();
  } else {
    clear_has__set_avatar_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._set_avatar_reply)
}

// optional .client_baseserver.notify_msg _notify_msg = 36;
inline bool down_msg::has__notify_msg() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void down_msg::set_has__notify_msg() {
  _has_bits_[1] |= 0x00000008u;
}
inline void down_msg::clear_has__notify_msg() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void down_msg::clear__notify_msg() {
  if (_notify_msg_ != NULL) _notify_msg_->::client_baseserver::notify_msg::Clear();
  clear_has__notify_msg();
}
inline const ::client_baseserver::notify_msg& down_msg::_notify_msg() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._notify_msg)
  return _notify_msg_ != NULL ? *_notify_msg_ : *default_instance_->_notify_msg_;
}
inline ::client_baseserver::notify_msg* down_msg::mutable__notify_msg() {
  set_has__notify_msg();
  if (_notify_msg_ == NULL) _notify_msg_ = new ::client_baseserver::notify_msg;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._notify_msg)
  return _notify_msg_;
}
inline ::client_baseserver::notify_msg* down_msg::release__notify_msg() {
  clear_has__notify_msg();
  ::client_baseserver::notify_msg* temp = _notify_msg_;
  _notify_msg_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__notify_msg(::client_baseserver::notify_msg* _notify_msg) {
  delete _notify_msg_;
  _notify_msg_ = _notify_msg;
  if (_notify_msg) {
    set_has__notify_msg();
  } else {
    clear_has__notify_msg();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._notify_msg)
}

// optional .client_baseserver.ask_daily_login_reply _ask_daily_login_reply = 37;
inline bool down_msg::has__ask_daily_login_reply() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void down_msg::set_has__ask_daily_login_reply() {
  _has_bits_[1] |= 0x00000010u;
}
inline void down_msg::clear_has__ask_daily_login_reply() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void down_msg::clear__ask_daily_login_reply() {
  if (_ask_daily_login_reply_ != NULL) _ask_daily_login_reply_->::client_baseserver::ask_daily_login_reply::Clear();
  clear_has__ask_daily_login_reply();
}
inline const ::client_baseserver::ask_daily_login_reply& down_msg::_ask_daily_login_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._ask_daily_login_reply)
  return _ask_daily_login_reply_ != NULL ? *_ask_daily_login_reply_ : *default_instance_->_ask_daily_login_reply_;
}
inline ::client_baseserver::ask_daily_login_reply* down_msg::mutable__ask_daily_login_reply() {
  set_has__ask_daily_login_reply();
  if (_ask_daily_login_reply_ == NULL) _ask_daily_login_reply_ = new ::client_baseserver::ask_daily_login_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._ask_daily_login_reply)
  return _ask_daily_login_reply_;
}
inline ::client_baseserver::ask_daily_login_reply* down_msg::release__ask_daily_login_reply() {
  clear_has__ask_daily_login_reply();
  ::client_baseserver::ask_daily_login_reply* temp = _ask_daily_login_reply_;
  _ask_daily_login_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__ask_daily_login_reply(::client_baseserver::ask_daily_login_reply* _ask_daily_login_reply) {
  delete _ask_daily_login_reply_;
  _ask_daily_login_reply_ = _ask_daily_login_reply;
  if (_ask_daily_login_reply) {
    set_has__ask_daily_login_reply();
  } else {
    clear_has__ask_daily_login_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._ask_daily_login_reply)
}

// optional .client_baseserver.tbc_reply _tbc_reply = 38;
inline bool down_msg::has__tbc_reply() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void down_msg::set_has__tbc_reply() {
  _has_bits_[1] |= 0x00000020u;
}
inline void down_msg::clear_has__tbc_reply() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void down_msg::clear__tbc_reply() {
  if (_tbc_reply_ != NULL) _tbc_reply_->::client_baseserver::tbc_reply::Clear();
  clear_has__tbc_reply();
}
inline const ::client_baseserver::tbc_reply& down_msg::_tbc_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._tbc_reply)
  return _tbc_reply_ != NULL ? *_tbc_reply_ : *default_instance_->_tbc_reply_;
}
inline ::client_baseserver::tbc_reply* down_msg::mutable__tbc_reply() {
  set_has__tbc_reply();
  if (_tbc_reply_ == NULL) _tbc_reply_ = new ::client_baseserver::tbc_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._tbc_reply)
  return _tbc_reply_;
}
inline ::client_baseserver::tbc_reply* down_msg::release__tbc_reply() {
  clear_has__tbc_reply();
  ::client_baseserver::tbc_reply* temp = _tbc_reply_;
  _tbc_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__tbc_reply(::client_baseserver::tbc_reply* _tbc_reply) {
  delete _tbc_reply_;
  _tbc_reply_ = _tbc_reply;
  if (_tbc_reply) {
    set_has__tbc_reply();
  } else {
    clear_has__tbc_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._tbc_reply)
}

// optional .client_baseserver.get_maillist_reply _get_maillist_reply = 39;
inline bool down_msg::has__get_maillist_reply() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void down_msg::set_has__get_maillist_reply() {
  _has_bits_[1] |= 0x00000040u;
}
inline void down_msg::clear_has__get_maillist_reply() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void down_msg::clear__get_maillist_reply() {
  if (_get_maillist_reply_ != NULL) _get_maillist_reply_->::client_baseserver::get_maillist_reply::Clear();
  clear_has__get_maillist_reply();
}
inline const ::client_baseserver::get_maillist_reply& down_msg::_get_maillist_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._get_maillist_reply)
  return _get_maillist_reply_ != NULL ? *_get_maillist_reply_ : *default_instance_->_get_maillist_reply_;
}
inline ::client_baseserver::get_maillist_reply* down_msg::mutable__get_maillist_reply() {
  set_has__get_maillist_reply();
  if (_get_maillist_reply_ == NULL) _get_maillist_reply_ = new ::client_baseserver::get_maillist_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._get_maillist_reply)
  return _get_maillist_reply_;
}
inline ::client_baseserver::get_maillist_reply* down_msg::release__get_maillist_reply() {
  clear_has__get_maillist_reply();
  ::client_baseserver::get_maillist_reply* temp = _get_maillist_reply_;
  _get_maillist_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__get_maillist_reply(::client_baseserver::get_maillist_reply* _get_maillist_reply) {
  delete _get_maillist_reply_;
  _get_maillist_reply_ = _get_maillist_reply;
  if (_get_maillist_reply) {
    set_has__get_maillist_reply();
  } else {
    clear_has__get_maillist_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._get_maillist_reply)
}

// optional .client_baseserver.read_mail_reply _read_mail_reply = 40;
inline bool down_msg::has__read_mail_reply() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void down_msg::set_has__read_mail_reply() {
  _has_bits_[1] |= 0x00000080u;
}
inline void down_msg::clear_has__read_mail_reply() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void down_msg::clear__read_mail_reply() {
  if (_read_mail_reply_ != NULL) _read_mail_reply_->::client_baseserver::read_mail_reply::Clear();
  clear_has__read_mail_reply();
}
inline const ::client_baseserver::read_mail_reply& down_msg::_read_mail_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._read_mail_reply)
  return _read_mail_reply_ != NULL ? *_read_mail_reply_ : *default_instance_->_read_mail_reply_;
}
inline ::client_baseserver::read_mail_reply* down_msg::mutable__read_mail_reply() {
  set_has__read_mail_reply();
  if (_read_mail_reply_ == NULL) _read_mail_reply_ = new ::client_baseserver::read_mail_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._read_mail_reply)
  return _read_mail_reply_;
}
inline ::client_baseserver::read_mail_reply* down_msg::release__read_mail_reply() {
  clear_has__read_mail_reply();
  ::client_baseserver::read_mail_reply* temp = _read_mail_reply_;
  _read_mail_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__read_mail_reply(::client_baseserver::read_mail_reply* _read_mail_reply) {
  delete _read_mail_reply_;
  _read_mail_reply_ = _read_mail_reply;
  if (_read_mail_reply) {
    set_has__read_mail_reply();
  } else {
    clear_has__read_mail_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._read_mail_reply)
}

// optional uint32 _svr_time = 41;
inline bool down_msg::has__svr_time() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void down_msg::set_has__svr_time() {
  _has_bits_[1] |= 0x00000100u;
}
inline void down_msg::clear_has__svr_time() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void down_msg::clear__svr_time() {
  _svr_time_ = 0u;
  clear_has__svr_time();
}
inline ::google::protobuf::uint32 down_msg::_svr_time() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._svr_time)
  return _svr_time_;
}
inline void down_msg::set__svr_time(::google::protobuf::uint32 value) {
  set_has__svr_time();
  _svr_time_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.down_msg._svr_time)
}

// optional .client_baseserver.get_vip_gift_reply _get_vip_gift_reply = 42;
inline bool down_msg::has__get_vip_gift_reply() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void down_msg::set_has__get_vip_gift_reply() {
  _has_bits_[1] |= 0x00000200u;
}
inline void down_msg::clear_has__get_vip_gift_reply() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void down_msg::clear__get_vip_gift_reply() {
  if (_get_vip_gift_reply_ != NULL) _get_vip_gift_reply_->::client_baseserver::get_vip_gift_reply::Clear();
  clear_has__get_vip_gift_reply();
}
inline const ::client_baseserver::get_vip_gift_reply& down_msg::_get_vip_gift_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._get_vip_gift_reply)
  return _get_vip_gift_reply_ != NULL ? *_get_vip_gift_reply_ : *default_instance_->_get_vip_gift_reply_;
}
inline ::client_baseserver::get_vip_gift_reply* down_msg::mutable__get_vip_gift_reply() {
  set_has__get_vip_gift_reply();
  if (_get_vip_gift_reply_ == NULL) _get_vip_gift_reply_ = new ::client_baseserver::get_vip_gift_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._get_vip_gift_reply)
  return _get_vip_gift_reply_;
}
inline ::client_baseserver::get_vip_gift_reply* down_msg::release__get_vip_gift_reply() {
  clear_has__get_vip_gift_reply();
  ::client_baseserver::get_vip_gift_reply* temp = _get_vip_gift_reply_;
  _get_vip_gift_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__get_vip_gift_reply(::client_baseserver::get_vip_gift_reply* _get_vip_gift_reply) {
  delete _get_vip_gift_reply_;
  _get_vip_gift_reply_ = _get_vip_gift_reply;
  if (_get_vip_gift_reply) {
    set_has__get_vip_gift_reply();
  } else {
    clear_has__get_vip_gift_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._get_vip_gift_reply)
}

// optional .client_baseserver.chat_reply _chat_reply = 43;
inline bool down_msg::has__chat_reply() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
inline void down_msg::set_has__chat_reply() {
  _has_bits_[1] |= 0x00000400u;
}
inline void down_msg::clear_has__chat_reply() {
  _has_bits_[1] &= ~0x00000400u;
}
inline void down_msg::clear__chat_reply() {
  if (_chat_reply_ != NULL) _chat_reply_->::client_baseserver::chat_reply::Clear();
  clear_has__chat_reply();
}
inline const ::client_baseserver::chat_reply& down_msg::_chat_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._chat_reply)
  return _chat_reply_ != NULL ? *_chat_reply_ : *default_instance_->_chat_reply_;
}
inline ::client_baseserver::chat_reply* down_msg::mutable__chat_reply() {
  set_has__chat_reply();
  if (_chat_reply_ == NULL) _chat_reply_ = new ::client_baseserver::chat_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._chat_reply)
  return _chat_reply_;
}
inline ::client_baseserver::chat_reply* down_msg::release__chat_reply() {
  clear_has__chat_reply();
  ::client_baseserver::chat_reply* temp = _chat_reply_;
  _chat_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__chat_reply(::client_baseserver::chat_reply* _chat_reply) {
  delete _chat_reply_;
  _chat_reply_ = _chat_reply;
  if (_chat_reply) {
    set_has__chat_reply();
  } else {
    clear_has__chat_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._chat_reply)
}

// optional .client_baseserver.cdkey_gift_reply _cdkey_gift_reply = 44;
inline bool down_msg::has__cdkey_gift_reply() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
inline void down_msg::set_has__cdkey_gift_reply() {
  _has_bits_[1] |= 0x00000800u;
}
inline void down_msg::clear_has__cdkey_gift_reply() {
  _has_bits_[1] &= ~0x00000800u;
}
inline void down_msg::clear__cdkey_gift_reply() {
  if (_cdkey_gift_reply_ != NULL) _cdkey_gift_reply_->::client_baseserver::cdkey_gift_reply::Clear();
  clear_has__cdkey_gift_reply();
}
inline const ::client_baseserver::cdkey_gift_reply& down_msg::_cdkey_gift_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._cdkey_gift_reply)
  return _cdkey_gift_reply_ != NULL ? *_cdkey_gift_reply_ : *default_instance_->_cdkey_gift_reply_;
}
inline ::client_baseserver::cdkey_gift_reply* down_msg::mutable__cdkey_gift_reply() {
  set_has__cdkey_gift_reply();
  if (_cdkey_gift_reply_ == NULL) _cdkey_gift_reply_ = new ::client_baseserver::cdkey_gift_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._cdkey_gift_reply)
  return _cdkey_gift_reply_;
}
inline ::client_baseserver::cdkey_gift_reply* down_msg::release__cdkey_gift_reply() {
  clear_has__cdkey_gift_reply();
  ::client_baseserver::cdkey_gift_reply* temp = _cdkey_gift_reply_;
  _cdkey_gift_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__cdkey_gift_reply(::client_baseserver::cdkey_gift_reply* _cdkey_gift_reply) {
  delete _cdkey_gift_reply_;
  _cdkey_gift_reply_ = _cdkey_gift_reply;
  if (_cdkey_gift_reply) {
    set_has__cdkey_gift_reply();
  } else {
    clear_has__cdkey_gift_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._cdkey_gift_reply)
}

// optional .client_baseserver.guild_reply _guild_reply = 45;
inline bool down_msg::has__guild_reply() const {
  return (_has_bits_[1] & 0x00001000u) != 0;
}
inline void down_msg::set_has__guild_reply() {
  _has_bits_[1] |= 0x00001000u;
}
inline void down_msg::clear_has__guild_reply() {
  _has_bits_[1] &= ~0x00001000u;
}
inline void down_msg::clear__guild_reply() {
  if (_guild_reply_ != NULL) _guild_reply_->::client_baseserver::guild_reply::Clear();
  clear_has__guild_reply();
}
inline const ::client_baseserver::guild_reply& down_msg::_guild_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._guild_reply)
  return _guild_reply_ != NULL ? *_guild_reply_ : *default_instance_->_guild_reply_;
}
inline ::client_baseserver::guild_reply* down_msg::mutable__guild_reply() {
  set_has__guild_reply();
  if (_guild_reply_ == NULL) _guild_reply_ = new ::client_baseserver::guild_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._guild_reply)
  return _guild_reply_;
}
inline ::client_baseserver::guild_reply* down_msg::release__guild_reply() {
  clear_has__guild_reply();
  ::client_baseserver::guild_reply* temp = _guild_reply_;
  _guild_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__guild_reply(::client_baseserver::guild_reply* _guild_reply) {
  delete _guild_reply_;
  _guild_reply_ = _guild_reply;
  if (_guild_reply) {
    set_has__guild_reply();
  } else {
    clear_has__guild_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._guild_reply)
}

// optional .client_baseserver.ask_magicsoul_reply _ask_magicsoul_reply = 46;
inline bool down_msg::has__ask_magicsoul_reply() const {
  return (_has_bits_[1] & 0x00002000u) != 0;
}
inline void down_msg::set_has__ask_magicsoul_reply() {
  _has_bits_[1] |= 0x00002000u;
}
inline void down_msg::clear_has__ask_magicsoul_reply() {
  _has_bits_[1] &= ~0x00002000u;
}
inline void down_msg::clear__ask_magicsoul_reply() {
  if (_ask_magicsoul_reply_ != NULL) _ask_magicsoul_reply_->::client_baseserver::ask_magicsoul_reply::Clear();
  clear_has__ask_magicsoul_reply();
}
inline const ::client_baseserver::ask_magicsoul_reply& down_msg::_ask_magicsoul_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._ask_magicsoul_reply)
  return _ask_magicsoul_reply_ != NULL ? *_ask_magicsoul_reply_ : *default_instance_->_ask_magicsoul_reply_;
}
inline ::client_baseserver::ask_magicsoul_reply* down_msg::mutable__ask_magicsoul_reply() {
  set_has__ask_magicsoul_reply();
  if (_ask_magicsoul_reply_ == NULL) _ask_magicsoul_reply_ = new ::client_baseserver::ask_magicsoul_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._ask_magicsoul_reply)
  return _ask_magicsoul_reply_;
}
inline ::client_baseserver::ask_magicsoul_reply* down_msg::release__ask_magicsoul_reply() {
  clear_has__ask_magicsoul_reply();
  ::client_baseserver::ask_magicsoul_reply* temp = _ask_magicsoul_reply_;
  _ask_magicsoul_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__ask_magicsoul_reply(::client_baseserver::ask_magicsoul_reply* _ask_magicsoul_reply) {
  delete _ask_magicsoul_reply_;
  _ask_magicsoul_reply_ = _ask_magicsoul_reply;
  if (_ask_magicsoul_reply) {
    set_has__ask_magicsoul_reply();
  } else {
    clear_has__ask_magicsoul_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._ask_magicsoul_reply)
}

// optional .client_baseserver.activity_infos _ask_activity_info_reply = 47;
inline bool down_msg::has__ask_activity_info_reply() const {
  return (_has_bits_[1] & 0x00004000u) != 0;
}
inline void down_msg::set_has__ask_activity_info_reply() {
  _has_bits_[1] |= 0x00004000u;
}
inline void down_msg::clear_has__ask_activity_info_reply() {
  _has_bits_[1] &= ~0x00004000u;
}
inline void down_msg::clear__ask_activity_info_reply() {
  if (_ask_activity_info_reply_ != NULL) _ask_activity_info_reply_->::client_baseserver::activity_infos::Clear();
  clear_has__ask_activity_info_reply();
}
inline const ::client_baseserver::activity_infos& down_msg::_ask_activity_info_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._ask_activity_info_reply)
  return _ask_activity_info_reply_ != NULL ? *_ask_activity_info_reply_ : *default_instance_->_ask_activity_info_reply_;
}
inline ::client_baseserver::activity_infos* down_msg::mutable__ask_activity_info_reply() {
  set_has__ask_activity_info_reply();
  if (_ask_activity_info_reply_ == NULL) _ask_activity_info_reply_ = new ::client_baseserver::activity_infos;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._ask_activity_info_reply)
  return _ask_activity_info_reply_;
}
inline ::client_baseserver::activity_infos* down_msg::release__ask_activity_info_reply() {
  clear_has__ask_activity_info_reply();
  ::client_baseserver::activity_infos* temp = _ask_activity_info_reply_;
  _ask_activity_info_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__ask_activity_info_reply(::client_baseserver::activity_infos* _ask_activity_info_reply) {
  delete _ask_activity_info_reply_;
  _ask_activity_info_reply_ = _ask_activity_info_reply;
  if (_ask_activity_info_reply) {
    set_has__ask_activity_info_reply();
  } else {
    clear_has__ask_activity_info_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._ask_activity_info_reply)
}

// optional .client_baseserver.excavate_reply _excavate_reply = 48;
inline bool down_msg::has__excavate_reply() const {
  return (_has_bits_[1] & 0x00008000u) != 0;
}
inline void down_msg::set_has__excavate_reply() {
  _has_bits_[1] |= 0x00008000u;
}
inline void down_msg::clear_has__excavate_reply() {
  _has_bits_[1] &= ~0x00008000u;
}
inline void down_msg::clear__excavate_reply() {
  if (_excavate_reply_ != NULL) _excavate_reply_->::client_baseserver::excavate_reply::Clear();
  clear_has__excavate_reply();
}
inline const ::client_baseserver::excavate_reply& down_msg::_excavate_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._excavate_reply)
  return _excavate_reply_ != NULL ? *_excavate_reply_ : *default_instance_->_excavate_reply_;
}
inline ::client_baseserver::excavate_reply* down_msg::mutable__excavate_reply() {
  set_has__excavate_reply();
  if (_excavate_reply_ == NULL) _excavate_reply_ = new ::client_baseserver::excavate_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._excavate_reply)
  return _excavate_reply_;
}
inline ::client_baseserver::excavate_reply* down_msg::release__excavate_reply() {
  clear_has__excavate_reply();
  ::client_baseserver::excavate_reply* temp = _excavate_reply_;
  _excavate_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__excavate_reply(::client_baseserver::excavate_reply* _excavate_reply) {
  delete _excavate_reply_;
  _excavate_reply_ = _excavate_reply;
  if (_excavate_reply) {
    set_has__excavate_reply();
  } else {
    clear_has__excavate_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._excavate_reply)
}

// optional .client_baseserver.system_setting_reply _system_setting_reply = 49;
inline bool down_msg::has__system_setting_reply() const {
  return (_has_bits_[1] & 0x00010000u) != 0;
}
inline void down_msg::set_has__system_setting_reply() {
  _has_bits_[1] |= 0x00010000u;
}
inline void down_msg::clear_has__system_setting_reply() {
  _has_bits_[1] &= ~0x00010000u;
}
inline void down_msg::clear__system_setting_reply() {
  if (_system_setting_reply_ != NULL) _system_setting_reply_->::client_baseserver::system_setting_reply::Clear();
  clear_has__system_setting_reply();
}
inline const ::client_baseserver::system_setting_reply& down_msg::_system_setting_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._system_setting_reply)
  return _system_setting_reply_ != NULL ? *_system_setting_reply_ : *default_instance_->_system_setting_reply_;
}
inline ::client_baseserver::system_setting_reply* down_msg::mutable__system_setting_reply() {
  set_has__system_setting_reply();
  if (_system_setting_reply_ == NULL) _system_setting_reply_ = new ::client_baseserver::system_setting_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._system_setting_reply)
  return _system_setting_reply_;
}
inline ::client_baseserver::system_setting_reply* down_msg::release__system_setting_reply() {
  clear_has__system_setting_reply();
  ::client_baseserver::system_setting_reply* temp = _system_setting_reply_;
  _system_setting_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__system_setting_reply(::client_baseserver::system_setting_reply* _system_setting_reply) {
  delete _system_setting_reply_;
  _system_setting_reply_ = _system_setting_reply;
  if (_system_setting_reply) {
    set_has__system_setting_reply();
  } else {
    clear_has__system_setting_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._system_setting_reply)
}

// optional .client_baseserver.query_split_data_reply _query_split_data_reply = 50;
inline bool down_msg::has__query_split_data_reply() const {
  return (_has_bits_[1] & 0x00020000u) != 0;
}
inline void down_msg::set_has__query_split_data_reply() {
  _has_bits_[1] |= 0x00020000u;
}
inline void down_msg::clear_has__query_split_data_reply() {
  _has_bits_[1] &= ~0x00020000u;
}
inline void down_msg::clear__query_split_data_reply() {
  if (_query_split_data_reply_ != NULL) _query_split_data_reply_->::client_baseserver::query_split_data_reply::Clear();
  clear_has__query_split_data_reply();
}
inline const ::client_baseserver::query_split_data_reply& down_msg::_query_split_data_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._query_split_data_reply)
  return _query_split_data_reply_ != NULL ? *_query_split_data_reply_ : *default_instance_->_query_split_data_reply_;
}
inline ::client_baseserver::query_split_data_reply* down_msg::mutable__query_split_data_reply() {
  set_has__query_split_data_reply();
  if (_query_split_data_reply_ == NULL) _query_split_data_reply_ = new ::client_baseserver::query_split_data_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._query_split_data_reply)
  return _query_split_data_reply_;
}
inline ::client_baseserver::query_split_data_reply* down_msg::release__query_split_data_reply() {
  clear_has__query_split_data_reply();
  ::client_baseserver::query_split_data_reply* temp = _query_split_data_reply_;
  _query_split_data_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__query_split_data_reply(::client_baseserver::query_split_data_reply* _query_split_data_reply) {
  delete _query_split_data_reply_;
  _query_split_data_reply_ = _query_split_data_reply;
  if (_query_split_data_reply) {
    set_has__query_split_data_reply();
  } else {
    clear_has__query_split_data_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._query_split_data_reply)
}

// optional .client_baseserver.query_split_return_reply _query_split_return_reply = 51;
inline bool down_msg::has__query_split_return_reply() const {
  return (_has_bits_[1] & 0x00040000u) != 0;
}
inline void down_msg::set_has__query_split_return_reply() {
  _has_bits_[1] |= 0x00040000u;
}
inline void down_msg::clear_has__query_split_return_reply() {
  _has_bits_[1] &= ~0x00040000u;
}
inline void down_msg::clear__query_split_return_reply() {
  if (_query_split_return_reply_ != NULL) _query_split_return_reply_->::client_baseserver::query_split_return_reply::Clear();
  clear_has__query_split_return_reply();
}
inline const ::client_baseserver::query_split_return_reply& down_msg::_query_split_return_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._query_split_return_reply)
  return _query_split_return_reply_ != NULL ? *_query_split_return_reply_ : *default_instance_->_query_split_return_reply_;
}
inline ::client_baseserver::query_split_return_reply* down_msg::mutable__query_split_return_reply() {
  set_has__query_split_return_reply();
  if (_query_split_return_reply_ == NULL) _query_split_return_reply_ = new ::client_baseserver::query_split_return_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._query_split_return_reply)
  return _query_split_return_reply_;
}
inline ::client_baseserver::query_split_return_reply* down_msg::release__query_split_return_reply() {
  clear_has__query_split_return_reply();
  ::client_baseserver::query_split_return_reply* temp = _query_split_return_reply_;
  _query_split_return_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__query_split_return_reply(::client_baseserver::query_split_return_reply* _query_split_return_reply) {
  delete _query_split_return_reply_;
  _query_split_return_reply_ = _query_split_return_reply;
  if (_query_split_return_reply) {
    set_has__query_split_return_reply();
  } else {
    clear_has__query_split_return_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._query_split_return_reply)
}

// optional .client_baseserver.split_hero_reply _split_hero_reply = 52;
inline bool down_msg::has__split_hero_reply() const {
  return (_has_bits_[1] & 0x00080000u) != 0;
}
inline void down_msg::set_has__split_hero_reply() {
  _has_bits_[1] |= 0x00080000u;
}
inline void down_msg::clear_has__split_hero_reply() {
  _has_bits_[1] &= ~0x00080000u;
}
inline void down_msg::clear__split_hero_reply() {
  if (_split_hero_reply_ != NULL) _split_hero_reply_->::client_baseserver::split_hero_reply::Clear();
  clear_has__split_hero_reply();
}
inline const ::client_baseserver::split_hero_reply& down_msg::_split_hero_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._split_hero_reply)
  return _split_hero_reply_ != NULL ? *_split_hero_reply_ : *default_instance_->_split_hero_reply_;
}
inline ::client_baseserver::split_hero_reply* down_msg::mutable__split_hero_reply() {
  set_has__split_hero_reply();
  if (_split_hero_reply_ == NULL) _split_hero_reply_ = new ::client_baseserver::split_hero_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._split_hero_reply)
  return _split_hero_reply_;
}
inline ::client_baseserver::split_hero_reply* down_msg::release__split_hero_reply() {
  clear_has__split_hero_reply();
  ::client_baseserver::split_hero_reply* temp = _split_hero_reply_;
  _split_hero_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__split_hero_reply(::client_baseserver::split_hero_reply* _split_hero_reply) {
  delete _split_hero_reply_;
  _split_hero_reply_ = _split_hero_reply;
  if (_split_hero_reply) {
    set_has__split_hero_reply();
  } else {
    clear_has__split_hero_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._split_hero_reply)
}

// optional .client_baseserver.worldcup_reply _worldcup_reply = 53;
inline bool down_msg::has__worldcup_reply() const {
  return (_has_bits_[1] & 0x00100000u) != 0;
}
inline void down_msg::set_has__worldcup_reply() {
  _has_bits_[1] |= 0x00100000u;
}
inline void down_msg::clear_has__worldcup_reply() {
  _has_bits_[1] &= ~0x00100000u;
}
inline void down_msg::clear__worldcup_reply() {
  if (_worldcup_reply_ != NULL) _worldcup_reply_->::client_baseserver::worldcup_reply::Clear();
  clear_has__worldcup_reply();
}
inline const ::client_baseserver::worldcup_reply& down_msg::_worldcup_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._worldcup_reply)
  return _worldcup_reply_ != NULL ? *_worldcup_reply_ : *default_instance_->_worldcup_reply_;
}
inline ::client_baseserver::worldcup_reply* down_msg::mutable__worldcup_reply() {
  set_has__worldcup_reply();
  if (_worldcup_reply_ == NULL) _worldcup_reply_ = new ::client_baseserver::worldcup_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._worldcup_reply)
  return _worldcup_reply_;
}
inline ::client_baseserver::worldcup_reply* down_msg::release__worldcup_reply() {
  clear_has__worldcup_reply();
  ::client_baseserver::worldcup_reply* temp = _worldcup_reply_;
  _worldcup_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__worldcup_reply(::client_baseserver::worldcup_reply* _worldcup_reply) {
  delete _worldcup_reply_;
  _worldcup_reply_ = _worldcup_reply;
  if (_worldcup_reply) {
    set_has__worldcup_reply();
  } else {
    clear_has__worldcup_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._worldcup_reply)
}

// optional .client_baseserver.battle_check_fail _battle_check_fail = 54;
inline bool down_msg::has__battle_check_fail() const {
  return (_has_bits_[1] & 0x00200000u) != 0;
}
inline void down_msg::set_has__battle_check_fail() {
  _has_bits_[1] |= 0x00200000u;
}
inline void down_msg::clear_has__battle_check_fail() {
  _has_bits_[1] &= ~0x00200000u;
}
inline void down_msg::clear__battle_check_fail() {
  if (_battle_check_fail_ != NULL) _battle_check_fail_->::client_baseserver::battle_check_fail::Clear();
  clear_has__battle_check_fail();
}
inline const ::client_baseserver::battle_check_fail& down_msg::_battle_check_fail() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._battle_check_fail)
  return _battle_check_fail_ != NULL ? *_battle_check_fail_ : *default_instance_->_battle_check_fail_;
}
inline ::client_baseserver::battle_check_fail* down_msg::mutable__battle_check_fail() {
  set_has__battle_check_fail();
  if (_battle_check_fail_ == NULL) _battle_check_fail_ = new ::client_baseserver::battle_check_fail;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._battle_check_fail)
  return _battle_check_fail_;
}
inline ::client_baseserver::battle_check_fail* down_msg::release__battle_check_fail() {
  clear_has__battle_check_fail();
  ::client_baseserver::battle_check_fail* temp = _battle_check_fail_;
  _battle_check_fail_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__battle_check_fail(::client_baseserver::battle_check_fail* _battle_check_fail) {
  delete _battle_check_fail_;
  _battle_check_fail_ = _battle_check_fail;
  if (_battle_check_fail) {
    set_has__battle_check_fail();
  } else {
    clear_has__battle_check_fail();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._battle_check_fail)
}

// optional .client_baseserver.query_replay _query_replay = 55;
inline bool down_msg::has__query_replay() const {
  return (_has_bits_[1] & 0x00400000u) != 0;
}
inline void down_msg::set_has__query_replay() {
  _has_bits_[1] |= 0x00400000u;
}
inline void down_msg::clear_has__query_replay() {
  _has_bits_[1] &= ~0x00400000u;
}
inline void down_msg::clear__query_replay() {
  if (_query_replay_ != NULL) _query_replay_->::client_baseserver::query_replay::Clear();
  clear_has__query_replay();
}
inline const ::client_baseserver::query_replay& down_msg::_query_replay() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._query_replay)
  return _query_replay_ != NULL ? *_query_replay_ : *default_instance_->_query_replay_;
}
inline ::client_baseserver::query_replay* down_msg::mutable__query_replay() {
  set_has__query_replay();
  if (_query_replay_ == NULL) _query_replay_ = new ::client_baseserver::query_replay;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._query_replay)
  return _query_replay_;
}
inline ::client_baseserver::query_replay* down_msg::release__query_replay() {
  clear_has__query_replay();
  ::client_baseserver::query_replay* temp = _query_replay_;
  _query_replay_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__query_replay(::client_baseserver::query_replay* _query_replay) {
  delete _query_replay_;
  _query_replay_ = _query_replay;
  if (_query_replay) {
    set_has__query_replay();
  } else {
    clear_has__query_replay();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._query_replay)
}

// optional .client_baseserver.super_link _super_link = 56;
inline bool down_msg::has__super_link() const {
  return (_has_bits_[1] & 0x00800000u) != 0;
}
inline void down_msg::set_has__super_link() {
  _has_bits_[1] |= 0x00800000u;
}
inline void down_msg::clear_has__super_link() {
  _has_bits_[1] &= ~0x00800000u;
}
inline void down_msg::clear__super_link() {
  if (_super_link_ != NULL) _super_link_->::client_baseserver::super_link::Clear();
  clear_has__super_link();
}
inline const ::client_baseserver::super_link& down_msg::_super_link() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._super_link)
  return _super_link_ != NULL ? *_super_link_ : *default_instance_->_super_link_;
}
inline ::client_baseserver::super_link* down_msg::mutable__super_link() {
  set_has__super_link();
  if (_super_link_ == NULL) _super_link_ = new ::client_baseserver::super_link;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._super_link)
  return _super_link_;
}
inline ::client_baseserver::super_link* down_msg::release__super_link() {
  clear_has__super_link();
  ::client_baseserver::super_link* temp = _super_link_;
  _super_link_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__super_link(::client_baseserver::super_link* _super_link) {
  delete _super_link_;
  _super_link_ = _super_link;
  if (_super_link) {
    set_has__super_link();
  } else {
    clear_has__super_link();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._super_link)
}

// optional .client_baseserver.query_ranklist_reply _query_ranklist_reply = 57;
inline bool down_msg::has__query_ranklist_reply() const {
  return (_has_bits_[1] & 0x01000000u) != 0;
}
inline void down_msg::set_has__query_ranklist_reply() {
  _has_bits_[1] |= 0x01000000u;
}
inline void down_msg::clear_has__query_ranklist_reply() {
  _has_bits_[1] &= ~0x01000000u;
}
inline void down_msg::clear__query_ranklist_reply() {
  if (_query_ranklist_reply_ != NULL) _query_ranklist_reply_->::client_baseserver::query_ranklist_reply::Clear();
  clear_has__query_ranklist_reply();
}
inline const ::client_baseserver::query_ranklist_reply& down_msg::_query_ranklist_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._query_ranklist_reply)
  return _query_ranklist_reply_ != NULL ? *_query_ranklist_reply_ : *default_instance_->_query_ranklist_reply_;
}
inline ::client_baseserver::query_ranklist_reply* down_msg::mutable__query_ranklist_reply() {
  set_has__query_ranklist_reply();
  if (_query_ranklist_reply_ == NULL) _query_ranklist_reply_ = new ::client_baseserver::query_ranklist_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._query_ranklist_reply)
  return _query_ranklist_reply_;
}
inline ::client_baseserver::query_ranklist_reply* down_msg::release__query_ranklist_reply() {
  clear_has__query_ranklist_reply();
  ::client_baseserver::query_ranklist_reply* temp = _query_ranklist_reply_;
  _query_ranklist_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__query_ranklist_reply(::client_baseserver::query_ranklist_reply* _query_ranklist_reply) {
  delete _query_ranklist_reply_;
  _query_ranklist_reply_ = _query_ranklist_reply;
  if (_query_ranklist_reply) {
    set_has__query_ranklist_reply();
  } else {
    clear_has__query_ranklist_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._query_ranklist_reply)
}

// optional .client_baseserver.request_guild_log_reply _request_guild_log_reply = 65;
inline bool down_msg::has__request_guild_log_reply() const {
  return (_has_bits_[1] & 0x02000000u) != 0;
}
inline void down_msg::set_has__request_guild_log_reply() {
  _has_bits_[1] |= 0x02000000u;
}
inline void down_msg::clear_has__request_guild_log_reply() {
  _has_bits_[1] &= ~0x02000000u;
}
inline void down_msg::clear__request_guild_log_reply() {
  if (_request_guild_log_reply_ != NULL) _request_guild_log_reply_->::client_baseserver::request_guild_log_reply::Clear();
  clear_has__request_guild_log_reply();
}
inline const ::client_baseserver::request_guild_log_reply& down_msg::_request_guild_log_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._request_guild_log_reply)
  return _request_guild_log_reply_ != NULL ? *_request_guild_log_reply_ : *default_instance_->_request_guild_log_reply_;
}
inline ::client_baseserver::request_guild_log_reply* down_msg::mutable__request_guild_log_reply() {
  set_has__request_guild_log_reply();
  if (_request_guild_log_reply_ == NULL) _request_guild_log_reply_ = new ::client_baseserver::request_guild_log_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._request_guild_log_reply)
  return _request_guild_log_reply_;
}
inline ::client_baseserver::request_guild_log_reply* down_msg::release__request_guild_log_reply() {
  clear_has__request_guild_log_reply();
  ::client_baseserver::request_guild_log_reply* temp = _request_guild_log_reply_;
  _request_guild_log_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__request_guild_log_reply(::client_baseserver::request_guild_log_reply* _request_guild_log_reply) {
  delete _request_guild_log_reply_;
  _request_guild_log_reply_ = _request_guild_log_reply;
  if (_request_guild_log_reply) {
    set_has__request_guild_log_reply();
  } else {
    clear_has__request_guild_log_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._request_guild_log_reply)
}

// optional .client_baseserver.change_server_reply _change_server_reply = 58;
inline bool down_msg::has__change_server_reply() const {
  return (_has_bits_[1] & 0x04000000u) != 0;
}
inline void down_msg::set_has__change_server_reply() {
  _has_bits_[1] |= 0x04000000u;
}
inline void down_msg::clear_has__change_server_reply() {
  _has_bits_[1] &= ~0x04000000u;
}
inline void down_msg::clear__change_server_reply() {
  if (_change_server_reply_ != NULL) _change_server_reply_->::client_baseserver::change_server_reply::Clear();
  clear_has__change_server_reply();
}
inline const ::client_baseserver::change_server_reply& down_msg::_change_server_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._change_server_reply)
  return _change_server_reply_ != NULL ? *_change_server_reply_ : *default_instance_->_change_server_reply_;
}
inline ::client_baseserver::change_server_reply* down_msg::mutable__change_server_reply() {
  set_has__change_server_reply();
  if (_change_server_reply_ == NULL) _change_server_reply_ = new ::client_baseserver::change_server_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._change_server_reply)
  return _change_server_reply_;
}
inline ::client_baseserver::change_server_reply* down_msg::release__change_server_reply() {
  clear_has__change_server_reply();
  ::client_baseserver::change_server_reply* temp = _change_server_reply_;
  _change_server_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__change_server_reply(::client_baseserver::change_server_reply* _change_server_reply) {
  delete _change_server_reply_;
  _change_server_reply_ = _change_server_reply;
  if (_change_server_reply) {
    set_has__change_server_reply();
  } else {
    clear_has__change_server_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._change_server_reply)
}

// optional .client_baseserver.activity_info_reply _activity_info_reply = 59;
inline bool down_msg::has__activity_info_reply() const {
  return (_has_bits_[1] & 0x08000000u) != 0;
}
inline void down_msg::set_has__activity_info_reply() {
  _has_bits_[1] |= 0x08000000u;
}
inline void down_msg::clear_has__activity_info_reply() {
  _has_bits_[1] &= ~0x08000000u;
}
inline void down_msg::clear__activity_info_reply() {
  if (_activity_info_reply_ != NULL) _activity_info_reply_->::client_baseserver::activity_info_reply::Clear();
  clear_has__activity_info_reply();
}
inline const ::client_baseserver::activity_info_reply& down_msg::_activity_info_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._activity_info_reply)
  return _activity_info_reply_ != NULL ? *_activity_info_reply_ : *default_instance_->_activity_info_reply_;
}
inline ::client_baseserver::activity_info_reply* down_msg::mutable__activity_info_reply() {
  set_has__activity_info_reply();
  if (_activity_info_reply_ == NULL) _activity_info_reply_ = new ::client_baseserver::activity_info_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._activity_info_reply)
  return _activity_info_reply_;
}
inline ::client_baseserver::activity_info_reply* down_msg::release__activity_info_reply() {
  clear_has__activity_info_reply();
  ::client_baseserver::activity_info_reply* temp = _activity_info_reply_;
  _activity_info_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__activity_info_reply(::client_baseserver::activity_info_reply* _activity_info_reply) {
  delete _activity_info_reply_;
  _activity_info_reply_ = _activity_info_reply;
  if (_activity_info_reply) {
    set_has__activity_info_reply();
  } else {
    clear_has__activity_info_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._activity_info_reply)
}

// optional .client_baseserver.activity_lotto_info_reply _activity_lotto_info_reply = 60;
inline bool down_msg::has__activity_lotto_info_reply() const {
  return (_has_bits_[1] & 0x10000000u) != 0;
}
inline void down_msg::set_has__activity_lotto_info_reply() {
  _has_bits_[1] |= 0x10000000u;
}
inline void down_msg::clear_has__activity_lotto_info_reply() {
  _has_bits_[1] &= ~0x10000000u;
}
inline void down_msg::clear__activity_lotto_info_reply() {
  if (_activity_lotto_info_reply_ != NULL) _activity_lotto_info_reply_->::client_baseserver::activity_lotto_info_reply::Clear();
  clear_has__activity_lotto_info_reply();
}
inline const ::client_baseserver::activity_lotto_info_reply& down_msg::_activity_lotto_info_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._activity_lotto_info_reply)
  return _activity_lotto_info_reply_ != NULL ? *_activity_lotto_info_reply_ : *default_instance_->_activity_lotto_info_reply_;
}
inline ::client_baseserver::activity_lotto_info_reply* down_msg::mutable__activity_lotto_info_reply() {
  set_has__activity_lotto_info_reply();
  if (_activity_lotto_info_reply_ == NULL) _activity_lotto_info_reply_ = new ::client_baseserver::activity_lotto_info_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._activity_lotto_info_reply)
  return _activity_lotto_info_reply_;
}
inline ::client_baseserver::activity_lotto_info_reply* down_msg::release__activity_lotto_info_reply() {
  clear_has__activity_lotto_info_reply();
  ::client_baseserver::activity_lotto_info_reply* temp = _activity_lotto_info_reply_;
  _activity_lotto_info_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__activity_lotto_info_reply(::client_baseserver::activity_lotto_info_reply* _activity_lotto_info_reply) {
  delete _activity_lotto_info_reply_;
  _activity_lotto_info_reply_ = _activity_lotto_info_reply;
  if (_activity_lotto_info_reply) {
    set_has__activity_lotto_info_reply();
  } else {
    clear_has__activity_lotto_info_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._activity_lotto_info_reply)
}

// optional .client_baseserver.activity_lotto_reward_reply _activity_lotto_reward_reply = 61;
inline bool down_msg::has__activity_lotto_reward_reply() const {
  return (_has_bits_[1] & 0x20000000u) != 0;
}
inline void down_msg::set_has__activity_lotto_reward_reply() {
  _has_bits_[1] |= 0x20000000u;
}
inline void down_msg::clear_has__activity_lotto_reward_reply() {
  _has_bits_[1] &= ~0x20000000u;
}
inline void down_msg::clear__activity_lotto_reward_reply() {
  if (_activity_lotto_reward_reply_ != NULL) _activity_lotto_reward_reply_->::client_baseserver::activity_lotto_reward_reply::Clear();
  clear_has__activity_lotto_reward_reply();
}
inline const ::client_baseserver::activity_lotto_reward_reply& down_msg::_activity_lotto_reward_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._activity_lotto_reward_reply)
  return _activity_lotto_reward_reply_ != NULL ? *_activity_lotto_reward_reply_ : *default_instance_->_activity_lotto_reward_reply_;
}
inline ::client_baseserver::activity_lotto_reward_reply* down_msg::mutable__activity_lotto_reward_reply() {
  set_has__activity_lotto_reward_reply();
  if (_activity_lotto_reward_reply_ == NULL) _activity_lotto_reward_reply_ = new ::client_baseserver::activity_lotto_reward_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._activity_lotto_reward_reply)
  return _activity_lotto_reward_reply_;
}
inline ::client_baseserver::activity_lotto_reward_reply* down_msg::release__activity_lotto_reward_reply() {
  clear_has__activity_lotto_reward_reply();
  ::client_baseserver::activity_lotto_reward_reply* temp = _activity_lotto_reward_reply_;
  _activity_lotto_reward_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__activity_lotto_reward_reply(::client_baseserver::activity_lotto_reward_reply* _activity_lotto_reward_reply) {
  delete _activity_lotto_reward_reply_;
  _activity_lotto_reward_reply_ = _activity_lotto_reward_reply;
  if (_activity_lotto_reward_reply) {
    set_has__activity_lotto_reward_reply();
  } else {
    clear_has__activity_lotto_reward_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._activity_lotto_reward_reply)
}

// optional .client_baseserver.activity_bigpackage_info_reply _activity_bigpackage_info_reply = 62;
inline bool down_msg::has__activity_bigpackage_info_reply() const {
  return (_has_bits_[1] & 0x40000000u) != 0;
}
inline void down_msg::set_has__activity_bigpackage_info_reply() {
  _has_bits_[1] |= 0x40000000u;
}
inline void down_msg::clear_has__activity_bigpackage_info_reply() {
  _has_bits_[1] &= ~0x40000000u;
}
inline void down_msg::clear__activity_bigpackage_info_reply() {
  if (_activity_bigpackage_info_reply_ != NULL) _activity_bigpackage_info_reply_->::client_baseserver::activity_bigpackage_info_reply::Clear();
  clear_has__activity_bigpackage_info_reply();
}
inline const ::client_baseserver::activity_bigpackage_info_reply& down_msg::_activity_bigpackage_info_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._activity_bigpackage_info_reply)
  return _activity_bigpackage_info_reply_ != NULL ? *_activity_bigpackage_info_reply_ : *default_instance_->_activity_bigpackage_info_reply_;
}
inline ::client_baseserver::activity_bigpackage_info_reply* down_msg::mutable__activity_bigpackage_info_reply() {
  set_has__activity_bigpackage_info_reply();
  if (_activity_bigpackage_info_reply_ == NULL) _activity_bigpackage_info_reply_ = new ::client_baseserver::activity_bigpackage_info_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._activity_bigpackage_info_reply)
  return _activity_bigpackage_info_reply_;
}
inline ::client_baseserver::activity_bigpackage_info_reply* down_msg::release__activity_bigpackage_info_reply() {
  clear_has__activity_bigpackage_info_reply();
  ::client_baseserver::activity_bigpackage_info_reply* temp = _activity_bigpackage_info_reply_;
  _activity_bigpackage_info_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__activity_bigpackage_info_reply(::client_baseserver::activity_bigpackage_info_reply* _activity_bigpackage_info_reply) {
  delete _activity_bigpackage_info_reply_;
  _activity_bigpackage_info_reply_ = _activity_bigpackage_info_reply;
  if (_activity_bigpackage_info_reply) {
    set_has__activity_bigpackage_info_reply();
  } else {
    clear_has__activity_bigpackage_info_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._activity_bigpackage_info_reply)
}

// optional .client_baseserver.activity_bigpackage_reward_reply _activity_bigpackage_reward_reply = 63;
inline bool down_msg::has__activity_bigpackage_reward_reply() const {
  return (_has_bits_[1] & 0x80000000u) != 0;
}
inline void down_msg::set_has__activity_bigpackage_reward_reply() {
  _has_bits_[1] |= 0x80000000u;
}
inline void down_msg::clear_has__activity_bigpackage_reward_reply() {
  _has_bits_[1] &= ~0x80000000u;
}
inline void down_msg::clear__activity_bigpackage_reward_reply() {
  if (_activity_bigpackage_reward_reply_ != NULL) _activity_bigpackage_reward_reply_->::client_baseserver::activity_bigpackage_reward_reply::Clear();
  clear_has__activity_bigpackage_reward_reply();
}
inline const ::client_baseserver::activity_bigpackage_reward_reply& down_msg::_activity_bigpackage_reward_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._activity_bigpackage_reward_reply)
  return _activity_bigpackage_reward_reply_ != NULL ? *_activity_bigpackage_reward_reply_ : *default_instance_->_activity_bigpackage_reward_reply_;
}
inline ::client_baseserver::activity_bigpackage_reward_reply* down_msg::mutable__activity_bigpackage_reward_reply() {
  set_has__activity_bigpackage_reward_reply();
  if (_activity_bigpackage_reward_reply_ == NULL) _activity_bigpackage_reward_reply_ = new ::client_baseserver::activity_bigpackage_reward_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._activity_bigpackage_reward_reply)
  return _activity_bigpackage_reward_reply_;
}
inline ::client_baseserver::activity_bigpackage_reward_reply* down_msg::release__activity_bigpackage_reward_reply() {
  clear_has__activity_bigpackage_reward_reply();
  ::client_baseserver::activity_bigpackage_reward_reply* temp = _activity_bigpackage_reward_reply_;
  _activity_bigpackage_reward_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__activity_bigpackage_reward_reply(::client_baseserver::activity_bigpackage_reward_reply* _activity_bigpackage_reward_reply) {
  delete _activity_bigpackage_reward_reply_;
  _activity_bigpackage_reward_reply_ = _activity_bigpackage_reward_reply;
  if (_activity_bigpackage_reward_reply) {
    set_has__activity_bigpackage_reward_reply();
  } else {
    clear_has__activity_bigpackage_reward_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._activity_bigpackage_reward_reply)
}

// optional .client_baseserver.activity_bigpackage_reset_reply _activity_bigpackage_reset_reply = 64;
inline bool down_msg::has__activity_bigpackage_reset_reply() const {
  return (_has_bits_[2] & 0x00000001u) != 0;
}
inline void down_msg::set_has__activity_bigpackage_reset_reply() {
  _has_bits_[2] |= 0x00000001u;
}
inline void down_msg::clear_has__activity_bigpackage_reset_reply() {
  _has_bits_[2] &= ~0x00000001u;
}
inline void down_msg::clear__activity_bigpackage_reset_reply() {
  if (_activity_bigpackage_reset_reply_ != NULL) _activity_bigpackage_reset_reply_->::client_baseserver::activity_bigpackage_reset_reply::Clear();
  clear_has__activity_bigpackage_reset_reply();
}
inline const ::client_baseserver::activity_bigpackage_reset_reply& down_msg::_activity_bigpackage_reset_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._activity_bigpackage_reset_reply)
  return _activity_bigpackage_reset_reply_ != NULL ? *_activity_bigpackage_reset_reply_ : *default_instance_->_activity_bigpackage_reset_reply_;
}
inline ::client_baseserver::activity_bigpackage_reset_reply* down_msg::mutable__activity_bigpackage_reset_reply() {
  set_has__activity_bigpackage_reset_reply();
  if (_activity_bigpackage_reset_reply_ == NULL) _activity_bigpackage_reset_reply_ = new ::client_baseserver::activity_bigpackage_reset_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._activity_bigpackage_reset_reply)
  return _activity_bigpackage_reset_reply_;
}
inline ::client_baseserver::activity_bigpackage_reset_reply* down_msg::release__activity_bigpackage_reset_reply() {
  clear_has__activity_bigpackage_reset_reply();
  ::client_baseserver::activity_bigpackage_reset_reply* temp = _activity_bigpackage_reset_reply_;
  _activity_bigpackage_reset_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__activity_bigpackage_reset_reply(::client_baseserver::activity_bigpackage_reset_reply* _activity_bigpackage_reset_reply) {
  delete _activity_bigpackage_reset_reply_;
  _activity_bigpackage_reset_reply_ = _activity_bigpackage_reset_reply;
  if (_activity_bigpackage_reset_reply) {
    set_has__activity_bigpackage_reset_reply();
  } else {
    clear_has__activity_bigpackage_reset_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._activity_bigpackage_reset_reply)
}

// optional .client_baseserver.fb_attention_reply _fb_attention_reply = 300;
inline bool down_msg::has__fb_attention_reply() const {
  return (_has_bits_[2] & 0x00000002u) != 0;
}
inline void down_msg::set_has__fb_attention_reply() {
  _has_bits_[2] |= 0x00000002u;
}
inline void down_msg::clear_has__fb_attention_reply() {
  _has_bits_[2] &= ~0x00000002u;
}
inline void down_msg::clear__fb_attention_reply() {
  if (_fb_attention_reply_ != NULL) _fb_attention_reply_->::client_baseserver::fb_attention_reply::Clear();
  clear_has__fb_attention_reply();
}
inline const ::client_baseserver::fb_attention_reply& down_msg::_fb_attention_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._fb_attention_reply)
  return _fb_attention_reply_ != NULL ? *_fb_attention_reply_ : *default_instance_->_fb_attention_reply_;
}
inline ::client_baseserver::fb_attention_reply* down_msg::mutable__fb_attention_reply() {
  set_has__fb_attention_reply();
  if (_fb_attention_reply_ == NULL) _fb_attention_reply_ = new ::client_baseserver::fb_attention_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._fb_attention_reply)
  return _fb_attention_reply_;
}
inline ::client_baseserver::fb_attention_reply* down_msg::release__fb_attention_reply() {
  clear_has__fb_attention_reply();
  ::client_baseserver::fb_attention_reply* temp = _fb_attention_reply_;
  _fb_attention_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__fb_attention_reply(::client_baseserver::fb_attention_reply* _fb_attention_reply) {
  delete _fb_attention_reply_;
  _fb_attention_reply_ = _fb_attention_reply;
  if (_fb_attention_reply) {
    set_has__fb_attention_reply();
  } else {
    clear_has__fb_attention_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._fb_attention_reply)
}

// optional .client_baseserver.continue_pay_reply _continue_pay_reply = 302;
inline bool down_msg::has__continue_pay_reply() const {
  return (_has_bits_[2] & 0x00000004u) != 0;
}
inline void down_msg::set_has__continue_pay_reply() {
  _has_bits_[2] |= 0x00000004u;
}
inline void down_msg::clear_has__continue_pay_reply() {
  _has_bits_[2] &= ~0x00000004u;
}
inline void down_msg::clear__continue_pay_reply() {
  if (_continue_pay_reply_ != NULL) _continue_pay_reply_->::client_baseserver::continue_pay_reply::Clear();
  clear_has__continue_pay_reply();
}
inline const ::client_baseserver::continue_pay_reply& down_msg::_continue_pay_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._continue_pay_reply)
  return _continue_pay_reply_ != NULL ? *_continue_pay_reply_ : *default_instance_->_continue_pay_reply_;
}
inline ::client_baseserver::continue_pay_reply* down_msg::mutable__continue_pay_reply() {
  set_has__continue_pay_reply();
  if (_continue_pay_reply_ == NULL) _continue_pay_reply_ = new ::client_baseserver::continue_pay_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._continue_pay_reply)
  return _continue_pay_reply_;
}
inline ::client_baseserver::continue_pay_reply* down_msg::release__continue_pay_reply() {
  clear_has__continue_pay_reply();
  ::client_baseserver::continue_pay_reply* temp = _continue_pay_reply_;
  _continue_pay_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__continue_pay_reply(::client_baseserver::continue_pay_reply* _continue_pay_reply) {
  delete _continue_pay_reply_;
  _continue_pay_reply_ = _continue_pay_reply;
  if (_continue_pay_reply) {
    set_has__continue_pay_reply();
  } else {
    clear_has__continue_pay_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._continue_pay_reply)
}

// optional .client_baseserver.recharge_rebate_reply _recharge_rebate_reply = 303;
inline bool down_msg::has__recharge_rebate_reply() const {
  return (_has_bits_[2] & 0x00000008u) != 0;
}
inline void down_msg::set_has__recharge_rebate_reply() {
  _has_bits_[2] |= 0x00000008u;
}
inline void down_msg::clear_has__recharge_rebate_reply() {
  _has_bits_[2] &= ~0x00000008u;
}
inline void down_msg::clear__recharge_rebate_reply() {
  if (_recharge_rebate_reply_ != NULL) _recharge_rebate_reply_->::client_baseserver::recharge_rebate_reply::Clear();
  clear_has__recharge_rebate_reply();
}
inline const ::client_baseserver::recharge_rebate_reply& down_msg::_recharge_rebate_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._recharge_rebate_reply)
  return _recharge_rebate_reply_ != NULL ? *_recharge_rebate_reply_ : *default_instance_->_recharge_rebate_reply_;
}
inline ::client_baseserver::recharge_rebate_reply* down_msg::mutable__recharge_rebate_reply() {
  set_has__recharge_rebate_reply();
  if (_recharge_rebate_reply_ == NULL) _recharge_rebate_reply_ = new ::client_baseserver::recharge_rebate_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._recharge_rebate_reply)
  return _recharge_rebate_reply_;
}
inline ::client_baseserver::recharge_rebate_reply* down_msg::release__recharge_rebate_reply() {
  clear_has__recharge_rebate_reply();
  ::client_baseserver::recharge_rebate_reply* temp = _recharge_rebate_reply_;
  _recharge_rebate_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__recharge_rebate_reply(::client_baseserver::recharge_rebate_reply* _recharge_rebate_reply) {
  delete _recharge_rebate_reply_;
  _recharge_rebate_reply_ = _recharge_rebate_reply;
  if (_recharge_rebate_reply) {
    set_has__recharge_rebate_reply();
  } else {
    clear_has__recharge_rebate_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._recharge_rebate_reply)
}

// optional .client_baseserver.every_day_happy_reply _every_day_happy_reply = 304;
inline bool down_msg::has__every_day_happy_reply() const {
  return (_has_bits_[2] & 0x00000010u) != 0;
}
inline void down_msg::set_has__every_day_happy_reply() {
  _has_bits_[2] |= 0x00000010u;
}
inline void down_msg::clear_has__every_day_happy_reply() {
  _has_bits_[2] &= ~0x00000010u;
}
inline void down_msg::clear__every_day_happy_reply() {
  if (_every_day_happy_reply_ != NULL) _every_day_happy_reply_->::client_baseserver::every_day_happy_reply::Clear();
  clear_has__every_day_happy_reply();
}
inline const ::client_baseserver::every_day_happy_reply& down_msg::_every_day_happy_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.down_msg._every_day_happy_reply)
  return _every_day_happy_reply_ != NULL ? *_every_day_happy_reply_ : *default_instance_->_every_day_happy_reply_;
}
inline ::client_baseserver::every_day_happy_reply* down_msg::mutable__every_day_happy_reply() {
  set_has__every_day_happy_reply();
  if (_every_day_happy_reply_ == NULL) _every_day_happy_reply_ = new ::client_baseserver::every_day_happy_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.down_msg._every_day_happy_reply)
  return _every_day_happy_reply_;
}
inline ::client_baseserver::every_day_happy_reply* down_msg::release__every_day_happy_reply() {
  clear_has__every_day_happy_reply();
  ::client_baseserver::every_day_happy_reply* temp = _every_day_happy_reply_;
  _every_day_happy_reply_ = NULL;
  return temp;
}
inline void down_msg::set_allocated__every_day_happy_reply(::client_baseserver::every_day_happy_reply* _every_day_happy_reply) {
  delete _every_day_happy_reply_;
  _every_day_happy_reply_ = _every_day_happy_reply;
  if (_every_day_happy_reply) {
    set_has__every_day_happy_reply();
  } else {
    clear_has__every_day_happy_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.down_msg._every_day_happy_reply)
}

// -------------------------------------------------------------------

// system_setting_reply

// optional .client_baseserver.system_setting_request _request = 1;
inline bool system_setting_reply::has__request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void system_setting_reply::set_has__request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void system_setting_reply::clear_has__request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void system_setting_reply::clear__request() {
  if (_request_ != NULL) _request_->::client_baseserver::system_setting_request::Clear();
  clear_has__request();
}
inline const ::client_baseserver::system_setting_request& system_setting_reply::_request() const {
  // @@protoc_insertion_point(field_get:client_baseserver.system_setting_reply._request)
  return _request_ != NULL ? *_request_ : *default_instance_->_request_;
}
inline ::client_baseserver::system_setting_request* system_setting_reply::mutable__request() {
  set_has__request();
  if (_request_ == NULL) _request_ = new ::client_baseserver::system_setting_request;
  // @@protoc_insertion_point(field_mutable:client_baseserver.system_setting_reply._request)
  return _request_;
}
inline ::client_baseserver::system_setting_request* system_setting_reply::release__request() {
  clear_has__request();
  ::client_baseserver::system_setting_request* temp = _request_;
  _request_ = NULL;
  return temp;
}
inline void system_setting_reply::set_allocated__request(::client_baseserver::system_setting_request* _request) {
  delete _request_;
  _request_ = _request;
  if (_request) {
    set_has__request();
  } else {
    clear_has__request();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.system_setting_reply._request)
}

// optional .client_baseserver.system_setting_change _change = 2;
inline bool system_setting_reply::has__change() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void system_setting_reply::set_has__change() {
  _has_bits_[0] |= 0x00000002u;
}
inline void system_setting_reply::clear_has__change() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void system_setting_reply::clear__change() {
  if (_change_ != NULL) _change_->::client_baseserver::system_setting_change::Clear();
  clear_has__change();
}
inline const ::client_baseserver::system_setting_change& system_setting_reply::_change() const {
  // @@protoc_insertion_point(field_get:client_baseserver.system_setting_reply._change)
  return _change_ != NULL ? *_change_ : *default_instance_->_change_;
}
inline ::client_baseserver::system_setting_change* system_setting_reply::mutable__change() {
  set_has__change();
  if (_change_ == NULL) _change_ = new ::client_baseserver::system_setting_change;
  // @@protoc_insertion_point(field_mutable:client_baseserver.system_setting_reply._change)
  return _change_;
}
inline ::client_baseserver::system_setting_change* system_setting_reply::release__change() {
  clear_has__change();
  ::client_baseserver::system_setting_change* temp = _change_;
  _change_ = NULL;
  return temp;
}
inline void system_setting_reply::set_allocated__change(::client_baseserver::system_setting_change* _change) {
  delete _change_;
  _change_ = _change;
  if (_change) {
    set_has__change();
  } else {
    clear_has__change();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.system_setting_reply._change)
}

// -------------------------------------------------------------------

// system_setting_change

// required .client_baseserver.result _result = 1;
inline bool system_setting_change::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void system_setting_change::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void system_setting_change::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void system_setting_change::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result system_setting_change::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.system_setting_change._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void system_setting_change::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.system_setting_change._result)
}

// -------------------------------------------------------------------

// system_setting_request

// repeated .client_baseserver.system_setting_item _system_setting_item = 1;
inline int system_setting_request::_system_setting_item_size() const {
  return _system_setting_item_.size();
}
inline void system_setting_request::clear__system_setting_item() {
  _system_setting_item_.Clear();
}
inline const ::client_baseserver::system_setting_item& system_setting_request::_system_setting_item(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.system_setting_request._system_setting_item)
  return _system_setting_item_.Get(index);
}
inline ::client_baseserver::system_setting_item* system_setting_request::mutable__system_setting_item(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.system_setting_request._system_setting_item)
  return _system_setting_item_.Mutable(index);
}
inline ::client_baseserver::system_setting_item* system_setting_request::add__system_setting_item() {
  // @@protoc_insertion_point(field_add:client_baseserver.system_setting_request._system_setting_item)
  return _system_setting_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::system_setting_item >&
system_setting_request::_system_setting_item() const {
  // @@protoc_insertion_point(field_list:client_baseserver.system_setting_request._system_setting_item)
  return _system_setting_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::system_setting_item >*
system_setting_request::mutable__system_setting_item() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.system_setting_request._system_setting_item)
  return &_system_setting_item_;
}

// -------------------------------------------------------------------

// system_setting_item

// required string key = 1;
inline bool system_setting_item::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void system_setting_item::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void system_setting_item::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void system_setting_item::clear_key() {
  if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& system_setting_item::key() const {
  // @@protoc_insertion_point(field_get:client_baseserver.system_setting_item.key)
  return *key_;
}
inline void system_setting_item::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.system_setting_item.key)
}
inline void system_setting_item::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.system_setting_item.key)
}
inline void system_setting_item::set_key(const char* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.system_setting_item.key)
}
inline ::std::string* system_setting_item::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    key_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.system_setting_item.key)
  return key_;
}
inline ::std::string* system_setting_item::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void system_setting_item::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.system_setting_item.key)
}

// required .client_baseserver.system_setting_item.setting_status value = 2;
inline bool system_setting_item::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void system_setting_item::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void system_setting_item::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void system_setting_item::clear_value() {
  value_ = 1;
  clear_has_value();
}
inline ::client_baseserver::system_setting_item_setting_status system_setting_item::value() const {
  // @@protoc_insertion_point(field_get:client_baseserver.system_setting_item.value)
  return static_cast< ::client_baseserver::system_setting_item_setting_status >(value_);
}
inline void system_setting_item::set_value(::client_baseserver::system_setting_item_setting_status value) {
  assert(::client_baseserver::system_setting_item_setting_status_IsValid(value));
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.system_setting_item.value)
}

// -------------------------------------------------------------------

// global_config

// optional uint32 _hero_split_ending = 1;
inline bool global_config::has__hero_split_ending() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void global_config::set_has__hero_split_ending() {
  _has_bits_[0] |= 0x00000001u;
}
inline void global_config::clear_has__hero_split_ending() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void global_config::clear__hero_split_ending() {
  _hero_split_ending_ = 0u;
  clear_has__hero_split_ending();
}
inline ::google::protobuf::uint32 global_config::_hero_split_ending() const {
  // @@protoc_insertion_point(field_get:client_baseserver.global_config._hero_split_ending)
  return _hero_split_ending_;
}
inline void global_config::set__hero_split_ending(::google::protobuf::uint32 value) {
  set_has__hero_split_ending();
  _hero_split_ending_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.global_config._hero_split_ending)
}

// -------------------------------------------------------------------

// login_reply

// required .client_baseserver.result _result = 1;
inline bool login_reply::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void login_reply::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void login_reply::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void login_reply::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result login_reply::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.login_reply._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void login_reply::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.login_reply._result)
}

// optional .client_baseserver.user _user = 2;
inline bool login_reply::has__user() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void login_reply::set_has__user() {
  _has_bits_[0] |= 0x00000002u;
}
inline void login_reply::clear_has__user() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void login_reply::clear__user() {
  if (_user_ != NULL) _user_->::client_baseserver::user::Clear();
  clear_has__user();
}
inline const ::client_baseserver::user& login_reply::_user() const {
  // @@protoc_insertion_point(field_get:client_baseserver.login_reply._user)
  return _user_ != NULL ? *_user_ : *default_instance_->_user_;
}
inline ::client_baseserver::user* login_reply::mutable__user() {
  set_has__user();
  if (_user_ == NULL) _user_ = new ::client_baseserver::user;
  // @@protoc_insertion_point(field_mutable:client_baseserver.login_reply._user)
  return _user_;
}
inline ::client_baseserver::user* login_reply::release__user() {
  clear_has__user();
  ::client_baseserver::user* temp = _user_;
  _user_ = NULL;
  return temp;
}
inline void login_reply::set_allocated__user(::client_baseserver::user* _user) {
  delete _user_;
  _user_ = _user;
  if (_user) {
    set_has__user();
  } else {
    clear_has__user();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.login_reply._user)
}

// required string _time_zone = 3;
inline bool login_reply::has__time_zone() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void login_reply::set_has__time_zone() {
  _has_bits_[0] |= 0x00000004u;
}
inline void login_reply::clear_has__time_zone() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void login_reply::clear__time_zone() {
  if (_time_zone_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _time_zone_->clear();
  }
  clear_has__time_zone();
}
inline const ::std::string& login_reply::_time_zone() const {
  // @@protoc_insertion_point(field_get:client_baseserver.login_reply._time_zone)
  return *_time_zone_;
}
inline void login_reply::set__time_zone(const ::std::string& value) {
  set_has__time_zone();
  if (_time_zone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _time_zone_ = new ::std::string;
  }
  _time_zone_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.login_reply._time_zone)
}
inline void login_reply::set__time_zone(const char* value) {
  set_has__time_zone();
  if (_time_zone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _time_zone_ = new ::std::string;
  }
  _time_zone_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.login_reply._time_zone)
}
inline void login_reply::set__time_zone(const char* value, size_t size) {
  set_has__time_zone();
  if (_time_zone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _time_zone_ = new ::std::string;
  }
  _time_zone_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.login_reply._time_zone)
}
inline ::std::string* login_reply::mutable__time_zone() {
  set_has__time_zone();
  if (_time_zone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _time_zone_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.login_reply._time_zone)
  return _time_zone_;
}
inline ::std::string* login_reply::release__time_zone() {
  clear_has__time_zone();
  if (_time_zone_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = _time_zone_;
    _time_zone_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void login_reply::set_allocated__time_zone(::std::string* _time_zone) {
  if (_time_zone_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete _time_zone_;
  }
  if (_time_zone) {
    set_has__time_zone();
    _time_zone_ = _time_zone;
  } else {
    clear_has__time_zone();
    _time_zone_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.login_reply._time_zone)
}

// -------------------------------------------------------------------

// sdk_login_reply

// required .client_baseserver.result _result = 1 [default = fail];
inline bool sdk_login_reply::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void sdk_login_reply::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void sdk_login_reply::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void sdk_login_reply::clear__result() {
  _result_ = 1;
  clear_has__result();
}
inline ::client_baseserver::result sdk_login_reply::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.sdk_login_reply._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void sdk_login_reply::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.sdk_login_reply._result)
}

// required string _uin = 2;
inline bool sdk_login_reply::has__uin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void sdk_login_reply::set_has__uin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void sdk_login_reply::clear_has__uin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void sdk_login_reply::clear__uin() {
  if (_uin_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _uin_->clear();
  }
  clear_has__uin();
}
inline const ::std::string& sdk_login_reply::_uin() const {
  // @@protoc_insertion_point(field_get:client_baseserver.sdk_login_reply._uin)
  return *_uin_;
}
inline void sdk_login_reply::set__uin(const ::std::string& value) {
  set_has__uin();
  if (_uin_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _uin_ = new ::std::string;
  }
  _uin_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.sdk_login_reply._uin)
}
inline void sdk_login_reply::set__uin(const char* value) {
  set_has__uin();
  if (_uin_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _uin_ = new ::std::string;
  }
  _uin_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.sdk_login_reply._uin)
}
inline void sdk_login_reply::set__uin(const char* value, size_t size) {
  set_has__uin();
  if (_uin_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _uin_ = new ::std::string;
  }
  _uin_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.sdk_login_reply._uin)
}
inline ::std::string* sdk_login_reply::mutable__uin() {
  set_has__uin();
  if (_uin_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _uin_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.sdk_login_reply._uin)
  return _uin_;
}
inline ::std::string* sdk_login_reply::release__uin() {
  clear_has__uin();
  if (_uin_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = _uin_;
    _uin_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void sdk_login_reply::set_allocated__uin(::std::string* _uin) {
  if (_uin_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete _uin_;
  }
  if (_uin) {
    set_has__uin();
    _uin_ = _uin;
  } else {
    clear_has__uin();
    _uin_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.sdk_login_reply._uin)
}

// optional string _access_token = 3;
inline bool sdk_login_reply::has__access_token() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void sdk_login_reply::set_has__access_token() {
  _has_bits_[0] |= 0x00000004u;
}
inline void sdk_login_reply::clear_has__access_token() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void sdk_login_reply::clear__access_token() {
  if (_access_token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _access_token_->clear();
  }
  clear_has__access_token();
}
inline const ::std::string& sdk_login_reply::_access_token() const {
  // @@protoc_insertion_point(field_get:client_baseserver.sdk_login_reply._access_token)
  return *_access_token_;
}
inline void sdk_login_reply::set__access_token(const ::std::string& value) {
  set_has__access_token();
  if (_access_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _access_token_ = new ::std::string;
  }
  _access_token_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.sdk_login_reply._access_token)
}
inline void sdk_login_reply::set__access_token(const char* value) {
  set_has__access_token();
  if (_access_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _access_token_ = new ::std::string;
  }
  _access_token_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.sdk_login_reply._access_token)
}
inline void sdk_login_reply::set__access_token(const char* value, size_t size) {
  set_has__access_token();
  if (_access_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _access_token_ = new ::std::string;
  }
  _access_token_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.sdk_login_reply._access_token)
}
inline ::std::string* sdk_login_reply::mutable__access_token() {
  set_has__access_token();
  if (_access_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _access_token_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.sdk_login_reply._access_token)
  return _access_token_;
}
inline ::std::string* sdk_login_reply::release__access_token() {
  clear_has__access_token();
  if (_access_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = _access_token_;
    _access_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void sdk_login_reply::set_allocated__access_token(::std::string* _access_token) {
  if (_access_token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete _access_token_;
  }
  if (_access_token) {
    set_has__access_token();
    _access_token_ = _access_token;
  } else {
    clear_has__access_token();
    _access_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.sdk_login_reply._access_token)
}

// optional string _recharge_url = 4;
inline bool sdk_login_reply::has__recharge_url() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void sdk_login_reply::set_has__recharge_url() {
  _has_bits_[0] |= 0x00000008u;
}
inline void sdk_login_reply::clear_has__recharge_url() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void sdk_login_reply::clear__recharge_url() {
  if (_recharge_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _recharge_url_->clear();
  }
  clear_has__recharge_url();
}
inline const ::std::string& sdk_login_reply::_recharge_url() const {
  // @@protoc_insertion_point(field_get:client_baseserver.sdk_login_reply._recharge_url)
  return *_recharge_url_;
}
inline void sdk_login_reply::set__recharge_url(const ::std::string& value) {
  set_has__recharge_url();
  if (_recharge_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _recharge_url_ = new ::std::string;
  }
  _recharge_url_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.sdk_login_reply._recharge_url)
}
inline void sdk_login_reply::set__recharge_url(const char* value) {
  set_has__recharge_url();
  if (_recharge_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _recharge_url_ = new ::std::string;
  }
  _recharge_url_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.sdk_login_reply._recharge_url)
}
inline void sdk_login_reply::set__recharge_url(const char* value, size_t size) {
  set_has__recharge_url();
  if (_recharge_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _recharge_url_ = new ::std::string;
  }
  _recharge_url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.sdk_login_reply._recharge_url)
}
inline ::std::string* sdk_login_reply::mutable__recharge_url() {
  set_has__recharge_url();
  if (_recharge_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _recharge_url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.sdk_login_reply._recharge_url)
  return _recharge_url_;
}
inline ::std::string* sdk_login_reply::release__recharge_url() {
  clear_has__recharge_url();
  if (_recharge_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = _recharge_url_;
    _recharge_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void sdk_login_reply::set_allocated__recharge_url(::std::string* _recharge_url) {
  if (_recharge_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete _recharge_url_;
  }
  if (_recharge_url) {
    set_has__recharge_url();
    _recharge_url_ = _recharge_url;
  } else {
    clear_has__recharge_url();
    _recharge_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.sdk_login_reply._recharge_url)
}

// -------------------------------------------------------------------

// user_check

// required .client_baseserver.user _user = 1;
inline bool user_check::has__user() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void user_check::set_has__user() {
  _has_bits_[0] |= 0x00000001u;
}
inline void user_check::clear_has__user() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void user_check::clear__user() {
  if (_user_ != NULL) _user_->::client_baseserver::user::Clear();
  clear_has__user();
}
inline const ::client_baseserver::user& user_check::_user() const {
  // @@protoc_insertion_point(field_get:client_baseserver.user_check._user)
  return _user_ != NULL ? *_user_ : *default_instance_->_user_;
}
inline ::client_baseserver::user* user_check::mutable__user() {
  set_has__user();
  if (_user_ == NULL) _user_ = new ::client_baseserver::user;
  // @@protoc_insertion_point(field_mutable:client_baseserver.user_check._user)
  return _user_;
}
inline ::client_baseserver::user* user_check::release__user() {
  clear_has__user();
  ::client_baseserver::user* temp = _user_;
  _user_ = NULL;
  return temp;
}
inline void user_check::set_allocated__user(::client_baseserver::user* _user) {
  delete _user_;
  _user_ = _user;
  if (_user) {
    set_has__user();
  } else {
    clear_has__user();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.user_check._user)
}

// -------------------------------------------------------------------

// reset

// required .client_baseserver.user _user = 1;
inline bool reset::has__user() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void reset::set_has__user() {
  _has_bits_[0] |= 0x00000001u;
}
inline void reset::clear_has__user() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void reset::clear__user() {
  if (_user_ != NULL) _user_->::client_baseserver::user::Clear();
  clear_has__user();
}
inline const ::client_baseserver::user& reset::_user() const {
  // @@protoc_insertion_point(field_get:client_baseserver.reset._user)
  return _user_ != NULL ? *_user_ : *default_instance_->_user_;
}
inline ::client_baseserver::user* reset::mutable__user() {
  set_has__user();
  if (_user_ == NULL) _user_ = new ::client_baseserver::user;
  // @@protoc_insertion_point(field_mutable:client_baseserver.reset._user)
  return _user_;
}
inline ::client_baseserver::user* reset::release__user() {
  clear_has__user();
  ::client_baseserver::user* temp = _user_;
  _user_ = NULL;
  return temp;
}
inline void reset::set_allocated__user(::client_baseserver::user* _user) {
  delete _user_;
  _user_ = _user;
  if (_user) {
    set_has__user();
  } else {
    clear_has__user();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.reset._user)
}

// -------------------------------------------------------------------

// enter_stage_reply

// required uint32 _rseed = 1;
inline bool enter_stage_reply::has__rseed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void enter_stage_reply::set_has__rseed() {
  _has_bits_[0] |= 0x00000001u;
}
inline void enter_stage_reply::clear_has__rseed() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void enter_stage_reply::clear__rseed() {
  _rseed_ = 0u;
  clear_has__rseed();
}
inline ::google::protobuf::uint32 enter_stage_reply::_rseed() const {
  // @@protoc_insertion_point(field_get:client_baseserver.enter_stage_reply._rseed)
  return _rseed_;
}
inline void enter_stage_reply::set__rseed(::google::protobuf::uint32 value) {
  set_has__rseed();
  _rseed_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.enter_stage_reply._rseed)
}

// repeated uint32 _loots = 2;
inline int enter_stage_reply::_loots_size() const {
  return _loots_.size();
}
inline void enter_stage_reply::clear__loots() {
  _loots_.Clear();
}
inline ::google::protobuf::uint32 enter_stage_reply::_loots(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.enter_stage_reply._loots)
  return _loots_.Get(index);
}
inline void enter_stage_reply::set__loots(int index, ::google::protobuf::uint32 value) {
  _loots_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.enter_stage_reply._loots)
}
inline void enter_stage_reply::add__loots(::google::protobuf::uint32 value) {
  _loots_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.enter_stage_reply._loots)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
enter_stage_reply::_loots() const {
  // @@protoc_insertion_point(field_list:client_baseserver.enter_stage_reply._loots)
  return _loots_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
enter_stage_reply::mutable__loots() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.enter_stage_reply._loots)
  return &_loots_;
}

// -------------------------------------------------------------------

// activity_info_reply

// repeated .client_baseserver.last_activity_info _last_activity_info = 1;
inline int activity_info_reply::_last_activity_info_size() const {
  return _last_activity_info_.size();
}
inline void activity_info_reply::clear__last_activity_info() {
  _last_activity_info_.Clear();
}
inline const ::client_baseserver::last_activity_info& activity_info_reply::_last_activity_info(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_info_reply._last_activity_info)
  return _last_activity_info_.Get(index);
}
inline ::client_baseserver::last_activity_info* activity_info_reply::mutable__last_activity_info(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.activity_info_reply._last_activity_info)
  return _last_activity_info_.Mutable(index);
}
inline ::client_baseserver::last_activity_info* activity_info_reply::add__last_activity_info() {
  // @@protoc_insertion_point(field_add:client_baseserver.activity_info_reply._last_activity_info)
  return _last_activity_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::last_activity_info >&
activity_info_reply::_last_activity_info() const {
  // @@protoc_insertion_point(field_list:client_baseserver.activity_info_reply._last_activity_info)
  return _last_activity_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::last_activity_info >*
activity_info_reply::mutable__last_activity_info() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.activity_info_reply._last_activity_info)
  return &_last_activity_info_;
}

// -------------------------------------------------------------------

// last_activity_info

// required string _group_id = 1;
inline bool last_activity_info::has__group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void last_activity_info::set_has__group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void last_activity_info::clear_has__group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void last_activity_info::clear__group_id() {
  if (_group_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _group_id_->clear();
  }
  clear_has__group_id();
}
inline const ::std::string& last_activity_info::_group_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.last_activity_info._group_id)
  return *_group_id_;
}
inline void last_activity_info::set__group_id(const ::std::string& value) {
  set_has__group_id();
  if (_group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _group_id_ = new ::std::string;
  }
  _group_id_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.last_activity_info._group_id)
}
inline void last_activity_info::set__group_id(const char* value) {
  set_has__group_id();
  if (_group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _group_id_ = new ::std::string;
  }
  _group_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.last_activity_info._group_id)
}
inline void last_activity_info::set__group_id(const char* value, size_t size) {
  set_has__group_id();
  if (_group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _group_id_ = new ::std::string;
  }
  _group_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.last_activity_info._group_id)
}
inline ::std::string* last_activity_info::mutable__group_id() {
  set_has__group_id();
  if (_group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _group_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.last_activity_info._group_id)
  return _group_id_;
}
inline ::std::string* last_activity_info::release__group_id() {
  clear_has__group_id();
  if (_group_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = _group_id_;
    _group_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void last_activity_info::set_allocated__group_id(::std::string* _group_id) {
  if (_group_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete _group_id_;
  }
  if (_group_id) {
    set_has__group_id();
    _group_id_ = _group_id;
  } else {
    clear_has__group_id();
    _group_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.last_activity_info._group_id)
}

// repeated uint32 _activity_ids = 2;
inline int last_activity_info::_activity_ids_size() const {
  return _activity_ids_.size();
}
inline void last_activity_info::clear__activity_ids() {
  _activity_ids_.Clear();
}
inline ::google::protobuf::uint32 last_activity_info::_activity_ids(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.last_activity_info._activity_ids)
  return _activity_ids_.Get(index);
}
inline void last_activity_info::set__activity_ids(int index, ::google::protobuf::uint32 value) {
  _activity_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.last_activity_info._activity_ids)
}
inline void last_activity_info::add__activity_ids(::google::protobuf::uint32 value) {
  _activity_ids_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.last_activity_info._activity_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
last_activity_info::_activity_ids() const {
  // @@protoc_insertion_point(field_list:client_baseserver.last_activity_info._activity_ids)
  return _activity_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
last_activity_info::mutable__activity_ids() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.last_activity_info._activity_ids)
  return &_activity_ids_;
}

// -------------------------------------------------------------------

// activity_lotto_info_reply

// required uint32 _diamond_num = 1;
inline bool activity_lotto_info_reply::has__diamond_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activity_lotto_info_reply::set_has__diamond_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activity_lotto_info_reply::clear_has__diamond_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activity_lotto_info_reply::clear__diamond_num() {
  _diamond_num_ = 0u;
  clear_has__diamond_num();
}
inline ::google::protobuf::uint32 activity_lotto_info_reply::_diamond_num() const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_lotto_info_reply._diamond_num)
  return _diamond_num_;
}
inline void activity_lotto_info_reply::set__diamond_num(::google::protobuf::uint32 value) {
  set_has__diamond_num();
  _diamond_num_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.activity_lotto_info_reply._diamond_num)
}

// required uint32 _current_step = 2;
inline bool activity_lotto_info_reply::has__current_step() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activity_lotto_info_reply::set_has__current_step() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activity_lotto_info_reply::clear_has__current_step() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activity_lotto_info_reply::clear__current_step() {
  _current_step_ = 0u;
  clear_has__current_step();
}
inline ::google::protobuf::uint32 activity_lotto_info_reply::_current_step() const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_lotto_info_reply._current_step)
  return _current_step_;
}
inline void activity_lotto_info_reply::set__current_step(::google::protobuf::uint32 value) {
  set_has__current_step();
  _current_step_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.activity_lotto_info_reply._current_step)
}

// required uint32 _need_diamond_num = 3;
inline bool activity_lotto_info_reply::has__need_diamond_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void activity_lotto_info_reply::set_has__need_diamond_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void activity_lotto_info_reply::clear_has__need_diamond_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void activity_lotto_info_reply::clear__need_diamond_num() {
  _need_diamond_num_ = 0u;
  clear_has__need_diamond_num();
}
inline ::google::protobuf::uint32 activity_lotto_info_reply::_need_diamond_num() const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_lotto_info_reply._need_diamond_num)
  return _need_diamond_num_;
}
inline void activity_lotto_info_reply::set__need_diamond_num(::google::protobuf::uint32 value) {
  set_has__need_diamond_num();
  _need_diamond_num_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.activity_lotto_info_reply._need_diamond_num)
}

// required uint32 _win_diamond_num = 4;
inline bool activity_lotto_info_reply::has__win_diamond_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void activity_lotto_info_reply::set_has__win_diamond_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void activity_lotto_info_reply::clear_has__win_diamond_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void activity_lotto_info_reply::clear__win_diamond_num() {
  _win_diamond_num_ = 0u;
  clear_has__win_diamond_num();
}
inline ::google::protobuf::uint32 activity_lotto_info_reply::_win_diamond_num() const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_lotto_info_reply._win_diamond_num)
  return _win_diamond_num_;
}
inline void activity_lotto_info_reply::set__win_diamond_num(::google::protobuf::uint32 value) {
  set_has__win_diamond_num();
  _win_diamond_num_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.activity_lotto_info_reply._win_diamond_num)
}

// required uint32 _remain_time = 5;
inline bool activity_lotto_info_reply::has__remain_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void activity_lotto_info_reply::set_has__remain_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void activity_lotto_info_reply::clear_has__remain_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void activity_lotto_info_reply::clear__remain_time() {
  _remain_time_ = 0u;
  clear_has__remain_time();
}
inline ::google::protobuf::uint32 activity_lotto_info_reply::_remain_time() const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_lotto_info_reply._remain_time)
  return _remain_time_;
}
inline void activity_lotto_info_reply::set__remain_time(::google::protobuf::uint32 value) {
  set_has__remain_time();
  _remain_time_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.activity_lotto_info_reply._remain_time)
}

// repeated string _broadcast_texts = 6;
inline int activity_lotto_info_reply::_broadcast_texts_size() const {
  return _broadcast_texts_.size();
}
inline void activity_lotto_info_reply::clear__broadcast_texts() {
  _broadcast_texts_.Clear();
}
inline const ::std::string& activity_lotto_info_reply::_broadcast_texts(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_lotto_info_reply._broadcast_texts)
  return _broadcast_texts_.Get(index);
}
inline ::std::string* activity_lotto_info_reply::mutable__broadcast_texts(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.activity_lotto_info_reply._broadcast_texts)
  return _broadcast_texts_.Mutable(index);
}
inline void activity_lotto_info_reply::set__broadcast_texts(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:client_baseserver.activity_lotto_info_reply._broadcast_texts)
  _broadcast_texts_.Mutable(index)->assign(value);
}
inline void activity_lotto_info_reply::set__broadcast_texts(int index, const char* value) {
  _broadcast_texts_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.activity_lotto_info_reply._broadcast_texts)
}
inline void activity_lotto_info_reply::set__broadcast_texts(int index, const char* value, size_t size) {
  _broadcast_texts_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.activity_lotto_info_reply._broadcast_texts)
}
inline ::std::string* activity_lotto_info_reply::add__broadcast_texts() {
  return _broadcast_texts_.Add();
}
inline void activity_lotto_info_reply::add__broadcast_texts(const ::std::string& value) {
  _broadcast_texts_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:client_baseserver.activity_lotto_info_reply._broadcast_texts)
}
inline void activity_lotto_info_reply::add__broadcast_texts(const char* value) {
  _broadcast_texts_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:client_baseserver.activity_lotto_info_reply._broadcast_texts)
}
inline void activity_lotto_info_reply::add__broadcast_texts(const char* value, size_t size) {
  _broadcast_texts_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:client_baseserver.activity_lotto_info_reply._broadcast_texts)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
activity_lotto_info_reply::_broadcast_texts() const {
  // @@protoc_insertion_point(field_list:client_baseserver.activity_lotto_info_reply._broadcast_texts)
  return _broadcast_texts_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
activity_lotto_info_reply::mutable__broadcast_texts() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.activity_lotto_info_reply._broadcast_texts)
  return &_broadcast_texts_;
}

// -------------------------------------------------------------------

// activity_lotto_reward_reply

// required uint32 _status = 1;
inline bool activity_lotto_reward_reply::has__status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activity_lotto_reward_reply::set_has__status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activity_lotto_reward_reply::clear_has__status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activity_lotto_reward_reply::clear__status() {
  _status_ = 0u;
  clear_has__status();
}
inline ::google::protobuf::uint32 activity_lotto_reward_reply::_status() const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_lotto_reward_reply._status)
  return _status_;
}
inline void activity_lotto_reward_reply::set__status(::google::protobuf::uint32 value) {
  set_has__status();
  _status_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.activity_lotto_reward_reply._status)
}

// required uint32 _reward_diamon_num = 2;
inline bool activity_lotto_reward_reply::has__reward_diamon_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activity_lotto_reward_reply::set_has__reward_diamon_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activity_lotto_reward_reply::clear_has__reward_diamon_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activity_lotto_reward_reply::clear__reward_diamon_num() {
  _reward_diamon_num_ = 0u;
  clear_has__reward_diamon_num();
}
inline ::google::protobuf::uint32 activity_lotto_reward_reply::_reward_diamon_num() const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_lotto_reward_reply._reward_diamon_num)
  return _reward_diamon_num_;
}
inline void activity_lotto_reward_reply::set__reward_diamon_num(::google::protobuf::uint32 value) {
  set_has__reward_diamon_num();
  _reward_diamon_num_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.activity_lotto_reward_reply._reward_diamon_num)
}

// required uint32 _have_next_round = 3;
inline bool activity_lotto_reward_reply::has__have_next_round() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void activity_lotto_reward_reply::set_has__have_next_round() {
  _has_bits_[0] |= 0x00000004u;
}
inline void activity_lotto_reward_reply::clear_has__have_next_round() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void activity_lotto_reward_reply::clear__have_next_round() {
  _have_next_round_ = 0u;
  clear_has__have_next_round();
}
inline ::google::protobuf::uint32 activity_lotto_reward_reply::_have_next_round() const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_lotto_reward_reply._have_next_round)
  return _have_next_round_;
}
inline void activity_lotto_reward_reply::set__have_next_round(::google::protobuf::uint32 value) {
  set_has__have_next_round();
  _have_next_round_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.activity_lotto_reward_reply._have_next_round)
}

// optional uint32 _need_diamond_num = 4;
inline bool activity_lotto_reward_reply::has__need_diamond_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void activity_lotto_reward_reply::set_has__need_diamond_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void activity_lotto_reward_reply::clear_has__need_diamond_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void activity_lotto_reward_reply::clear__need_diamond_num() {
  _need_diamond_num_ = 0u;
  clear_has__need_diamond_num();
}
inline ::google::protobuf::uint32 activity_lotto_reward_reply::_need_diamond_num() const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_lotto_reward_reply._need_diamond_num)
  return _need_diamond_num_;
}
inline void activity_lotto_reward_reply::set__need_diamond_num(::google::protobuf::uint32 value) {
  set_has__need_diamond_num();
  _need_diamond_num_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.activity_lotto_reward_reply._need_diamond_num)
}

// required uint32 _diamond_num = 5;
inline bool activity_lotto_reward_reply::has__diamond_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void activity_lotto_reward_reply::set_has__diamond_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void activity_lotto_reward_reply::clear_has__diamond_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void activity_lotto_reward_reply::clear__diamond_num() {
  _diamond_num_ = 0u;
  clear_has__diamond_num();
}
inline ::google::protobuf::uint32 activity_lotto_reward_reply::_diamond_num() const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_lotto_reward_reply._diamond_num)
  return _diamond_num_;
}
inline void activity_lotto_reward_reply::set__diamond_num(::google::protobuf::uint32 value) {
  set_has__diamond_num();
  _diamond_num_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.activity_lotto_reward_reply._diamond_num)
}

// -------------------------------------------------------------------

// activity_bigpackage_info_reply

// required uint32 _people_count = 1;
inline bool activity_bigpackage_info_reply::has__people_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activity_bigpackage_info_reply::set_has__people_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activity_bigpackage_info_reply::clear_has__people_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activity_bigpackage_info_reply::clear__people_count() {
  _people_count_ = 0u;
  clear_has__people_count();
}
inline ::google::protobuf::uint32 activity_bigpackage_info_reply::_people_count() const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_bigpackage_info_reply._people_count)
  return _people_count_;
}
inline void activity_bigpackage_info_reply::set__people_count(::google::protobuf::uint32 value) {
  set_has__people_count();
  _people_count_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.activity_bigpackage_info_reply._people_count)
}

// required uint32 _remain_times = 2;
inline bool activity_bigpackage_info_reply::has__remain_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activity_bigpackage_info_reply::set_has__remain_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activity_bigpackage_info_reply::clear_has__remain_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activity_bigpackage_info_reply::clear__remain_times() {
  _remain_times_ = 0u;
  clear_has__remain_times();
}
inline ::google::protobuf::uint32 activity_bigpackage_info_reply::_remain_times() const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_bigpackage_info_reply._remain_times)
  return _remain_times_;
}
inline void activity_bigpackage_info_reply::set__remain_times(::google::protobuf::uint32 value) {
  set_has__remain_times();
  _remain_times_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.activity_bigpackage_info_reply._remain_times)
}

// required uint32 _next_reset_price = 3;
inline bool activity_bigpackage_info_reply::has__next_reset_price() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void activity_bigpackage_info_reply::set_has__next_reset_price() {
  _has_bits_[0] |= 0x00000004u;
}
inline void activity_bigpackage_info_reply::clear_has__next_reset_price() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void activity_bigpackage_info_reply::clear__next_reset_price() {
  _next_reset_price_ = 0u;
  clear_has__next_reset_price();
}
inline ::google::protobuf::uint32 activity_bigpackage_info_reply::_next_reset_price() const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_bigpackage_info_reply._next_reset_price)
  return _next_reset_price_;
}
inline void activity_bigpackage_info_reply::set__next_reset_price(::google::protobuf::uint32 value) {
  set_has__next_reset_price();
  _next_reset_price_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.activity_bigpackage_info_reply._next_reset_price)
}

// required uint32 _current_ranking = 4;
inline bool activity_bigpackage_info_reply::has__current_ranking() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void activity_bigpackage_info_reply::set_has__current_ranking() {
  _has_bits_[0] |= 0x00000008u;
}
inline void activity_bigpackage_info_reply::clear_has__current_ranking() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void activity_bigpackage_info_reply::clear__current_ranking() {
  _current_ranking_ = 0u;
  clear_has__current_ranking();
}
inline ::google::protobuf::uint32 activity_bigpackage_info_reply::_current_ranking() const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_bigpackage_info_reply._current_ranking)
  return _current_ranking_;
}
inline void activity_bigpackage_info_reply::set__current_ranking(::google::protobuf::uint32 value) {
  set_has__current_ranking();
  _current_ranking_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.activity_bigpackage_info_reply._current_ranking)
}

// repeated uint32 _get_box_ids = 5;
inline int activity_bigpackage_info_reply::_get_box_ids_size() const {
  return _get_box_ids_.size();
}
inline void activity_bigpackage_info_reply::clear__get_box_ids() {
  _get_box_ids_.Clear();
}
inline ::google::protobuf::uint32 activity_bigpackage_info_reply::_get_box_ids(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_bigpackage_info_reply._get_box_ids)
  return _get_box_ids_.Get(index);
}
inline void activity_bigpackage_info_reply::set__get_box_ids(int index, ::google::protobuf::uint32 value) {
  _get_box_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.activity_bigpackage_info_reply._get_box_ids)
}
inline void activity_bigpackage_info_reply::add__get_box_ids(::google::protobuf::uint32 value) {
  _get_box_ids_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.activity_bigpackage_info_reply._get_box_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
activity_bigpackage_info_reply::_get_box_ids() const {
  // @@protoc_insertion_point(field_list:client_baseserver.activity_bigpackage_info_reply._get_box_ids)
  return _get_box_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
activity_bigpackage_info_reply::mutable__get_box_ids() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.activity_bigpackage_info_reply._get_box_ids)
  return &_get_box_ids_;
}

// required uint32 _distance_score_20 = 6;
inline bool activity_bigpackage_info_reply::has__distance_score_20() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void activity_bigpackage_info_reply::set_has__distance_score_20() {
  _has_bits_[0] |= 0x00000020u;
}
inline void activity_bigpackage_info_reply::clear_has__distance_score_20() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void activity_bigpackage_info_reply::clear__distance_score_20() {
  _distance_score_20_ = 0u;
  clear_has__distance_score_20();
}
inline ::google::protobuf::uint32 activity_bigpackage_info_reply::_distance_score_20() const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_bigpackage_info_reply._distance_score_20)
  return _distance_score_20_;
}
inline void activity_bigpackage_info_reply::set__distance_score_20(::google::protobuf::uint32 value) {
  set_has__distance_score_20();
  _distance_score_20_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.activity_bigpackage_info_reply._distance_score_20)
}

// -------------------------------------------------------------------

// activity_bigpackage_reward_reply

// required uint32 _status = 1;
inline bool activity_bigpackage_reward_reply::has__status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activity_bigpackage_reward_reply::set_has__status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activity_bigpackage_reward_reply::clear_has__status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activity_bigpackage_reward_reply::clear__status() {
  _status_ = 0u;
  clear_has__status();
}
inline ::google::protobuf::uint32 activity_bigpackage_reward_reply::_status() const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_bigpackage_reward_reply._status)
  return _status_;
}
inline void activity_bigpackage_reward_reply::set__status(::google::protobuf::uint32 value) {
  set_has__status();
  _status_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.activity_bigpackage_reward_reply._status)
}

// repeated .client_baseserver.activity_reward _rewards = 2;
inline int activity_bigpackage_reward_reply::_rewards_size() const {
  return _rewards_.size();
}
inline void activity_bigpackage_reward_reply::clear__rewards() {
  _rewards_.Clear();
}
inline const ::client_baseserver::activity_reward& activity_bigpackage_reward_reply::_rewards(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_bigpackage_reward_reply._rewards)
  return _rewards_.Get(index);
}
inline ::client_baseserver::activity_reward* activity_bigpackage_reward_reply::mutable__rewards(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.activity_bigpackage_reward_reply._rewards)
  return _rewards_.Mutable(index);
}
inline ::client_baseserver::activity_reward* activity_bigpackage_reward_reply::add__rewards() {
  // @@protoc_insertion_point(field_add:client_baseserver.activity_bigpackage_reward_reply._rewards)
  return _rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::activity_reward >&
activity_bigpackage_reward_reply::_rewards() const {
  // @@protoc_insertion_point(field_list:client_baseserver.activity_bigpackage_reward_reply._rewards)
  return _rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::activity_reward >*
activity_bigpackage_reward_reply::mutable__rewards() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.activity_bigpackage_reward_reply._rewards)
  return &_rewards_;
}

// repeated uint32 _item_ids = 3;
inline int activity_bigpackage_reward_reply::_item_ids_size() const {
  return _item_ids_.size();
}
inline void activity_bigpackage_reward_reply::clear__item_ids() {
  _item_ids_.Clear();
}
inline ::google::protobuf::uint32 activity_bigpackage_reward_reply::_item_ids(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_bigpackage_reward_reply._item_ids)
  return _item_ids_.Get(index);
}
inline void activity_bigpackage_reward_reply::set__item_ids(int index, ::google::protobuf::uint32 value) {
  _item_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.activity_bigpackage_reward_reply._item_ids)
}
inline void activity_bigpackage_reward_reply::add__item_ids(::google::protobuf::uint32 value) {
  _item_ids_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.activity_bigpackage_reward_reply._item_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
activity_bigpackage_reward_reply::_item_ids() const {
  // @@protoc_insertion_point(field_list:client_baseserver.activity_bigpackage_reward_reply._item_ids)
  return _item_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
activity_bigpackage_reward_reply::mutable__item_ids() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.activity_bigpackage_reward_reply._item_ids)
  return &_item_ids_;
}

// required uint32 _people_count = 4;
inline bool activity_bigpackage_reward_reply::has__people_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void activity_bigpackage_reward_reply::set_has__people_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void activity_bigpackage_reward_reply::clear_has__people_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void activity_bigpackage_reward_reply::clear__people_count() {
  _people_count_ = 0u;
  clear_has__people_count();
}
inline ::google::protobuf::uint32 activity_bigpackage_reward_reply::_people_count() const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_bigpackage_reward_reply._people_count)
  return _people_count_;
}
inline void activity_bigpackage_reward_reply::set__people_count(::google::protobuf::uint32 value) {
  set_has__people_count();
  _people_count_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.activity_bigpackage_reward_reply._people_count)
}

// required uint32 _current_ranking = 5;
inline bool activity_bigpackage_reward_reply::has__current_ranking() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void activity_bigpackage_reward_reply::set_has__current_ranking() {
  _has_bits_[0] |= 0x00000010u;
}
inline void activity_bigpackage_reward_reply::clear_has__current_ranking() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void activity_bigpackage_reward_reply::clear__current_ranking() {
  _current_ranking_ = 0u;
  clear_has__current_ranking();
}
inline ::google::protobuf::uint32 activity_bigpackage_reward_reply::_current_ranking() const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_bigpackage_reward_reply._current_ranking)
  return _current_ranking_;
}
inline void activity_bigpackage_reward_reply::set__current_ranking(::google::protobuf::uint32 value) {
  set_has__current_ranking();
  _current_ranking_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.activity_bigpackage_reward_reply._current_ranking)
}

// required uint32 _distance_score_20 = 6;
inline bool activity_bigpackage_reward_reply::has__distance_score_20() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void activity_bigpackage_reward_reply::set_has__distance_score_20() {
  _has_bits_[0] |= 0x00000020u;
}
inline void activity_bigpackage_reward_reply::clear_has__distance_score_20() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void activity_bigpackage_reward_reply::clear__distance_score_20() {
  _distance_score_20_ = 0u;
  clear_has__distance_score_20();
}
inline ::google::protobuf::uint32 activity_bigpackage_reward_reply::_distance_score_20() const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_bigpackage_reward_reply._distance_score_20)
  return _distance_score_20_;
}
inline void activity_bigpackage_reward_reply::set__distance_score_20(::google::protobuf::uint32 value) {
  set_has__distance_score_20();
  _distance_score_20_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.activity_bigpackage_reward_reply._distance_score_20)
}

// -------------------------------------------------------------------

// activity_bigpackage_reset_reply

// required uint32 _status = 1;
inline bool activity_bigpackage_reset_reply::has__status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activity_bigpackage_reset_reply::set_has__status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activity_bigpackage_reset_reply::clear_has__status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activity_bigpackage_reset_reply::clear__status() {
  _status_ = 0u;
  clear_has__status();
}
inline ::google::protobuf::uint32 activity_bigpackage_reset_reply::_status() const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_bigpackage_reset_reply._status)
  return _status_;
}
inline void activity_bigpackage_reset_reply::set__status(::google::protobuf::uint32 value) {
  set_has__status();
  _status_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.activity_bigpackage_reset_reply._status)
}

// required uint32 _next_reset_price = 2;
inline bool activity_bigpackage_reset_reply::has__next_reset_price() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activity_bigpackage_reset_reply::set_has__next_reset_price() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activity_bigpackage_reset_reply::clear_has__next_reset_price() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activity_bigpackage_reset_reply::clear__next_reset_price() {
  _next_reset_price_ = 0u;
  clear_has__next_reset_price();
}
inline ::google::protobuf::uint32 activity_bigpackage_reset_reply::_next_reset_price() const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_bigpackage_reset_reply._next_reset_price)
  return _next_reset_price_;
}
inline void activity_bigpackage_reset_reply::set__next_reset_price(::google::protobuf::uint32 value) {
  set_has__next_reset_price();
  _next_reset_price_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.activity_bigpackage_reset_reply._next_reset_price)
}

// -------------------------------------------------------------------

// exit_stage_reply

// required .client_baseserver.exit_stage_reply.exit_stage_result _result = 1 [default = known];
inline bool exit_stage_reply::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void exit_stage_reply::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void exit_stage_reply::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void exit_stage_reply::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::exit_stage_reply_exit_stage_result exit_stage_reply::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.exit_stage_reply._result)
  return static_cast< ::client_baseserver::exit_stage_reply_exit_stage_result >(_result_);
}
inline void exit_stage_reply::set__result(::client_baseserver::exit_stage_reply_exit_stage_result value) {
  assert(::client_baseserver::exit_stage_reply_exit_stage_result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.exit_stage_reply._result)
}

// optional .client_baseserver.user_shop _shop = 2;
inline bool exit_stage_reply::has__shop() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void exit_stage_reply::set_has__shop() {
  _has_bits_[0] |= 0x00000002u;
}
inline void exit_stage_reply::clear_has__shop() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void exit_stage_reply::clear__shop() {
  if (_shop_ != NULL) _shop_->::client_baseserver::user_shop::Clear();
  clear_has__shop();
}
inline const ::client_baseserver::user_shop& exit_stage_reply::_shop() const {
  // @@protoc_insertion_point(field_get:client_baseserver.exit_stage_reply._shop)
  return _shop_ != NULL ? *_shop_ : *default_instance_->_shop_;
}
inline ::client_baseserver::user_shop* exit_stage_reply::mutable__shop() {
  set_has__shop();
  if (_shop_ == NULL) _shop_ = new ::client_baseserver::user_shop;
  // @@protoc_insertion_point(field_mutable:client_baseserver.exit_stage_reply._shop)
  return _shop_;
}
inline ::client_baseserver::user_shop* exit_stage_reply::release__shop() {
  clear_has__shop();
  ::client_baseserver::user_shop* temp = _shop_;
  _shop_ = NULL;
  return temp;
}
inline void exit_stage_reply::set_allocated__shop(::client_baseserver::user_shop* _shop) {
  delete _shop_;
  _shop_ = _shop;
  if (_shop) {
    set_has__shop();
  } else {
    clear_has__shop();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.exit_stage_reply._shop)
}

// optional .client_baseserver.star_shop _sshop = 3;
inline bool exit_stage_reply::has__sshop() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void exit_stage_reply::set_has__sshop() {
  _has_bits_[0] |= 0x00000004u;
}
inline void exit_stage_reply::clear_has__sshop() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void exit_stage_reply::clear__sshop() {
  if (_sshop_ != NULL) _sshop_->::client_baseserver::star_shop::Clear();
  clear_has__sshop();
}
inline const ::client_baseserver::star_shop& exit_stage_reply::_sshop() const {
  // @@protoc_insertion_point(field_get:client_baseserver.exit_stage_reply._sshop)
  return _sshop_ != NULL ? *_sshop_ : *default_instance_->_sshop_;
}
inline ::client_baseserver::star_shop* exit_stage_reply::mutable__sshop() {
  set_has__sshop();
  if (_sshop_ == NULL) _sshop_ = new ::client_baseserver::star_shop;
  // @@protoc_insertion_point(field_mutable:client_baseserver.exit_stage_reply._sshop)
  return _sshop_;
}
inline ::client_baseserver::star_shop* exit_stage_reply::release__sshop() {
  clear_has__sshop();
  ::client_baseserver::star_shop* temp = _sshop_;
  _sshop_ = NULL;
  return temp;
}
inline void exit_stage_reply::set_allocated__sshop(::client_baseserver::star_shop* _sshop) {
  delete _sshop_;
  _sshop_ = _sshop;
  if (_sshop) {
    set_has__sshop();
  } else {
    clear_has__sshop();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.exit_stage_reply._sshop)
}

// -------------------------------------------------------------------

// hero_upgrade_reply

// required .client_baseserver.result _result = 1 [default = fail];
inline bool hero_upgrade_reply::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void hero_upgrade_reply::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void hero_upgrade_reply::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void hero_upgrade_reply::clear__result() {
  _result_ = 1;
  clear_has__result();
}
inline ::client_baseserver::result hero_upgrade_reply::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.hero_upgrade_reply._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void hero_upgrade_reply::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.hero_upgrade_reply._result)
}

// optional .client_baseserver.hero _hero = 2;
inline bool hero_upgrade_reply::has__hero() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void hero_upgrade_reply::set_has__hero() {
  _has_bits_[0] |= 0x00000002u;
}
inline void hero_upgrade_reply::clear_has__hero() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void hero_upgrade_reply::clear__hero() {
  if (_hero_ != NULL) _hero_->::client_baseserver::hero::Clear();
  clear_has__hero();
}
inline const ::client_baseserver::hero& hero_upgrade_reply::_hero() const {
  // @@protoc_insertion_point(field_get:client_baseserver.hero_upgrade_reply._hero)
  return _hero_ != NULL ? *_hero_ : *default_instance_->_hero_;
}
inline ::client_baseserver::hero* hero_upgrade_reply::mutable__hero() {
  set_has__hero();
  if (_hero_ == NULL) _hero_ = new ::client_baseserver::hero;
  // @@protoc_insertion_point(field_mutable:client_baseserver.hero_upgrade_reply._hero)
  return _hero_;
}
inline ::client_baseserver::hero* hero_upgrade_reply::release__hero() {
  clear_has__hero();
  ::client_baseserver::hero* temp = _hero_;
  _hero_ = NULL;
  return temp;
}
inline void hero_upgrade_reply::set_allocated__hero(::client_baseserver::hero* _hero) {
  delete _hero_;
  _hero_ = _hero;
  if (_hero) {
    set_has__hero();
  } else {
    clear_has__hero();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.hero_upgrade_reply._hero)
}

// repeated uint32 _items = 3;
inline int hero_upgrade_reply::_items_size() const {
  return _items_.size();
}
inline void hero_upgrade_reply::clear__items() {
  _items_.Clear();
}
inline ::google::protobuf::uint32 hero_upgrade_reply::_items(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.hero_upgrade_reply._items)
  return _items_.Get(index);
}
inline void hero_upgrade_reply::set__items(int index, ::google::protobuf::uint32 value) {
  _items_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.hero_upgrade_reply._items)
}
inline void hero_upgrade_reply::add__items(::google::protobuf::uint32 value) {
  _items_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.hero_upgrade_reply._items)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
hero_upgrade_reply::_items() const {
  // @@protoc_insertion_point(field_list:client_baseserver.hero_upgrade_reply._items)
  return _items_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
hero_upgrade_reply::mutable__items() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.hero_upgrade_reply._items)
  return &_items_;
}

// -------------------------------------------------------------------

// equip_synthesis_reply

// required .client_baseserver.result _result = 1 [default = fail];
inline bool equip_synthesis_reply::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void equip_synthesis_reply::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void equip_synthesis_reply::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void equip_synthesis_reply::clear__result() {
  _result_ = 1;
  clear_has__result();
}
inline ::client_baseserver::result equip_synthesis_reply::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.equip_synthesis_reply._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void equip_synthesis_reply::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.equip_synthesis_reply._result)
}

// -------------------------------------------------------------------

// wear_equip_reply

// required .client_baseserver.result _result = 1 [default = fail];
inline bool wear_equip_reply::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void wear_equip_reply::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void wear_equip_reply::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void wear_equip_reply::clear__result() {
  _result_ = 1;
  clear_has__result();
}
inline ::client_baseserver::result wear_equip_reply::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.wear_equip_reply._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void wear_equip_reply::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.wear_equip_reply._result)
}

// required uint32 _gs = 2;
inline bool wear_equip_reply::has__gs() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void wear_equip_reply::set_has__gs() {
  _has_bits_[0] |= 0x00000002u;
}
inline void wear_equip_reply::clear_has__gs() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void wear_equip_reply::clear__gs() {
  _gs_ = 0u;
  clear_has__gs();
}
inline ::google::protobuf::uint32 wear_equip_reply::_gs() const {
  // @@protoc_insertion_point(field_get:client_baseserver.wear_equip_reply._gs)
  return _gs_;
}
inline void wear_equip_reply::set__gs(::google::protobuf::uint32 value) {
  set_has__gs();
  _gs_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.wear_equip_reply._gs)
}

// -------------------------------------------------------------------

// sync_vitality_reply

// required .client_baseserver.vitality _vitality = 1;
inline bool sync_vitality_reply::has__vitality() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void sync_vitality_reply::set_has__vitality() {
  _has_bits_[0] |= 0x00000001u;
}
inline void sync_vitality_reply::clear_has__vitality() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void sync_vitality_reply::clear__vitality() {
  if (_vitality_ != NULL) _vitality_->::client_baseserver::vitality::Clear();
  clear_has__vitality();
}
inline const ::client_baseserver::vitality& sync_vitality_reply::_vitality() const {
  // @@protoc_insertion_point(field_get:client_baseserver.sync_vitality_reply._vitality)
  return _vitality_ != NULL ? *_vitality_ : *default_instance_->_vitality_;
}
inline ::client_baseserver::vitality* sync_vitality_reply::mutable__vitality() {
  set_has__vitality();
  if (_vitality_ == NULL) _vitality_ = new ::client_baseserver::vitality;
  // @@protoc_insertion_point(field_mutable:client_baseserver.sync_vitality_reply._vitality)
  return _vitality_;
}
inline ::client_baseserver::vitality* sync_vitality_reply::release__vitality() {
  clear_has__vitality();
  ::client_baseserver::vitality* temp = _vitality_;
  _vitality_ = NULL;
  return temp;
}
inline void sync_vitality_reply::set_allocated__vitality(::client_baseserver::vitality* _vitality) {
  delete _vitality_;
  _vitality_ = _vitality;
  if (_vitality) {
    set_has__vitality();
  } else {
    clear_has__vitality();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.sync_vitality_reply._vitality)
}

// required .client_baseserver.vitality _shadow_runes = 2;
inline bool sync_vitality_reply::has__shadow_runes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void sync_vitality_reply::set_has__shadow_runes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void sync_vitality_reply::clear_has__shadow_runes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void sync_vitality_reply::clear__shadow_runes() {
  if (_shadow_runes_ != NULL) _shadow_runes_->::client_baseserver::vitality::Clear();
  clear_has__shadow_runes();
}
inline const ::client_baseserver::vitality& sync_vitality_reply::_shadow_runes() const {
  // @@protoc_insertion_point(field_get:client_baseserver.sync_vitality_reply._shadow_runes)
  return _shadow_runes_ != NULL ? *_shadow_runes_ : *default_instance_->_shadow_runes_;
}
inline ::client_baseserver::vitality* sync_vitality_reply::mutable__shadow_runes() {
  set_has__shadow_runes();
  if (_shadow_runes_ == NULL) _shadow_runes_ = new ::client_baseserver::vitality;
  // @@protoc_insertion_point(field_mutable:client_baseserver.sync_vitality_reply._shadow_runes)
  return _shadow_runes_;
}
inline ::client_baseserver::vitality* sync_vitality_reply::release__shadow_runes() {
  clear_has__shadow_runes();
  ::client_baseserver::vitality* temp = _shadow_runes_;
  _shadow_runes_ = NULL;
  return temp;
}
inline void sync_vitality_reply::set_allocated__shadow_runes(::client_baseserver::vitality* _shadow_runes) {
  delete _shadow_runes_;
  _shadow_runes_ = _shadow_runes;
  if (_shadow_runes) {
    set_has__shadow_runes();
  } else {
    clear_has__shadow_runes();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.sync_vitality_reply._shadow_runes)
}

// -------------------------------------------------------------------

// consume_item_reply

// required .client_baseserver.hero _hero = 1;
inline bool consume_item_reply::has__hero() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void consume_item_reply::set_has__hero() {
  _has_bits_[0] |= 0x00000001u;
}
inline void consume_item_reply::clear_has__hero() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void consume_item_reply::clear__hero() {
  if (_hero_ != NULL) _hero_->::client_baseserver::hero::Clear();
  clear_has__hero();
}
inline const ::client_baseserver::hero& consume_item_reply::_hero() const {
  // @@protoc_insertion_point(field_get:client_baseserver.consume_item_reply._hero)
  return _hero_ != NULL ? *_hero_ : *default_instance_->_hero_;
}
inline ::client_baseserver::hero* consume_item_reply::mutable__hero() {
  set_has__hero();
  if (_hero_ == NULL) _hero_ = new ::client_baseserver::hero;
  // @@protoc_insertion_point(field_mutable:client_baseserver.consume_item_reply._hero)
  return _hero_;
}
inline ::client_baseserver::hero* consume_item_reply::release__hero() {
  clear_has__hero();
  ::client_baseserver::hero* temp = _hero_;
  _hero_ = NULL;
  return temp;
}
inline void consume_item_reply::set_allocated__hero(::client_baseserver::hero* _hero) {
  delete _hero_;
  _hero_ = _hero;
  if (_hero) {
    set_has__hero();
  } else {
    clear_has__hero();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.consume_item_reply._hero)
}

// -------------------------------------------------------------------

// user_shop

// required uint32 _id = 1;
inline bool user_shop::has__id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void user_shop::set_has__id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void user_shop::clear_has__id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void user_shop::clear__id() {
  _id_ = 0u;
  clear_has__id();
}
inline ::google::protobuf::uint32 user_shop::_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.user_shop._id)
  return _id_;
}
inline void user_shop::set__id(::google::protobuf::uint32 value) {
  set_has__id();
  _id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.user_shop._id)
}

// optional uint32 _last_auto_refresh_time = 2;
inline bool user_shop::has__last_auto_refresh_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void user_shop::set_has__last_auto_refresh_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void user_shop::clear_has__last_auto_refresh_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void user_shop::clear__last_auto_refresh_time() {
  _last_auto_refresh_time_ = 0u;
  clear_has__last_auto_refresh_time();
}
inline ::google::protobuf::uint32 user_shop::_last_auto_refresh_time() const {
  // @@protoc_insertion_point(field_get:client_baseserver.user_shop._last_auto_refresh_time)
  return _last_auto_refresh_time_;
}
inline void user_shop::set__last_auto_refresh_time(::google::protobuf::uint32 value) {
  set_has__last_auto_refresh_time();
  _last_auto_refresh_time_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.user_shop._last_auto_refresh_time)
}

// optional uint32 _expire_time = 3;
inline bool user_shop::has__expire_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void user_shop::set_has__expire_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void user_shop::clear_has__expire_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void user_shop::clear__expire_time() {
  _expire_time_ = 0u;
  clear_has__expire_time();
}
inline ::google::protobuf::uint32 user_shop::_expire_time() const {
  // @@protoc_insertion_point(field_get:client_baseserver.user_shop._expire_time)
  return _expire_time_;
}
inline void user_shop::set__expire_time(::google::protobuf::uint32 value) {
  set_has__expire_time();
  _expire_time_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.user_shop._expire_time)
}

// optional uint32 _last_manual_refresh_time = 4;
inline bool user_shop::has__last_manual_refresh_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void user_shop::set_has__last_manual_refresh_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void user_shop::clear_has__last_manual_refresh_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void user_shop::clear__last_manual_refresh_time() {
  _last_manual_refresh_time_ = 0u;
  clear_has__last_manual_refresh_time();
}
inline ::google::protobuf::uint32 user_shop::_last_manual_refresh_time() const {
  // @@protoc_insertion_point(field_get:client_baseserver.user_shop._last_manual_refresh_time)
  return _last_manual_refresh_time_;
}
inline void user_shop::set__last_manual_refresh_time(::google::protobuf::uint32 value) {
  set_has__last_manual_refresh_time();
  _last_manual_refresh_time_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.user_shop._last_manual_refresh_time)
}

// optional uint32 _today_times = 5;
inline bool user_shop::has__today_times() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void user_shop::set_has__today_times() {
  _has_bits_[0] |= 0x00000010u;
}
inline void user_shop::clear_has__today_times() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void user_shop::clear__today_times() {
  _today_times_ = 0u;
  clear_has__today_times();
}
inline ::google::protobuf::uint32 user_shop::_today_times() const {
  // @@protoc_insertion_point(field_get:client_baseserver.user_shop._today_times)
  return _today_times_;
}
inline void user_shop::set__today_times(::google::protobuf::uint32 value) {
  set_has__today_times();
  _today_times_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.user_shop._today_times)
}

// repeated .client_baseserver.goods _current_goods = 6;
inline int user_shop::_current_goods_size() const {
  return _current_goods_.size();
}
inline void user_shop::clear__current_goods() {
  _current_goods_.Clear();
}
inline const ::client_baseserver::goods& user_shop::_current_goods(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.user_shop._current_goods)
  return _current_goods_.Get(index);
}
inline ::client_baseserver::goods* user_shop::mutable__current_goods(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.user_shop._current_goods)
  return _current_goods_.Mutable(index);
}
inline ::client_baseserver::goods* user_shop::add__current_goods() {
  // @@protoc_insertion_point(field_add:client_baseserver.user_shop._current_goods)
  return _current_goods_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::goods >&
user_shop::_current_goods() const {
  // @@protoc_insertion_point(field_list:client_baseserver.user_shop._current_goods)
  return _current_goods_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::goods >*
user_shop::mutable__current_goods() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.user_shop._current_goods)
  return &_current_goods_;
}

// -------------------------------------------------------------------

// star_shop

// required uint32 _id = 1;
inline bool star_shop::has__id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void star_shop::set_has__id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void star_shop::clear_has__id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void star_shop::clear__id() {
  _id_ = 0u;
  clear_has__id();
}
inline ::google::protobuf::uint32 star_shop::_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.star_shop._id)
  return _id_;
}
inline void star_shop::set__id(::google::protobuf::uint32 value) {
  set_has__id();
  _id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.star_shop._id)
}

// optional uint32 _expire_time = 2;
inline bool star_shop::has__expire_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void star_shop::set_has__expire_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void star_shop::clear_has__expire_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void star_shop::clear__expire_time() {
  _expire_time_ = 0u;
  clear_has__expire_time();
}
inline ::google::protobuf::uint32 star_shop::_expire_time() const {
  // @@protoc_insertion_point(field_get:client_baseserver.star_shop._expire_time)
  return _expire_time_;
}
inline void star_shop::set__expire_time(::google::protobuf::uint32 value) {
  set_has__expire_time();
  _expire_time_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.star_shop._expire_time)
}

// repeated .client_baseserver.star_goods _star_goods = 3;
inline int star_shop::_star_goods_size() const {
  return _star_goods_.size();
}
inline void star_shop::clear__star_goods() {
  _star_goods_.Clear();
}
inline const ::client_baseserver::star_goods& star_shop::_star_goods(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.star_shop._star_goods)
  return _star_goods_.Get(index);
}
inline ::client_baseserver::star_goods* star_shop::mutable__star_goods(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.star_shop._star_goods)
  return _star_goods_.Mutable(index);
}
inline ::client_baseserver::star_goods* star_shop::add__star_goods() {
  // @@protoc_insertion_point(field_add:client_baseserver.star_shop._star_goods)
  return _star_goods_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::star_goods >&
star_shop::_star_goods() const {
  // @@protoc_insertion_point(field_list:client_baseserver.star_shop._star_goods)
  return _star_goods_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::star_goods >*
star_shop::mutable__star_goods() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.star_shop._star_goods)
  return &_star_goods_;
}

// -------------------------------------------------------------------

// shop_consume_reply

// required .client_baseserver.result _result = 1 [default = success];
inline bool shop_consume_reply::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void shop_consume_reply::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void shop_consume_reply::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void shop_consume_reply::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result shop_consume_reply::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.shop_consume_reply._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void shop_consume_reply::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.shop_consume_reply._result)
}

// -------------------------------------------------------------------

// skill_levelup_reply

// required .client_baseserver.result _result = 1 [default = fail];
inline bool skill_levelup_reply::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void skill_levelup_reply::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void skill_levelup_reply::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void skill_levelup_reply::clear__result() {
  _result_ = 1;
  clear_has__result();
}
inline ::client_baseserver::result skill_levelup_reply::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.skill_levelup_reply._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void skill_levelup_reply::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.skill_levelup_reply._result)
}

// required uint32 _gs = 2;
inline bool skill_levelup_reply::has__gs() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void skill_levelup_reply::set_has__gs() {
  _has_bits_[0] |= 0x00000002u;
}
inline void skill_levelup_reply::clear_has__gs() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void skill_levelup_reply::clear__gs() {
  _gs_ = 0u;
  clear_has__gs();
}
inline ::google::protobuf::uint32 skill_levelup_reply::_gs() const {
  // @@protoc_insertion_point(field_get:client_baseserver.skill_levelup_reply._gs)
  return _gs_;
}
inline void skill_levelup_reply::set__gs(::google::protobuf::uint32 value) {
  set_has__gs();
  _gs_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.skill_levelup_reply._gs)
}

// -------------------------------------------------------------------

// sell_item_reply

// required .client_baseserver.result _result = 1 [default = success];
inline bool sell_item_reply::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void sell_item_reply::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void sell_item_reply::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void sell_item_reply::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result sell_item_reply::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.sell_item_reply._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void sell_item_reply::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.sell_item_reply._result)
}

// -------------------------------------------------------------------

// fragment_compose_reply

// required .client_baseserver.result _result = 1 [default = fail];
inline bool fragment_compose_reply::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void fragment_compose_reply::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void fragment_compose_reply::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void fragment_compose_reply::clear__result() {
  _result_ = 1;
  clear_has__result();
}
inline ::client_baseserver::result fragment_compose_reply::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.fragment_compose_reply._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void fragment_compose_reply::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.fragment_compose_reply._result)
}

// -------------------------------------------------------------------

// hero_equip_upgrade_reply

// required .client_baseserver.result _result = 1 [default = fail];
inline bool hero_equip_upgrade_reply::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void hero_equip_upgrade_reply::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void hero_equip_upgrade_reply::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void hero_equip_upgrade_reply::clear__result() {
  _result_ = 1;
  clear_has__result();
}
inline ::client_baseserver::result hero_equip_upgrade_reply::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.hero_equip_upgrade_reply._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void hero_equip_upgrade_reply::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.hero_equip_upgrade_reply._result)
}

// optional .client_baseserver.hero _hero = 2;
inline bool hero_equip_upgrade_reply::has__hero() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void hero_equip_upgrade_reply::set_has__hero() {
  _has_bits_[0] |= 0x00000002u;
}
inline void hero_equip_upgrade_reply::clear_has__hero() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void hero_equip_upgrade_reply::clear__hero() {
  if (_hero_ != NULL) _hero_->::client_baseserver::hero::Clear();
  clear_has__hero();
}
inline const ::client_baseserver::hero& hero_equip_upgrade_reply::_hero() const {
  // @@protoc_insertion_point(field_get:client_baseserver.hero_equip_upgrade_reply._hero)
  return _hero_ != NULL ? *_hero_ : *default_instance_->_hero_;
}
inline ::client_baseserver::hero* hero_equip_upgrade_reply::mutable__hero() {
  set_has__hero();
  if (_hero_ == NULL) _hero_ = new ::client_baseserver::hero;
  // @@protoc_insertion_point(field_mutable:client_baseserver.hero_equip_upgrade_reply._hero)
  return _hero_;
}
inline ::client_baseserver::hero* hero_equip_upgrade_reply::release__hero() {
  clear_has__hero();
  ::client_baseserver::hero* temp = _hero_;
  _hero_ = NULL;
  return temp;
}
inline void hero_equip_upgrade_reply::set_allocated__hero(::client_baseserver::hero* _hero) {
  delete _hero_;
  _hero_ = _hero;
  if (_hero) {
    set_has__hero();
  } else {
    clear_has__hero();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.hero_equip_upgrade_reply._hero)
}

// -------------------------------------------------------------------

// tutorial_reply

// required .client_baseserver.result _result = 1 [default = success];
inline bool tutorial_reply::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tutorial_reply::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tutorial_reply::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tutorial_reply::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result tutorial_reply::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.tutorial_reply._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void tutorial_reply::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.tutorial_reply._result)
}

// -------------------------------------------------------------------

// error_info

// required string _info = 1;
inline bool error_info::has__info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void error_info::set_has__info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void error_info::clear_has__info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void error_info::clear__info() {
  if (_info_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _info_->clear();
  }
  clear_has__info();
}
inline const ::std::string& error_info::_info() const {
  // @@protoc_insertion_point(field_get:client_baseserver.error_info._info)
  return *_info_;
}
inline void error_info::set__info(const ::std::string& value) {
  set_has__info();
  if (_info_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _info_ = new ::std::string;
  }
  _info_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.error_info._info)
}
inline void error_info::set__info(const char* value) {
  set_has__info();
  if (_info_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _info_ = new ::std::string;
  }
  _info_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.error_info._info)
}
inline void error_info::set__info(const char* value, size_t size) {
  set_has__info();
  if (_info_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _info_ = new ::std::string;
  }
  _info_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.error_info._info)
}
inline ::std::string* error_info::mutable__info() {
  set_has__info();
  if (_info_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _info_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.error_info._info)
  return _info_;
}
inline ::std::string* error_info::release__info() {
  clear_has__info();
  if (_info_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = _info_;
    _info_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void error_info::set_allocated__info(::std::string* _info) {
  if (_info_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete _info_;
  }
  if (_info) {
    set_has__info();
    _info_ = _info;
  } else {
    clear_has__info();
    _info_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.error_info._info)
}

// optional .client_baseserver.error_info.exit _exit = 2 [default = noneed];
inline bool error_info::has__exit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void error_info::set_has__exit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void error_info::clear_has__exit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void error_info::clear__exit() {
  _exit_ = 0;
  clear_has__exit();
}
inline ::client_baseserver::error_info_exit error_info::_exit() const {
  // @@protoc_insertion_point(field_get:client_baseserver.error_info._exit)
  return static_cast< ::client_baseserver::error_info_exit >(_exit_);
}
inline void error_info::set__exit(::client_baseserver::error_info_exit value) {
  assert(::client_baseserver::error_info_exit_IsValid(value));
  set_has__exit();
  _exit_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.error_info._exit)
}

// -------------------------------------------------------------------

// goods

// required uint32 _id = 1;
inline bool goods::has__id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void goods::set_has__id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void goods::clear_has__id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void goods::clear__id() {
  _id_ = 0u;
  clear_has__id();
}
inline ::google::protobuf::uint32 goods::_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.goods._id)
  return _id_;
}
inline void goods::set__id(::google::protobuf::uint32 value) {
  set_has__id();
  _id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.goods._id)
}

// required uint32 _amount = 2;
inline bool goods::has__amount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void goods::set_has__amount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void goods::clear_has__amount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void goods::clear__amount() {
  _amount_ = 0u;
  clear_has__amount();
}
inline ::google::protobuf::uint32 goods::_amount() const {
  // @@protoc_insertion_point(field_get:client_baseserver.goods._amount)
  return _amount_;
}
inline void goods::set__amount(::google::protobuf::uint32 value) {
  set_has__amount();
  _amount_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.goods._amount)
}

// required .client_baseserver.goods.price_type _type = 3;
inline bool goods::has__type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void goods::set_has__type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void goods::clear_has__type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void goods::clear__type() {
  _type_ = 0;
  clear_has__type();
}
inline ::client_baseserver::goods_price_type goods::_type() const {
  // @@protoc_insertion_point(field_get:client_baseserver.goods._type)
  return static_cast< ::client_baseserver::goods_price_type >(_type_);
}
inline void goods::set__type(::client_baseserver::goods_price_type value) {
  assert(::client_baseserver::goods_price_type_IsValid(value));
  set_has__type();
  _type_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.goods._type)
}

// required uint32 _price = 4;
inline bool goods::has__price() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void goods::set_has__price() {
  _has_bits_[0] |= 0x00000008u;
}
inline void goods::clear_has__price() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void goods::clear__price() {
  _price_ = 0u;
  clear_has__price();
}
inline ::google::protobuf::uint32 goods::_price() const {
  // @@protoc_insertion_point(field_get:client_baseserver.goods._price)
  return _price_;
}
inline void goods::set__price(::google::protobuf::uint32 value) {
  set_has__price();
  _price_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.goods._price)
}

// required uint32 _is_sale = 5;
inline bool goods::has__is_sale() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void goods::set_has__is_sale() {
  _has_bits_[0] |= 0x00000010u;
}
inline void goods::clear_has__is_sale() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void goods::clear__is_sale() {
  _is_sale_ = 0u;
  clear_has__is_sale();
}
inline ::google::protobuf::uint32 goods::_is_sale() const {
  // @@protoc_insertion_point(field_get:client_baseserver.goods._is_sale)
  return _is_sale_;
}
inline void goods::set__is_sale(::google::protobuf::uint32 value) {
  set_has__is_sale();
  _is_sale_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.goods._is_sale)
}

// -------------------------------------------------------------------

// star_goods

// required .client_baseserver.star_goods.box_type _type = 1;
inline bool star_goods::has__type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void star_goods::set_has__type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void star_goods::clear_has__type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void star_goods::clear__type() {
  _type_ = 0;
  clear_has__type();
}
inline ::client_baseserver::star_goods_box_type star_goods::_type() const {
  // @@protoc_insertion_point(field_get:client_baseserver.star_goods._type)
  return static_cast< ::client_baseserver::star_goods_box_type >(_type_);
}
inline void star_goods::set__type(::client_baseserver::star_goods_box_type value) {
  assert(::client_baseserver::star_goods_box_type_IsValid(value));
  set_has__type();
  _type_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.star_goods._type)
}

// required uint32 _amount = 2 [default = 1];
inline bool star_goods::has__amount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void star_goods::set_has__amount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void star_goods::clear_has__amount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void star_goods::clear__amount() {
  _amount_ = 1u;
  clear_has__amount();
}
inline ::google::protobuf::uint32 star_goods::_amount() const {
  // @@protoc_insertion_point(field_get:client_baseserver.star_goods._amount)
  return _amount_;
}
inline void star_goods::set__amount(::google::protobuf::uint32 value) {
  set_has__amount();
  _amount_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.star_goods._amount)
}

// required uint32 _stone_id = 3;
inline bool star_goods::has__stone_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void star_goods::set_has__stone_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void star_goods::clear_has__stone_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void star_goods::clear__stone_id() {
  _stone_id_ = 0u;
  clear_has__stone_id();
}
inline ::google::protobuf::uint32 star_goods::_stone_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.star_goods._stone_id)
  return _stone_id_;
}
inline void star_goods::set__stone_id(::google::protobuf::uint32 value) {
  set_has__stone_id();
  _stone_id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.star_goods._stone_id)
}

// required uint32 _stone_amount = 4;
inline bool star_goods::has__stone_amount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void star_goods::set_has__stone_amount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void star_goods::clear_has__stone_amount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void star_goods::clear__stone_amount() {
  _stone_amount_ = 0u;
  clear_has__stone_amount();
}
inline ::google::protobuf::uint32 star_goods::_stone_amount() const {
  // @@protoc_insertion_point(field_get:client_baseserver.star_goods._stone_amount)
  return _stone_amount_;
}
inline void star_goods::set__stone_amount(::google::protobuf::uint32 value) {
  set_has__stone_amount();
  _stone_amount_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.star_goods._stone_amount)
}

// -------------------------------------------------------------------

// user

// required uint32 _userid = 1;
inline bool user::has__userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void user::set_has__userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void user::clear_has__userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void user::clear__userid() {
  _userid_ = 0u;
  clear_has__userid();
}
inline ::google::protobuf::uint32 user::_userid() const {
  // @@protoc_insertion_point(field_get:client_baseserver.user._userid)
  return _userid_;
}
inline void user::set__userid(::google::protobuf::uint32 value) {
  set_has__userid();
  _userid_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.user._userid)
}

// required .client_baseserver.name_card _name_card = 2;
inline bool user::has__name_card() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void user::set_has__name_card() {
  _has_bits_[0] |= 0x00000002u;
}
inline void user::clear_has__name_card() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void user::clear__name_card() {
  if (_name_card_ != NULL) _name_card_->::client_baseserver::name_card::Clear();
  clear_has__name_card();
}
inline const ::client_baseserver::name_card& user::_name_card() const {
  // @@protoc_insertion_point(field_get:client_baseserver.user._name_card)
  return _name_card_ != NULL ? *_name_card_ : *default_instance_->_name_card_;
}
inline ::client_baseserver::name_card* user::mutable__name_card() {
  set_has__name_card();
  if (_name_card_ == NULL) _name_card_ = new ::client_baseserver::name_card;
  // @@protoc_insertion_point(field_mutable:client_baseserver.user._name_card)
  return _name_card_;
}
inline ::client_baseserver::name_card* user::release__name_card() {
  clear_has__name_card();
  ::client_baseserver::name_card* temp = _name_card_;
  _name_card_ = NULL;
  return temp;
}
inline void user::set_allocated__name_card(::client_baseserver::name_card* _name_card) {
  delete _name_card_;
  _name_card_ = _name_card;
  if (_name_card) {
    set_has__name_card();
  } else {
    clear_has__name_card();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.user._name_card)
}

// required uint32 _level = 3;
inline bool user::has__level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void user::set_has__level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void user::clear_has__level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void user::clear__level() {
  _level_ = 0u;
  clear_has__level();
}
inline ::google::protobuf::uint32 user::_level() const {
  // @@protoc_insertion_point(field_get:client_baseserver.user._level)
  return _level_;
}
inline void user::set__level(::google::protobuf::uint32 value) {
  set_has__level();
  _level_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.user._level)
}

// required uint32 _recharge_sum = 4;
inline bool user::has__recharge_sum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void user::set_has__recharge_sum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void user::clear_has__recharge_sum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void user::clear__recharge_sum() {
  _recharge_sum_ = 0u;
  clear_has__recharge_sum();
}
inline ::google::protobuf::uint32 user::_recharge_sum() const {
  // @@protoc_insertion_point(field_get:client_baseserver.user._recharge_sum)
  return _recharge_sum_;
}
inline void user::set__recharge_sum(::google::protobuf::uint32 value) {
  set_has__recharge_sum();
  _recharge_sum_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.user._recharge_sum)
}

// required uint32 _exp = 5;
inline bool user::has__exp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void user::set_has__exp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void user::clear_has__exp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void user::clear__exp() {
  _exp_ = 0u;
  clear_has__exp();
}
inline ::google::protobuf::uint32 user::_exp() const {
  // @@protoc_insertion_point(field_get:client_baseserver.user._exp)
  return _exp_;
}
inline void user::set__exp(::google::protobuf::uint32 value) {
  set_has__exp();
  _exp_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.user._exp)
}

// required uint32 _money = 6;
inline bool user::has__money() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void user::set_has__money() {
  _has_bits_[0] |= 0x00000020u;
}
inline void user::clear_has__money() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void user::clear__money() {
  _money_ = 0u;
  clear_has__money();
}
inline ::google::protobuf::uint32 user::_money() const {
  // @@protoc_insertion_point(field_get:client_baseserver.user._money)
  return _money_;
}
inline void user::set__money(::google::protobuf::uint32 value) {
  set_has__money();
  _money_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.user._money)
}

// required uint32 _rmb = 7;
inline bool user::has__rmb() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void user::set_has__rmb() {
  _has_bits_[0] |= 0x00000040u;
}
inline void user::clear_has__rmb() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void user::clear__rmb() {
  _rmb_ = 0u;
  clear_has__rmb();
}
inline ::google::protobuf::uint32 user::_rmb() const {
  // @@protoc_insertion_point(field_get:client_baseserver.user._rmb)
  return _rmb_;
}
inline void user::set__rmb(::google::protobuf::uint32 value) {
  set_has__rmb();
  _rmb_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.user._rmb)
}

// required .client_baseserver.vitality _vitality = 8;
inline bool user::has__vitality() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void user::set_has__vitality() {
  _has_bits_[0] |= 0x00000080u;
}
inline void user::clear_has__vitality() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void user::clear__vitality() {
  if (_vitality_ != NULL) _vitality_->::client_baseserver::vitality::Clear();
  clear_has__vitality();
}
inline const ::client_baseserver::vitality& user::_vitality() const {
  // @@protoc_insertion_point(field_get:client_baseserver.user._vitality)
  return _vitality_ != NULL ? *_vitality_ : *default_instance_->_vitality_;
}
inline ::client_baseserver::vitality* user::mutable__vitality() {
  set_has__vitality();
  if (_vitality_ == NULL) _vitality_ = new ::client_baseserver::vitality;
  // @@protoc_insertion_point(field_mutable:client_baseserver.user._vitality)
  return _vitality_;
}
inline ::client_baseserver::vitality* user::release__vitality() {
  clear_has__vitality();
  ::client_baseserver::vitality* temp = _vitality_;
  _vitality_ = NULL;
  return temp;
}
inline void user::set_allocated__vitality(::client_baseserver::vitality* _vitality) {
  delete _vitality_;
  _vitality_ = _vitality;
  if (_vitality) {
    set_has__vitality();
  } else {
    clear_has__vitality();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.user._vitality)
}

// repeated .client_baseserver.hero _heroes = 10;
inline int user::_heroes_size() const {
  return _heroes_.size();
}
inline void user::clear__heroes() {
  _heroes_.Clear();
}
inline const ::client_baseserver::hero& user::_heroes(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.user._heroes)
  return _heroes_.Get(index);
}
inline ::client_baseserver::hero* user::mutable__heroes(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.user._heroes)
  return _heroes_.Mutable(index);
}
inline ::client_baseserver::hero* user::add__heroes() {
  // @@protoc_insertion_point(field_add:client_baseserver.user._heroes)
  return _heroes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >&
user::_heroes() const {
  // @@protoc_insertion_point(field_list:client_baseserver.user._heroes)
  return _heroes_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >*
user::mutable__heroes() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.user._heroes)
  return &_heroes_;
}

// repeated uint32 _items = 11;
inline int user::_items_size() const {
  return _items_.size();
}
inline void user::clear__items() {
  _items_.Clear();
}
inline ::google::protobuf::uint32 user::_items(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.user._items)
  return _items_.Get(index);
}
inline void user::set__items(int index, ::google::protobuf::uint32 value) {
  _items_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.user._items)
}
inline void user::add__items(::google::protobuf::uint32 value) {
  _items_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.user._items)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
user::_items() const {
  // @@protoc_insertion_point(field_list:client_baseserver.user._items)
  return _items_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
user::mutable__items() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.user._items)
  return &_items_;
}

// required .client_baseserver.skilllevelup _skill_level_up = 12;
inline bool user::has__skill_level_up() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void user::set_has__skill_level_up() {
  _has_bits_[0] |= 0x00000400u;
}
inline void user::clear_has__skill_level_up() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void user::clear__skill_level_up() {
  if (_skill_level_up_ != NULL) _skill_level_up_->::client_baseserver::skilllevelup::Clear();
  clear_has__skill_level_up();
}
inline const ::client_baseserver::skilllevelup& user::_skill_level_up() const {
  // @@protoc_insertion_point(field_get:client_baseserver.user._skill_level_up)
  return _skill_level_up_ != NULL ? *_skill_level_up_ : *default_instance_->_skill_level_up_;
}
inline ::client_baseserver::skilllevelup* user::mutable__skill_level_up() {
  set_has__skill_level_up();
  if (_skill_level_up_ == NULL) _skill_level_up_ = new ::client_baseserver::skilllevelup;
  // @@protoc_insertion_point(field_mutable:client_baseserver.user._skill_level_up)
  return _skill_level_up_;
}
inline ::client_baseserver::skilllevelup* user::release__skill_level_up() {
  clear_has__skill_level_up();
  ::client_baseserver::skilllevelup* temp = _skill_level_up_;
  _skill_level_up_ = NULL;
  return temp;
}
inline void user::set_allocated__skill_level_up(::client_baseserver::skilllevelup* _skill_level_up) {
  delete _skill_level_up_;
  _skill_level_up_ = _skill_level_up;
  if (_skill_level_up) {
    set_has__skill_level_up();
  } else {
    clear_has__skill_level_up();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.user._skill_level_up)
}

// required .client_baseserver.userstage _userstage = 15;
inline bool user::has__userstage() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void user::set_has__userstage() {
  _has_bits_[0] |= 0x00000800u;
}
inline void user::clear_has__userstage() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void user::clear__userstage() {
  if (_userstage_ != NULL) _userstage_->::client_baseserver::userstage::Clear();
  clear_has__userstage();
}
inline const ::client_baseserver::userstage& user::_userstage() const {
  // @@protoc_insertion_point(field_get:client_baseserver.user._userstage)
  return _userstage_ != NULL ? *_userstage_ : *default_instance_->_userstage_;
}
inline ::client_baseserver::userstage* user::mutable__userstage() {
  set_has__userstage();
  if (_userstage_ == NULL) _userstage_ = new ::client_baseserver::userstage;
  // @@protoc_insertion_point(field_mutable:client_baseserver.user._userstage)
  return _userstage_;
}
inline ::client_baseserver::userstage* user::release__userstage() {
  clear_has__userstage();
  ::client_baseserver::userstage* temp = _userstage_;
  _userstage_ = NULL;
  return temp;
}
inline void user::set_allocated__userstage(::client_baseserver::userstage* _userstage) {
  delete _userstage_;
  _userstage_ = _userstage;
  if (_userstage) {
    set_has__userstage();
  } else {
    clear_has__userstage();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.user._userstage)
}

// repeated .client_baseserver.user_shop _shop = 16;
inline int user::_shop_size() const {
  return _shop_.size();
}
inline void user::clear__shop() {
  _shop_.Clear();
}
inline const ::client_baseserver::user_shop& user::_shop(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.user._shop)
  return _shop_.Get(index);
}
inline ::client_baseserver::user_shop* user::mutable__shop(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.user._shop)
  return _shop_.Mutable(index);
}
inline ::client_baseserver::user_shop* user::add__shop() {
  // @@protoc_insertion_point(field_add:client_baseserver.user._shop)
  return _shop_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::user_shop >&
user::_shop() const {
  // @@protoc_insertion_point(field_list:client_baseserver.user._shop)
  return _shop_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::user_shop >*
user::mutable__shop() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.user._shop)
  return &_shop_;
}

// repeated uint32 _tutorial = 17;
inline int user::_tutorial_size() const {
  return _tutorial_.size();
}
inline void user::clear__tutorial() {
  _tutorial_.Clear();
}
inline ::google::protobuf::uint32 user::_tutorial(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.user._tutorial)
  return _tutorial_.Get(index);
}
inline void user::set__tutorial(int index, ::google::protobuf::uint32 value) {
  _tutorial_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.user._tutorial)
}
inline void user::add__tutorial(::google::protobuf::uint32 value) {
  _tutorial_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.user._tutorial)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
user::_tutorial() const {
  // @@protoc_insertion_point(field_list:client_baseserver.user._tutorial)
  return _tutorial_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
user::mutable__tutorial() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.user._tutorial)
  return &_tutorial_;
}

// repeated .client_baseserver.usertask _task = 18;
inline int user::_task_size() const {
  return _task_.size();
}
inline void user::clear__task() {
  _task_.Clear();
}
inline const ::client_baseserver::usertask& user::_task(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.user._task)
  return _task_.Get(index);
}
inline ::client_baseserver::usertask* user::mutable__task(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.user._task)
  return _task_.Mutable(index);
}
inline ::client_baseserver::usertask* user::add__task() {
  // @@protoc_insertion_point(field_add:client_baseserver.user._task)
  return _task_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::usertask >&
user::_task() const {
  // @@protoc_insertion_point(field_list:client_baseserver.user._task)
  return _task_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::usertask >*
user::mutable__task() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.user._task)
  return &_task_;
}

// repeated uint32 _task_finished = 19;
inline int user::_task_finished_size() const {
  return _task_finished_.size();
}
inline void user::clear__task_finished() {
  _task_finished_.Clear();
}
inline ::google::protobuf::uint32 user::_task_finished(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.user._task_finished)
  return _task_finished_.Get(index);
}
inline void user::set__task_finished(int index, ::google::protobuf::uint32 value) {
  _task_finished_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.user._task_finished)
}
inline void user::add__task_finished(::google::protobuf::uint32 value) {
  _task_finished_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.user._task_finished)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
user::_task_finished() const {
  // @@protoc_insertion_point(field_list:client_baseserver.user._task_finished)
  return _task_finished_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
user::mutable__task_finished() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.user._task_finished)
  return &_task_finished_;
}

// optional uint32 _last_login = 20;
inline bool user::has__last_login() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void user::set_has__last_login() {
  _has_bits_[0] |= 0x00010000u;
}
inline void user::clear_has__last_login() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void user::clear__last_login() {
  _last_login_ = 0u;
  clear_has__last_login();
}
inline ::google::protobuf::uint32 user::_last_login() const {
  // @@protoc_insertion_point(field_get:client_baseserver.user._last_login)
  return _last_login_;
}
inline void user::set__last_login(::google::protobuf::uint32 value) {
  set_has__last_login();
  _last_login_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.user._last_login)
}

// repeated .client_baseserver.dailyjob _dailyjob = 21;
inline int user::_dailyjob_size() const {
  return _dailyjob_.size();
}
inline void user::clear__dailyjob() {
  _dailyjob_.Clear();
}
inline const ::client_baseserver::dailyjob& user::_dailyjob(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.user._dailyjob)
  return _dailyjob_.Get(index);
}
inline ::client_baseserver::dailyjob* user::mutable__dailyjob(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.user._dailyjob)
  return _dailyjob_.Mutable(index);
}
inline ::client_baseserver::dailyjob* user::add__dailyjob() {
  // @@protoc_insertion_point(field_add:client_baseserver.user._dailyjob)
  return _dailyjob_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::dailyjob >&
user::_dailyjob() const {
  // @@protoc_insertion_point(field_list:client_baseserver.user._dailyjob)
  return _dailyjob_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::dailyjob >*
user::mutable__dailyjob() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.user._dailyjob)
  return &_dailyjob_;
}

// repeated .client_baseserver.tavern_record _tavern_record = 22;
inline int user::_tavern_record_size() const {
  return _tavern_record_.size();
}
inline void user::clear__tavern_record() {
  _tavern_record_.Clear();
}
inline const ::client_baseserver::tavern_record& user::_tavern_record(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.user._tavern_record)
  return _tavern_record_.Get(index);
}
inline ::client_baseserver::tavern_record* user::mutable__tavern_record(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.user._tavern_record)
  return _tavern_record_.Mutable(index);
}
inline ::client_baseserver::tavern_record* user::add__tavern_record() {
  // @@protoc_insertion_point(field_add:client_baseserver.user._tavern_record)
  return _tavern_record_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::tavern_record >&
user::_tavern_record() const {
  // @@protoc_insertion_point(field_list:client_baseserver.user._tavern_record)
  return _tavern_record_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::tavern_record >*
user::mutable__tavern_record() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.user._tavern_record)
  return &_tavern_record_;
}

// required .client_baseserver.usermidas _usermidas = 23;
inline bool user::has__usermidas() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void user::set_has__usermidas() {
  _has_bits_[0] |= 0x00080000u;
}
inline void user::clear_has__usermidas() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void user::clear__usermidas() {
  if (_usermidas_ != NULL) _usermidas_->::client_baseserver::usermidas::Clear();
  clear_has__usermidas();
}
inline const ::client_baseserver::usermidas& user::_usermidas() const {
  // @@protoc_insertion_point(field_get:client_baseserver.user._usermidas)
  return _usermidas_ != NULL ? *_usermidas_ : *default_instance_->_usermidas_;
}
inline ::client_baseserver::usermidas* user::mutable__usermidas() {
  set_has__usermidas();
  if (_usermidas_ == NULL) _usermidas_ = new ::client_baseserver::usermidas;
  // @@protoc_insertion_point(field_mutable:client_baseserver.user._usermidas)
  return _usermidas_;
}
inline ::client_baseserver::usermidas* user::release__usermidas() {
  clear_has__usermidas();
  ::client_baseserver::usermidas* temp = _usermidas_;
  _usermidas_ = NULL;
  return temp;
}
inline void user::set_allocated__usermidas(::client_baseserver::usermidas* _usermidas) {
  delete _usermidas_;
  _usermidas_ = _usermidas;
  if (_usermidas) {
    set_has__usermidas();
  } else {
    clear_has__usermidas();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.user._usermidas)
}

// required .client_baseserver.daily_login _daily_login = 24;
inline bool user::has__daily_login() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void user::set_has__daily_login() {
  _has_bits_[0] |= 0x00100000u;
}
inline void user::clear_has__daily_login() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void user::clear__daily_login() {
  if (_daily_login_ != NULL) _daily_login_->::client_baseserver::daily_login::Clear();
  clear_has__daily_login();
}
inline const ::client_baseserver::daily_login& user::_daily_login() const {
  // @@protoc_insertion_point(field_get:client_baseserver.user._daily_login)
  return _daily_login_ != NULL ? *_daily_login_ : *default_instance_->_daily_login_;
}
inline ::client_baseserver::daily_login* user::mutable__daily_login() {
  set_has__daily_login();
  if (_daily_login_ == NULL) _daily_login_ = new ::client_baseserver::daily_login;
  // @@protoc_insertion_point(field_mutable:client_baseserver.user._daily_login)
  return _daily_login_;
}
inline ::client_baseserver::daily_login* user::release__daily_login() {
  clear_has__daily_login();
  ::client_baseserver::daily_login* temp = _daily_login_;
  _daily_login_ = NULL;
  return temp;
}
inline void user::set_allocated__daily_login(::client_baseserver::daily_login* _daily_login) {
  delete _daily_login_;
  _daily_login_ = _daily_login;
  if (_daily_login) {
    set_has__daily_login();
  } else {
    clear_has__daily_login();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.user._daily_login)
}

// repeated uint32 _recharge_limit = 25;
inline int user::_recharge_limit_size() const {
  return _recharge_limit_.size();
}
inline void user::clear__recharge_limit() {
  _recharge_limit_.Clear();
}
inline ::google::protobuf::uint32 user::_recharge_limit(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.user._recharge_limit)
  return _recharge_limit_.Get(index);
}
inline void user::set__recharge_limit(int index, ::google::protobuf::uint32 value) {
  _recharge_limit_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.user._recharge_limit)
}
inline void user::add__recharge_limit(::google::protobuf::uint32 value) {
  _recharge_limit_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.user._recharge_limit)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
user::_recharge_limit() const {
  // @@protoc_insertion_point(field_list:client_baseserver.user._recharge_limit)
  return _recharge_limit_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
user::mutable__recharge_limit() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.user._recharge_limit)
  return &_recharge_limit_;
}

// repeated uint32 _vip_gifts_draw = 26;
inline int user::_vip_gifts_draw_size() const {
  return _vip_gifts_draw_.size();
}
inline void user::clear__vip_gifts_draw() {
  _vip_gifts_draw_.Clear();
}
inline ::google::protobuf::uint32 user::_vip_gifts_draw(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.user._vip_gifts_draw)
  return _vip_gifts_draw_.Get(index);
}
inline void user::set__vip_gifts_draw(int index, ::google::protobuf::uint32 value) {
  _vip_gifts_draw_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.user._vip_gifts_draw)
}
inline void user::add__vip_gifts_draw(::google::protobuf::uint32 value) {
  _vip_gifts_draw_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.user._vip_gifts_draw)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
user::_vip_gifts_draw() const {
  // @@protoc_insertion_point(field_list:client_baseserver.user._vip_gifts_draw)
  return _vip_gifts_draw_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
user::mutable__vip_gifts_draw() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.user._vip_gifts_draw)
  return &_vip_gifts_draw_;
}

// repeated .client_baseserver.user_point _points = 27;
inline int user::_points_size() const {
  return _points_.size();
}
inline void user::clear__points() {
  _points_.Clear();
}
inline const ::client_baseserver::user_point& user::_points(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.user._points)
  return _points_.Get(index);
}
inline ::client_baseserver::user_point* user::mutable__points(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.user._points)
  return _points_.Mutable(index);
}
inline ::client_baseserver::user_point* user::add__points() {
  // @@protoc_insertion_point(field_add:client_baseserver.user._points)
  return _points_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::user_point >&
user::_points() const {
  // @@protoc_insertion_point(field_list:client_baseserver.user._points)
  return _points_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::user_point >*
user::mutable__points() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.user._points)
  return &_points_;
}

// repeated .client_baseserver.monthcard _month_card = 28;
inline int user::_month_card_size() const {
  return _month_card_.size();
}
inline void user::clear__month_card() {
  _month_card_.Clear();
}
inline const ::client_baseserver::monthcard& user::_month_card(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.user._month_card)
  return _month_card_.Get(index);
}
inline ::client_baseserver::monthcard* user::mutable__month_card(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.user._month_card)
  return _month_card_.Mutable(index);
}
inline ::client_baseserver::monthcard* user::add__month_card() {
  // @@protoc_insertion_point(field_add:client_baseserver.user._month_card)
  return _month_card_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::monthcard >&
user::_month_card() const {
  // @@protoc_insertion_point(field_list:client_baseserver.user._month_card)
  return _month_card_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::monthcard >*
user::mutable__month_card() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.user._month_card)
  return &_month_card_;
}

// required .client_baseserver.user_guild _user_guild = 29;
inline bool user::has__user_guild() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void user::set_has__user_guild() {
  _has_bits_[0] |= 0x02000000u;
}
inline void user::clear_has__user_guild() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void user::clear__user_guild() {
  if (_user_guild_ != NULL) _user_guild_->::client_baseserver::user_guild::Clear();
  clear_has__user_guild();
}
inline const ::client_baseserver::user_guild& user::_user_guild() const {
  // @@protoc_insertion_point(field_get:client_baseserver.user._user_guild)
  return _user_guild_ != NULL ? *_user_guild_ : *default_instance_->_user_guild_;
}
inline ::client_baseserver::user_guild* user::mutable__user_guild() {
  set_has__user_guild();
  if (_user_guild_ == NULL) _user_guild_ = new ::client_baseserver::user_guild;
  // @@protoc_insertion_point(field_mutable:client_baseserver.user._user_guild)
  return _user_guild_;
}
inline ::client_baseserver::user_guild* user::release__user_guild() {
  clear_has__user_guild();
  ::client_baseserver::user_guild* temp = _user_guild_;
  _user_guild_ = NULL;
  return temp;
}
inline void user::set_allocated__user_guild(::client_baseserver::user_guild* _user_guild) {
  delete _user_guild_;
  _user_guild_ = _user_guild;
  if (_user_guild) {
    set_has__user_guild();
  } else {
    clear_has__user_guild();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.user._user_guild)
}

// required .client_baseserver.chat _chat = 30;
inline bool user::has__chat() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void user::set_has__chat() {
  _has_bits_[0] |= 0x04000000u;
}
inline void user::clear_has__chat() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void user::clear__chat() {
  if (_chat_ != NULL) _chat_->::client_baseserver::chat::Clear();
  clear_has__chat();
}
inline const ::client_baseserver::chat& user::_chat() const {
  // @@protoc_insertion_point(field_get:client_baseserver.user._chat)
  return _chat_ != NULL ? *_chat_ : *default_instance_->_chat_;
}
inline ::client_baseserver::chat* user::mutable__chat() {
  set_has__chat();
  if (_chat_ == NULL) _chat_ = new ::client_baseserver::chat;
  // @@protoc_insertion_point(field_mutable:client_baseserver.user._chat)
  return _chat_;
}
inline ::client_baseserver::chat* user::release__chat() {
  clear_has__chat();
  ::client_baseserver::chat* temp = _chat_;
  _chat_ = NULL;
  return temp;
}
inline void user::set_allocated__chat(::client_baseserver::chat* _chat) {
  delete _chat_;
  _chat_ = _chat;
  if (_chat) {
    set_has__chat();
  } else {
    clear_has__chat();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.user._chat)
}

// optional .client_baseserver.star_shop _sshop = 31;
inline bool user::has__sshop() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void user::set_has__sshop() {
  _has_bits_[0] |= 0x08000000u;
}
inline void user::clear_has__sshop() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void user::clear__sshop() {
  if (_sshop_ != NULL) _sshop_->::client_baseserver::star_shop::Clear();
  clear_has__sshop();
}
inline const ::client_baseserver::star_shop& user::_sshop() const {
  // @@protoc_insertion_point(field_get:client_baseserver.user._sshop)
  return _sshop_ != NULL ? *_sshop_ : *default_instance_->_sshop_;
}
inline ::client_baseserver::star_shop* user::mutable__sshop() {
  set_has__sshop();
  if (_sshop_ == NULL) _sshop_ = new ::client_baseserver::star_shop;
  // @@protoc_insertion_point(field_mutable:client_baseserver.user._sshop)
  return _sshop_;
}
inline ::client_baseserver::star_shop* user::release__sshop() {
  clear_has__sshop();
  ::client_baseserver::star_shop* temp = _sshop_;
  _sshop_ = NULL;
  return temp;
}
inline void user::set_allocated__sshop(::client_baseserver::star_shop* _sshop) {
  delete _sshop_;
  _sshop_ = _sshop;
  if (_sshop) {
    set_has__sshop();
  } else {
    clear_has__sshop();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.user._sshop)
}

// optional uint32 _facebook_follow = 32;
inline bool user::has__facebook_follow() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void user::set_has__facebook_follow() {
  _has_bits_[0] |= 0x10000000u;
}
inline void user::clear_has__facebook_follow() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void user::clear__facebook_follow() {
  _facebook_follow_ = 0u;
  clear_has__facebook_follow();
}
inline ::google::protobuf::uint32 user::_facebook_follow() const {
  // @@protoc_insertion_point(field_get:client_baseserver.user._facebook_follow)
  return _facebook_follow_;
}
inline void user::set__facebook_follow(::google::protobuf::uint32 value) {
  set_has__facebook_follow();
  _facebook_follow_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.user._facebook_follow)
}

// optional string _praise = 33;
inline bool user::has__praise() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void user::set_has__praise() {
  _has_bits_[0] |= 0x20000000u;
}
inline void user::clear_has__praise() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void user::clear__praise() {
  if (_praise_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _praise_->clear();
  }
  clear_has__praise();
}
inline const ::std::string& user::_praise() const {
  // @@protoc_insertion_point(field_get:client_baseserver.user._praise)
  return *_praise_;
}
inline void user::set__praise(const ::std::string& value) {
  set_has__praise();
  if (_praise_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _praise_ = new ::std::string;
  }
  _praise_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.user._praise)
}
inline void user::set__praise(const char* value) {
  set_has__praise();
  if (_praise_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _praise_ = new ::std::string;
  }
  _praise_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.user._praise)
}
inline void user::set__praise(const char* value, size_t size) {
  set_has__praise();
  if (_praise_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _praise_ = new ::std::string;
  }
  _praise_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.user._praise)
}
inline ::std::string* user::mutable__praise() {
  set_has__praise();
  if (_praise_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _praise_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.user._praise)
  return _praise_;
}
inline ::std::string* user::release__praise() {
  clear_has__praise();
  if (_praise_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = _praise_;
    _praise_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void user::set_allocated__praise(::std::string* _praise) {
  if (_praise_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete _praise_;
  }
  if (_praise) {
    set_has__praise();
    _praise_ = _praise;
  } else {
    clear_has__praise();
    _praise_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.user._praise)
}

// optional uint32 _sessionid = 34;
inline bool user::has__sessionid() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void user::set_has__sessionid() {
  _has_bits_[0] |= 0x40000000u;
}
inline void user::clear_has__sessionid() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void user::clear__sessionid() {
  _sessionid_ = 0u;
  clear_has__sessionid();
}
inline ::google::protobuf::uint32 user::_sessionid() const {
  // @@protoc_insertion_point(field_get:client_baseserver.user._sessionid)
  return _sessionid_;
}
inline void user::set__sessionid(::google::protobuf::uint32 value) {
  set_has__sessionid();
  _sessionid_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.user._sessionid)
}

// optional .client_baseserver.vitality _shadow_runes = 35;
inline bool user::has__shadow_runes() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void user::set_has__shadow_runes() {
  _has_bits_[0] |= 0x80000000u;
}
inline void user::clear_has__shadow_runes() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void user::clear__shadow_runes() {
  if (_shadow_runes_ != NULL) _shadow_runes_->::client_baseserver::vitality::Clear();
  clear_has__shadow_runes();
}
inline const ::client_baseserver::vitality& user::_shadow_runes() const {
  // @@protoc_insertion_point(field_get:client_baseserver.user._shadow_runes)
  return _shadow_runes_ != NULL ? *_shadow_runes_ : *default_instance_->_shadow_runes_;
}
inline ::client_baseserver::vitality* user::mutable__shadow_runes() {
  set_has__shadow_runes();
  if (_shadow_runes_ == NULL) _shadow_runes_ = new ::client_baseserver::vitality;
  // @@protoc_insertion_point(field_mutable:client_baseserver.user._shadow_runes)
  return _shadow_runes_;
}
inline ::client_baseserver::vitality* user::release__shadow_runes() {
  clear_has__shadow_runes();
  ::client_baseserver::vitality* temp = _shadow_runes_;
  _shadow_runes_ = NULL;
  return temp;
}
inline void user::set_allocated__shadow_runes(::client_baseserver::vitality* _shadow_runes) {
  delete _shadow_runes_;
  _shadow_runes_ = _shadow_runes;
  if (_shadow_runes) {
    set_has__shadow_runes();
  } else {
    clear_has__shadow_runes();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.user._shadow_runes)
}

// -------------------------------------------------------------------

// user_summary

// required uint32 _avatar = 1;
inline bool user_summary::has__avatar() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void user_summary::set_has__avatar() {
  _has_bits_[0] |= 0x00000001u;
}
inline void user_summary::clear_has__avatar() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void user_summary::clear__avatar() {
  _avatar_ = 0u;
  clear_has__avatar();
}
inline ::google::protobuf::uint32 user_summary::_avatar() const {
  // @@protoc_insertion_point(field_get:client_baseserver.user_summary._avatar)
  return _avatar_;
}
inline void user_summary::set__avatar(::google::protobuf::uint32 value) {
  set_has__avatar();
  _avatar_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.user_summary._avatar)
}

// required string _name = 2;
inline bool user_summary::has__name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void user_summary::set_has__name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void user_summary::clear_has__name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void user_summary::clear__name() {
  if (_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _name_->clear();
  }
  clear_has__name();
}
inline const ::std::string& user_summary::_name() const {
  // @@protoc_insertion_point(field_get:client_baseserver.user_summary._name)
  return *_name_;
}
inline void user_summary::set__name(const ::std::string& value) {
  set_has__name();
  if (_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _name_ = new ::std::string;
  }
  _name_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.user_summary._name)
}
inline void user_summary::set__name(const char* value) {
  set_has__name();
  if (_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _name_ = new ::std::string;
  }
  _name_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.user_summary._name)
}
inline void user_summary::set__name(const char* value, size_t size) {
  set_has__name();
  if (_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _name_ = new ::std::string;
  }
  _name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.user_summary._name)
}
inline ::std::string* user_summary::mutable__name() {
  set_has__name();
  if (_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.user_summary._name)
  return _name_;
}
inline ::std::string* user_summary::release__name() {
  clear_has__name();
  if (_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = _name_;
    _name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void user_summary::set_allocated__name(::std::string* _name) {
  if (_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete _name_;
  }
  if (_name) {
    set_has__name();
    _name_ = _name;
  } else {
    clear_has__name();
    _name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.user_summary._name)
}

// required uint32 _vip = 3;
inline bool user_summary::has__vip() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void user_summary::set_has__vip() {
  _has_bits_[0] |= 0x00000004u;
}
inline void user_summary::clear_has__vip() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void user_summary::clear__vip() {
  _vip_ = 0u;
  clear_has__vip();
}
inline ::google::protobuf::uint32 user_summary::_vip() const {
  // @@protoc_insertion_point(field_get:client_baseserver.user_summary._vip)
  return _vip_;
}
inline void user_summary::set__vip(::google::protobuf::uint32 value) {
  set_has__vip();
  _vip_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.user_summary._vip)
}

// required uint32 _level = 4;
inline bool user_summary::has__level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void user_summary::set_has__level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void user_summary::clear_has__level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void user_summary::clear__level() {
  _level_ = 0u;
  clear_has__level();
}
inline ::google::protobuf::uint32 user_summary::_level() const {
  // @@protoc_insertion_point(field_get:client_baseserver.user_summary._level)
  return _level_;
}
inline void user_summary::set__level(::google::protobuf::uint32 value) {
  set_has__level();
  _level_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.user_summary._level)
}

// optional string _guild_name = 5;
inline bool user_summary::has__guild_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void user_summary::set_has__guild_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void user_summary::clear_has__guild_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void user_summary::clear__guild_name() {
  if (_guild_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _guild_name_->clear();
  }
  clear_has__guild_name();
}
inline const ::std::string& user_summary::_guild_name() const {
  // @@protoc_insertion_point(field_get:client_baseserver.user_summary._guild_name)
  return *_guild_name_;
}
inline void user_summary::set__guild_name(const ::std::string& value) {
  set_has__guild_name();
  if (_guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _guild_name_ = new ::std::string;
  }
  _guild_name_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.user_summary._guild_name)
}
inline void user_summary::set__guild_name(const char* value) {
  set_has__guild_name();
  if (_guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _guild_name_ = new ::std::string;
  }
  _guild_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.user_summary._guild_name)
}
inline void user_summary::set__guild_name(const char* value, size_t size) {
  set_has__guild_name();
  if (_guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _guild_name_ = new ::std::string;
  }
  _guild_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.user_summary._guild_name)
}
inline ::std::string* user_summary::mutable__guild_name() {
  set_has__guild_name();
  if (_guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _guild_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.user_summary._guild_name)
  return _guild_name_;
}
inline ::std::string* user_summary::release__guild_name() {
  clear_has__guild_name();
  if (_guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = _guild_name_;
    _guild_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void user_summary::set_allocated__guild_name(::std::string* _guild_name) {
  if (_guild_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete _guild_name_;
  }
  if (_guild_name) {
    set_has__guild_name();
    _guild_name_ = _guild_name;
  } else {
    clear_has__guild_name();
    _guild_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.user_summary._guild_name)
}

// optional uint32 _user_id = 6;
inline bool user_summary::has__user_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void user_summary::set_has__user_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void user_summary::clear_has__user_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void user_summary::clear__user_id() {
  _user_id_ = 0u;
  clear_has__user_id();
}
inline ::google::protobuf::uint32 user_summary::_user_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.user_summary._user_id)
  return _user_id_;
}
inline void user_summary::set__user_id(::google::protobuf::uint32 value) {
  set_has__user_id();
  _user_id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.user_summary._user_id)
}

// -------------------------------------------------------------------

// name_card

// required string _name = 1;
inline bool name_card::has__name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void name_card::set_has__name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void name_card::clear_has__name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void name_card::clear__name() {
  if (_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _name_->clear();
  }
  clear_has__name();
}
inline const ::std::string& name_card::_name() const {
  // @@protoc_insertion_point(field_get:client_baseserver.name_card._name)
  return *_name_;
}
inline void name_card::set__name(const ::std::string& value) {
  set_has__name();
  if (_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _name_ = new ::std::string;
  }
  _name_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.name_card._name)
}
inline void name_card::set__name(const char* value) {
  set_has__name();
  if (_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _name_ = new ::std::string;
  }
  _name_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.name_card._name)
}
inline void name_card::set__name(const char* value, size_t size) {
  set_has__name();
  if (_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _name_ = new ::std::string;
  }
  _name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.name_card._name)
}
inline ::std::string* name_card::mutable__name() {
  set_has__name();
  if (_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.name_card._name)
  return _name_;
}
inline ::std::string* name_card::release__name() {
  clear_has__name();
  if (_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = _name_;
    _name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void name_card::set_allocated__name(::std::string* _name) {
  if (_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete _name_;
  }
  if (_name) {
    set_has__name();
    _name_ = _name;
  } else {
    clear_has__name();
    _name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.name_card._name)
}

// required uint32 _last_set_name_time = 2;
inline bool name_card::has__last_set_name_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void name_card::set_has__last_set_name_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void name_card::clear_has__last_set_name_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void name_card::clear__last_set_name_time() {
  _last_set_name_time_ = 0u;
  clear_has__last_set_name_time();
}
inline ::google::protobuf::uint32 name_card::_last_set_name_time() const {
  // @@protoc_insertion_point(field_get:client_baseserver.name_card._last_set_name_time)
  return _last_set_name_time_;
}
inline void name_card::set__last_set_name_time(::google::protobuf::uint32 value) {
  set_has__last_set_name_time();
  _last_set_name_time_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.name_card._last_set_name_time)
}

// required uint32 _avatar = 3;
inline bool name_card::has__avatar() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void name_card::set_has__avatar() {
  _has_bits_[0] |= 0x00000004u;
}
inline void name_card::clear_has__avatar() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void name_card::clear__avatar() {
  _avatar_ = 0u;
  clear_has__avatar();
}
inline ::google::protobuf::uint32 name_card::_avatar() const {
  // @@protoc_insertion_point(field_get:client_baseserver.name_card._avatar)
  return _avatar_;
}
inline void name_card::set__avatar(::google::protobuf::uint32 value) {
  set_has__avatar();
  _avatar_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.name_card._avatar)
}

// -------------------------------------------------------------------

// daily_login

// required .client_baseserver.daily_login.dailylogin_status _status = 1;
inline bool daily_login::has__status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void daily_login::set_has__status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void daily_login::clear_has__status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void daily_login::clear__status() {
  _status_ = 1;
  clear_has__status();
}
inline ::client_baseserver::daily_login_dailylogin_status daily_login::_status() const {
  // @@protoc_insertion_point(field_get:client_baseserver.daily_login._status)
  return static_cast< ::client_baseserver::daily_login_dailylogin_status >(_status_);
}
inline void daily_login::set__status(::client_baseserver::daily_login_dailylogin_status value) {
  assert(::client_baseserver::daily_login_dailylogin_status_IsValid(value));
  set_has__status();
  _status_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.daily_login._status)
}

// required uint32 _frequency = 2;
inline bool daily_login::has__frequency() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void daily_login::set_has__frequency() {
  _has_bits_[0] |= 0x00000002u;
}
inline void daily_login::clear_has__frequency() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void daily_login::clear__frequency() {
  _frequency_ = 0u;
  clear_has__frequency();
}
inline ::google::protobuf::uint32 daily_login::_frequency() const {
  // @@protoc_insertion_point(field_get:client_baseserver.daily_login._frequency)
  return _frequency_;
}
inline void daily_login::set__frequency(::google::protobuf::uint32 value) {
  set_has__frequency();
  _frequency_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.daily_login._frequency)
}

// required uint32 _last_login_date = 3;
inline bool daily_login::has__last_login_date() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void daily_login::set_has__last_login_date() {
  _has_bits_[0] |= 0x00000004u;
}
inline void daily_login::clear_has__last_login_date() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void daily_login::clear__last_login_date() {
  _last_login_date_ = 0u;
  clear_has__last_login_date();
}
inline ::google::protobuf::uint32 daily_login::_last_login_date() const {
  // @@protoc_insertion_point(field_get:client_baseserver.daily_login._last_login_date)
  return _last_login_date_;
}
inline void daily_login::set__last_login_date(::google::protobuf::uint32 value) {
  set_has__last_login_date();
  _last_login_date_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.daily_login._last_login_date)
}

// -------------------------------------------------------------------

// ask_daily_login_reply

// required .client_baseserver.result _result = 1;
inline bool ask_daily_login_reply::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ask_daily_login_reply::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ask_daily_login_reply::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ask_daily_login_reply::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result ask_daily_login_reply::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.ask_daily_login_reply._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void ask_daily_login_reply::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.ask_daily_login_reply._result)
}

// repeated uint32 _items = 2;
inline int ask_daily_login_reply::_items_size() const {
  return _items_.size();
}
inline void ask_daily_login_reply::clear__items() {
  _items_.Clear();
}
inline ::google::protobuf::uint32 ask_daily_login_reply::_items(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.ask_daily_login_reply._items)
  return _items_.Get(index);
}
inline void ask_daily_login_reply::set__items(int index, ::google::protobuf::uint32 value) {
  _items_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.ask_daily_login_reply._items)
}
inline void ask_daily_login_reply::add__items(::google::protobuf::uint32 value) {
  _items_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.ask_daily_login_reply._items)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ask_daily_login_reply::_items() const {
  // @@protoc_insertion_point(field_list:client_baseserver.ask_daily_login_reply._items)
  return _items_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ask_daily_login_reply::mutable__items() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.ask_daily_login_reply._items)
  return &_items_;
}

// repeated .client_baseserver.hero _hero = 3;
inline int ask_daily_login_reply::_hero_size() const {
  return _hero_.size();
}
inline void ask_daily_login_reply::clear__hero() {
  _hero_.Clear();
}
inline const ::client_baseserver::hero& ask_daily_login_reply::_hero(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.ask_daily_login_reply._hero)
  return _hero_.Get(index);
}
inline ::client_baseserver::hero* ask_daily_login_reply::mutable__hero(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.ask_daily_login_reply._hero)
  return _hero_.Mutable(index);
}
inline ::client_baseserver::hero* ask_daily_login_reply::add__hero() {
  // @@protoc_insertion_point(field_add:client_baseserver.ask_daily_login_reply._hero)
  return _hero_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >&
ask_daily_login_reply::_hero() const {
  // @@protoc_insertion_point(field_list:client_baseserver.ask_daily_login_reply._hero)
  return _hero_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >*
ask_daily_login_reply::mutable__hero() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.ask_daily_login_reply._hero)
  return &_hero_;
}

// optional uint32 _diamond = 4;
inline bool ask_daily_login_reply::has__diamond() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ask_daily_login_reply::set_has__diamond() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ask_daily_login_reply::clear_has__diamond() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ask_daily_login_reply::clear__diamond() {
  _diamond_ = 0u;
  clear_has__diamond();
}
inline ::google::protobuf::uint32 ask_daily_login_reply::_diamond() const {
  // @@protoc_insertion_point(field_get:client_baseserver.ask_daily_login_reply._diamond)
  return _diamond_;
}
inline void ask_daily_login_reply::set__diamond(::google::protobuf::uint32 value) {
  set_has__diamond();
  _diamond_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.ask_daily_login_reply._diamond)
}

// -------------------------------------------------------------------

// hero_equip

// required uint32 _index = 1;
inline bool hero_equip::has__index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void hero_equip::set_has__index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void hero_equip::clear_has__index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void hero_equip::clear__index() {
  _index_ = 0u;
  clear_has__index();
}
inline ::google::protobuf::uint32 hero_equip::_index() const {
  // @@protoc_insertion_point(field_get:client_baseserver.hero_equip._index)
  return _index_;
}
inline void hero_equip::set__index(::google::protobuf::uint32 value) {
  set_has__index();
  _index_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.hero_equip._index)
}

// required uint32 _item_id = 2;
inline bool hero_equip::has__item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void hero_equip::set_has__item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void hero_equip::clear_has__item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void hero_equip::clear__item_id() {
  _item_id_ = 0u;
  clear_has__item_id();
}
inline ::google::protobuf::uint32 hero_equip::_item_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.hero_equip._item_id)
  return _item_id_;
}
inline void hero_equip::set__item_id(::google::protobuf::uint32 value) {
  set_has__item_id();
  _item_id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.hero_equip._item_id)
}

// required uint32 _exp = 3;
inline bool hero_equip::has__exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void hero_equip::set_has__exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void hero_equip::clear_has__exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void hero_equip::clear__exp() {
  _exp_ = 0u;
  clear_has__exp();
}
inline ::google::protobuf::uint32 hero_equip::_exp() const {
  // @@protoc_insertion_point(field_get:client_baseserver.hero_equip._exp)
  return _exp_;
}
inline void hero_equip::set__exp(::google::protobuf::uint32 value) {
  set_has__exp();
  _exp_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.hero_equip._exp)
}

// -------------------------------------------------------------------

// hero

// required uint32 _tid = 1;
inline bool hero::has__tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void hero::set_has__tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void hero::clear_has__tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void hero::clear__tid() {
  _tid_ = 0u;
  clear_has__tid();
}
inline ::google::protobuf::uint32 hero::_tid() const {
  // @@protoc_insertion_point(field_get:client_baseserver.hero._tid)
  return _tid_;
}
inline void hero::set__tid(::google::protobuf::uint32 value) {
  set_has__tid();
  _tid_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.hero._tid)
}

// optional uint32 _rank = 2;
inline bool hero::has__rank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void hero::set_has__rank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void hero::clear_has__rank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void hero::clear__rank() {
  _rank_ = 0u;
  clear_has__rank();
}
inline ::google::protobuf::uint32 hero::_rank() const {
  // @@protoc_insertion_point(field_get:client_baseserver.hero._rank)
  return _rank_;
}
inline void hero::set__rank(::google::protobuf::uint32 value) {
  set_has__rank();
  _rank_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.hero._rank)
}

// required uint32 _level = 3;
inline bool hero::has__level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void hero::set_has__level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void hero::clear_has__level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void hero::clear__level() {
  _level_ = 0u;
  clear_has__level();
}
inline ::google::protobuf::uint32 hero::_level() const {
  // @@protoc_insertion_point(field_get:client_baseserver.hero._level)
  return _level_;
}
inline void hero::set__level(::google::protobuf::uint32 value) {
  set_has__level();
  _level_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.hero._level)
}

// required uint32 _stars = 4;
inline bool hero::has__stars() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void hero::set_has__stars() {
  _has_bits_[0] |= 0x00000008u;
}
inline void hero::clear_has__stars() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void hero::clear__stars() {
  _stars_ = 0u;
  clear_has__stars();
}
inline ::google::protobuf::uint32 hero::_stars() const {
  // @@protoc_insertion_point(field_get:client_baseserver.hero._stars)
  return _stars_;
}
inline void hero::set__stars(::google::protobuf::uint32 value) {
  set_has__stars();
  _stars_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.hero._stars)
}

// required uint32 _exp = 5;
inline bool hero::has__exp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void hero::set_has__exp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void hero::clear_has__exp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void hero::clear__exp() {
  _exp_ = 0u;
  clear_has__exp();
}
inline ::google::protobuf::uint32 hero::_exp() const {
  // @@protoc_insertion_point(field_get:client_baseserver.hero._exp)
  return _exp_;
}
inline void hero::set__exp(::google::protobuf::uint32 value) {
  set_has__exp();
  _exp_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.hero._exp)
}

// required uint32 _gs = 6;
inline bool hero::has__gs() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void hero::set_has__gs() {
  _has_bits_[0] |= 0x00000020u;
}
inline void hero::clear_has__gs() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void hero::clear__gs() {
  _gs_ = 0u;
  clear_has__gs();
}
inline ::google::protobuf::uint32 hero::_gs() const {
  // @@protoc_insertion_point(field_get:client_baseserver.hero._gs)
  return _gs_;
}
inline void hero::set__gs(::google::protobuf::uint32 value) {
  set_has__gs();
  _gs_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.hero._gs)
}

// required .client_baseserver.hero_status _state = 7;
inline bool hero::has__state() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void hero::set_has__state() {
  _has_bits_[0] |= 0x00000040u;
}
inline void hero::clear_has__state() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void hero::clear__state() {
  _state_ = 0;
  clear_has__state();
}
inline ::client_baseserver::hero_status hero::_state() const {
  // @@protoc_insertion_point(field_get:client_baseserver.hero._state)
  return static_cast< ::client_baseserver::hero_status >(_state_);
}
inline void hero::set__state(::client_baseserver::hero_status value) {
  assert(::client_baseserver::hero_status_IsValid(value));
  set_has__state();
  _state_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.hero._state)
}

// repeated uint32 _skill_levels = 8;
inline int hero::_skill_levels_size() const {
  return _skill_levels_.size();
}
inline void hero::clear__skill_levels() {
  _skill_levels_.Clear();
}
inline ::google::protobuf::uint32 hero::_skill_levels(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.hero._skill_levels)
  return _skill_levels_.Get(index);
}
inline void hero::set__skill_levels(int index, ::google::protobuf::uint32 value) {
  _skill_levels_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.hero._skill_levels)
}
inline void hero::add__skill_levels(::google::protobuf::uint32 value) {
  _skill_levels_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.hero._skill_levels)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
hero::_skill_levels() const {
  // @@protoc_insertion_point(field_list:client_baseserver.hero._skill_levels)
  return _skill_levels_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
hero::mutable__skill_levels() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.hero._skill_levels)
  return &_skill_levels_;
}

// repeated .client_baseserver.hero_equip _items = 9;
inline int hero::_items_size() const {
  return _items_.size();
}
inline void hero::clear__items() {
  _items_.Clear();
}
inline const ::client_baseserver::hero_equip& hero::_items(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.hero._items)
  return _items_.Get(index);
}
inline ::client_baseserver::hero_equip* hero::mutable__items(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.hero._items)
  return _items_.Mutable(index);
}
inline ::client_baseserver::hero_equip* hero::add__items() {
  // @@protoc_insertion_point(field_add:client_baseserver.hero._items)
  return _items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero_equip >&
hero::_items() const {
  // @@protoc_insertion_point(field_list:client_baseserver.hero._items)
  return _items_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero_equip >*
hero::mutable__items() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.hero._items)
  return &_items_;
}

// -------------------------------------------------------------------

// hero_summary

// required uint32 _tid = 1;
inline bool hero_summary::has__tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void hero_summary::set_has__tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void hero_summary::clear_has__tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void hero_summary::clear__tid() {
  _tid_ = 0u;
  clear_has__tid();
}
inline ::google::protobuf::uint32 hero_summary::_tid() const {
  // @@protoc_insertion_point(field_get:client_baseserver.hero_summary._tid)
  return _tid_;
}
inline void hero_summary::set__tid(::google::protobuf::uint32 value) {
  set_has__tid();
  _tid_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.hero_summary._tid)
}

// optional uint32 _rank = 2;
inline bool hero_summary::has__rank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void hero_summary::set_has__rank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void hero_summary::clear_has__rank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void hero_summary::clear__rank() {
  _rank_ = 0u;
  clear_has__rank();
}
inline ::google::protobuf::uint32 hero_summary::_rank() const {
  // @@protoc_insertion_point(field_get:client_baseserver.hero_summary._rank)
  return _rank_;
}
inline void hero_summary::set__rank(::google::protobuf::uint32 value) {
  set_has__rank();
  _rank_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.hero_summary._rank)
}

// required uint32 _level = 3;
inline bool hero_summary::has__level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void hero_summary::set_has__level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void hero_summary::clear_has__level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void hero_summary::clear__level() {
  _level_ = 0u;
  clear_has__level();
}
inline ::google::protobuf::uint32 hero_summary::_level() const {
  // @@protoc_insertion_point(field_get:client_baseserver.hero_summary._level)
  return _level_;
}
inline void hero_summary::set__level(::google::protobuf::uint32 value) {
  set_has__level();
  _level_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.hero_summary._level)
}

// required uint32 _stars = 4;
inline bool hero_summary::has__stars() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void hero_summary::set_has__stars() {
  _has_bits_[0] |= 0x00000008u;
}
inline void hero_summary::clear_has__stars() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void hero_summary::clear__stars() {
  _stars_ = 0u;
  clear_has__stars();
}
inline ::google::protobuf::uint32 hero_summary::_stars() const {
  // @@protoc_insertion_point(field_get:client_baseserver.hero_summary._stars)
  return _stars_;
}
inline void hero_summary::set__stars(::google::protobuf::uint32 value) {
  set_has__stars();
  _stars_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.hero_summary._stars)
}

// optional uint32 _gs = 5;
inline bool hero_summary::has__gs() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void hero_summary::set_has__gs() {
  _has_bits_[0] |= 0x00000010u;
}
inline void hero_summary::clear_has__gs() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void hero_summary::clear__gs() {
  _gs_ = 0u;
  clear_has__gs();
}
inline ::google::protobuf::uint32 hero_summary::_gs() const {
  // @@protoc_insertion_point(field_get:client_baseserver.hero_summary._gs)
  return _gs_;
}
inline void hero_summary::set__gs(::google::protobuf::uint32 value) {
  set_has__gs();
  _gs_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.hero_summary._gs)
}

// optional .client_baseserver.hero_status _state = 6;
inline bool hero_summary::has__state() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void hero_summary::set_has__state() {
  _has_bits_[0] |= 0x00000020u;
}
inline void hero_summary::clear_has__state() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void hero_summary::clear__state() {
  _state_ = 0;
  clear_has__state();
}
inline ::client_baseserver::hero_status hero_summary::_state() const {
  // @@protoc_insertion_point(field_get:client_baseserver.hero_summary._state)
  return static_cast< ::client_baseserver::hero_status >(_state_);
}
inline void hero_summary::set__state(::client_baseserver::hero_status value) {
  assert(::client_baseserver::hero_status_IsValid(value));
  set_has__state();
  _state_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.hero_summary._state)
}

// -------------------------------------------------------------------

// hero_dyna

// required uint32 _hp_perc = 1;
inline bool hero_dyna::has__hp_perc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void hero_dyna::set_has__hp_perc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void hero_dyna::clear_has__hp_perc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void hero_dyna::clear__hp_perc() {
  _hp_perc_ = 0u;
  clear_has__hp_perc();
}
inline ::google::protobuf::uint32 hero_dyna::_hp_perc() const {
  // @@protoc_insertion_point(field_get:client_baseserver.hero_dyna._hp_perc)
  return _hp_perc_;
}
inline void hero_dyna::set__hp_perc(::google::protobuf::uint32 value) {
  set_has__hp_perc();
  _hp_perc_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.hero_dyna._hp_perc)
}

// required uint32 _mp_perc = 2;
inline bool hero_dyna::has__mp_perc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void hero_dyna::set_has__mp_perc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void hero_dyna::clear_has__mp_perc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void hero_dyna::clear__mp_perc() {
  _mp_perc_ = 0u;
  clear_has__mp_perc();
}
inline ::google::protobuf::uint32 hero_dyna::_mp_perc() const {
  // @@protoc_insertion_point(field_get:client_baseserver.hero_dyna._mp_perc)
  return _mp_perc_;
}
inline void hero_dyna::set__mp_perc(::google::protobuf::uint32 value) {
  set_has__mp_perc();
  _mp_perc_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.hero_dyna._mp_perc)
}

// optional uint32 _custom_data = 3;
inline bool hero_dyna::has__custom_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void hero_dyna::set_has__custom_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void hero_dyna::clear_has__custom_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void hero_dyna::clear__custom_data() {
  _custom_data_ = 0u;
  clear_has__custom_data();
}
inline ::google::protobuf::uint32 hero_dyna::_custom_data() const {
  // @@protoc_insertion_point(field_get:client_baseserver.hero_dyna._custom_data)
  return _custom_data_;
}
inline void hero_dyna::set__custom_data(::google::protobuf::uint32 value) {
  set_has__custom_data();
  _custom_data_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.hero_dyna._custom_data)
}

// -------------------------------------------------------------------

// skilllevelup

// required uint32 _skill_levelup_chance = 1;
inline bool skilllevelup::has__skill_levelup_chance() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void skilllevelup::set_has__skill_levelup_chance() {
  _has_bits_[0] |= 0x00000001u;
}
inline void skilllevelup::clear_has__skill_levelup_chance() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void skilllevelup::clear__skill_levelup_chance() {
  _skill_levelup_chance_ = 0u;
  clear_has__skill_levelup_chance();
}
inline ::google::protobuf::uint32 skilllevelup::_skill_levelup_chance() const {
  // @@protoc_insertion_point(field_get:client_baseserver.skilllevelup._skill_levelup_chance)
  return _skill_levelup_chance_;
}
inline void skilllevelup::set__skill_levelup_chance(::google::protobuf::uint32 value) {
  set_has__skill_levelup_chance();
  _skill_levelup_chance_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.skilllevelup._skill_levelup_chance)
}

// required uint32 _skill_levelup_cd = 2;
inline bool skilllevelup::has__skill_levelup_cd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void skilllevelup::set_has__skill_levelup_cd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void skilllevelup::clear_has__skill_levelup_cd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void skilllevelup::clear__skill_levelup_cd() {
  _skill_levelup_cd_ = 0u;
  clear_has__skill_levelup_cd();
}
inline ::google::protobuf::uint32 skilllevelup::_skill_levelup_cd() const {
  // @@protoc_insertion_point(field_get:client_baseserver.skilllevelup._skill_levelup_cd)
  return _skill_levelup_cd_;
}
inline void skilllevelup::set__skill_levelup_cd(::google::protobuf::uint32 value) {
  set_has__skill_levelup_cd();
  _skill_levelup_cd_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.skilllevelup._skill_levelup_cd)
}

// required uint32 _reset_times = 3;
inline bool skilllevelup::has__reset_times() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void skilllevelup::set_has__reset_times() {
  _has_bits_[0] |= 0x00000004u;
}
inline void skilllevelup::clear_has__reset_times() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void skilllevelup::clear__reset_times() {
  _reset_times_ = 0u;
  clear_has__reset_times();
}
inline ::google::protobuf::uint32 skilllevelup::_reset_times() const {
  // @@protoc_insertion_point(field_get:client_baseserver.skilllevelup._reset_times)
  return _reset_times_;
}
inline void skilllevelup::set__reset_times(::google::protobuf::uint32 value) {
  set_has__reset_times();
  _reset_times_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.skilllevelup._reset_times)
}

// required uint32 _last_reset_date = 4;
inline bool skilllevelup::has__last_reset_date() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void skilllevelup::set_has__last_reset_date() {
  _has_bits_[0] |= 0x00000008u;
}
inline void skilllevelup::clear_has__last_reset_date() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void skilllevelup::clear__last_reset_date() {
  _last_reset_date_ = 0u;
  clear_has__last_reset_date();
}
inline ::google::protobuf::uint32 skilllevelup::_last_reset_date() const {
  // @@protoc_insertion_point(field_get:client_baseserver.skilllevelup._last_reset_date)
  return _last_reset_date_;
}
inline void skilllevelup::set__last_reset_date(::google::protobuf::uint32 value) {
  set_has__last_reset_date();
  _last_reset_date_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.skilllevelup._last_reset_date)
}

// -------------------------------------------------------------------

// usertask

// required uint32 _line = 1;
inline bool usertask::has__line() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void usertask::set_has__line() {
  _has_bits_[0] |= 0x00000001u;
}
inline void usertask::clear_has__line() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void usertask::clear__line() {
  _line_ = 0u;
  clear_has__line();
}
inline ::google::protobuf::uint32 usertask::_line() const {
  // @@protoc_insertion_point(field_get:client_baseserver.usertask._line)
  return _line_;
}
inline void usertask::set__line(::google::protobuf::uint32 value) {
  set_has__line();
  _line_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.usertask._line)
}

// required uint32 _id = 2;
inline bool usertask::has__id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void usertask::set_has__id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void usertask::clear_has__id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void usertask::clear__id() {
  _id_ = 0u;
  clear_has__id();
}
inline ::google::protobuf::uint32 usertask::_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.usertask._id)
  return _id_;
}
inline void usertask::set__id(::google::protobuf::uint32 value) {
  set_has__id();
  _id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.usertask._id)
}

// required .client_baseserver.usertask.status _status = 3 [default = working];
inline bool usertask::has__status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void usertask::set_has__status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void usertask::clear_has__status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void usertask::clear__status() {
  _status_ = 1;
  clear_has__status();
}
inline ::client_baseserver::usertask_status usertask::_status() const {
  // @@protoc_insertion_point(field_get:client_baseserver.usertask._status)
  return static_cast< ::client_baseserver::usertask_status >(_status_);
}
inline void usertask::set__status(::client_baseserver::usertask_status value) {
  assert(::client_baseserver::usertask_status_IsValid(value));
  set_has__status();
  _status_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.usertask._status)
}

// optional uint32 _task_target = 4;
inline bool usertask::has__task_target() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void usertask::set_has__task_target() {
  _has_bits_[0] |= 0x00000008u;
}
inline void usertask::clear_has__task_target() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void usertask::clear__task_target() {
  _task_target_ = 0u;
  clear_has__task_target();
}
inline ::google::protobuf::uint32 usertask::_task_target() const {
  // @@protoc_insertion_point(field_get:client_baseserver.usertask._task_target)
  return _task_target_;
}
inline void usertask::set__task_target(::google::protobuf::uint32 value) {
  set_has__task_target();
  _task_target_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.usertask._task_target)
}

// -------------------------------------------------------------------

// dailyjob

// required uint32 _id = 1;
inline bool dailyjob::has__id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void dailyjob::set_has__id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void dailyjob::clear_has__id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void dailyjob::clear__id() {
  _id_ = 0u;
  clear_has__id();
}
inline ::google::protobuf::uint32 dailyjob::_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.dailyjob._id)
  return _id_;
}
inline void dailyjob::set__id(::google::protobuf::uint32 value) {
  set_has__id();
  _id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.dailyjob._id)
}

// required uint32 _last_rewards_time = 2;
inline bool dailyjob::has__last_rewards_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void dailyjob::set_has__last_rewards_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void dailyjob::clear_has__last_rewards_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void dailyjob::clear__last_rewards_time() {
  _last_rewards_time_ = 0u;
  clear_has__last_rewards_time();
}
inline ::google::protobuf::uint32 dailyjob::_last_rewards_time() const {
  // @@protoc_insertion_point(field_get:client_baseserver.dailyjob._last_rewards_time)
  return _last_rewards_time_;
}
inline void dailyjob::set__last_rewards_time(::google::protobuf::uint32 value) {
  set_has__last_rewards_time();
  _last_rewards_time_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.dailyjob._last_rewards_time)
}

// optional uint32 _task_target = 3;
inline bool dailyjob::has__task_target() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void dailyjob::set_has__task_target() {
  _has_bits_[0] |= 0x00000004u;
}
inline void dailyjob::clear_has__task_target() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void dailyjob::clear__task_target() {
  _task_target_ = 0u;
  clear_has__task_target();
}
inline ::google::protobuf::uint32 dailyjob::_task_target() const {
  // @@protoc_insertion_point(field_get:client_baseserver.dailyjob._task_target)
  return _task_target_;
}
inline void dailyjob::set__task_target(::google::protobuf::uint32 value) {
  set_has__task_target();
  _task_target_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.dailyjob._task_target)
}

// -------------------------------------------------------------------

// sweeploot

// required uint32 _exp = 1;
inline bool sweeploot::has__exp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void sweeploot::set_has__exp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void sweeploot::clear_has__exp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void sweeploot::clear__exp() {
  _exp_ = 0u;
  clear_has__exp();
}
inline ::google::protobuf::uint32 sweeploot::_exp() const {
  // @@protoc_insertion_point(field_get:client_baseserver.sweeploot._exp)
  return _exp_;
}
inline void sweeploot::set__exp(::google::protobuf::uint32 value) {
  set_has__exp();
  _exp_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.sweeploot._exp)
}

// required uint32 _money = 2;
inline bool sweeploot::has__money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void sweeploot::set_has__money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void sweeploot::clear_has__money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void sweeploot::clear__money() {
  _money_ = 0u;
  clear_has__money();
}
inline ::google::protobuf::uint32 sweeploot::_money() const {
  // @@protoc_insertion_point(field_get:client_baseserver.sweeploot._money)
  return _money_;
}
inline void sweeploot::set__money(::google::protobuf::uint32 value) {
  set_has__money();
  _money_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.sweeploot._money)
}

// repeated uint32 _items = 3;
inline int sweeploot::_items_size() const {
  return _items_.size();
}
inline void sweeploot::clear__items() {
  _items_.Clear();
}
inline ::google::protobuf::uint32 sweeploot::_items(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.sweeploot._items)
  return _items_.Get(index);
}
inline void sweeploot::set__items(int index, ::google::protobuf::uint32 value) {
  _items_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.sweeploot._items)
}
inline void sweeploot::add__items(::google::protobuf::uint32 value) {
  _items_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.sweeploot._items)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
sweeploot::_items() const {
  // @@protoc_insertion_point(field_list:client_baseserver.sweeploot._items)
  return _items_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
sweeploot::mutable__items() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.sweeploot._items)
  return &_items_;
}

// -------------------------------------------------------------------

// tavern_record

// required .client_baseserver.tavern_record.box_type _box_type = 1 [default = green];
inline bool tavern_record::has__box_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tavern_record::set_has__box_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tavern_record::clear_has__box_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tavern_record::clear__box_type() {
  _box_type_ = 1;
  clear_has__box_type();
}
inline ::client_baseserver::tavern_record_box_type tavern_record::_box_type() const {
  // @@protoc_insertion_point(field_get:client_baseserver.tavern_record._box_type)
  return static_cast< ::client_baseserver::tavern_record_box_type >(_box_type_);
}
inline void tavern_record::set__box_type(::client_baseserver::tavern_record_box_type value) {
  assert(::client_baseserver::tavern_record_box_type_IsValid(value));
  set_has__box_type();
  _box_type_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.tavern_record._box_type)
}

// required uint32 _left_cnt = 2;
inline bool tavern_record::has__left_cnt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void tavern_record::set_has__left_cnt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void tavern_record::clear_has__left_cnt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void tavern_record::clear__left_cnt() {
  _left_cnt_ = 0u;
  clear_has__left_cnt();
}
inline ::google::protobuf::uint32 tavern_record::_left_cnt() const {
  // @@protoc_insertion_point(field_get:client_baseserver.tavern_record._left_cnt)
  return _left_cnt_;
}
inline void tavern_record::set__left_cnt(::google::protobuf::uint32 value) {
  set_has__left_cnt();
  _left_cnt_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.tavern_record._left_cnt)
}

// required uint32 _last_get_time = 3;
inline bool tavern_record::has__last_get_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void tavern_record::set_has__last_get_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void tavern_record::clear_has__last_get_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void tavern_record::clear__last_get_time() {
  _last_get_time_ = 0u;
  clear_has__last_get_time();
}
inline ::google::protobuf::uint32 tavern_record::_last_get_time() const {
  // @@protoc_insertion_point(field_get:client_baseserver.tavern_record._last_get_time)
  return _last_get_time_;
}
inline void tavern_record::set__last_get_time(::google::protobuf::uint32 value) {
  set_has__last_get_time();
  _last_get_time_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.tavern_record._last_get_time)
}

// required uint32 _has_first_draw = 4;
inline bool tavern_record::has__has_first_draw() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void tavern_record::set_has__has_first_draw() {
  _has_bits_[0] |= 0x00000008u;
}
inline void tavern_record::clear_has__has_first_draw() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void tavern_record::clear__has_first_draw() {
  _has_first_draw_ = 0u;
  clear_has__has_first_draw();
}
inline ::google::protobuf::uint32 tavern_record::_has_first_draw() const {
  // @@protoc_insertion_point(field_get:client_baseserver.tavern_record._has_first_draw)
  return _has_first_draw_;
}
inline void tavern_record::set__has_first_draw(::google::protobuf::uint32 value) {
  set_has__has_first_draw();
  _has_first_draw_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.tavern_record._has_first_draw)
}

// -------------------------------------------------------------------

// usermidas

// required uint32 _last_change = 1;
inline bool usermidas::has__last_change() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void usermidas::set_has__last_change() {
  _has_bits_[0] |= 0x00000001u;
}
inline void usermidas::clear_has__last_change() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void usermidas::clear__last_change() {
  _last_change_ = 0u;
  clear_has__last_change();
}
inline ::google::protobuf::uint32 usermidas::_last_change() const {
  // @@protoc_insertion_point(field_get:client_baseserver.usermidas._last_change)
  return _last_change_;
}
inline void usermidas::set__last_change(::google::protobuf::uint32 value) {
  set_has__last_change();
  _last_change_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.usermidas._last_change)
}

// required uint32 _today_times = 2;
inline bool usermidas::has__today_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void usermidas::set_has__today_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void usermidas::clear_has__today_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void usermidas::clear__today_times() {
  _today_times_ = 0u;
  clear_has__today_times();
}
inline ::google::protobuf::uint32 usermidas::_today_times() const {
  // @@protoc_insertion_point(field_get:client_baseserver.usermidas._today_times)
  return _today_times_;
}
inline void usermidas::set__today_times(::google::protobuf::uint32 value) {
  set_has__today_times();
  _today_times_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.usermidas._today_times)
}

// -------------------------------------------------------------------

// trigger_task_reply

// repeated .client_baseserver.result _result = 1;
inline int trigger_task_reply::_result_size() const {
  return _result_.size();
}
inline void trigger_task_reply::clear__result() {
  _result_.Clear();
}
inline ::client_baseserver::result trigger_task_reply::_result(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.trigger_task_reply._result)
  return static_cast< ::client_baseserver::result >(_result_.Get(index));
}
inline void trigger_task_reply::set__result(int index, ::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  _result_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.trigger_task_reply._result)
}
inline void trigger_task_reply::add__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  _result_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.trigger_task_reply._result)
}
inline const ::google::protobuf::RepeatedField<int>&
trigger_task_reply::_result() const {
  // @@protoc_insertion_point(field_list:client_baseserver.trigger_task_reply._result)
  return _result_;
}
inline ::google::protobuf::RepeatedField<int>*
trigger_task_reply::mutable__result() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.trigger_task_reply._result)
  return &_result_;
}

// -------------------------------------------------------------------

// require_rewards_reply

// required .client_baseserver.result _result = 1;
inline bool require_rewards_reply::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void require_rewards_reply::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void require_rewards_reply::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void require_rewards_reply::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result require_rewards_reply::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.require_rewards_reply._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void require_rewards_reply::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.require_rewards_reply._result)
}

// -------------------------------------------------------------------

// trigger_job_reply

// repeated .client_baseserver.result _result = 1;
inline int trigger_job_reply::_result_size() const {
  return _result_.size();
}
inline void trigger_job_reply::clear__result() {
  _result_.Clear();
}
inline ::client_baseserver::result trigger_job_reply::_result(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.trigger_job_reply._result)
  return static_cast< ::client_baseserver::result >(_result_.Get(index));
}
inline void trigger_job_reply::set__result(int index, ::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  _result_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.trigger_job_reply._result)
}
inline void trigger_job_reply::add__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  _result_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.trigger_job_reply._result)
}
inline const ::google::protobuf::RepeatedField<int>&
trigger_job_reply::_result() const {
  // @@protoc_insertion_point(field_list:client_baseserver.trigger_job_reply._result)
  return _result_;
}
inline ::google::protobuf::RepeatedField<int>*
trigger_job_reply::mutable__result() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.trigger_job_reply._result)
  return &_result_;
}

// -------------------------------------------------------------------

// dailyjob_reward

// optional .client_baseserver.dailyjob_reward.type _type = 1;
inline bool dailyjob_reward::has__type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void dailyjob_reward::set_has__type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void dailyjob_reward::clear_has__type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void dailyjob_reward::clear__type() {
  _type_ = 1;
  clear_has__type();
}
inline ::client_baseserver::dailyjob_reward_type dailyjob_reward::_type() const {
  // @@protoc_insertion_point(field_get:client_baseserver.dailyjob_reward._type)
  return static_cast< ::client_baseserver::dailyjob_reward_type >(_type_);
}
inline void dailyjob_reward::set__type(::client_baseserver::dailyjob_reward_type value) {
  assert(::client_baseserver::dailyjob_reward_type_IsValid(value));
  set_has__type();
  _type_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.dailyjob_reward._type)
}

// optional uint32 _id = 2;
inline bool dailyjob_reward::has__id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void dailyjob_reward::set_has__id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void dailyjob_reward::clear_has__id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void dailyjob_reward::clear__id() {
  _id_ = 0u;
  clear_has__id();
}
inline ::google::protobuf::uint32 dailyjob_reward::_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.dailyjob_reward._id)
  return _id_;
}
inline void dailyjob_reward::set__id(::google::protobuf::uint32 value) {
  set_has__id();
  _id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.dailyjob_reward._id)
}

// optional uint32 _amount = 3;
inline bool dailyjob_reward::has__amount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void dailyjob_reward::set_has__amount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void dailyjob_reward::clear_has__amount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void dailyjob_reward::clear__amount() {
  _amount_ = 0u;
  clear_has__amount();
}
inline ::google::protobuf::uint32 dailyjob_reward::_amount() const {
  // @@protoc_insertion_point(field_get:client_baseserver.dailyjob_reward._amount)
  return _amount_;
}
inline void dailyjob_reward::set__amount(::google::protobuf::uint32 value) {
  set_has__amount();
  _amount_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.dailyjob_reward._amount)
}

// -------------------------------------------------------------------

// job_rewards_reply

// required .client_baseserver.result _result = 1 [default = success];
inline bool job_rewards_reply::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void job_rewards_reply::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void job_rewards_reply::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void job_rewards_reply::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result job_rewards_reply::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.job_rewards_reply._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void job_rewards_reply::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.job_rewards_reply._result)
}

// repeated .client_baseserver.dailyjob_reward _activity_reward = 2;
inline int job_rewards_reply::_activity_reward_size() const {
  return _activity_reward_.size();
}
inline void job_rewards_reply::clear__activity_reward() {
  _activity_reward_.Clear();
}
inline const ::client_baseserver::dailyjob_reward& job_rewards_reply::_activity_reward(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.job_rewards_reply._activity_reward)
  return _activity_reward_.Get(index);
}
inline ::client_baseserver::dailyjob_reward* job_rewards_reply::mutable__activity_reward(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.job_rewards_reply._activity_reward)
  return _activity_reward_.Mutable(index);
}
inline ::client_baseserver::dailyjob_reward* job_rewards_reply::add__activity_reward() {
  // @@protoc_insertion_point(field_add:client_baseserver.job_rewards_reply._activity_reward)
  return _activity_reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::dailyjob_reward >&
job_rewards_reply::_activity_reward() const {
  // @@protoc_insertion_point(field_list:client_baseserver.job_rewards_reply._activity_reward)
  return _activity_reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::dailyjob_reward >*
job_rewards_reply::mutable__activity_reward() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.job_rewards_reply._activity_reward)
  return &_activity_reward_;
}

// -------------------------------------------------------------------

// tavern_draw_reply

// repeated uint32 _item_ids = 1;
inline int tavern_draw_reply::_item_ids_size() const {
  return _item_ids_.size();
}
inline void tavern_draw_reply::clear__item_ids() {
  _item_ids_.Clear();
}
inline ::google::protobuf::uint32 tavern_draw_reply::_item_ids(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.tavern_draw_reply._item_ids)
  return _item_ids_.Get(index);
}
inline void tavern_draw_reply::set__item_ids(int index, ::google::protobuf::uint32 value) {
  _item_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.tavern_draw_reply._item_ids)
}
inline void tavern_draw_reply::add__item_ids(::google::protobuf::uint32 value) {
  _item_ids_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.tavern_draw_reply._item_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
tavern_draw_reply::_item_ids() const {
  // @@protoc_insertion_point(field_list:client_baseserver.tavern_draw_reply._item_ids)
  return _item_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
tavern_draw_reply::mutable__item_ids() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.tavern_draw_reply._item_ids)
  return &_item_ids_;
}

// repeated .client_baseserver.hero _new_heroes = 2;
inline int tavern_draw_reply::_new_heroes_size() const {
  return _new_heroes_.size();
}
inline void tavern_draw_reply::clear__new_heroes() {
  _new_heroes_.Clear();
}
inline const ::client_baseserver::hero& tavern_draw_reply::_new_heroes(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.tavern_draw_reply._new_heroes)
  return _new_heroes_.Get(index);
}
inline ::client_baseserver::hero* tavern_draw_reply::mutable__new_heroes(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.tavern_draw_reply._new_heroes)
  return _new_heroes_.Mutable(index);
}
inline ::client_baseserver::hero* tavern_draw_reply::add__new_heroes() {
  // @@protoc_insertion_point(field_add:client_baseserver.tavern_draw_reply._new_heroes)
  return _new_heroes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >&
tavern_draw_reply::_new_heroes() const {
  // @@protoc_insertion_point(field_list:client_baseserver.tavern_draw_reply._new_heroes)
  return _new_heroes_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >*
tavern_draw_reply::mutable__new_heroes() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.tavern_draw_reply._new_heroes)
  return &_new_heroes_;
}

// repeated uint32 _smash_idx = 3;
inline int tavern_draw_reply::_smash_idx_size() const {
  return _smash_idx_.size();
}
inline void tavern_draw_reply::clear__smash_idx() {
  _smash_idx_.Clear();
}
inline ::google::protobuf::uint32 tavern_draw_reply::_smash_idx(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.tavern_draw_reply._smash_idx)
  return _smash_idx_.Get(index);
}
inline void tavern_draw_reply::set__smash_idx(int index, ::google::protobuf::uint32 value) {
  _smash_idx_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.tavern_draw_reply._smash_idx)
}
inline void tavern_draw_reply::add__smash_idx(::google::protobuf::uint32 value) {
  _smash_idx_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.tavern_draw_reply._smash_idx)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
tavern_draw_reply::_smash_idx() const {
  // @@protoc_insertion_point(field_list:client_baseserver.tavern_draw_reply._smash_idx)
  return _smash_idx_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
tavern_draw_reply::mutable__smash_idx() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.tavern_draw_reply._smash_idx)
  return &_smash_idx_;
}

// -------------------------------------------------------------------

// reset_elite_reply

// required .client_baseserver.result _result = 1 [default = success];
inline bool reset_elite_reply::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void reset_elite_reply::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void reset_elite_reply::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void reset_elite_reply::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result reset_elite_reply::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.reset_elite_reply._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void reset_elite_reply::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.reset_elite_reply._result)
}

// -------------------------------------------------------------------

// sweep_stage_reply

// repeated .client_baseserver.sweeploot _loot = 1;
inline int sweep_stage_reply::_loot_size() const {
  return _loot_.size();
}
inline void sweep_stage_reply::clear__loot() {
  _loot_.Clear();
}
inline const ::client_baseserver::sweeploot& sweep_stage_reply::_loot(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.sweep_stage_reply._loot)
  return _loot_.Get(index);
}
inline ::client_baseserver::sweeploot* sweep_stage_reply::mutable__loot(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.sweep_stage_reply._loot)
  return _loot_.Mutable(index);
}
inline ::client_baseserver::sweeploot* sweep_stage_reply::add__loot() {
  // @@protoc_insertion_point(field_add:client_baseserver.sweep_stage_reply._loot)
  return _loot_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::sweeploot >&
sweep_stage_reply::_loot() const {
  // @@protoc_insertion_point(field_list:client_baseserver.sweep_stage_reply._loot)
  return _loot_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::sweeploot >*
sweep_stage_reply::mutable__loot() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.sweep_stage_reply._loot)
  return &_loot_;
}

// repeated uint32 _items = 2;
inline int sweep_stage_reply::_items_size() const {
  return _items_.size();
}
inline void sweep_stage_reply::clear__items() {
  _items_.Clear();
}
inline ::google::protobuf::uint32 sweep_stage_reply::_items(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.sweep_stage_reply._items)
  return _items_.Get(index);
}
inline void sweep_stage_reply::set__items(int index, ::google::protobuf::uint32 value) {
  _items_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.sweep_stage_reply._items)
}
inline void sweep_stage_reply::add__items(::google::protobuf::uint32 value) {
  _items_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.sweep_stage_reply._items)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
sweep_stage_reply::_items() const {
  // @@protoc_insertion_point(field_list:client_baseserver.sweep_stage_reply._items)
  return _items_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
sweep_stage_reply::mutable__items() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.sweep_stage_reply._items)
  return &_items_;
}

// optional .client_baseserver.user_shop _shop = 3;
inline bool sweep_stage_reply::has__shop() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void sweep_stage_reply::set_has__shop() {
  _has_bits_[0] |= 0x00000004u;
}
inline void sweep_stage_reply::clear_has__shop() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void sweep_stage_reply::clear__shop() {
  if (_shop_ != NULL) _shop_->::client_baseserver::user_shop::Clear();
  clear_has__shop();
}
inline const ::client_baseserver::user_shop& sweep_stage_reply::_shop() const {
  // @@protoc_insertion_point(field_get:client_baseserver.sweep_stage_reply._shop)
  return _shop_ != NULL ? *_shop_ : *default_instance_->_shop_;
}
inline ::client_baseserver::user_shop* sweep_stage_reply::mutable__shop() {
  set_has__shop();
  if (_shop_ == NULL) _shop_ = new ::client_baseserver::user_shop;
  // @@protoc_insertion_point(field_mutable:client_baseserver.sweep_stage_reply._shop)
  return _shop_;
}
inline ::client_baseserver::user_shop* sweep_stage_reply::release__shop() {
  clear_has__shop();
  ::client_baseserver::user_shop* temp = _shop_;
  _shop_ = NULL;
  return temp;
}
inline void sweep_stage_reply::set_allocated__shop(::client_baseserver::user_shop* _shop) {
  delete _shop_;
  _shop_ = _shop;
  if (_shop) {
    set_has__shop();
  } else {
    clear_has__shop();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.sweep_stage_reply._shop)
}

// optional .client_baseserver.star_shop _sshop = 4;
inline bool sweep_stage_reply::has__sshop() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void sweep_stage_reply::set_has__sshop() {
  _has_bits_[0] |= 0x00000008u;
}
inline void sweep_stage_reply::clear_has__sshop() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void sweep_stage_reply::clear__sshop() {
  if (_sshop_ != NULL) _sshop_->::client_baseserver::star_shop::Clear();
  clear_has__sshop();
}
inline const ::client_baseserver::star_shop& sweep_stage_reply::_sshop() const {
  // @@protoc_insertion_point(field_get:client_baseserver.sweep_stage_reply._sshop)
  return _sshop_ != NULL ? *_sshop_ : *default_instance_->_sshop_;
}
inline ::client_baseserver::star_shop* sweep_stage_reply::mutable__sshop() {
  set_has__sshop();
  if (_sshop_ == NULL) _sshop_ = new ::client_baseserver::star_shop;
  // @@protoc_insertion_point(field_mutable:client_baseserver.sweep_stage_reply._sshop)
  return _sshop_;
}
inline ::client_baseserver::star_shop* sweep_stage_reply::release__sshop() {
  clear_has__sshop();
  ::client_baseserver::star_shop* temp = _sshop_;
  _sshop_ = NULL;
  return temp;
}
inline void sweep_stage_reply::set_allocated__sshop(::client_baseserver::star_shop* _sshop) {
  delete _sshop_;
  _sshop_ = _sshop;
  if (_sshop) {
    set_has__sshop();
  } else {
    clear_has__sshop();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.sweep_stage_reply._sshop)
}

// -------------------------------------------------------------------

// sweep

// required uint32 _last_reset_time = 1;
inline bool sweep::has__last_reset_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void sweep::set_has__last_reset_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void sweep::clear_has__last_reset_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void sweep::clear__last_reset_time() {
  _last_reset_time_ = 0u;
  clear_has__last_reset_time();
}
inline ::google::protobuf::uint32 sweep::_last_reset_time() const {
  // @@protoc_insertion_point(field_get:client_baseserver.sweep._last_reset_time)
  return _last_reset_time_;
}
inline void sweep::set__last_reset_time(::google::protobuf::uint32 value) {
  set_has__last_reset_time();
  _last_reset_time_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.sweep._last_reset_time)
}

// required uint32 _today_free_sweep_times = 2;
inline bool sweep::has__today_free_sweep_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void sweep::set_has__today_free_sweep_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void sweep::clear_has__today_free_sweep_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void sweep::clear__today_free_sweep_times() {
  _today_free_sweep_times_ = 0u;
  clear_has__today_free_sweep_times();
}
inline ::google::protobuf::uint32 sweep::_today_free_sweep_times() const {
  // @@protoc_insertion_point(field_get:client_baseserver.sweep._today_free_sweep_times)
  return _today_free_sweep_times_;
}
inline void sweep::set__today_free_sweep_times(::google::protobuf::uint32 value) {
  set_has__today_free_sweep_times();
  _today_free_sweep_times_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.sweep._today_free_sweep_times)
}

// -------------------------------------------------------------------

// sync_skill_stren_reply

// required .client_baseserver.skilllevelup _skill_level_up = 1;
inline bool sync_skill_stren_reply::has__skill_level_up() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void sync_skill_stren_reply::set_has__skill_level_up() {
  _has_bits_[0] |= 0x00000001u;
}
inline void sync_skill_stren_reply::clear_has__skill_level_up() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void sync_skill_stren_reply::clear__skill_level_up() {
  if (_skill_level_up_ != NULL) _skill_level_up_->::client_baseserver::skilllevelup::Clear();
  clear_has__skill_level_up();
}
inline const ::client_baseserver::skilllevelup& sync_skill_stren_reply::_skill_level_up() const {
  // @@protoc_insertion_point(field_get:client_baseserver.sync_skill_stren_reply._skill_level_up)
  return _skill_level_up_ != NULL ? *_skill_level_up_ : *default_instance_->_skill_level_up_;
}
inline ::client_baseserver::skilllevelup* sync_skill_stren_reply::mutable__skill_level_up() {
  set_has__skill_level_up();
  if (_skill_level_up_ == NULL) _skill_level_up_ = new ::client_baseserver::skilllevelup;
  // @@protoc_insertion_point(field_mutable:client_baseserver.sync_skill_stren_reply._skill_level_up)
  return _skill_level_up_;
}
inline ::client_baseserver::skilllevelup* sync_skill_stren_reply::release__skill_level_up() {
  clear_has__skill_level_up();
  ::client_baseserver::skilllevelup* temp = _skill_level_up_;
  _skill_level_up_ = NULL;
  return temp;
}
inline void sync_skill_stren_reply::set_allocated__skill_level_up(::client_baseserver::skilllevelup* _skill_level_up) {
  delete _skill_level_up_;
  _skill_level_up_ = _skill_level_up;
  if (_skill_level_up) {
    set_has__skill_level_up();
  } else {
    clear_has__skill_level_up();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.sync_skill_stren_reply._skill_level_up)
}

// -------------------------------------------------------------------

// hero_evolve_reply

// required .client_baseserver.result _result = 1 [default = success];
inline bool hero_evolve_reply::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void hero_evolve_reply::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void hero_evolve_reply::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void hero_evolve_reply::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result hero_evolve_reply::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.hero_evolve_reply._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void hero_evolve_reply::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.hero_evolve_reply._result)
}

// optional .client_baseserver.hero _hero = 2;
inline bool hero_evolve_reply::has__hero() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void hero_evolve_reply::set_has__hero() {
  _has_bits_[0] |= 0x00000002u;
}
inline void hero_evolve_reply::clear_has__hero() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void hero_evolve_reply::clear__hero() {
  if (_hero_ != NULL) _hero_->::client_baseserver::hero::Clear();
  clear_has__hero();
}
inline const ::client_baseserver::hero& hero_evolve_reply::_hero() const {
  // @@protoc_insertion_point(field_get:client_baseserver.hero_evolve_reply._hero)
  return _hero_ != NULL ? *_hero_ : *default_instance_->_hero_;
}
inline ::client_baseserver::hero* hero_evolve_reply::mutable__hero() {
  set_has__hero();
  if (_hero_ == NULL) _hero_ = new ::client_baseserver::hero;
  // @@protoc_insertion_point(field_mutable:client_baseserver.hero_evolve_reply._hero)
  return _hero_;
}
inline ::client_baseserver::hero* hero_evolve_reply::release__hero() {
  clear_has__hero();
  ::client_baseserver::hero* temp = _hero_;
  _hero_ = NULL;
  return temp;
}
inline void hero_evolve_reply::set_allocated__hero(::client_baseserver::hero* _hero) {
  delete _hero_;
  _hero_ = _hero;
  if (_hero) {
    set_has__hero();
  } else {
    clear_has__hero();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.hero_evolve_reply._hero)
}

// -------------------------------------------------------------------

// vitality

// required uint32 _current = 1;
inline bool vitality::has__current() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void vitality::set_has__current() {
  _has_bits_[0] |= 0x00000001u;
}
inline void vitality::clear_has__current() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void vitality::clear__current() {
  _current_ = 0u;
  clear_has__current();
}
inline ::google::protobuf::uint32 vitality::_current() const {
  // @@protoc_insertion_point(field_get:client_baseserver.vitality._current)
  return _current_;
}
inline void vitality::set__current(::google::protobuf::uint32 value) {
  set_has__current();
  _current_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.vitality._current)
}

// required uint32 _lastchange = 2;
inline bool vitality::has__lastchange() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void vitality::set_has__lastchange() {
  _has_bits_[0] |= 0x00000002u;
}
inline void vitality::clear_has__lastchange() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void vitality::clear__lastchange() {
  _lastchange_ = 0u;
  clear_has__lastchange();
}
inline ::google::protobuf::uint32 vitality::_lastchange() const {
  // @@protoc_insertion_point(field_get:client_baseserver.vitality._lastchange)
  return _lastchange_;
}
inline void vitality::set__lastchange(::google::protobuf::uint32 value) {
  set_has__lastchange();
  _lastchange_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.vitality._lastchange)
}

// required uint32 _todaybuy = 3;
inline bool vitality::has__todaybuy() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void vitality::set_has__todaybuy() {
  _has_bits_[0] |= 0x00000004u;
}
inline void vitality::clear_has__todaybuy() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void vitality::clear__todaybuy() {
  _todaybuy_ = 0u;
  clear_has__todaybuy();
}
inline ::google::protobuf::uint32 vitality::_todaybuy() const {
  // @@protoc_insertion_point(field_get:client_baseserver.vitality._todaybuy)
  return _todaybuy_;
}
inline void vitality::set__todaybuy(::google::protobuf::uint32 value) {
  set_has__todaybuy();
  _todaybuy_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.vitality._todaybuy)
}

// required uint32 _lastbuy = 4;
inline bool vitality::has__lastbuy() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void vitality::set_has__lastbuy() {
  _has_bits_[0] |= 0x00000008u;
}
inline void vitality::clear_has__lastbuy() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void vitality::clear__lastbuy() {
  _lastbuy_ = 0u;
  clear_has__lastbuy();
}
inline ::google::protobuf::uint32 vitality::_lastbuy() const {
  // @@protoc_insertion_point(field_get:client_baseserver.vitality._lastbuy)
  return _lastbuy_;
}
inline void vitality::set__lastbuy(::google::protobuf::uint32 value) {
  set_has__lastbuy();
  _lastbuy_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.vitality._lastbuy)
}

// -------------------------------------------------------------------

// userstage

// repeated uint32 _normal_stage_stars = 1;
inline int userstage::_normal_stage_stars_size() const {
  return _normal_stage_stars_.size();
}
inline void userstage::clear__normal_stage_stars() {
  _normal_stage_stars_.Clear();
}
inline ::google::protobuf::uint32 userstage::_normal_stage_stars(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.userstage._normal_stage_stars)
  return _normal_stage_stars_.Get(index);
}
inline void userstage::set__normal_stage_stars(int index, ::google::protobuf::uint32 value) {
  _normal_stage_stars_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.userstage._normal_stage_stars)
}
inline void userstage::add__normal_stage_stars(::google::protobuf::uint32 value) {
  _normal_stage_stars_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.userstage._normal_stage_stars)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
userstage::_normal_stage_stars() const {
  // @@protoc_insertion_point(field_list:client_baseserver.userstage._normal_stage_stars)
  return _normal_stage_stars_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
userstage::mutable__normal_stage_stars() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.userstage._normal_stage_stars)
  return &_normal_stage_stars_;
}

// repeated uint32 _elite_stage_stars = 2;
inline int userstage::_elite_stage_stars_size() const {
  return _elite_stage_stars_.size();
}
inline void userstage::clear__elite_stage_stars() {
  _elite_stage_stars_.Clear();
}
inline ::google::protobuf::uint32 userstage::_elite_stage_stars(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.userstage._elite_stage_stars)
  return _elite_stage_stars_.Get(index);
}
inline void userstage::set__elite_stage_stars(int index, ::google::protobuf::uint32 value) {
  _elite_stage_stars_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.userstage._elite_stage_stars)
}
inline void userstage::add__elite_stage_stars(::google::protobuf::uint32 value) {
  _elite_stage_stars_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.userstage._elite_stage_stars)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
userstage::_elite_stage_stars() const {
  // @@protoc_insertion_point(field_list:client_baseserver.userstage._elite_stage_stars)
  return _elite_stage_stars_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
userstage::mutable__elite_stage_stars() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.userstage._elite_stage_stars)
  return &_elite_stage_stars_;
}

// repeated uint32 _elite_daily_record = 3;
inline int userstage::_elite_daily_record_size() const {
  return _elite_daily_record_.size();
}
inline void userstage::clear__elite_daily_record() {
  _elite_daily_record_.Clear();
}
inline ::google::protobuf::uint32 userstage::_elite_daily_record(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.userstage._elite_daily_record)
  return _elite_daily_record_.Get(index);
}
inline void userstage::set__elite_daily_record(int index, ::google::protobuf::uint32 value) {
  _elite_daily_record_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.userstage._elite_daily_record)
}
inline void userstage::add__elite_daily_record(::google::protobuf::uint32 value) {
  _elite_daily_record_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.userstage._elite_daily_record)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
userstage::_elite_daily_record() const {
  // @@protoc_insertion_point(field_list:client_baseserver.userstage._elite_daily_record)
  return _elite_daily_record_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
userstage::mutable__elite_daily_record() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.userstage._elite_daily_record)
  return &_elite_daily_record_;
}

// required uint32 _elite_reset_time = 4;
inline bool userstage::has__elite_reset_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void userstage::set_has__elite_reset_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void userstage::clear_has__elite_reset_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void userstage::clear__elite_reset_time() {
  _elite_reset_time_ = 0u;
  clear_has__elite_reset_time();
}
inline ::google::protobuf::uint32 userstage::_elite_reset_time() const {
  // @@protoc_insertion_point(field_get:client_baseserver.userstage._elite_reset_time)
  return _elite_reset_time_;
}
inline void userstage::set__elite_reset_time(::google::protobuf::uint32 value) {
  set_has__elite_reset_time();
  _elite_reset_time_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.userstage._elite_reset_time)
}

// required .client_baseserver.sweep _sweep = 5;
inline bool userstage::has__sweep() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void userstage::set_has__sweep() {
  _has_bits_[0] |= 0x00000010u;
}
inline void userstage::clear_has__sweep() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void userstage::clear__sweep() {
  if (_sweep_ != NULL) _sweep_->::client_baseserver::sweep::Clear();
  clear_has__sweep();
}
inline const ::client_baseserver::sweep& userstage::_sweep() const {
  // @@protoc_insertion_point(field_get:client_baseserver.userstage._sweep)
  return _sweep_ != NULL ? *_sweep_ : *default_instance_->_sweep_;
}
inline ::client_baseserver::sweep* userstage::mutable__sweep() {
  set_has__sweep();
  if (_sweep_ == NULL) _sweep_ = new ::client_baseserver::sweep;
  // @@protoc_insertion_point(field_mutable:client_baseserver.userstage._sweep)
  return _sweep_;
}
inline ::client_baseserver::sweep* userstage::release__sweep() {
  clear_has__sweep();
  ::client_baseserver::sweep* temp = _sweep_;
  _sweep_ = NULL;
  return temp;
}
inline void userstage::set_allocated__sweep(::client_baseserver::sweep* _sweep) {
  delete _sweep_;
  _sweep_ = _sweep;
  if (_sweep) {
    set_has__sweep();
  } else {
    clear_has__sweep();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.userstage._sweep)
}

// repeated .client_baseserver.act_daily_record _act_daily_record = 6;
inline int userstage::_act_daily_record_size() const {
  return _act_daily_record_.size();
}
inline void userstage::clear__act_daily_record() {
  _act_daily_record_.Clear();
}
inline const ::client_baseserver::act_daily_record& userstage::_act_daily_record(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.userstage._act_daily_record)
  return _act_daily_record_.Get(index);
}
inline ::client_baseserver::act_daily_record* userstage::mutable__act_daily_record(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.userstage._act_daily_record)
  return _act_daily_record_.Mutable(index);
}
inline ::client_baseserver::act_daily_record* userstage::add__act_daily_record() {
  // @@protoc_insertion_point(field_add:client_baseserver.userstage._act_daily_record)
  return _act_daily_record_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::act_daily_record >&
userstage::_act_daily_record() const {
  // @@protoc_insertion_point(field_list:client_baseserver.userstage._act_daily_record)
  return _act_daily_record_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::act_daily_record >*
userstage::mutable__act_daily_record() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.userstage._act_daily_record)
  return &_act_daily_record_;
}

// required uint32 _act_reset_time = 7;
inline bool userstage::has__act_reset_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void userstage::set_has__act_reset_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void userstage::clear_has__act_reset_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void userstage::clear__act_reset_time() {
  _act_reset_time_ = 0u;
  clear_has__act_reset_time();
}
inline ::google::protobuf::uint32 userstage::_act_reset_time() const {
  // @@protoc_insertion_point(field_get:client_baseserver.userstage._act_reset_time)
  return _act_reset_time_;
}
inline void userstage::set__act_reset_time(::google::protobuf::uint32 value) {
  set_has__act_reset_time();
  _act_reset_time_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.userstage._act_reset_time)
}

// -------------------------------------------------------------------

// act_daily_record

// required uint32 _id = 1;
inline bool act_daily_record::has__id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void act_daily_record::set_has__id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void act_daily_record::clear_has__id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void act_daily_record::clear__id() {
  _id_ = 0u;
  clear_has__id();
}
inline ::google::protobuf::uint32 act_daily_record::_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.act_daily_record._id)
  return _id_;
}
inline void act_daily_record::set__id(::google::protobuf::uint32 value) {
  set_has__id();
  _id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.act_daily_record._id)
}

// required uint32 _frequency = 2;
inline bool act_daily_record::has__frequency() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void act_daily_record::set_has__frequency() {
  _has_bits_[0] |= 0x00000002u;
}
inline void act_daily_record::clear_has__frequency() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void act_daily_record::clear__frequency() {
  _frequency_ = 0u;
  clear_has__frequency();
}
inline ::google::protobuf::uint32 act_daily_record::_frequency() const {
  // @@protoc_insertion_point(field_get:client_baseserver.act_daily_record._frequency)
  return _frequency_;
}
inline void act_daily_record::set__frequency(::google::protobuf::uint32 value) {
  set_has__frequency();
  _frequency_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.act_daily_record._frequency)
}

// required uint32 _last_change = 3;
inline bool act_daily_record::has__last_change() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void act_daily_record::set_has__last_change() {
  _has_bits_[0] |= 0x00000004u;
}
inline void act_daily_record::clear_has__last_change() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void act_daily_record::clear__last_change() {
  _last_change_ = 0u;
  clear_has__last_change();
}
inline ::google::protobuf::uint32 act_daily_record::_last_change() const {
  // @@protoc_insertion_point(field_get:client_baseserver.act_daily_record._last_change)
  return _last_change_;
}
inline void act_daily_record::set__last_change(::google::protobuf::uint32 value) {
  set_has__last_change();
  _last_change_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.act_daily_record._last_change)
}

// -------------------------------------------------------------------

// ladder_reply

// optional .client_baseserver.open_panel _open_panel = 1;
inline bool ladder_reply::has__open_panel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ladder_reply::set_has__open_panel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ladder_reply::clear_has__open_panel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ladder_reply::clear__open_panel() {
  if (_open_panel_ != NULL) _open_panel_->::client_baseserver::open_panel::Clear();
  clear_has__open_panel();
}
inline const ::client_baseserver::open_panel& ladder_reply::_open_panel() const {
  // @@protoc_insertion_point(field_get:client_baseserver.ladder_reply._open_panel)
  return _open_panel_ != NULL ? *_open_panel_ : *default_instance_->_open_panel_;
}
inline ::client_baseserver::open_panel* ladder_reply::mutable__open_panel() {
  set_has__open_panel();
  if (_open_panel_ == NULL) _open_panel_ = new ::client_baseserver::open_panel;
  // @@protoc_insertion_point(field_mutable:client_baseserver.ladder_reply._open_panel)
  return _open_panel_;
}
inline ::client_baseserver::open_panel* ladder_reply::release__open_panel() {
  clear_has__open_panel();
  ::client_baseserver::open_panel* temp = _open_panel_;
  _open_panel_ = NULL;
  return temp;
}
inline void ladder_reply::set_allocated__open_panel(::client_baseserver::open_panel* _open_panel) {
  delete _open_panel_;
  _open_panel_ = _open_panel;
  if (_open_panel) {
    set_has__open_panel();
  } else {
    clear_has__open_panel();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.ladder_reply._open_panel)
}

// optional .client_baseserver.apply_opponent _apply_oppo = 2;
inline bool ladder_reply::has__apply_oppo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ladder_reply::set_has__apply_oppo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ladder_reply::clear_has__apply_oppo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ladder_reply::clear__apply_oppo() {
  if (_apply_oppo_ != NULL) _apply_oppo_->::client_baseserver::apply_opponent::Clear();
  clear_has__apply_oppo();
}
inline const ::client_baseserver::apply_opponent& ladder_reply::_apply_oppo() const {
  // @@protoc_insertion_point(field_get:client_baseserver.ladder_reply._apply_oppo)
  return _apply_oppo_ != NULL ? *_apply_oppo_ : *default_instance_->_apply_oppo_;
}
inline ::client_baseserver::apply_opponent* ladder_reply::mutable__apply_oppo() {
  set_has__apply_oppo();
  if (_apply_oppo_ == NULL) _apply_oppo_ = new ::client_baseserver::apply_opponent;
  // @@protoc_insertion_point(field_mutable:client_baseserver.ladder_reply._apply_oppo)
  return _apply_oppo_;
}
inline ::client_baseserver::apply_opponent* ladder_reply::release__apply_oppo() {
  clear_has__apply_oppo();
  ::client_baseserver::apply_opponent* temp = _apply_oppo_;
  _apply_oppo_ = NULL;
  return temp;
}
inline void ladder_reply::set_allocated__apply_oppo(::client_baseserver::apply_opponent* _apply_oppo) {
  delete _apply_oppo_;
  _apply_oppo_ = _apply_oppo;
  if (_apply_oppo) {
    set_has__apply_oppo();
  } else {
    clear_has__apply_oppo();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.ladder_reply._apply_oppo)
}

// optional .client_baseserver.start_battle _start_battle = 3;
inline bool ladder_reply::has__start_battle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ladder_reply::set_has__start_battle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ladder_reply::clear_has__start_battle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ladder_reply::clear__start_battle() {
  if (_start_battle_ != NULL) _start_battle_->::client_baseserver::start_battle::Clear();
  clear_has__start_battle();
}
inline const ::client_baseserver::start_battle& ladder_reply::_start_battle() const {
  // @@protoc_insertion_point(field_get:client_baseserver.ladder_reply._start_battle)
  return _start_battle_ != NULL ? *_start_battle_ : *default_instance_->_start_battle_;
}
inline ::client_baseserver::start_battle* ladder_reply::mutable__start_battle() {
  set_has__start_battle();
  if (_start_battle_ == NULL) _start_battle_ = new ::client_baseserver::start_battle;
  // @@protoc_insertion_point(field_mutable:client_baseserver.ladder_reply._start_battle)
  return _start_battle_;
}
inline ::client_baseserver::start_battle* ladder_reply::release__start_battle() {
  clear_has__start_battle();
  ::client_baseserver::start_battle* temp = _start_battle_;
  _start_battle_ = NULL;
  return temp;
}
inline void ladder_reply::set_allocated__start_battle(::client_baseserver::start_battle* _start_battle) {
  delete _start_battle_;
  _start_battle_ = _start_battle;
  if (_start_battle) {
    set_has__start_battle();
  } else {
    clear_has__start_battle();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.ladder_reply._start_battle)
}

// optional .client_baseserver.end_battle _end_battle = 4;
inline bool ladder_reply::has__end_battle() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ladder_reply::set_has__end_battle() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ladder_reply::clear_has__end_battle() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ladder_reply::clear__end_battle() {
  if (_end_battle_ != NULL) _end_battle_->::client_baseserver::end_battle::Clear();
  clear_has__end_battle();
}
inline const ::client_baseserver::end_battle& ladder_reply::_end_battle() const {
  // @@protoc_insertion_point(field_get:client_baseserver.ladder_reply._end_battle)
  return _end_battle_ != NULL ? *_end_battle_ : *default_instance_->_end_battle_;
}
inline ::client_baseserver::end_battle* ladder_reply::mutable__end_battle() {
  set_has__end_battle();
  if (_end_battle_ == NULL) _end_battle_ = new ::client_baseserver::end_battle;
  // @@protoc_insertion_point(field_mutable:client_baseserver.ladder_reply._end_battle)
  return _end_battle_;
}
inline ::client_baseserver::end_battle* ladder_reply::release__end_battle() {
  clear_has__end_battle();
  ::client_baseserver::end_battle* temp = _end_battle_;
  _end_battle_ = NULL;
  return temp;
}
inline void ladder_reply::set_allocated__end_battle(::client_baseserver::end_battle* _end_battle) {
  delete _end_battle_;
  _end_battle_ = _end_battle;
  if (_end_battle) {
    set_has__end_battle();
  } else {
    clear_has__end_battle();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.ladder_reply._end_battle)
}

// optional .client_baseserver.set_lineup _set_lineup = 5;
inline bool ladder_reply::has__set_lineup() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ladder_reply::set_has__set_lineup() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ladder_reply::clear_has__set_lineup() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ladder_reply::clear__set_lineup() {
  if (_set_lineup_ != NULL) _set_lineup_->::client_baseserver::set_lineup::Clear();
  clear_has__set_lineup();
}
inline const ::client_baseserver::set_lineup& ladder_reply::_set_lineup() const {
  // @@protoc_insertion_point(field_get:client_baseserver.ladder_reply._set_lineup)
  return _set_lineup_ != NULL ? *_set_lineup_ : *default_instance_->_set_lineup_;
}
inline ::client_baseserver::set_lineup* ladder_reply::mutable__set_lineup() {
  set_has__set_lineup();
  if (_set_lineup_ == NULL) _set_lineup_ = new ::client_baseserver::set_lineup;
  // @@protoc_insertion_point(field_mutable:client_baseserver.ladder_reply._set_lineup)
  return _set_lineup_;
}
inline ::client_baseserver::set_lineup* ladder_reply::release__set_lineup() {
  clear_has__set_lineup();
  ::client_baseserver::set_lineup* temp = _set_lineup_;
  _set_lineup_ = NULL;
  return temp;
}
inline void ladder_reply::set_allocated__set_lineup(::client_baseserver::set_lineup* _set_lineup) {
  delete _set_lineup_;
  _set_lineup_ = _set_lineup;
  if (_set_lineup) {
    set_has__set_lineup();
  } else {
    clear_has__set_lineup();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.ladder_reply._set_lineup)
}

// optional .client_baseserver.query_records _query_records = 6;
inline bool ladder_reply::has__query_records() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ladder_reply::set_has__query_records() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ladder_reply::clear_has__query_records() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ladder_reply::clear__query_records() {
  if (_query_records_ != NULL) _query_records_->::client_baseserver::query_records::Clear();
  clear_has__query_records();
}
inline const ::client_baseserver::query_records& ladder_reply::_query_records() const {
  // @@protoc_insertion_point(field_get:client_baseserver.ladder_reply._query_records)
  return _query_records_ != NULL ? *_query_records_ : *default_instance_->_query_records_;
}
inline ::client_baseserver::query_records* ladder_reply::mutable__query_records() {
  set_has__query_records();
  if (_query_records_ == NULL) _query_records_ = new ::client_baseserver::query_records;
  // @@protoc_insertion_point(field_mutable:client_baseserver.ladder_reply._query_records)
  return _query_records_;
}
inline ::client_baseserver::query_records* ladder_reply::release__query_records() {
  clear_has__query_records();
  ::client_baseserver::query_records* temp = _query_records_;
  _query_records_ = NULL;
  return temp;
}
inline void ladder_reply::set_allocated__query_records(::client_baseserver::query_records* _query_records) {
  delete _query_records_;
  _query_records_ = _query_records;
  if (_query_records) {
    set_has__query_records();
  } else {
    clear_has__query_records();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.ladder_reply._query_records)
}

// optional .client_baseserver.query_replay _query_replay = 7;
inline bool ladder_reply::has__query_replay() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ladder_reply::set_has__query_replay() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ladder_reply::clear_has__query_replay() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ladder_reply::clear__query_replay() {
  if (_query_replay_ != NULL) _query_replay_->::client_baseserver::query_replay::Clear();
  clear_has__query_replay();
}
inline const ::client_baseserver::query_replay& ladder_reply::_query_replay() const {
  // @@protoc_insertion_point(field_get:client_baseserver.ladder_reply._query_replay)
  return _query_replay_ != NULL ? *_query_replay_ : *default_instance_->_query_replay_;
}
inline ::client_baseserver::query_replay* ladder_reply::mutable__query_replay() {
  set_has__query_replay();
  if (_query_replay_ == NULL) _query_replay_ = new ::client_baseserver::query_replay;
  // @@protoc_insertion_point(field_mutable:client_baseserver.ladder_reply._query_replay)
  return _query_replay_;
}
inline ::client_baseserver::query_replay* ladder_reply::release__query_replay() {
  clear_has__query_replay();
  ::client_baseserver::query_replay* temp = _query_replay_;
  _query_replay_ = NULL;
  return temp;
}
inline void ladder_reply::set_allocated__query_replay(::client_baseserver::query_replay* _query_replay) {
  delete _query_replay_;
  _query_replay_ = _query_replay;
  if (_query_replay) {
    set_has__query_replay();
  } else {
    clear_has__query_replay();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.ladder_reply._query_replay)
}

// optional .client_baseserver.query_rankboard _query_rankborad = 8;
inline bool ladder_reply::has__query_rankborad() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ladder_reply::set_has__query_rankborad() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ladder_reply::clear_has__query_rankborad() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ladder_reply::clear__query_rankborad() {
  if (_query_rankborad_ != NULL) _query_rankborad_->::client_baseserver::query_rankboard::Clear();
  clear_has__query_rankborad();
}
inline const ::client_baseserver::query_rankboard& ladder_reply::_query_rankborad() const {
  // @@protoc_insertion_point(field_get:client_baseserver.ladder_reply._query_rankborad)
  return _query_rankborad_ != NULL ? *_query_rankborad_ : *default_instance_->_query_rankborad_;
}
inline ::client_baseserver::query_rankboard* ladder_reply::mutable__query_rankborad() {
  set_has__query_rankborad();
  if (_query_rankborad_ == NULL) _query_rankborad_ = new ::client_baseserver::query_rankboard;
  // @@protoc_insertion_point(field_mutable:client_baseserver.ladder_reply._query_rankborad)
  return _query_rankborad_;
}
inline ::client_baseserver::query_rankboard* ladder_reply::release__query_rankborad() {
  clear_has__query_rankborad();
  ::client_baseserver::query_rankboard* temp = _query_rankborad_;
  _query_rankborad_ = NULL;
  return temp;
}
inline void ladder_reply::set_allocated__query_rankborad(::client_baseserver::query_rankboard* _query_rankborad) {
  delete _query_rankborad_;
  _query_rankborad_ = _query_rankborad;
  if (_query_rankborad) {
    set_has__query_rankborad();
  } else {
    clear_has__query_rankborad();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.ladder_reply._query_rankborad)
}

// optional .client_baseserver.query_oppo_info _query_oppo = 9;
inline bool ladder_reply::has__query_oppo() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ladder_reply::set_has__query_oppo() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ladder_reply::clear_has__query_oppo() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ladder_reply::clear__query_oppo() {
  if (_query_oppo_ != NULL) _query_oppo_->::client_baseserver::query_oppo_info::Clear();
  clear_has__query_oppo();
}
inline const ::client_baseserver::query_oppo_info& ladder_reply::_query_oppo() const {
  // @@protoc_insertion_point(field_get:client_baseserver.ladder_reply._query_oppo)
  return _query_oppo_ != NULL ? *_query_oppo_ : *default_instance_->_query_oppo_;
}
inline ::client_baseserver::query_oppo_info* ladder_reply::mutable__query_oppo() {
  set_has__query_oppo();
  if (_query_oppo_ == NULL) _query_oppo_ = new ::client_baseserver::query_oppo_info;
  // @@protoc_insertion_point(field_mutable:client_baseserver.ladder_reply._query_oppo)
  return _query_oppo_;
}
inline ::client_baseserver::query_oppo_info* ladder_reply::release__query_oppo() {
  clear_has__query_oppo();
  ::client_baseserver::query_oppo_info* temp = _query_oppo_;
  _query_oppo_ = NULL;
  return temp;
}
inline void ladder_reply::set_allocated__query_oppo(::client_baseserver::query_oppo_info* _query_oppo) {
  delete _query_oppo_;
  _query_oppo_ = _query_oppo;
  if (_query_oppo) {
    set_has__query_oppo();
  } else {
    clear_has__query_oppo();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.ladder_reply._query_oppo)
}

// optional .client_baseserver.clear_battle_cd _clear_battle_cd = 10;
inline bool ladder_reply::has__clear_battle_cd() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ladder_reply::set_has__clear_battle_cd() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ladder_reply::clear_has__clear_battle_cd() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ladder_reply::clear__clear_battle_cd() {
  if (_clear_battle_cd_ != NULL) _clear_battle_cd_->::client_baseserver::clear_battle_cd::Clear();
  clear_has__clear_battle_cd();
}
inline const ::client_baseserver::clear_battle_cd& ladder_reply::_clear_battle_cd() const {
  // @@protoc_insertion_point(field_get:client_baseserver.ladder_reply._clear_battle_cd)
  return _clear_battle_cd_ != NULL ? *_clear_battle_cd_ : *default_instance_->_clear_battle_cd_;
}
inline ::client_baseserver::clear_battle_cd* ladder_reply::mutable__clear_battle_cd() {
  set_has__clear_battle_cd();
  if (_clear_battle_cd_ == NULL) _clear_battle_cd_ = new ::client_baseserver::clear_battle_cd;
  // @@protoc_insertion_point(field_mutable:client_baseserver.ladder_reply._clear_battle_cd)
  return _clear_battle_cd_;
}
inline ::client_baseserver::clear_battle_cd* ladder_reply::release__clear_battle_cd() {
  clear_has__clear_battle_cd();
  ::client_baseserver::clear_battle_cd* temp = _clear_battle_cd_;
  _clear_battle_cd_ = NULL;
  return temp;
}
inline void ladder_reply::set_allocated__clear_battle_cd(::client_baseserver::clear_battle_cd* _clear_battle_cd) {
  delete _clear_battle_cd_;
  _clear_battle_cd_ = _clear_battle_cd;
  if (_clear_battle_cd) {
    set_has__clear_battle_cd();
  } else {
    clear_has__clear_battle_cd();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.ladder_reply._clear_battle_cd)
}

// optional .client_baseserver.draw_rank_reward _draw_rank_reward = 11;
inline bool ladder_reply::has__draw_rank_reward() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ladder_reply::set_has__draw_rank_reward() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ladder_reply::clear_has__draw_rank_reward() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ladder_reply::clear__draw_rank_reward() {
  if (_draw_rank_reward_ != NULL) _draw_rank_reward_->::client_baseserver::draw_rank_reward::Clear();
  clear_has__draw_rank_reward();
}
inline const ::client_baseserver::draw_rank_reward& ladder_reply::_draw_rank_reward() const {
  // @@protoc_insertion_point(field_get:client_baseserver.ladder_reply._draw_rank_reward)
  return _draw_rank_reward_ != NULL ? *_draw_rank_reward_ : *default_instance_->_draw_rank_reward_;
}
inline ::client_baseserver::draw_rank_reward* ladder_reply::mutable__draw_rank_reward() {
  set_has__draw_rank_reward();
  if (_draw_rank_reward_ == NULL) _draw_rank_reward_ = new ::client_baseserver::draw_rank_reward;
  // @@protoc_insertion_point(field_mutable:client_baseserver.ladder_reply._draw_rank_reward)
  return _draw_rank_reward_;
}
inline ::client_baseserver::draw_rank_reward* ladder_reply::release__draw_rank_reward() {
  clear_has__draw_rank_reward();
  ::client_baseserver::draw_rank_reward* temp = _draw_rank_reward_;
  _draw_rank_reward_ = NULL;
  return temp;
}
inline void ladder_reply::set_allocated__draw_rank_reward(::client_baseserver::draw_rank_reward* _draw_rank_reward) {
  delete _draw_rank_reward_;
  _draw_rank_reward_ = _draw_rank_reward;
  if (_draw_rank_reward) {
    set_has__draw_rank_reward();
  } else {
    clear_has__draw_rank_reward();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.ladder_reply._draw_rank_reward)
}

// optional .client_baseserver.buy_battle_chance _buy_battle_chance = 12;
inline bool ladder_reply::has__buy_battle_chance() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ladder_reply::set_has__buy_battle_chance() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ladder_reply::clear_has__buy_battle_chance() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ladder_reply::clear__buy_battle_chance() {
  if (_buy_battle_chance_ != NULL) _buy_battle_chance_->::client_baseserver::buy_battle_chance::Clear();
  clear_has__buy_battle_chance();
}
inline const ::client_baseserver::buy_battle_chance& ladder_reply::_buy_battle_chance() const {
  // @@protoc_insertion_point(field_get:client_baseserver.ladder_reply._buy_battle_chance)
  return _buy_battle_chance_ != NULL ? *_buy_battle_chance_ : *default_instance_->_buy_battle_chance_;
}
inline ::client_baseserver::buy_battle_chance* ladder_reply::mutable__buy_battle_chance() {
  set_has__buy_battle_chance();
  if (_buy_battle_chance_ == NULL) _buy_battle_chance_ = new ::client_baseserver::buy_battle_chance;
  // @@protoc_insertion_point(field_mutable:client_baseserver.ladder_reply._buy_battle_chance)
  return _buy_battle_chance_;
}
inline ::client_baseserver::buy_battle_chance* ladder_reply::release__buy_battle_chance() {
  clear_has__buy_battle_chance();
  ::client_baseserver::buy_battle_chance* temp = _buy_battle_chance_;
  _buy_battle_chance_ = NULL;
  return temp;
}
inline void ladder_reply::set_allocated__buy_battle_chance(::client_baseserver::buy_battle_chance* _buy_battle_chance) {
  delete _buy_battle_chance_;
  _buy_battle_chance_ = _buy_battle_chance;
  if (_buy_battle_chance) {
    set_has__buy_battle_chance();
  } else {
    clear_has__buy_battle_chance();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.ladder_reply._buy_battle_chance)
}

// -------------------------------------------------------------------

// open_panel

// required uint32 _rank = 1;
inline bool open_panel::has__rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void open_panel::set_has__rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void open_panel::clear_has__rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void open_panel::clear__rank() {
  _rank_ = 0u;
  clear_has__rank();
}
inline ::google::protobuf::uint32 open_panel::_rank() const {
  // @@protoc_insertion_point(field_get:client_baseserver.open_panel._rank)
  return _rank_;
}
inline void open_panel::set__rank(::google::protobuf::uint32 value) {
  set_has__rank();
  _rank_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.open_panel._rank)
}

// required uint32 _left_count = 2;
inline bool open_panel::has__left_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void open_panel::set_has__left_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void open_panel::clear_has__left_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void open_panel::clear__left_count() {
  _left_count_ = 0u;
  clear_has__left_count();
}
inline ::google::protobuf::uint32 open_panel::_left_count() const {
  // @@protoc_insertion_point(field_get:client_baseserver.open_panel._left_count)
  return _left_count_;
}
inline void open_panel::set__left_count(::google::protobuf::uint32 value) {
  set_has__left_count();
  _left_count_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.open_panel._left_count)
}

// required uint32 _last_bt_time = 3;
inline bool open_panel::has__last_bt_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void open_panel::set_has__last_bt_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void open_panel::clear_has__last_bt_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void open_panel::clear__last_bt_time() {
  _last_bt_time_ = 0u;
  clear_has__last_bt_time();
}
inline ::google::protobuf::uint32 open_panel::_last_bt_time() const {
  // @@protoc_insertion_point(field_get:client_baseserver.open_panel._last_bt_time)
  return _last_bt_time_;
}
inline void open_panel::set__last_bt_time(::google::protobuf::uint32 value) {
  set_has__last_bt_time();
  _last_bt_time_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.open_panel._last_bt_time)
}

// required uint32 _buy_times = 4;
inline bool open_panel::has__buy_times() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void open_panel::set_has__buy_times() {
  _has_bits_[0] |= 0x00000008u;
}
inline void open_panel::clear_has__buy_times() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void open_panel::clear__buy_times() {
  _buy_times_ = 0u;
  clear_has__buy_times();
}
inline ::google::protobuf::uint32 open_panel::_buy_times() const {
  // @@protoc_insertion_point(field_get:client_baseserver.open_panel._buy_times)
  return _buy_times_;
}
inline void open_panel::set__buy_times(::google::protobuf::uint32 value) {
  set_has__buy_times();
  _buy_times_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.open_panel._buy_times)
}

// repeated uint32 _lineup = 5;
inline int open_panel::_lineup_size() const {
  return _lineup_.size();
}
inline void open_panel::clear__lineup() {
  _lineup_.Clear();
}
inline ::google::protobuf::uint32 open_panel::_lineup(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.open_panel._lineup)
  return _lineup_.Get(index);
}
inline void open_panel::set__lineup(int index, ::google::protobuf::uint32 value) {
  _lineup_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.open_panel._lineup)
}
inline void open_panel::add__lineup(::google::protobuf::uint32 value) {
  _lineup_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.open_panel._lineup)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
open_panel::_lineup() const {
  // @@protoc_insertion_point(field_list:client_baseserver.open_panel._lineup)
  return _lineup_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
open_panel::mutable__lineup() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.open_panel._lineup)
  return &_lineup_;
}

// required uint32 _gs = 6;
inline bool open_panel::has__gs() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void open_panel::set_has__gs() {
  _has_bits_[0] |= 0x00000020u;
}
inline void open_panel::clear_has__gs() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void open_panel::clear__gs() {
  _gs_ = 0u;
  clear_has__gs();
}
inline ::google::protobuf::uint32 open_panel::_gs() const {
  // @@protoc_insertion_point(field_get:client_baseserver.open_panel._gs)
  return _gs_;
}
inline void open_panel::set__gs(::google::protobuf::uint32 value) {
  set_has__gs();
  _gs_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.open_panel._gs)
}

// repeated .client_baseserver.ladder_opponent _oppos = 7;
inline int open_panel::_oppos_size() const {
  return _oppos_.size();
}
inline void open_panel::clear__oppos() {
  _oppos_.Clear();
}
inline const ::client_baseserver::ladder_opponent& open_panel::_oppos(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.open_panel._oppos)
  return _oppos_.Get(index);
}
inline ::client_baseserver::ladder_opponent* open_panel::mutable__oppos(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.open_panel._oppos)
  return _oppos_.Mutable(index);
}
inline ::client_baseserver::ladder_opponent* open_panel::add__oppos() {
  // @@protoc_insertion_point(field_add:client_baseserver.open_panel._oppos)
  return _oppos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::ladder_opponent >&
open_panel::_oppos() const {
  // @@protoc_insertion_point(field_list:client_baseserver.open_panel._oppos)
  return _oppos_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::ladder_opponent >*
open_panel::mutable__oppos() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.open_panel._oppos)
  return &_oppos_;
}

// -------------------------------------------------------------------

// apply_opponent

// repeated .client_baseserver.ladder_opponent _oppos = 1;
inline int apply_opponent::_oppos_size() const {
  return _oppos_.size();
}
inline void apply_opponent::clear__oppos() {
  _oppos_.Clear();
}
inline const ::client_baseserver::ladder_opponent& apply_opponent::_oppos(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.apply_opponent._oppos)
  return _oppos_.Get(index);
}
inline ::client_baseserver::ladder_opponent* apply_opponent::mutable__oppos(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.apply_opponent._oppos)
  return _oppos_.Mutable(index);
}
inline ::client_baseserver::ladder_opponent* apply_opponent::add__oppos() {
  // @@protoc_insertion_point(field_add:client_baseserver.apply_opponent._oppos)
  return _oppos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::ladder_opponent >&
apply_opponent::_oppos() const {
  // @@protoc_insertion_point(field_list:client_baseserver.apply_opponent._oppos)
  return _oppos_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::ladder_opponent >*
apply_opponent::mutable__oppos() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.apply_opponent._oppos)
  return &_oppos_;
}

// -------------------------------------------------------------------

// start_battle

// required .client_baseserver.result _result = 1;
inline bool start_battle::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void start_battle::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void start_battle::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void start_battle::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result start_battle::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.start_battle._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void start_battle::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.start_battle._result)
}

// required uint32 _rseed = 2;
inline bool start_battle::has__rseed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void start_battle::set_has__rseed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void start_battle::clear_has__rseed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void start_battle::clear__rseed() {
  _rseed_ = 0u;
  clear_has__rseed();
}
inline ::google::protobuf::uint32 start_battle::_rseed() const {
  // @@protoc_insertion_point(field_get:client_baseserver.start_battle._rseed)
  return _rseed_;
}
inline void start_battle::set__rseed(::google::protobuf::uint32 value) {
  set_has__rseed();
  _rseed_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.start_battle._rseed)
}

// repeated .client_baseserver.hero _self_heroes = 3;
inline int start_battle::_self_heroes_size() const {
  return _self_heroes_.size();
}
inline void start_battle::clear__self_heroes() {
  _self_heroes_.Clear();
}
inline const ::client_baseserver::hero& start_battle::_self_heroes(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.start_battle._self_heroes)
  return _self_heroes_.Get(index);
}
inline ::client_baseserver::hero* start_battle::mutable__self_heroes(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.start_battle._self_heroes)
  return _self_heroes_.Mutable(index);
}
inline ::client_baseserver::hero* start_battle::add__self_heroes() {
  // @@protoc_insertion_point(field_add:client_baseserver.start_battle._self_heroes)
  return _self_heroes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >&
start_battle::_self_heroes() const {
  // @@protoc_insertion_point(field_list:client_baseserver.start_battle._self_heroes)
  return _self_heroes_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >*
start_battle::mutable__self_heroes() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.start_battle._self_heroes)
  return &_self_heroes_;
}

// repeated .client_baseserver.hero _heroes = 4;
inline int start_battle::_heroes_size() const {
  return _heroes_.size();
}
inline void start_battle::clear__heroes() {
  _heroes_.Clear();
}
inline const ::client_baseserver::hero& start_battle::_heroes(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.start_battle._heroes)
  return _heroes_.Get(index);
}
inline ::client_baseserver::hero* start_battle::mutable__heroes(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.start_battle._heroes)
  return _heroes_.Mutable(index);
}
inline ::client_baseserver::hero* start_battle::add__heroes() {
  // @@protoc_insertion_point(field_add:client_baseserver.start_battle._heroes)
  return _heroes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >&
start_battle::_heroes() const {
  // @@protoc_insertion_point(field_list:client_baseserver.start_battle._heroes)
  return _heroes_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >*
start_battle::mutable__heroes() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.start_battle._heroes)
  return &_heroes_;
}

// required uint32 _is_robot = 5;
inline bool start_battle::has__is_robot() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void start_battle::set_has__is_robot() {
  _has_bits_[0] |= 0x00000010u;
}
inline void start_battle::clear_has__is_robot() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void start_battle::clear__is_robot() {
  _is_robot_ = 0u;
  clear_has__is_robot();
}
inline ::google::protobuf::uint32 start_battle::_is_robot() const {
  // @@protoc_insertion_point(field_get:client_baseserver.start_battle._is_robot)
  return _is_robot_;
}
inline void start_battle::set__is_robot(::google::protobuf::uint32 value) {
  set_has__is_robot();
  _is_robot_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.start_battle._is_robot)
}

// -------------------------------------------------------------------

// end_battle

// required .client_baseserver.battle_result _result = 1;
inline bool end_battle::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void end_battle::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void end_battle::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void end_battle::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::battle_result end_battle::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.end_battle._result)
  return static_cast< ::client_baseserver::battle_result >(_result_);
}
inline void end_battle::set__result(::client_baseserver::battle_result value) {
  assert(::client_baseserver::battle_result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.end_battle._result)
}

// required uint32 _best_rank_reward = 2;
inline bool end_battle::has__best_rank_reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void end_battle::set_has__best_rank_reward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void end_battle::clear_has__best_rank_reward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void end_battle::clear__best_rank_reward() {
  _best_rank_reward_ = 0u;
  clear_has__best_rank_reward();
}
inline ::google::protobuf::uint32 end_battle::_best_rank_reward() const {
  // @@protoc_insertion_point(field_get:client_baseserver.end_battle._best_rank_reward)
  return _best_rank_reward_;
}
inline void end_battle::set__best_rank_reward(::google::protobuf::uint32 value) {
  set_has__best_rank_reward();
  _best_rank_reward_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.end_battle._best_rank_reward)
}

// required uint32 _best_rank = 3;
inline bool end_battle::has__best_rank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void end_battle::set_has__best_rank() {
  _has_bits_[0] |= 0x00000004u;
}
inline void end_battle::clear_has__best_rank() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void end_battle::clear__best_rank() {
  _best_rank_ = 0u;
  clear_has__best_rank();
}
inline ::google::protobuf::uint32 end_battle::_best_rank() const {
  // @@protoc_insertion_point(field_get:client_baseserver.end_battle._best_rank)
  return _best_rank_;
}
inline void end_battle::set__best_rank(::google::protobuf::uint32 value) {
  set_has__best_rank();
  _best_rank_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.end_battle._best_rank)
}

// required uint32 _cur_rank = 4;
inline bool end_battle::has__cur_rank() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void end_battle::set_has__cur_rank() {
  _has_bits_[0] |= 0x00000008u;
}
inline void end_battle::clear_has__cur_rank() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void end_battle::clear__cur_rank() {
  _cur_rank_ = 0u;
  clear_has__cur_rank();
}
inline ::google::protobuf::uint32 end_battle::_cur_rank() const {
  // @@protoc_insertion_point(field_get:client_baseserver.end_battle._cur_rank)
  return _cur_rank_;
}
inline void end_battle::set__cur_rank(::google::protobuf::uint32 value) {
  set_has__cur_rank();
  _cur_rank_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.end_battle._cur_rank)
}

// -------------------------------------------------------------------

// set_lineup

// required .client_baseserver.result _result = 1;
inline bool set_lineup::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void set_lineup::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void set_lineup::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void set_lineup::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result set_lineup::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.set_lineup._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void set_lineup::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.set_lineup._result)
}

// repeated uint32 _lineup = 2;
inline int set_lineup::_lineup_size() const {
  return _lineup_.size();
}
inline void set_lineup::clear__lineup() {
  _lineup_.Clear();
}
inline ::google::protobuf::uint32 set_lineup::_lineup(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.set_lineup._lineup)
  return _lineup_.Get(index);
}
inline void set_lineup::set__lineup(int index, ::google::protobuf::uint32 value) {
  _lineup_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.set_lineup._lineup)
}
inline void set_lineup::add__lineup(::google::protobuf::uint32 value) {
  _lineup_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.set_lineup._lineup)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
set_lineup::_lineup() const {
  // @@protoc_insertion_point(field_list:client_baseserver.set_lineup._lineup)
  return _lineup_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
set_lineup::mutable__lineup() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.set_lineup._lineup)
  return &_lineup_;
}

// required uint32 _gs = 3;
inline bool set_lineup::has__gs() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void set_lineup::set_has__gs() {
  _has_bits_[0] |= 0x00000004u;
}
inline void set_lineup::clear_has__gs() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void set_lineup::clear__gs() {
  _gs_ = 0u;
  clear_has__gs();
}
inline ::google::protobuf::uint32 set_lineup::_gs() const {
  // @@protoc_insertion_point(field_get:client_baseserver.set_lineup._gs)
  return _gs_;
}
inline void set_lineup::set__gs(::google::protobuf::uint32 value) {
  set_has__gs();
  _gs_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.set_lineup._gs)
}

// -------------------------------------------------------------------

// query_records

// repeated .client_baseserver.ladder_record _records = 1;
inline int query_records::_records_size() const {
  return _records_.size();
}
inline void query_records::clear__records() {
  _records_.Clear();
}
inline const ::client_baseserver::ladder_record& query_records::_records(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.query_records._records)
  return _records_.Get(index);
}
inline ::client_baseserver::ladder_record* query_records::mutable__records(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.query_records._records)
  return _records_.Mutable(index);
}
inline ::client_baseserver::ladder_record* query_records::add__records() {
  // @@protoc_insertion_point(field_add:client_baseserver.query_records._records)
  return _records_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::ladder_record >&
query_records::_records() const {
  // @@protoc_insertion_point(field_list:client_baseserver.query_records._records)
  return _records_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::ladder_record >*
query_records::mutable__records() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.query_records._records)
  return &_records_;
}

// -------------------------------------------------------------------

// query_replay

// required .client_baseserver.pvp_record _record = 1;
inline bool query_replay::has__record() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void query_replay::set_has__record() {
  _has_bits_[0] |= 0x00000001u;
}
inline void query_replay::clear_has__record() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void query_replay::clear__record() {
  if (_record_ != NULL) _record_->::client_baseserver::pvp_record::Clear();
  clear_has__record();
}
inline const ::client_baseserver::pvp_record& query_replay::_record() const {
  // @@protoc_insertion_point(field_get:client_baseserver.query_replay._record)
  return _record_ != NULL ? *_record_ : *default_instance_->_record_;
}
inline ::client_baseserver::pvp_record* query_replay::mutable__record() {
  set_has__record();
  if (_record_ == NULL) _record_ = new ::client_baseserver::pvp_record;
  // @@protoc_insertion_point(field_mutable:client_baseserver.query_replay._record)
  return _record_;
}
inline ::client_baseserver::pvp_record* query_replay::release__record() {
  clear_has__record();
  ::client_baseserver::pvp_record* temp = _record_;
  _record_ = NULL;
  return temp;
}
inline void query_replay::set_allocated__record(::client_baseserver::pvp_record* _record) {
  delete _record_;
  _record_ = _record;
  if (_record) {
    set_has__record();
  } else {
    clear_has__record();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.query_replay._record)
}

// -------------------------------------------------------------------

// pvp_record

// required uint32 _checkid = 1;
inline bool pvp_record::has__checkid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pvp_record::set_has__checkid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pvp_record::clear_has__checkid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pvp_record::clear__checkid() {
  _checkid_ = 0u;
  clear_has__checkid();
}
inline ::google::protobuf::uint32 pvp_record::_checkid() const {
  // @@protoc_insertion_point(field_get:client_baseserver.pvp_record._checkid)
  return _checkid_;
}
inline void pvp_record::set__checkid(::google::protobuf::uint32 value) {
  set_has__checkid();
  _checkid_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.pvp_record._checkid)
}

// required uint32 _userid = 2;
inline bool pvp_record::has__userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pvp_record::set_has__userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pvp_record::clear_has__userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pvp_record::clear__userid() {
  _userid_ = 0u;
  clear_has__userid();
}
inline ::google::protobuf::uint32 pvp_record::_userid() const {
  // @@protoc_insertion_point(field_get:client_baseserver.pvp_record._userid)
  return _userid_;
}
inline void pvp_record::set__userid(::google::protobuf::uint32 value) {
  set_has__userid();
  _userid_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.pvp_record._userid)
}

// optional string _username = 3;
inline bool pvp_record::has__username() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void pvp_record::set_has__username() {
  _has_bits_[0] |= 0x00000004u;
}
inline void pvp_record::clear_has__username() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void pvp_record::clear__username() {
  if (_username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _username_->clear();
  }
  clear_has__username();
}
inline const ::std::string& pvp_record::_username() const {
  // @@protoc_insertion_point(field_get:client_baseserver.pvp_record._username)
  return *_username_;
}
inline void pvp_record::set__username(const ::std::string& value) {
  set_has__username();
  if (_username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _username_ = new ::std::string;
  }
  _username_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.pvp_record._username)
}
inline void pvp_record::set__username(const char* value) {
  set_has__username();
  if (_username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _username_ = new ::std::string;
  }
  _username_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.pvp_record._username)
}
inline void pvp_record::set__username(const char* value, size_t size) {
  set_has__username();
  if (_username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _username_ = new ::std::string;
  }
  _username_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.pvp_record._username)
}
inline ::std::string* pvp_record::mutable__username() {
  set_has__username();
  if (_username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _username_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.pvp_record._username)
  return _username_;
}
inline ::std::string* pvp_record::release__username() {
  clear_has__username();
  if (_username_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = _username_;
    _username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void pvp_record::set_allocated__username(::std::string* _username) {
  if (_username_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete _username_;
  }
  if (_username) {
    set_has__username();
    _username_ = _username;
  } else {
    clear_has__username();
    _username_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.pvp_record._username)
}

// optional uint32 _level = 4;
inline bool pvp_record::has__level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void pvp_record::set_has__level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void pvp_record::clear_has__level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void pvp_record::clear__level() {
  _level_ = 0u;
  clear_has__level();
}
inline ::google::protobuf::uint32 pvp_record::_level() const {
  // @@protoc_insertion_point(field_get:client_baseserver.pvp_record._level)
  return _level_;
}
inline void pvp_record::set__level(::google::protobuf::uint32 value) {
  set_has__level();
  _level_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.pvp_record._level)
}

// optional uint32 _avatar = 5;
inline bool pvp_record::has__avatar() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void pvp_record::set_has__avatar() {
  _has_bits_[0] |= 0x00000010u;
}
inline void pvp_record::clear_has__avatar() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void pvp_record::clear__avatar() {
  _avatar_ = 0u;
  clear_has__avatar();
}
inline ::google::protobuf::uint32 pvp_record::_avatar() const {
  // @@protoc_insertion_point(field_get:client_baseserver.pvp_record._avatar)
  return _avatar_;
}
inline void pvp_record::set__avatar(::google::protobuf::uint32 value) {
  set_has__avatar();
  _avatar_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.pvp_record._avatar)
}

// optional uint32 _vip = 6;
inline bool pvp_record::has__vip() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void pvp_record::set_has__vip() {
  _has_bits_[0] |= 0x00000020u;
}
inline void pvp_record::clear_has__vip() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void pvp_record::clear__vip() {
  _vip_ = 0u;
  clear_has__vip();
}
inline ::google::protobuf::uint32 pvp_record::_vip() const {
  // @@protoc_insertion_point(field_get:client_baseserver.pvp_record._vip)
  return _vip_;
}
inline void pvp_record::set__vip(::google::protobuf::uint32 value) {
  set_has__vip();
  _vip_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.pvp_record._vip)
}

// required uint32 _oppo_userid = 7;
inline bool pvp_record::has__oppo_userid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void pvp_record::set_has__oppo_userid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void pvp_record::clear_has__oppo_userid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void pvp_record::clear__oppo_userid() {
  _oppo_userid_ = 0u;
  clear_has__oppo_userid();
}
inline ::google::protobuf::uint32 pvp_record::_oppo_userid() const {
  // @@protoc_insertion_point(field_get:client_baseserver.pvp_record._oppo_userid)
  return _oppo_userid_;
}
inline void pvp_record::set__oppo_userid(::google::protobuf::uint32 value) {
  set_has__oppo_userid();
  _oppo_userid_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.pvp_record._oppo_userid)
}

// optional string _oppo_name = 8;
inline bool pvp_record::has__oppo_name() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void pvp_record::set_has__oppo_name() {
  _has_bits_[0] |= 0x00000080u;
}
inline void pvp_record::clear_has__oppo_name() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void pvp_record::clear__oppo_name() {
  if (_oppo_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _oppo_name_->clear();
  }
  clear_has__oppo_name();
}
inline const ::std::string& pvp_record::_oppo_name() const {
  // @@protoc_insertion_point(field_get:client_baseserver.pvp_record._oppo_name)
  return *_oppo_name_;
}
inline void pvp_record::set__oppo_name(const ::std::string& value) {
  set_has__oppo_name();
  if (_oppo_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _oppo_name_ = new ::std::string;
  }
  _oppo_name_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.pvp_record._oppo_name)
}
inline void pvp_record::set__oppo_name(const char* value) {
  set_has__oppo_name();
  if (_oppo_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _oppo_name_ = new ::std::string;
  }
  _oppo_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.pvp_record._oppo_name)
}
inline void pvp_record::set__oppo_name(const char* value, size_t size) {
  set_has__oppo_name();
  if (_oppo_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _oppo_name_ = new ::std::string;
  }
  _oppo_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.pvp_record._oppo_name)
}
inline ::std::string* pvp_record::mutable__oppo_name() {
  set_has__oppo_name();
  if (_oppo_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _oppo_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.pvp_record._oppo_name)
  return _oppo_name_;
}
inline ::std::string* pvp_record::release__oppo_name() {
  clear_has__oppo_name();
  if (_oppo_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = _oppo_name_;
    _oppo_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void pvp_record::set_allocated__oppo_name(::std::string* _oppo_name) {
  if (_oppo_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete _oppo_name_;
  }
  if (_oppo_name) {
    set_has__oppo_name();
    _oppo_name_ = _oppo_name;
  } else {
    clear_has__oppo_name();
    _oppo_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.pvp_record._oppo_name)
}

// optional uint32 _oppo_level = 9;
inline bool pvp_record::has__oppo_level() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void pvp_record::set_has__oppo_level() {
  _has_bits_[0] |= 0x00000100u;
}
inline void pvp_record::clear_has__oppo_level() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void pvp_record::clear__oppo_level() {
  _oppo_level_ = 0u;
  clear_has__oppo_level();
}
inline ::google::protobuf::uint32 pvp_record::_oppo_level() const {
  // @@protoc_insertion_point(field_get:client_baseserver.pvp_record._oppo_level)
  return _oppo_level_;
}
inline void pvp_record::set__oppo_level(::google::protobuf::uint32 value) {
  set_has__oppo_level();
  _oppo_level_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.pvp_record._oppo_level)
}

// optional uint32 _oppo_avatar = 10;
inline bool pvp_record::has__oppo_avatar() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void pvp_record::set_has__oppo_avatar() {
  _has_bits_[0] |= 0x00000200u;
}
inline void pvp_record::clear_has__oppo_avatar() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void pvp_record::clear__oppo_avatar() {
  _oppo_avatar_ = 0u;
  clear_has__oppo_avatar();
}
inline ::google::protobuf::uint32 pvp_record::_oppo_avatar() const {
  // @@protoc_insertion_point(field_get:client_baseserver.pvp_record._oppo_avatar)
  return _oppo_avatar_;
}
inline void pvp_record::set__oppo_avatar(::google::protobuf::uint32 value) {
  set_has__oppo_avatar();
  _oppo_avatar_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.pvp_record._oppo_avatar)
}

// optional uint32 _oppo_vip = 11;
inline bool pvp_record::has__oppo_vip() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void pvp_record::set_has__oppo_vip() {
  _has_bits_[0] |= 0x00000400u;
}
inline void pvp_record::clear_has__oppo_vip() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void pvp_record::clear__oppo_vip() {
  _oppo_vip_ = 0u;
  clear_has__oppo_vip();
}
inline ::google::protobuf::uint32 pvp_record::_oppo_vip() const {
  // @@protoc_insertion_point(field_get:client_baseserver.pvp_record._oppo_vip)
  return _oppo_vip_;
}
inline void pvp_record::set__oppo_vip(::google::protobuf::uint32 value) {
  set_has__oppo_vip();
  _oppo_vip_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.pvp_record._oppo_vip)
}

// optional uint32 _oppo_robot = 12;
inline bool pvp_record::has__oppo_robot() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void pvp_record::set_has__oppo_robot() {
  _has_bits_[0] |= 0x00000800u;
}
inline void pvp_record::clear_has__oppo_robot() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void pvp_record::clear__oppo_robot() {
  _oppo_robot_ = 0u;
  clear_has__oppo_robot();
}
inline ::google::protobuf::uint32 pvp_record::_oppo_robot() const {
  // @@protoc_insertion_point(field_get:client_baseserver.pvp_record._oppo_robot)
  return _oppo_robot_;
}
inline void pvp_record::set__oppo_robot(::google::protobuf::uint32 value) {
  set_has__oppo_robot();
  _oppo_robot_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.pvp_record._oppo_robot)
}

// optional .client_baseserver.battle_result _result = 13 [default = victory];
inline bool pvp_record::has__result() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void pvp_record::set_has__result() {
  _has_bits_[0] |= 0x00001000u;
}
inline void pvp_record::clear_has__result() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void pvp_record::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::battle_result pvp_record::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.pvp_record._result)
  return static_cast< ::client_baseserver::battle_result >(_result_);
}
inline void pvp_record::set__result(::client_baseserver::battle_result value) {
  assert(::client_baseserver::battle_result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.pvp_record._result)
}

// repeated .client_baseserver.hero _self_heroes = 14;
inline int pvp_record::_self_heroes_size() const {
  return _self_heroes_.size();
}
inline void pvp_record::clear__self_heroes() {
  _self_heroes_.Clear();
}
inline const ::client_baseserver::hero& pvp_record::_self_heroes(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.pvp_record._self_heroes)
  return _self_heroes_.Get(index);
}
inline ::client_baseserver::hero* pvp_record::mutable__self_heroes(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.pvp_record._self_heroes)
  return _self_heroes_.Mutable(index);
}
inline ::client_baseserver::hero* pvp_record::add__self_heroes() {
  // @@protoc_insertion_point(field_add:client_baseserver.pvp_record._self_heroes)
  return _self_heroes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >&
pvp_record::_self_heroes() const {
  // @@protoc_insertion_point(field_list:client_baseserver.pvp_record._self_heroes)
  return _self_heroes_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >*
pvp_record::mutable__self_heroes() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.pvp_record._self_heroes)
  return &_self_heroes_;
}

// repeated .client_baseserver.hero_dyna _self_dynas = 15;
inline int pvp_record::_self_dynas_size() const {
  return _self_dynas_.size();
}
inline void pvp_record::clear__self_dynas() {
  _self_dynas_.Clear();
}
inline const ::client_baseserver::hero_dyna& pvp_record::_self_dynas(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.pvp_record._self_dynas)
  return _self_dynas_.Get(index);
}
inline ::client_baseserver::hero_dyna* pvp_record::mutable__self_dynas(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.pvp_record._self_dynas)
  return _self_dynas_.Mutable(index);
}
inline ::client_baseserver::hero_dyna* pvp_record::add__self_dynas() {
  // @@protoc_insertion_point(field_add:client_baseserver.pvp_record._self_dynas)
  return _self_dynas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero_dyna >&
pvp_record::_self_dynas() const {
  // @@protoc_insertion_point(field_list:client_baseserver.pvp_record._self_dynas)
  return _self_dynas_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero_dyna >*
pvp_record::mutable__self_dynas() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.pvp_record._self_dynas)
  return &_self_dynas_;
}

// repeated .client_baseserver.hero _oppo_heroes = 16;
inline int pvp_record::_oppo_heroes_size() const {
  return _oppo_heroes_.size();
}
inline void pvp_record::clear__oppo_heroes() {
  _oppo_heroes_.Clear();
}
inline const ::client_baseserver::hero& pvp_record::_oppo_heroes(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.pvp_record._oppo_heroes)
  return _oppo_heroes_.Get(index);
}
inline ::client_baseserver::hero* pvp_record::mutable__oppo_heroes(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.pvp_record._oppo_heroes)
  return _oppo_heroes_.Mutable(index);
}
inline ::client_baseserver::hero* pvp_record::add__oppo_heroes() {
  // @@protoc_insertion_point(field_add:client_baseserver.pvp_record._oppo_heroes)
  return _oppo_heroes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >&
pvp_record::_oppo_heroes() const {
  // @@protoc_insertion_point(field_list:client_baseserver.pvp_record._oppo_heroes)
  return _oppo_heroes_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >*
pvp_record::mutable__oppo_heroes() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.pvp_record._oppo_heroes)
  return &_oppo_heroes_;
}

// repeated .client_baseserver.hero_dyna _oppo_dynas = 17;
inline int pvp_record::_oppo_dynas_size() const {
  return _oppo_dynas_.size();
}
inline void pvp_record::clear__oppo_dynas() {
  _oppo_dynas_.Clear();
}
inline const ::client_baseserver::hero_dyna& pvp_record::_oppo_dynas(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.pvp_record._oppo_dynas)
  return _oppo_dynas_.Get(index);
}
inline ::client_baseserver::hero_dyna* pvp_record::mutable__oppo_dynas(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.pvp_record._oppo_dynas)
  return _oppo_dynas_.Mutable(index);
}
inline ::client_baseserver::hero_dyna* pvp_record::add__oppo_dynas() {
  // @@protoc_insertion_point(field_add:client_baseserver.pvp_record._oppo_dynas)
  return _oppo_dynas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero_dyna >&
pvp_record::_oppo_dynas() const {
  // @@protoc_insertion_point(field_list:client_baseserver.pvp_record._oppo_dynas)
  return _oppo_dynas_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero_dyna >*
pvp_record::mutable__oppo_dynas() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.pvp_record._oppo_dynas)
  return &_oppo_dynas_;
}

// required uint32 _rseed = 18;
inline bool pvp_record::has__rseed() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void pvp_record::set_has__rseed() {
  _has_bits_[0] |= 0x00020000u;
}
inline void pvp_record::clear_has__rseed() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void pvp_record::clear__rseed() {
  _rseed_ = 0u;
  clear_has__rseed();
}
inline ::google::protobuf::uint32 pvp_record::_rseed() const {
  // @@protoc_insertion_point(field_get:client_baseserver.pvp_record._rseed)
  return _rseed_;
}
inline void pvp_record::set__rseed(::google::protobuf::uint32 value) {
  set_has__rseed();
  _rseed_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.pvp_record._rseed)
}

// optional uint32 _self_robot = 19;
inline bool pvp_record::has__self_robot() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void pvp_record::set_has__self_robot() {
  _has_bits_[0] |= 0x00040000u;
}
inline void pvp_record::clear_has__self_robot() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void pvp_record::clear__self_robot() {
  _self_robot_ = 0u;
  clear_has__self_robot();
}
inline ::google::protobuf::uint32 pvp_record::_self_robot() const {
  // @@protoc_insertion_point(field_get:client_baseserver.pvp_record._self_robot)
  return _self_robot_;
}
inline void pvp_record::set__self_robot(::google::protobuf::uint32 value) {
  set_has__self_robot();
  _self_robot_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.pvp_record._self_robot)
}

// optional uint32 _param1 = 20;
inline bool pvp_record::has__param1() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void pvp_record::set_has__param1() {
  _has_bits_[0] |= 0x00080000u;
}
inline void pvp_record::clear_has__param1() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void pvp_record::clear__param1() {
  _param1_ = 0u;
  clear_has__param1();
}
inline ::google::protobuf::uint32 pvp_record::_param1() const {
  // @@protoc_insertion_point(field_get:client_baseserver.pvp_record._param1)
  return _param1_;
}
inline void pvp_record::set__param1(::google::protobuf::uint32 value) {
  set_has__param1();
  _param1_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.pvp_record._param1)
}

// repeated uint32 _operations = 21;
inline int pvp_record::_operations_size() const {
  return _operations_.size();
}
inline void pvp_record::clear__operations() {
  _operations_.Clear();
}
inline ::google::protobuf::uint32 pvp_record::_operations(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.pvp_record._operations)
  return _operations_.Get(index);
}
inline void pvp_record::set__operations(int index, ::google::protobuf::uint32 value) {
  _operations_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.pvp_record._operations)
}
inline void pvp_record::add__operations(::google::protobuf::uint32 value) {
  _operations_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.pvp_record._operations)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
pvp_record::_operations() const {
  // @@protoc_insertion_point(field_list:client_baseserver.pvp_record._operations)
  return _operations_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
pvp_record::mutable__operations() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.pvp_record._operations)
  return &_operations_;
}

// -------------------------------------------------------------------

// query_rankboard

// repeated .client_baseserver.rankboard_data _rank_list = 1;
inline int query_rankboard::_rank_list_size() const {
  return _rank_list_.size();
}
inline void query_rankboard::clear__rank_list() {
  _rank_list_.Clear();
}
inline const ::client_baseserver::rankboard_data& query_rankboard::_rank_list(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.query_rankboard._rank_list)
  return _rank_list_.Get(index);
}
inline ::client_baseserver::rankboard_data* query_rankboard::mutable__rank_list(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.query_rankboard._rank_list)
  return _rank_list_.Mutable(index);
}
inline ::client_baseserver::rankboard_data* query_rankboard::add__rank_list() {
  // @@protoc_insertion_point(field_add:client_baseserver.query_rankboard._rank_list)
  return _rank_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::rankboard_data >&
query_rankboard::_rank_list() const {
  // @@protoc_insertion_point(field_list:client_baseserver.query_rankboard._rank_list)
  return _rank_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::rankboard_data >*
query_rankboard::mutable__rank_list() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.query_rankboard._rank_list)
  return &_rank_list_;
}

// optional .client_baseserver.rankboard_data _self_rank = 2;
inline bool query_rankboard::has__self_rank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void query_rankboard::set_has__self_rank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void query_rankboard::clear_has__self_rank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void query_rankboard::clear__self_rank() {
  if (_self_rank_ != NULL) _self_rank_->::client_baseserver::rankboard_data::Clear();
  clear_has__self_rank();
}
inline const ::client_baseserver::rankboard_data& query_rankboard::_self_rank() const {
  // @@protoc_insertion_point(field_get:client_baseserver.query_rankboard._self_rank)
  return _self_rank_ != NULL ? *_self_rank_ : *default_instance_->_self_rank_;
}
inline ::client_baseserver::rankboard_data* query_rankboard::mutable__self_rank() {
  set_has__self_rank();
  if (_self_rank_ == NULL) _self_rank_ = new ::client_baseserver::rankboard_data;
  // @@protoc_insertion_point(field_mutable:client_baseserver.query_rankboard._self_rank)
  return _self_rank_;
}
inline ::client_baseserver::rankboard_data* query_rankboard::release__self_rank() {
  clear_has__self_rank();
  ::client_baseserver::rankboard_data* temp = _self_rank_;
  _self_rank_ = NULL;
  return temp;
}
inline void query_rankboard::set_allocated__self_rank(::client_baseserver::rankboard_data* _self_rank) {
  delete _self_rank_;
  _self_rank_ = _self_rank;
  if (_self_rank) {
    set_has__self_rank();
  } else {
    clear_has__self_rank();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.query_rankboard._self_rank)
}

// optional uint32 _pos = 3;
inline bool query_rankboard::has__pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void query_rankboard::set_has__pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void query_rankboard::clear_has__pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void query_rankboard::clear__pos() {
  _pos_ = 0u;
  clear_has__pos();
}
inline ::google::protobuf::uint32 query_rankboard::_pos() const {
  // @@protoc_insertion_point(field_get:client_baseserver.query_rankboard._pos)
  return _pos_;
}
inline void query_rankboard::set__pos(::google::protobuf::uint32 value) {
  set_has__pos();
  _pos_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.query_rankboard._pos)
}

// optional uint32 _prev_pos = 4;
inline bool query_rankboard::has__prev_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void query_rankboard::set_has__prev_pos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void query_rankboard::clear_has__prev_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void query_rankboard::clear__prev_pos() {
  _prev_pos_ = 0u;
  clear_has__prev_pos();
}
inline ::google::protobuf::uint32 query_rankboard::_prev_pos() const {
  // @@protoc_insertion_point(field_get:client_baseserver.query_rankboard._prev_pos)
  return _prev_pos_;
}
inline void query_rankboard::set__prev_pos(::google::protobuf::uint32 value) {
  set_has__prev_pos();
  _prev_pos_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.query_rankboard._prev_pos)
}

// -------------------------------------------------------------------

// query_oppo_info

// required .client_baseserver.ladder_opponent _user = 1;
inline bool query_oppo_info::has__user() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void query_oppo_info::set_has__user() {
  _has_bits_[0] |= 0x00000001u;
}
inline void query_oppo_info::clear_has__user() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void query_oppo_info::clear__user() {
  if (_user_ != NULL) _user_->::client_baseserver::ladder_opponent::Clear();
  clear_has__user();
}
inline const ::client_baseserver::ladder_opponent& query_oppo_info::_user() const {
  // @@protoc_insertion_point(field_get:client_baseserver.query_oppo_info._user)
  return _user_ != NULL ? *_user_ : *default_instance_->_user_;
}
inline ::client_baseserver::ladder_opponent* query_oppo_info::mutable__user() {
  set_has__user();
  if (_user_ == NULL) _user_ = new ::client_baseserver::ladder_opponent;
  // @@protoc_insertion_point(field_mutable:client_baseserver.query_oppo_info._user)
  return _user_;
}
inline ::client_baseserver::ladder_opponent* query_oppo_info::release__user() {
  clear_has__user();
  ::client_baseserver::ladder_opponent* temp = _user_;
  _user_ = NULL;
  return temp;
}
inline void query_oppo_info::set_allocated__user(::client_baseserver::ladder_opponent* _user) {
  delete _user_;
  _user_ = _user;
  if (_user) {
    set_has__user();
  } else {
    clear_has__user();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.query_oppo_info._user)
}

// -------------------------------------------------------------------

// clear_battle_cd

// required .client_baseserver.result _result = 1;
inline bool clear_battle_cd::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void clear_battle_cd::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void clear_battle_cd::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void clear_battle_cd::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result clear_battle_cd::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.clear_battle_cd._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void clear_battle_cd::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.clear_battle_cd._result)
}

// -------------------------------------------------------------------

// rankboard_data

// required uint32 _user_id = 1;
inline bool rankboard_data::has__user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void rankboard_data::set_has__user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void rankboard_data::clear_has__user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void rankboard_data::clear__user_id() {
  _user_id_ = 0u;
  clear_has__user_id();
}
inline ::google::protobuf::uint32 rankboard_data::_user_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.rankboard_data._user_id)
  return _user_id_;
}
inline void rankboard_data::set__user_id(::google::protobuf::uint32 value) {
  set_has__user_id();
  _user_id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.rankboard_data._user_id)
}

// optional .client_baseserver.user_summary _summary = 2;
inline bool rankboard_data::has__summary() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void rankboard_data::set_has__summary() {
  _has_bits_[0] |= 0x00000002u;
}
inline void rankboard_data::clear_has__summary() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void rankboard_data::clear__summary() {
  if (_summary_ != NULL) _summary_->::client_baseserver::user_summary::Clear();
  clear_has__summary();
}
inline const ::client_baseserver::user_summary& rankboard_data::_summary() const {
  // @@protoc_insertion_point(field_get:client_baseserver.rankboard_data._summary)
  return _summary_ != NULL ? *_summary_ : *default_instance_->_summary_;
}
inline ::client_baseserver::user_summary* rankboard_data::mutable__summary() {
  set_has__summary();
  if (_summary_ == NULL) _summary_ = new ::client_baseserver::user_summary;
  // @@protoc_insertion_point(field_mutable:client_baseserver.rankboard_data._summary)
  return _summary_;
}
inline ::client_baseserver::user_summary* rankboard_data::release__summary() {
  clear_has__summary();
  ::client_baseserver::user_summary* temp = _summary_;
  _summary_ = NULL;
  return temp;
}
inline void rankboard_data::set_allocated__summary(::client_baseserver::user_summary* _summary) {
  delete _summary_;
  _summary_ = _summary;
  if (_summary) {
    set_has__summary();
  } else {
    clear_has__summary();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.rankboard_data._summary)
}

// -------------------------------------------------------------------

// ladder_record

// required uint32 _user_id = 1;
inline bool ladder_record::has__user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ladder_record::set_has__user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ladder_record::clear_has__user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ladder_record::clear__user_id() {
  _user_id_ = 0u;
  clear_has__user_id();
}
inline ::google::protobuf::uint32 ladder_record::_user_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.ladder_record._user_id)
  return _user_id_;
}
inline void ladder_record::set__user_id(::google::protobuf::uint32 value) {
  set_has__user_id();
  _user_id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.ladder_record._user_id)
}

// required .client_baseserver.user_summary _summary = 2;
inline bool ladder_record::has__summary() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ladder_record::set_has__summary() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ladder_record::clear_has__summary() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ladder_record::clear__summary() {
  if (_summary_ != NULL) _summary_->::client_baseserver::user_summary::Clear();
  clear_has__summary();
}
inline const ::client_baseserver::user_summary& ladder_record::_summary() const {
  // @@protoc_insertion_point(field_get:client_baseserver.ladder_record._summary)
  return _summary_ != NULL ? *_summary_ : *default_instance_->_summary_;
}
inline ::client_baseserver::user_summary* ladder_record::mutable__summary() {
  set_has__summary();
  if (_summary_ == NULL) _summary_ = new ::client_baseserver::user_summary;
  // @@protoc_insertion_point(field_mutable:client_baseserver.ladder_record._summary)
  return _summary_;
}
inline ::client_baseserver::user_summary* ladder_record::release__summary() {
  clear_has__summary();
  ::client_baseserver::user_summary* temp = _summary_;
  _summary_ = NULL;
  return temp;
}
inline void ladder_record::set_allocated__summary(::client_baseserver::user_summary* _summary) {
  delete _summary_;
  _summary_ = _summary;
  if (_summary) {
    set_has__summary();
  } else {
    clear_has__summary();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.ladder_record._summary)
}

// required uint32 _deta_rank = 3;
inline bool ladder_record::has__deta_rank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ladder_record::set_has__deta_rank() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ladder_record::clear_has__deta_rank() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ladder_record::clear__deta_rank() {
  _deta_rank_ = 0u;
  clear_has__deta_rank();
}
inline ::google::protobuf::uint32 ladder_record::_deta_rank() const {
  // @@protoc_insertion_point(field_get:client_baseserver.ladder_record._deta_rank)
  return _deta_rank_;
}
inline void ladder_record::set__deta_rank(::google::protobuf::uint32 value) {
  set_has__deta_rank();
  _deta_rank_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.ladder_record._deta_rank)
}

// required uint32 _bt_time = 4;
inline bool ladder_record::has__bt_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ladder_record::set_has__bt_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ladder_record::clear_has__bt_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ladder_record::clear__bt_time() {
  _bt_time_ = 0u;
  clear_has__bt_time();
}
inline ::google::protobuf::uint32 ladder_record::_bt_time() const {
  // @@protoc_insertion_point(field_get:client_baseserver.ladder_record._bt_time)
  return _bt_time_;
}
inline void ladder_record::set__bt_time(::google::protobuf::uint32 value) {
  set_has__bt_time();
  _bt_time_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.ladder_record._bt_time)
}

// required .client_baseserver.battle_result _bt_result = 5;
inline bool ladder_record::has__bt_result() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ladder_record::set_has__bt_result() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ladder_record::clear_has__bt_result() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ladder_record::clear__bt_result() {
  _bt_result_ = 0;
  clear_has__bt_result();
}
inline ::client_baseserver::battle_result ladder_record::_bt_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.ladder_record._bt_result)
  return static_cast< ::client_baseserver::battle_result >(_bt_result_);
}
inline void ladder_record::set__bt_result(::client_baseserver::battle_result value) {
  assert(::client_baseserver::battle_result_IsValid(value));
  set_has__bt_result();
  _bt_result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.ladder_record._bt_result)
}

// required uint32 _replay_id = 6;
inline bool ladder_record::has__replay_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ladder_record::set_has__replay_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ladder_record::clear_has__replay_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ladder_record::clear__replay_id() {
  _replay_id_ = 0u;
  clear_has__replay_id();
}
inline ::google::protobuf::uint32 ladder_record::_replay_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.ladder_record._replay_id)
  return _replay_id_;
}
inline void ladder_record::set__replay_id(::google::protobuf::uint32 value) {
  set_has__replay_id();
  _replay_id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.ladder_record._replay_id)
}

// -------------------------------------------------------------------

// ladder_opponent

// required uint32 _user_id = 1;
inline bool ladder_opponent::has__user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ladder_opponent::set_has__user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ladder_opponent::clear_has__user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ladder_opponent::clear__user_id() {
  _user_id_ = 0u;
  clear_has__user_id();
}
inline ::google::protobuf::uint32 ladder_opponent::_user_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.ladder_opponent._user_id)
  return _user_id_;
}
inline void ladder_opponent::set__user_id(::google::protobuf::uint32 value) {
  set_has__user_id();
  _user_id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.ladder_opponent._user_id)
}

// required .client_baseserver.user_summary _summary = 2;
inline bool ladder_opponent::has__summary() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ladder_opponent::set_has__summary() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ladder_opponent::clear_has__summary() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ladder_opponent::clear__summary() {
  if (_summary_ != NULL) _summary_->::client_baseserver::user_summary::Clear();
  clear_has__summary();
}
inline const ::client_baseserver::user_summary& ladder_opponent::_summary() const {
  // @@protoc_insertion_point(field_get:client_baseserver.ladder_opponent._summary)
  return _summary_ != NULL ? *_summary_ : *default_instance_->_summary_;
}
inline ::client_baseserver::user_summary* ladder_opponent::mutable__summary() {
  set_has__summary();
  if (_summary_ == NULL) _summary_ = new ::client_baseserver::user_summary;
  // @@protoc_insertion_point(field_mutable:client_baseserver.ladder_opponent._summary)
  return _summary_;
}
inline ::client_baseserver::user_summary* ladder_opponent::release__summary() {
  clear_has__summary();
  ::client_baseserver::user_summary* temp = _summary_;
  _summary_ = NULL;
  return temp;
}
inline void ladder_opponent::set_allocated__summary(::client_baseserver::user_summary* _summary) {
  delete _summary_;
  _summary_ = _summary;
  if (_summary) {
    set_has__summary();
  } else {
    clear_has__summary();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.ladder_opponent._summary)
}

// required uint32 _rank = 3;
inline bool ladder_opponent::has__rank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ladder_opponent::set_has__rank() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ladder_opponent::clear_has__rank() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ladder_opponent::clear__rank() {
  _rank_ = 0u;
  clear_has__rank();
}
inline ::google::protobuf::uint32 ladder_opponent::_rank() const {
  // @@protoc_insertion_point(field_get:client_baseserver.ladder_opponent._rank)
  return _rank_;
}
inline void ladder_opponent::set__rank(::google::protobuf::uint32 value) {
  set_has__rank();
  _rank_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.ladder_opponent._rank)
}

// required uint32 _win_cnt = 4;
inline bool ladder_opponent::has__win_cnt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ladder_opponent::set_has__win_cnt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ladder_opponent::clear_has__win_cnt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ladder_opponent::clear__win_cnt() {
  _win_cnt_ = 0u;
  clear_has__win_cnt();
}
inline ::google::protobuf::uint32 ladder_opponent::_win_cnt() const {
  // @@protoc_insertion_point(field_get:client_baseserver.ladder_opponent._win_cnt)
  return _win_cnt_;
}
inline void ladder_opponent::set__win_cnt(::google::protobuf::uint32 value) {
  set_has__win_cnt();
  _win_cnt_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.ladder_opponent._win_cnt)
}

// required uint32 _gs = 5;
inline bool ladder_opponent::has__gs() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ladder_opponent::set_has__gs() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ladder_opponent::clear_has__gs() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ladder_opponent::clear__gs() {
  _gs_ = 0u;
  clear_has__gs();
}
inline ::google::protobuf::uint32 ladder_opponent::_gs() const {
  // @@protoc_insertion_point(field_get:client_baseserver.ladder_opponent._gs)
  return _gs_;
}
inline void ladder_opponent::set__gs(::google::protobuf::uint32 value) {
  set_has__gs();
  _gs_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.ladder_opponent._gs)
}

// required uint32 _is_robot = 6;
inline bool ladder_opponent::has__is_robot() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ladder_opponent::set_has__is_robot() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ladder_opponent::clear_has__is_robot() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ladder_opponent::clear__is_robot() {
  _is_robot_ = 0u;
  clear_has__is_robot();
}
inline ::google::protobuf::uint32 ladder_opponent::_is_robot() const {
  // @@protoc_insertion_point(field_get:client_baseserver.ladder_opponent._is_robot)
  return _is_robot_;
}
inline void ladder_opponent::set__is_robot(::google::protobuf::uint32 value) {
  set_has__is_robot();
  _is_robot_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.ladder_opponent._is_robot)
}

// repeated .client_baseserver.hero_summary _heros = 7;
inline int ladder_opponent::_heros_size() const {
  return _heros_.size();
}
inline void ladder_opponent::clear__heros() {
  _heros_.Clear();
}
inline const ::client_baseserver::hero_summary& ladder_opponent::_heros(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.ladder_opponent._heros)
  return _heros_.Get(index);
}
inline ::client_baseserver::hero_summary* ladder_opponent::mutable__heros(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.ladder_opponent._heros)
  return _heros_.Mutable(index);
}
inline ::client_baseserver::hero_summary* ladder_opponent::add__heros() {
  // @@protoc_insertion_point(field_add:client_baseserver.ladder_opponent._heros)
  return _heros_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero_summary >&
ladder_opponent::_heros() const {
  // @@protoc_insertion_point(field_list:client_baseserver.ladder_opponent._heros)
  return _heros_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero_summary >*
ladder_opponent::mutable__heros() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.ladder_opponent._heros)
  return &_heros_;
}

// -------------------------------------------------------------------

// ladder_rank_reward

// required .client_baseserver.ladder_rank_reward.reward_type _type = 1;
inline bool ladder_rank_reward::has__type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ladder_rank_reward::set_has__type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ladder_rank_reward::clear_has__type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ladder_rank_reward::clear__type() {
  _type_ = 1;
  clear_has__type();
}
inline ::client_baseserver::ladder_rank_reward_reward_type ladder_rank_reward::_type() const {
  // @@protoc_insertion_point(field_get:client_baseserver.ladder_rank_reward._type)
  return static_cast< ::client_baseserver::ladder_rank_reward_reward_type >(_type_);
}
inline void ladder_rank_reward::set__type(::client_baseserver::ladder_rank_reward_reward_type value) {
  assert(::client_baseserver::ladder_rank_reward_reward_type_IsValid(value));
  set_has__type();
  _type_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.ladder_rank_reward._type)
}

// optional uint32 _param1 = 2;
inline bool ladder_rank_reward::has__param1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ladder_rank_reward::set_has__param1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ladder_rank_reward::clear_has__param1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ladder_rank_reward::clear__param1() {
  _param1_ = 0u;
  clear_has__param1();
}
inline ::google::protobuf::uint32 ladder_rank_reward::_param1() const {
  // @@protoc_insertion_point(field_get:client_baseserver.ladder_rank_reward._param1)
  return _param1_;
}
inline void ladder_rank_reward::set__param1(::google::protobuf::uint32 value) {
  set_has__param1();
  _param1_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.ladder_rank_reward._param1)
}

// optional uint32 _param2 = 3;
inline bool ladder_rank_reward::has__param2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ladder_rank_reward::set_has__param2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ladder_rank_reward::clear_has__param2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ladder_rank_reward::clear__param2() {
  _param2_ = 0u;
  clear_has__param2();
}
inline ::google::protobuf::uint32 ladder_rank_reward::_param2() const {
  // @@protoc_insertion_point(field_get:client_baseserver.ladder_rank_reward._param2)
  return _param2_;
}
inline void ladder_rank_reward::set__param2(::google::protobuf::uint32 value) {
  set_has__param2();
  _param2_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.ladder_rank_reward._param2)
}

// -------------------------------------------------------------------

// draw_rank_reward

// repeated .client_baseserver.ladder_rank_reward _rewards = 1;
inline int draw_rank_reward::_rewards_size() const {
  return _rewards_.size();
}
inline void draw_rank_reward::clear__rewards() {
  _rewards_.Clear();
}
inline const ::client_baseserver::ladder_rank_reward& draw_rank_reward::_rewards(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.draw_rank_reward._rewards)
  return _rewards_.Get(index);
}
inline ::client_baseserver::ladder_rank_reward* draw_rank_reward::mutable__rewards(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.draw_rank_reward._rewards)
  return _rewards_.Mutable(index);
}
inline ::client_baseserver::ladder_rank_reward* draw_rank_reward::add__rewards() {
  // @@protoc_insertion_point(field_add:client_baseserver.draw_rank_reward._rewards)
  return _rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::ladder_rank_reward >&
draw_rank_reward::_rewards() const {
  // @@protoc_insertion_point(field_list:client_baseserver.draw_rank_reward._rewards)
  return _rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::ladder_rank_reward >*
draw_rank_reward::mutable__rewards() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.draw_rank_reward._rewards)
  return &_rewards_;
}

// -------------------------------------------------------------------

// buy_battle_chance

// required .client_baseserver.result _result = 1 [default = success];
inline bool buy_battle_chance::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void buy_battle_chance::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void buy_battle_chance::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void buy_battle_chance::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result buy_battle_chance::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.buy_battle_chance._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void buy_battle_chance::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.buy_battle_chance._result)
}

// optional uint32 _buy_times = 2;
inline bool buy_battle_chance::has__buy_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void buy_battle_chance::set_has__buy_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void buy_battle_chance::clear_has__buy_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void buy_battle_chance::clear__buy_times() {
  _buy_times_ = 0u;
  clear_has__buy_times();
}
inline ::google::protobuf::uint32 buy_battle_chance::_buy_times() const {
  // @@protoc_insertion_point(field_get:client_baseserver.buy_battle_chance._buy_times)
  return _buy_times_;
}
inline void buy_battle_chance::set__buy_times(::google::protobuf::uint32 value) {
  set_has__buy_times();
  _buy_times_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.buy_battle_chance._buy_times)
}

// -------------------------------------------------------------------

// set_name_reply

// required .client_baseserver.set_name_reply.set_name_result _result = 1 [default = success];
inline bool set_name_reply::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void set_name_reply::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void set_name_reply::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void set_name_reply::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::set_name_reply_set_name_result set_name_reply::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.set_name_reply._result)
  return static_cast< ::client_baseserver::set_name_reply_set_name_result >(_result_);
}
inline void set_name_reply::set__result(::client_baseserver::set_name_reply_set_name_result value) {
  assert(::client_baseserver::set_name_reply_set_name_result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.set_name_reply._result)
}

// -------------------------------------------------------------------

// set_avatar_reply

// required .client_baseserver.result _result = 1;
inline bool set_avatar_reply::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void set_avatar_reply::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void set_avatar_reply::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void set_avatar_reply::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result set_avatar_reply::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.set_avatar_reply._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void set_avatar_reply::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.set_avatar_reply._result)
}

// -------------------------------------------------------------------

// query_data_reply

// optional uint32 rmb = 1;
inline bool query_data_reply::has_rmb() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void query_data_reply::set_has_rmb() {
  _has_bits_[0] |= 0x00000001u;
}
inline void query_data_reply::clear_has_rmb() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void query_data_reply::clear_rmb() {
  rmb_ = 0u;
  clear_has_rmb();
}
inline ::google::protobuf::uint32 query_data_reply::rmb() const {
  // @@protoc_insertion_point(field_get:client_baseserver.query_data_reply.rmb)
  return rmb_;
}
inline void query_data_reply::set_rmb(::google::protobuf::uint32 value) {
  set_has_rmb();
  rmb_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.query_data_reply.rmb)
}

// optional uint32 charge_sum = 2;
inline bool query_data_reply::has_charge_sum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void query_data_reply::set_has_charge_sum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void query_data_reply::clear_has_charge_sum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void query_data_reply::clear_charge_sum() {
  charge_sum_ = 0u;
  clear_has_charge_sum();
}
inline ::google::protobuf::uint32 query_data_reply::charge_sum() const {
  // @@protoc_insertion_point(field_get:client_baseserver.query_data_reply.charge_sum)
  return charge_sum_;
}
inline void query_data_reply::set_charge_sum(::google::protobuf::uint32 value) {
  set_has_charge_sum();
  charge_sum_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.query_data_reply.charge_sum)
}

// repeated .client_baseserver.hero heroes = 3;
inline int query_data_reply::heroes_size() const {
  return heroes_.size();
}
inline void query_data_reply::clear_heroes() {
  heroes_.Clear();
}
inline const ::client_baseserver::hero& query_data_reply::heroes(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.query_data_reply.heroes)
  return heroes_.Get(index);
}
inline ::client_baseserver::hero* query_data_reply::mutable_heroes(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.query_data_reply.heroes)
  return heroes_.Mutable(index);
}
inline ::client_baseserver::hero* query_data_reply::add_heroes() {
  // @@protoc_insertion_point(field_add:client_baseserver.query_data_reply.heroes)
  return heroes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >&
query_data_reply::heroes() const {
  // @@protoc_insertion_point(field_list:client_baseserver.query_data_reply.heroes)
  return heroes_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >*
query_data_reply::mutable_heroes() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.query_data_reply.heroes)
  return &heroes_;
}

// repeated uint32 recharge_limit = 4;
inline int query_data_reply::recharge_limit_size() const {
  return recharge_limit_.size();
}
inline void query_data_reply::clear_recharge_limit() {
  recharge_limit_.Clear();
}
inline ::google::protobuf::uint32 query_data_reply::recharge_limit(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.query_data_reply.recharge_limit)
  return recharge_limit_.Get(index);
}
inline void query_data_reply::set_recharge_limit(int index, ::google::protobuf::uint32 value) {
  recharge_limit_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.query_data_reply.recharge_limit)
}
inline void query_data_reply::add_recharge_limit(::google::protobuf::uint32 value) {
  recharge_limit_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.query_data_reply.recharge_limit)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
query_data_reply::recharge_limit() const {
  // @@protoc_insertion_point(field_list:client_baseserver.query_data_reply.recharge_limit)
  return recharge_limit_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
query_data_reply::mutable_recharge_limit() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.query_data_reply.recharge_limit)
  return &recharge_limit_;
}

// repeated .client_baseserver.monthcard _month_card = 5;
inline int query_data_reply::_month_card_size() const {
  return _month_card_.size();
}
inline void query_data_reply::clear__month_card() {
  _month_card_.Clear();
}
inline const ::client_baseserver::monthcard& query_data_reply::_month_card(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.query_data_reply._month_card)
  return _month_card_.Get(index);
}
inline ::client_baseserver::monthcard* query_data_reply::mutable__month_card(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.query_data_reply._month_card)
  return _month_card_.Mutable(index);
}
inline ::client_baseserver::monthcard* query_data_reply::add__month_card() {
  // @@protoc_insertion_point(field_add:client_baseserver.query_data_reply._month_card)
  return _month_card_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::monthcard >&
query_data_reply::_month_card() const {
  // @@protoc_insertion_point(field_list:client_baseserver.query_data_reply._month_card)
  return _month_card_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::monthcard >*
query_data_reply::mutable__month_card() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.query_data_reply._month_card)
  return &_month_card_;
}

// -------------------------------------------------------------------

// midas_acquire

// required uint32 _type = 1;
inline bool midas_acquire::has__type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void midas_acquire::set_has__type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void midas_acquire::clear_has__type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void midas_acquire::clear__type() {
  _type_ = 0u;
  clear_has__type();
}
inline ::google::protobuf::uint32 midas_acquire::_type() const {
  // @@protoc_insertion_point(field_get:client_baseserver.midas_acquire._type)
  return _type_;
}
inline void midas_acquire::set__type(::google::protobuf::uint32 value) {
  set_has__type();
  _type_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.midas_acquire._type)
}

// required uint32 _money = 2;
inline bool midas_acquire::has__money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void midas_acquire::set_has__money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void midas_acquire::clear_has__money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void midas_acquire::clear__money() {
  _money_ = 0u;
  clear_has__money();
}
inline ::google::protobuf::uint32 midas_acquire::_money() const {
  // @@protoc_insertion_point(field_get:client_baseserver.midas_acquire._money)
  return _money_;
}
inline void midas_acquire::set__money(::google::protobuf::uint32 value) {
  set_has__money();
  _money_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.midas_acquire._money)
}

// -------------------------------------------------------------------

// midas_reply

// repeated .client_baseserver.midas_acquire _acquire = 1;
inline int midas_reply::_acquire_size() const {
  return _acquire_.size();
}
inline void midas_reply::clear__acquire() {
  _acquire_.Clear();
}
inline const ::client_baseserver::midas_acquire& midas_reply::_acquire(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.midas_reply._acquire)
  return _acquire_.Get(index);
}
inline ::client_baseserver::midas_acquire* midas_reply::mutable__acquire(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.midas_reply._acquire)
  return _acquire_.Mutable(index);
}
inline ::client_baseserver::midas_acquire* midas_reply::add__acquire() {
  // @@protoc_insertion_point(field_add:client_baseserver.midas_reply._acquire)
  return _acquire_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::midas_acquire >&
midas_reply::_acquire() const {
  // @@protoc_insertion_point(field_list:client_baseserver.midas_reply._acquire)
  return _acquire_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::midas_acquire >*
midas_reply::mutable__acquire() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.midas_reply._acquire)
  return &_acquire_;
}

// -------------------------------------------------------------------

// open_shop_reply

// required .client_baseserver.result _result = 1;
inline bool open_shop_reply::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void open_shop_reply::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void open_shop_reply::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void open_shop_reply::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result open_shop_reply::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.open_shop_reply._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void open_shop_reply::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.open_shop_reply._result)
}

// optional .client_baseserver.user_shop _shop = 2;
inline bool open_shop_reply::has__shop() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void open_shop_reply::set_has__shop() {
  _has_bits_[0] |= 0x00000002u;
}
inline void open_shop_reply::clear_has__shop() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void open_shop_reply::clear__shop() {
  if (_shop_ != NULL) _shop_->::client_baseserver::user_shop::Clear();
  clear_has__shop();
}
inline const ::client_baseserver::user_shop& open_shop_reply::_shop() const {
  // @@protoc_insertion_point(field_get:client_baseserver.open_shop_reply._shop)
  return _shop_ != NULL ? *_shop_ : *default_instance_->_shop_;
}
inline ::client_baseserver::user_shop* open_shop_reply::mutable__shop() {
  set_has__shop();
  if (_shop_ == NULL) _shop_ = new ::client_baseserver::user_shop;
  // @@protoc_insertion_point(field_mutable:client_baseserver.open_shop_reply._shop)
  return _shop_;
}
inline ::client_baseserver::user_shop* open_shop_reply::release__shop() {
  clear_has__shop();
  ::client_baseserver::user_shop* temp = _shop_;
  _shop_ = NULL;
  return temp;
}
inline void open_shop_reply::set_allocated__shop(::client_baseserver::user_shop* _shop) {
  delete _shop_;
  _shop_ = _shop;
  if (_shop) {
    set_has__shop();
  } else {
    clear_has__shop();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.open_shop_reply._shop)
}

// -------------------------------------------------------------------

// charge_reply

// required string _serial_id = 1;
inline bool charge_reply::has__serial_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void charge_reply::set_has__serial_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void charge_reply::clear_has__serial_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void charge_reply::clear__serial_id() {
  if (_serial_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _serial_id_->clear();
  }
  clear_has__serial_id();
}
inline const ::std::string& charge_reply::_serial_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.charge_reply._serial_id)
  return *_serial_id_;
}
inline void charge_reply::set__serial_id(const ::std::string& value) {
  set_has__serial_id();
  if (_serial_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _serial_id_ = new ::std::string;
  }
  _serial_id_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.charge_reply._serial_id)
}
inline void charge_reply::set__serial_id(const char* value) {
  set_has__serial_id();
  if (_serial_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _serial_id_ = new ::std::string;
  }
  _serial_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.charge_reply._serial_id)
}
inline void charge_reply::set__serial_id(const char* value, size_t size) {
  set_has__serial_id();
  if (_serial_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _serial_id_ = new ::std::string;
  }
  _serial_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.charge_reply._serial_id)
}
inline ::std::string* charge_reply::mutable__serial_id() {
  set_has__serial_id();
  if (_serial_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _serial_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.charge_reply._serial_id)
  return _serial_id_;
}
inline ::std::string* charge_reply::release__serial_id() {
  clear_has__serial_id();
  if (_serial_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = _serial_id_;
    _serial_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void charge_reply::set_allocated__serial_id(::std::string* _serial_id) {
  if (_serial_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete _serial_id_;
  }
  if (_serial_id) {
    set_has__serial_id();
    _serial_id_ = _serial_id;
  } else {
    clear_has__serial_id();
    _serial_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.charge_reply._serial_id)
}

// required uint32 _charge_id = 2;
inline bool charge_reply::has__charge_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void charge_reply::set_has__charge_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void charge_reply::clear_has__charge_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void charge_reply::clear__charge_id() {
  _charge_id_ = 0u;
  clear_has__charge_id();
}
inline ::google::protobuf::uint32 charge_reply::_charge_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.charge_reply._charge_id)
  return _charge_id_;
}
inline void charge_reply::set__charge_id(::google::protobuf::uint32 value) {
  set_has__charge_id();
  _charge_id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.charge_reply._charge_id)
}

// -------------------------------------------------------------------

// notify_msg

// optional .client_baseserver.ladder_notify _ladder_notify = 1;
inline bool notify_msg::has__ladder_notify() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void notify_msg::set_has__ladder_notify() {
  _has_bits_[0] |= 0x00000001u;
}
inline void notify_msg::clear_has__ladder_notify() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void notify_msg::clear__ladder_notify() {
  if (_ladder_notify_ != NULL) _ladder_notify_->::client_baseserver::ladder_notify::Clear();
  clear_has__ladder_notify();
}
inline const ::client_baseserver::ladder_notify& notify_msg::_ladder_notify() const {
  // @@protoc_insertion_point(field_get:client_baseserver.notify_msg._ladder_notify)
  return _ladder_notify_ != NULL ? *_ladder_notify_ : *default_instance_->_ladder_notify_;
}
inline ::client_baseserver::ladder_notify* notify_msg::mutable__ladder_notify() {
  set_has__ladder_notify();
  if (_ladder_notify_ == NULL) _ladder_notify_ = new ::client_baseserver::ladder_notify;
  // @@protoc_insertion_point(field_mutable:client_baseserver.notify_msg._ladder_notify)
  return _ladder_notify_;
}
inline ::client_baseserver::ladder_notify* notify_msg::release__ladder_notify() {
  clear_has__ladder_notify();
  ::client_baseserver::ladder_notify* temp = _ladder_notify_;
  _ladder_notify_ = NULL;
  return temp;
}
inline void notify_msg::set_allocated__ladder_notify(::client_baseserver::ladder_notify* _ladder_notify) {
  delete _ladder_notify_;
  _ladder_notify_ = _ladder_notify;
  if (_ladder_notify) {
    set_has__ladder_notify();
  } else {
    clear_has__ladder_notify();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.notify_msg._ladder_notify)
}

// optional uint32 _new_mail = 2;
inline bool notify_msg::has__new_mail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void notify_msg::set_has__new_mail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void notify_msg::clear_has__new_mail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void notify_msg::clear__new_mail() {
  _new_mail_ = 0u;
  clear_has__new_mail();
}
inline ::google::protobuf::uint32 notify_msg::_new_mail() const {
  // @@protoc_insertion_point(field_get:client_baseserver.notify_msg._new_mail)
  return _new_mail_;
}
inline void notify_msg::set__new_mail(::google::protobuf::uint32 value) {
  set_has__new_mail();
  _new_mail_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.notify_msg._new_mail)
}

// optional uint32 _guild_chat = 3;
inline bool notify_msg::has__guild_chat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void notify_msg::set_has__guild_chat() {
  _has_bits_[0] |= 0x00000004u;
}
inline void notify_msg::clear_has__guild_chat() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void notify_msg::clear__guild_chat() {
  _guild_chat_ = 0u;
  clear_has__guild_chat();
}
inline ::google::protobuf::uint32 notify_msg::_guild_chat() const {
  // @@protoc_insertion_point(field_get:client_baseserver.notify_msg._guild_chat)
  return _guild_chat_;
}
inline void notify_msg::set__guild_chat(::google::protobuf::uint32 value) {
  set_has__guild_chat();
  _guild_chat_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.notify_msg._guild_chat)
}

// optional uint32 _activity_notify = 4;
inline bool notify_msg::has__activity_notify() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void notify_msg::set_has__activity_notify() {
  _has_bits_[0] |= 0x00000008u;
}
inline void notify_msg::clear_has__activity_notify() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void notify_msg::clear__activity_notify() {
  _activity_notify_ = 0u;
  clear_has__activity_notify();
}
inline ::google::protobuf::uint32 notify_msg::_activity_notify() const {
  // @@protoc_insertion_point(field_get:client_baseserver.notify_msg._activity_notify)
  return _activity_notify_;
}
inline void notify_msg::set__activity_notify(::google::protobuf::uint32 value) {
  set_has__activity_notify();
  _activity_notify_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.notify_msg._activity_notify)
}

// optional uint32 _activity_reward = 5;
inline bool notify_msg::has__activity_reward() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void notify_msg::set_has__activity_reward() {
  _has_bits_[0] |= 0x00000010u;
}
inline void notify_msg::clear_has__activity_reward() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void notify_msg::clear__activity_reward() {
  _activity_reward_ = 0u;
  clear_has__activity_reward();
}
inline ::google::protobuf::uint32 notify_msg::_activity_reward() const {
  // @@protoc_insertion_point(field_get:client_baseserver.notify_msg._activity_reward)
  return _activity_reward_;
}
inline void notify_msg::set__activity_reward(::google::protobuf::uint32 value) {
  set_has__activity_reward();
  _activity_reward_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.notify_msg._activity_reward)
}

// repeated uint32 _release_heroes = 6;
inline int notify_msg::_release_heroes_size() const {
  return _release_heroes_.size();
}
inline void notify_msg::clear__release_heroes() {
  _release_heroes_.Clear();
}
inline ::google::protobuf::uint32 notify_msg::_release_heroes(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.notify_msg._release_heroes)
  return _release_heroes_.Get(index);
}
inline void notify_msg::set__release_heroes(int index, ::google::protobuf::uint32 value) {
  _release_heroes_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.notify_msg._release_heroes)
}
inline void notify_msg::add__release_heroes(::google::protobuf::uint32 value) {
  _release_heroes_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.notify_msg._release_heroes)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
notify_msg::_release_heroes() const {
  // @@protoc_insertion_point(field_list:client_baseserver.notify_msg._release_heroes)
  return _release_heroes_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
notify_msg::mutable__release_heroes() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.notify_msg._release_heroes)
  return &_release_heroes_;
}

// optional uint32 _excav_record = 7;
inline bool notify_msg::has__excav_record() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void notify_msg::set_has__excav_record() {
  _has_bits_[0] |= 0x00000040u;
}
inline void notify_msg::clear_has__excav_record() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void notify_msg::clear__excav_record() {
  _excav_record_ = 0u;
  clear_has__excav_record();
}
inline ::google::protobuf::uint32 notify_msg::_excav_record() const {
  // @@protoc_insertion_point(field_get:client_baseserver.notify_msg._excav_record)
  return _excav_record_;
}
inline void notify_msg::set__excav_record(::google::protobuf::uint32 value) {
  set_has__excav_record();
  _excav_record_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.notify_msg._excav_record)
}

// optional uint32 _guild_drop = 8;
inline bool notify_msg::has__guild_drop() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void notify_msg::set_has__guild_drop() {
  _has_bits_[0] |= 0x00000080u;
}
inline void notify_msg::clear_has__guild_drop() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void notify_msg::clear__guild_drop() {
  _guild_drop_ = 0u;
  clear_has__guild_drop();
}
inline ::google::protobuf::uint32 notify_msg::_guild_drop() const {
  // @@protoc_insertion_point(field_get:client_baseserver.notify_msg._guild_drop)
  return _guild_drop_;
}
inline void notify_msg::set__guild_drop(::google::protobuf::uint32 value) {
  set_has__guild_drop();
  _guild_drop_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.notify_msg._guild_drop)
}

// optional uint32 _personal_chat = 9;
inline bool notify_msg::has__personal_chat() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void notify_msg::set_has__personal_chat() {
  _has_bits_[0] |= 0x00000100u;
}
inline void notify_msg::clear_has__personal_chat() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void notify_msg::clear__personal_chat() {
  _personal_chat_ = 0u;
  clear_has__personal_chat();
}
inline ::google::protobuf::uint32 notify_msg::_personal_chat() const {
  // @@protoc_insertion_point(field_get:client_baseserver.notify_msg._personal_chat)
  return _personal_chat_;
}
inline void notify_msg::set__personal_chat(::google::protobuf::uint32 value) {
  set_has__personal_chat();
  _personal_chat_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.notify_msg._personal_chat)
}

// optional uint32 _splitable_heroes = 10;
inline bool notify_msg::has__splitable_heroes() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void notify_msg::set_has__splitable_heroes() {
  _has_bits_[0] |= 0x00000200u;
}
inline void notify_msg::clear_has__splitable_heroes() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void notify_msg::clear__splitable_heroes() {
  _splitable_heroes_ = 0u;
  clear_has__splitable_heroes();
}
inline ::google::protobuf::uint32 notify_msg::_splitable_heroes() const {
  // @@protoc_insertion_point(field_get:client_baseserver.notify_msg._splitable_heroes)
  return _splitable_heroes_;
}
inline void notify_msg::set__splitable_heroes(::google::protobuf::uint32 value) {
  set_has__splitable_heroes();
  _splitable_heroes_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.notify_msg._splitable_heroes)
}

// -------------------------------------------------------------------

// ladder_notify

// optional uint32 _is_attacked = 1;
inline bool ladder_notify::has__is_attacked() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ladder_notify::set_has__is_attacked() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ladder_notify::clear_has__is_attacked() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ladder_notify::clear__is_attacked() {
  _is_attacked_ = 0u;
  clear_has__is_attacked();
}
inline ::google::protobuf::uint32 ladder_notify::_is_attacked() const {
  // @@protoc_insertion_point(field_get:client_baseserver.ladder_notify._is_attacked)
  return _is_attacked_;
}
inline void ladder_notify::set__is_attacked(::google::protobuf::uint32 value) {
  set_has__is_attacked();
  _is_attacked_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.ladder_notify._is_attacked)
}

// -------------------------------------------------------------------

// tbc_reply

// optional .client_baseserver.tbc_open_panel _open_panel = 1;
inline bool tbc_reply::has__open_panel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tbc_reply::set_has__open_panel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tbc_reply::clear_has__open_panel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tbc_reply::clear__open_panel() {
  if (_open_panel_ != NULL) _open_panel_->::client_baseserver::tbc_open_panel::Clear();
  clear_has__open_panel();
}
inline const ::client_baseserver::tbc_open_panel& tbc_reply::_open_panel() const {
  // @@protoc_insertion_point(field_get:client_baseserver.tbc_reply._open_panel)
  return _open_panel_ != NULL ? *_open_panel_ : *default_instance_->_open_panel_;
}
inline ::client_baseserver::tbc_open_panel* tbc_reply::mutable__open_panel() {
  set_has__open_panel();
  if (_open_panel_ == NULL) _open_panel_ = new ::client_baseserver::tbc_open_panel;
  // @@protoc_insertion_point(field_mutable:client_baseserver.tbc_reply._open_panel)
  return _open_panel_;
}
inline ::client_baseserver::tbc_open_panel* tbc_reply::release__open_panel() {
  clear_has__open_panel();
  ::client_baseserver::tbc_open_panel* temp = _open_panel_;
  _open_panel_ = NULL;
  return temp;
}
inline void tbc_reply::set_allocated__open_panel(::client_baseserver::tbc_open_panel* _open_panel) {
  delete _open_panel_;
  _open_panel_ = _open_panel;
  if (_open_panel) {
    set_has__open_panel();
  } else {
    clear_has__open_panel();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.tbc_reply._open_panel)
}

// optional .client_baseserver.tbc_query_oppo _query_oppo = 2;
inline bool tbc_reply::has__query_oppo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void tbc_reply::set_has__query_oppo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void tbc_reply::clear_has__query_oppo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void tbc_reply::clear__query_oppo() {
  if (_query_oppo_ != NULL) _query_oppo_->::client_baseserver::tbc_query_oppo::Clear();
  clear_has__query_oppo();
}
inline const ::client_baseserver::tbc_query_oppo& tbc_reply::_query_oppo() const {
  // @@protoc_insertion_point(field_get:client_baseserver.tbc_reply._query_oppo)
  return _query_oppo_ != NULL ? *_query_oppo_ : *default_instance_->_query_oppo_;
}
inline ::client_baseserver::tbc_query_oppo* tbc_reply::mutable__query_oppo() {
  set_has__query_oppo();
  if (_query_oppo_ == NULL) _query_oppo_ = new ::client_baseserver::tbc_query_oppo;
  // @@protoc_insertion_point(field_mutable:client_baseserver.tbc_reply._query_oppo)
  return _query_oppo_;
}
inline ::client_baseserver::tbc_query_oppo* tbc_reply::release__query_oppo() {
  clear_has__query_oppo();
  ::client_baseserver::tbc_query_oppo* temp = _query_oppo_;
  _query_oppo_ = NULL;
  return temp;
}
inline void tbc_reply::set_allocated__query_oppo(::client_baseserver::tbc_query_oppo* _query_oppo) {
  delete _query_oppo_;
  _query_oppo_ = _query_oppo;
  if (_query_oppo) {
    set_has__query_oppo();
  } else {
    clear_has__query_oppo();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.tbc_reply._query_oppo)
}

// optional .client_baseserver.tbc_start_battle _start_bat = 3;
inline bool tbc_reply::has__start_bat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void tbc_reply::set_has__start_bat() {
  _has_bits_[0] |= 0x00000004u;
}
inline void tbc_reply::clear_has__start_bat() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void tbc_reply::clear__start_bat() {
  if (_start_bat_ != NULL) _start_bat_->::client_baseserver::tbc_start_battle::Clear();
  clear_has__start_bat();
}
inline const ::client_baseserver::tbc_start_battle& tbc_reply::_start_bat() const {
  // @@protoc_insertion_point(field_get:client_baseserver.tbc_reply._start_bat)
  return _start_bat_ != NULL ? *_start_bat_ : *default_instance_->_start_bat_;
}
inline ::client_baseserver::tbc_start_battle* tbc_reply::mutable__start_bat() {
  set_has__start_bat();
  if (_start_bat_ == NULL) _start_bat_ = new ::client_baseserver::tbc_start_battle;
  // @@protoc_insertion_point(field_mutable:client_baseserver.tbc_reply._start_bat)
  return _start_bat_;
}
inline ::client_baseserver::tbc_start_battle* tbc_reply::release__start_bat() {
  clear_has__start_bat();
  ::client_baseserver::tbc_start_battle* temp = _start_bat_;
  _start_bat_ = NULL;
  return temp;
}
inline void tbc_reply::set_allocated__start_bat(::client_baseserver::tbc_start_battle* _start_bat) {
  delete _start_bat_;
  _start_bat_ = _start_bat;
  if (_start_bat) {
    set_has__start_bat();
  } else {
    clear_has__start_bat();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.tbc_reply._start_bat)
}

// optional .client_baseserver.tbc_end_battle _end_bat = 4;
inline bool tbc_reply::has__end_bat() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void tbc_reply::set_has__end_bat() {
  _has_bits_[0] |= 0x00000008u;
}
inline void tbc_reply::clear_has__end_bat() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void tbc_reply::clear__end_bat() {
  if (_end_bat_ != NULL) _end_bat_->::client_baseserver::tbc_end_battle::Clear();
  clear_has__end_bat();
}
inline const ::client_baseserver::tbc_end_battle& tbc_reply::_end_bat() const {
  // @@protoc_insertion_point(field_get:client_baseserver.tbc_reply._end_bat)
  return _end_bat_ != NULL ? *_end_bat_ : *default_instance_->_end_bat_;
}
inline ::client_baseserver::tbc_end_battle* tbc_reply::mutable__end_bat() {
  set_has__end_bat();
  if (_end_bat_ == NULL) _end_bat_ = new ::client_baseserver::tbc_end_battle;
  // @@protoc_insertion_point(field_mutable:client_baseserver.tbc_reply._end_bat)
  return _end_bat_;
}
inline ::client_baseserver::tbc_end_battle* tbc_reply::release__end_bat() {
  clear_has__end_bat();
  ::client_baseserver::tbc_end_battle* temp = _end_bat_;
  _end_bat_ = NULL;
  return temp;
}
inline void tbc_reply::set_allocated__end_bat(::client_baseserver::tbc_end_battle* _end_bat) {
  delete _end_bat_;
  _end_bat_ = _end_bat;
  if (_end_bat) {
    set_has__end_bat();
  } else {
    clear_has__end_bat();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.tbc_reply._end_bat)
}

// optional .client_baseserver.tbc_reset _reset = 5;
inline bool tbc_reply::has__reset() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void tbc_reply::set_has__reset() {
  _has_bits_[0] |= 0x00000010u;
}
inline void tbc_reply::clear_has__reset() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void tbc_reply::clear__reset() {
  if (_reset_ != NULL) _reset_->::client_baseserver::tbc_reset::Clear();
  clear_has__reset();
}
inline const ::client_baseserver::tbc_reset& tbc_reply::_reset() const {
  // @@protoc_insertion_point(field_get:client_baseserver.tbc_reply._reset)
  return _reset_ != NULL ? *_reset_ : *default_instance_->_reset_;
}
inline ::client_baseserver::tbc_reset* tbc_reply::mutable__reset() {
  set_has__reset();
  if (_reset_ == NULL) _reset_ = new ::client_baseserver::tbc_reset;
  // @@protoc_insertion_point(field_mutable:client_baseserver.tbc_reply._reset)
  return _reset_;
}
inline ::client_baseserver::tbc_reset* tbc_reply::release__reset() {
  clear_has__reset();
  ::client_baseserver::tbc_reset* temp = _reset_;
  _reset_ = NULL;
  return temp;
}
inline void tbc_reply::set_allocated__reset(::client_baseserver::tbc_reset* _reset) {
  delete _reset_;
  _reset_ = _reset;
  if (_reset) {
    set_has__reset();
  } else {
    clear_has__reset();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.tbc_reply._reset)
}

// optional .client_baseserver.tbc_draw_reward _draw_reward = 6;
inline bool tbc_reply::has__draw_reward() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void tbc_reply::set_has__draw_reward() {
  _has_bits_[0] |= 0x00000020u;
}
inline void tbc_reply::clear_has__draw_reward() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void tbc_reply::clear__draw_reward() {
  if (_draw_reward_ != NULL) _draw_reward_->::client_baseserver::tbc_draw_reward::Clear();
  clear_has__draw_reward();
}
inline const ::client_baseserver::tbc_draw_reward& tbc_reply::_draw_reward() const {
  // @@protoc_insertion_point(field_get:client_baseserver.tbc_reply._draw_reward)
  return _draw_reward_ != NULL ? *_draw_reward_ : *default_instance_->_draw_reward_;
}
inline ::client_baseserver::tbc_draw_reward* tbc_reply::mutable__draw_reward() {
  set_has__draw_reward();
  if (_draw_reward_ == NULL) _draw_reward_ = new ::client_baseserver::tbc_draw_reward;
  // @@protoc_insertion_point(field_mutable:client_baseserver.tbc_reply._draw_reward)
  return _draw_reward_;
}
inline ::client_baseserver::tbc_draw_reward* tbc_reply::release__draw_reward() {
  clear_has__draw_reward();
  ::client_baseserver::tbc_draw_reward* temp = _draw_reward_;
  _draw_reward_ = NULL;
  return temp;
}
inline void tbc_reply::set_allocated__draw_reward(::client_baseserver::tbc_draw_reward* _draw_reward) {
  delete _draw_reward_;
  _draw_reward_ = _draw_reward;
  if (_draw_reward) {
    set_has__draw_reward();
  } else {
    clear_has__draw_reward();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.tbc_reply._draw_reward)
}

// -------------------------------------------------------------------

// tbc_self_hero

// required uint32 _tid = 1;
inline bool tbc_self_hero::has__tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tbc_self_hero::set_has__tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tbc_self_hero::clear_has__tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tbc_self_hero::clear__tid() {
  _tid_ = 0u;
  clear_has__tid();
}
inline ::google::protobuf::uint32 tbc_self_hero::_tid() const {
  // @@protoc_insertion_point(field_get:client_baseserver.tbc_self_hero._tid)
  return _tid_;
}
inline void tbc_self_hero::set__tid(::google::protobuf::uint32 value) {
  set_has__tid();
  _tid_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.tbc_self_hero._tid)
}

// required .client_baseserver.hero_dyna _dyna = 2;
inline bool tbc_self_hero::has__dyna() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void tbc_self_hero::set_has__dyna() {
  _has_bits_[0] |= 0x00000002u;
}
inline void tbc_self_hero::clear_has__dyna() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void tbc_self_hero::clear__dyna() {
  if (_dyna_ != NULL) _dyna_->::client_baseserver::hero_dyna::Clear();
  clear_has__dyna();
}
inline const ::client_baseserver::hero_dyna& tbc_self_hero::_dyna() const {
  // @@protoc_insertion_point(field_get:client_baseserver.tbc_self_hero._dyna)
  return _dyna_ != NULL ? *_dyna_ : *default_instance_->_dyna_;
}
inline ::client_baseserver::hero_dyna* tbc_self_hero::mutable__dyna() {
  set_has__dyna();
  if (_dyna_ == NULL) _dyna_ = new ::client_baseserver::hero_dyna;
  // @@protoc_insertion_point(field_mutable:client_baseserver.tbc_self_hero._dyna)
  return _dyna_;
}
inline ::client_baseserver::hero_dyna* tbc_self_hero::release__dyna() {
  clear_has__dyna();
  ::client_baseserver::hero_dyna* temp = _dyna_;
  _dyna_ = NULL;
  return temp;
}
inline void tbc_self_hero::set_allocated__dyna(::client_baseserver::hero_dyna* _dyna) {
  delete _dyna_;
  _dyna_ = _dyna;
  if (_dyna) {
    set_has__dyna();
  } else {
    clear_has__dyna();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.tbc_self_hero._dyna)
}

// -------------------------------------------------------------------

// tbc_oppo_hero

// required .client_baseserver.hero _base = 1;
inline bool tbc_oppo_hero::has__base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tbc_oppo_hero::set_has__base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tbc_oppo_hero::clear_has__base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tbc_oppo_hero::clear__base() {
  if (_base_ != NULL) _base_->::client_baseserver::hero::Clear();
  clear_has__base();
}
inline const ::client_baseserver::hero& tbc_oppo_hero::_base() const {
  // @@protoc_insertion_point(field_get:client_baseserver.tbc_oppo_hero._base)
  return _base_ != NULL ? *_base_ : *default_instance_->_base_;
}
inline ::client_baseserver::hero* tbc_oppo_hero::mutable__base() {
  set_has__base();
  if (_base_ == NULL) _base_ = new ::client_baseserver::hero;
  // @@protoc_insertion_point(field_mutable:client_baseserver.tbc_oppo_hero._base)
  return _base_;
}
inline ::client_baseserver::hero* tbc_oppo_hero::release__base() {
  clear_has__base();
  ::client_baseserver::hero* temp = _base_;
  _base_ = NULL;
  return temp;
}
inline void tbc_oppo_hero::set_allocated__base(::client_baseserver::hero* _base) {
  delete _base_;
  _base_ = _base;
  if (_base) {
    set_has__base();
  } else {
    clear_has__base();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.tbc_oppo_hero._base)
}

// required .client_baseserver.hero_dyna _dyna = 2;
inline bool tbc_oppo_hero::has__dyna() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void tbc_oppo_hero::set_has__dyna() {
  _has_bits_[0] |= 0x00000002u;
}
inline void tbc_oppo_hero::clear_has__dyna() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void tbc_oppo_hero::clear__dyna() {
  if (_dyna_ != NULL) _dyna_->::client_baseserver::hero_dyna::Clear();
  clear_has__dyna();
}
inline const ::client_baseserver::hero_dyna& tbc_oppo_hero::_dyna() const {
  // @@protoc_insertion_point(field_get:client_baseserver.tbc_oppo_hero._dyna)
  return _dyna_ != NULL ? *_dyna_ : *default_instance_->_dyna_;
}
inline ::client_baseserver::hero_dyna* tbc_oppo_hero::mutable__dyna() {
  set_has__dyna();
  if (_dyna_ == NULL) _dyna_ = new ::client_baseserver::hero_dyna;
  // @@protoc_insertion_point(field_mutable:client_baseserver.tbc_oppo_hero._dyna)
  return _dyna_;
}
inline ::client_baseserver::hero_dyna* tbc_oppo_hero::release__dyna() {
  clear_has__dyna();
  ::client_baseserver::hero_dyna* temp = _dyna_;
  _dyna_ = NULL;
  return temp;
}
inline void tbc_oppo_hero::set_allocated__dyna(::client_baseserver::hero_dyna* _dyna) {
  delete _dyna_;
  _dyna_ = _dyna;
  if (_dyna) {
    set_has__dyna();
  } else {
    clear_has__dyna();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.tbc_oppo_hero._dyna)
}

// -------------------------------------------------------------------

// tbc_reward

// required .client_baseserver.tbc_reward.type _type = 1;
inline bool tbc_reward::has__type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tbc_reward::set_has__type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tbc_reward::clear_has__type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tbc_reward::clear__type() {
  _type_ = 1;
  clear_has__type();
}
inline ::client_baseserver::tbc_reward_type tbc_reward::_type() const {
  // @@protoc_insertion_point(field_get:client_baseserver.tbc_reward._type)
  return static_cast< ::client_baseserver::tbc_reward_type >(_type_);
}
inline void tbc_reward::set__type(::client_baseserver::tbc_reward_type value) {
  assert(::client_baseserver::tbc_reward_type_IsValid(value));
  set_has__type();
  _type_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.tbc_reward._type)
}

// optional uint32 _param1 = 2;
inline bool tbc_reward::has__param1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void tbc_reward::set_has__param1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void tbc_reward::clear_has__param1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void tbc_reward::clear__param1() {
  _param1_ = 0u;
  clear_has__param1();
}
inline ::google::protobuf::uint32 tbc_reward::_param1() const {
  // @@protoc_insertion_point(field_get:client_baseserver.tbc_reward._param1)
  return _param1_;
}
inline void tbc_reward::set__param1(::google::protobuf::uint32 value) {
  set_has__param1();
  _param1_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.tbc_reward._param1)
}

// optional uint32 _param2 = 3;
inline bool tbc_reward::has__param2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void tbc_reward::set_has__param2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void tbc_reward::clear_has__param2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void tbc_reward::clear__param2() {
  _param2_ = 0u;
  clear_has__param2();
}
inline ::google::protobuf::uint32 tbc_reward::_param2() const {
  // @@protoc_insertion_point(field_get:client_baseserver.tbc_reward._param2)
  return _param2_;
}
inline void tbc_reward::set__param2(::google::protobuf::uint32 value) {
  set_has__param2();
  _param2_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.tbc_reward._param2)
}

// -------------------------------------------------------------------

// tbc_stage

// required .client_baseserver.tbc_stage.status _status = 1 [default = unpassed];
inline bool tbc_stage::has__status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tbc_stage::set_has__status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tbc_stage::clear_has__status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tbc_stage::clear__status() {
  _status_ = 0;
  clear_has__status();
}
inline ::client_baseserver::tbc_stage_status tbc_stage::_status() const {
  // @@protoc_insertion_point(field_get:client_baseserver.tbc_stage._status)
  return static_cast< ::client_baseserver::tbc_stage_status >(_status_);
}
inline void tbc_stage::set__status(::client_baseserver::tbc_stage_status value) {
  assert(::client_baseserver::tbc_stage_status_IsValid(value));
  set_has__status();
  _status_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.tbc_stage._status)
}

// repeated .client_baseserver.tbc_reward _rewards = 2;
inline int tbc_stage::_rewards_size() const {
  return _rewards_.size();
}
inline void tbc_stage::clear__rewards() {
  _rewards_.Clear();
}
inline const ::client_baseserver::tbc_reward& tbc_stage::_rewards(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.tbc_stage._rewards)
  return _rewards_.Get(index);
}
inline ::client_baseserver::tbc_reward* tbc_stage::mutable__rewards(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.tbc_stage._rewards)
  return _rewards_.Mutable(index);
}
inline ::client_baseserver::tbc_reward* tbc_stage::add__rewards() {
  // @@protoc_insertion_point(field_add:client_baseserver.tbc_stage._rewards)
  return _rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::tbc_reward >&
tbc_stage::_rewards() const {
  // @@protoc_insertion_point(field_list:client_baseserver.tbc_stage._rewards)
  return _rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::tbc_reward >*
tbc_stage::mutable__rewards() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.tbc_stage._rewards)
  return &_rewards_;
}

// -------------------------------------------------------------------

// tbc_info

// required uint32 _cur_stage = 1;
inline bool tbc_info::has__cur_stage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tbc_info::set_has__cur_stage() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tbc_info::clear_has__cur_stage() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tbc_info::clear__cur_stage() {
  _cur_stage_ = 0u;
  clear_has__cur_stage();
}
inline ::google::protobuf::uint32 tbc_info::_cur_stage() const {
  // @@protoc_insertion_point(field_get:client_baseserver.tbc_info._cur_stage)
  return _cur_stage_;
}
inline void tbc_info::set__cur_stage(::google::protobuf::uint32 value) {
  set_has__cur_stage();
  _cur_stage_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.tbc_info._cur_stage)
}

// required uint32 _reset_times = 2;
inline bool tbc_info::has__reset_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void tbc_info::set_has__reset_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void tbc_info::clear_has__reset_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void tbc_info::clear__reset_times() {
  _reset_times_ = 0u;
  clear_has__reset_times();
}
inline ::google::protobuf::uint32 tbc_info::_reset_times() const {
  // @@protoc_insertion_point(field_get:client_baseserver.tbc_info._reset_times)
  return _reset_times_;
}
inline void tbc_info::set__reset_times(::google::protobuf::uint32 value) {
  set_has__reset_times();
  _reset_times_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.tbc_info._reset_times)
}

// repeated .client_baseserver.tbc_self_hero _heroes = 3;
inline int tbc_info::_heroes_size() const {
  return _heroes_.size();
}
inline void tbc_info::clear__heroes() {
  _heroes_.Clear();
}
inline const ::client_baseserver::tbc_self_hero& tbc_info::_heroes(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.tbc_info._heroes)
  return _heroes_.Get(index);
}
inline ::client_baseserver::tbc_self_hero* tbc_info::mutable__heroes(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.tbc_info._heroes)
  return _heroes_.Mutable(index);
}
inline ::client_baseserver::tbc_self_hero* tbc_info::add__heroes() {
  // @@protoc_insertion_point(field_add:client_baseserver.tbc_info._heroes)
  return _heroes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::tbc_self_hero >&
tbc_info::_heroes() const {
  // @@protoc_insertion_point(field_list:client_baseserver.tbc_info._heroes)
  return _heroes_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::tbc_self_hero >*
tbc_info::mutable__heroes() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.tbc_info._heroes)
  return &_heroes_;
}

// repeated .client_baseserver.tbc_stage _stages = 4;
inline int tbc_info::_stages_size() const {
  return _stages_.size();
}
inline void tbc_info::clear__stages() {
  _stages_.Clear();
}
inline const ::client_baseserver::tbc_stage& tbc_info::_stages(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.tbc_info._stages)
  return _stages_.Get(index);
}
inline ::client_baseserver::tbc_stage* tbc_info::mutable__stages(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.tbc_info._stages)
  return _stages_.Mutable(index);
}
inline ::client_baseserver::tbc_stage* tbc_info::add__stages() {
  // @@protoc_insertion_point(field_add:client_baseserver.tbc_info._stages)
  return _stages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::tbc_stage >&
tbc_info::_stages() const {
  // @@protoc_insertion_point(field_list:client_baseserver.tbc_info._stages)
  return _stages_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::tbc_stage >*
tbc_info::mutable__stages() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.tbc_info._stages)
  return &_stages_;
}

// optional .client_baseserver.hire_data _hire_hero = 5;
inline bool tbc_info::has__hire_hero() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void tbc_info::set_has__hire_hero() {
  _has_bits_[0] |= 0x00000010u;
}
inline void tbc_info::clear_has__hire_hero() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void tbc_info::clear__hire_hero() {
  if (_hire_hero_ != NULL) _hire_hero_->::client_baseserver::hire_data::Clear();
  clear_has__hire_hero();
}
inline const ::client_baseserver::hire_data& tbc_info::_hire_hero() const {
  // @@protoc_insertion_point(field_get:client_baseserver.tbc_info._hire_hero)
  return _hire_hero_ != NULL ? *_hire_hero_ : *default_instance_->_hire_hero_;
}
inline ::client_baseserver::hire_data* tbc_info::mutable__hire_hero() {
  set_has__hire_hero();
  if (_hire_hero_ == NULL) _hire_hero_ = new ::client_baseserver::hire_data;
  // @@protoc_insertion_point(field_mutable:client_baseserver.tbc_info._hire_hero)
  return _hire_hero_;
}
inline ::client_baseserver::hire_data* tbc_info::release__hire_hero() {
  clear_has__hire_hero();
  ::client_baseserver::hire_data* temp = _hire_hero_;
  _hire_hero_ = NULL;
  return temp;
}
inline void tbc_info::set_allocated__hire_hero(::client_baseserver::hire_data* _hire_hero) {
  delete _hire_hero_;
  _hire_hero_ = _hire_hero;
  if (_hire_hero) {
    set_has__hire_hero();
  } else {
    clear_has__hire_hero();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.tbc_info._hire_hero)
}

// -------------------------------------------------------------------

// tbc_open_panel

// required .client_baseserver.tbc_info _info = 1;
inline bool tbc_open_panel::has__info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tbc_open_panel::set_has__info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tbc_open_panel::clear_has__info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tbc_open_panel::clear__info() {
  if (_info_ != NULL) _info_->::client_baseserver::tbc_info::Clear();
  clear_has__info();
}
inline const ::client_baseserver::tbc_info& tbc_open_panel::_info() const {
  // @@protoc_insertion_point(field_get:client_baseserver.tbc_open_panel._info)
  return _info_ != NULL ? *_info_ : *default_instance_->_info_;
}
inline ::client_baseserver::tbc_info* tbc_open_panel::mutable__info() {
  set_has__info();
  if (_info_ == NULL) _info_ = new ::client_baseserver::tbc_info;
  // @@protoc_insertion_point(field_mutable:client_baseserver.tbc_open_panel._info)
  return _info_;
}
inline ::client_baseserver::tbc_info* tbc_open_panel::release__info() {
  clear_has__info();
  ::client_baseserver::tbc_info* temp = _info_;
  _info_ = NULL;
  return temp;
}
inline void tbc_open_panel::set_allocated__info(::client_baseserver::tbc_info* _info) {
  delete _info_;
  _info_ = _info;
  if (_info) {
    set_has__info();
  } else {
    clear_has__info();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.tbc_open_panel._info)
}

// -------------------------------------------------------------------

// tbc_query_oppo

// required .client_baseserver.user_summary _summary = 1;
inline bool tbc_query_oppo::has__summary() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tbc_query_oppo::set_has__summary() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tbc_query_oppo::clear_has__summary() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tbc_query_oppo::clear__summary() {
  if (_summary_ != NULL) _summary_->::client_baseserver::user_summary::Clear();
  clear_has__summary();
}
inline const ::client_baseserver::user_summary& tbc_query_oppo::_summary() const {
  // @@protoc_insertion_point(field_get:client_baseserver.tbc_query_oppo._summary)
  return _summary_ != NULL ? *_summary_ : *default_instance_->_summary_;
}
inline ::client_baseserver::user_summary* tbc_query_oppo::mutable__summary() {
  set_has__summary();
  if (_summary_ == NULL) _summary_ = new ::client_baseserver::user_summary;
  // @@protoc_insertion_point(field_mutable:client_baseserver.tbc_query_oppo._summary)
  return _summary_;
}
inline ::client_baseserver::user_summary* tbc_query_oppo::release__summary() {
  clear_has__summary();
  ::client_baseserver::user_summary* temp = _summary_;
  _summary_ = NULL;
  return temp;
}
inline void tbc_query_oppo::set_allocated__summary(::client_baseserver::user_summary* _summary) {
  delete _summary_;
  _summary_ = _summary;
  if (_summary) {
    set_has__summary();
  } else {
    clear_has__summary();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.tbc_query_oppo._summary)
}

// repeated .client_baseserver.tbc_oppo_hero _oppos = 2;
inline int tbc_query_oppo::_oppos_size() const {
  return _oppos_.size();
}
inline void tbc_query_oppo::clear__oppos() {
  _oppos_.Clear();
}
inline const ::client_baseserver::tbc_oppo_hero& tbc_query_oppo::_oppos(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.tbc_query_oppo._oppos)
  return _oppos_.Get(index);
}
inline ::client_baseserver::tbc_oppo_hero* tbc_query_oppo::mutable__oppos(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.tbc_query_oppo._oppos)
  return _oppos_.Mutable(index);
}
inline ::client_baseserver::tbc_oppo_hero* tbc_query_oppo::add__oppos() {
  // @@protoc_insertion_point(field_add:client_baseserver.tbc_query_oppo._oppos)
  return _oppos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::tbc_oppo_hero >&
tbc_query_oppo::_oppos() const {
  // @@protoc_insertion_point(field_list:client_baseserver.tbc_query_oppo._oppos)
  return _oppos_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::tbc_oppo_hero >*
tbc_query_oppo::mutable__oppos() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.tbc_query_oppo._oppos)
  return &_oppos_;
}

// required uint32 _is_robot = 3;
inline bool tbc_query_oppo::has__is_robot() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void tbc_query_oppo::set_has__is_robot() {
  _has_bits_[0] |= 0x00000004u;
}
inline void tbc_query_oppo::clear_has__is_robot() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void tbc_query_oppo::clear__is_robot() {
  _is_robot_ = 0u;
  clear_has__is_robot();
}
inline ::google::protobuf::uint32 tbc_query_oppo::_is_robot() const {
  // @@protoc_insertion_point(field_get:client_baseserver.tbc_query_oppo._is_robot)
  return _is_robot_;
}
inline void tbc_query_oppo::set__is_robot(::google::protobuf::uint32 value) {
  set_has__is_robot();
  _is_robot_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.tbc_query_oppo._is_robot)
}

// -------------------------------------------------------------------

// tbc_start_battle

// required .client_baseserver.result _result = 1 [default = success];
inline bool tbc_start_battle::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tbc_start_battle::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tbc_start_battle::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tbc_start_battle::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result tbc_start_battle::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.tbc_start_battle._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void tbc_start_battle::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.tbc_start_battle._result)
}

// required uint32 _rseed = 2;
inline bool tbc_start_battle::has__rseed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void tbc_start_battle::set_has__rseed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void tbc_start_battle::clear_has__rseed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void tbc_start_battle::clear__rseed() {
  _rseed_ = 0u;
  clear_has__rseed();
}
inline ::google::protobuf::uint32 tbc_start_battle::_rseed() const {
  // @@protoc_insertion_point(field_get:client_baseserver.tbc_start_battle._rseed)
  return _rseed_;
}
inline void tbc_start_battle::set__rseed(::google::protobuf::uint32 value) {
  set_has__rseed();
  _rseed_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.tbc_start_battle._rseed)
}

// -------------------------------------------------------------------

// tbc_end_battle

// required .client_baseserver.battle_result _result = 1 [default = victory];
inline bool tbc_end_battle::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tbc_end_battle::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tbc_end_battle::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tbc_end_battle::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::battle_result tbc_end_battle::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.tbc_end_battle._result)
  return static_cast< ::client_baseserver::battle_result >(_result_);
}
inline void tbc_end_battle::set__result(::client_baseserver::battle_result value) {
  assert(::client_baseserver::battle_result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.tbc_end_battle._result)
}

// -------------------------------------------------------------------

// tbc_reset

// required .client_baseserver.result _result = 1 [default = success];
inline bool tbc_reset::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tbc_reset::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tbc_reset::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tbc_reset::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result tbc_reset::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.tbc_reset._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void tbc_reset::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.tbc_reset._result)
}

// optional .client_baseserver.tbc_info _info = 2;
inline bool tbc_reset::has__info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void tbc_reset::set_has__info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void tbc_reset::clear_has__info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void tbc_reset::clear__info() {
  if (_info_ != NULL) _info_->::client_baseserver::tbc_info::Clear();
  clear_has__info();
}
inline const ::client_baseserver::tbc_info& tbc_reset::_info() const {
  // @@protoc_insertion_point(field_get:client_baseserver.tbc_reset._info)
  return _info_ != NULL ? *_info_ : *default_instance_->_info_;
}
inline ::client_baseserver::tbc_info* tbc_reset::mutable__info() {
  set_has__info();
  if (_info_ == NULL) _info_ = new ::client_baseserver::tbc_info;
  // @@protoc_insertion_point(field_mutable:client_baseserver.tbc_reset._info)
  return _info_;
}
inline ::client_baseserver::tbc_info* tbc_reset::release__info() {
  clear_has__info();
  ::client_baseserver::tbc_info* temp = _info_;
  _info_ = NULL;
  return temp;
}
inline void tbc_reset::set_allocated__info(::client_baseserver::tbc_info* _info) {
  delete _info_;
  _info_ = _info;
  if (_info) {
    set_has__info();
  } else {
    clear_has__info();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.tbc_reset._info)
}

// -------------------------------------------------------------------

// tbc_draw_reward

// required .client_baseserver.result _result = 1 [default = success];
inline bool tbc_draw_reward::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tbc_draw_reward::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tbc_draw_reward::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tbc_draw_reward::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result tbc_draw_reward::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.tbc_draw_reward._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void tbc_draw_reward::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.tbc_draw_reward._result)
}

// required uint32 _stage_id = 2;
inline bool tbc_draw_reward::has__stage_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void tbc_draw_reward::set_has__stage_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void tbc_draw_reward::clear_has__stage_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void tbc_draw_reward::clear__stage_id() {
  _stage_id_ = 0u;
  clear_has__stage_id();
}
inline ::google::protobuf::uint32 tbc_draw_reward::_stage_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.tbc_draw_reward._stage_id)
  return _stage_id_;
}
inline void tbc_draw_reward::set__stage_id(::google::protobuf::uint32 value) {
  set_has__stage_id();
  _stage_id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.tbc_draw_reward._stage_id)
}

// repeated .client_baseserver.tbc_reward _rewards = 3;
inline int tbc_draw_reward::_rewards_size() const {
  return _rewards_.size();
}
inline void tbc_draw_reward::clear__rewards() {
  _rewards_.Clear();
}
inline const ::client_baseserver::tbc_reward& tbc_draw_reward::_rewards(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.tbc_draw_reward._rewards)
  return _rewards_.Get(index);
}
inline ::client_baseserver::tbc_reward* tbc_draw_reward::mutable__rewards(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.tbc_draw_reward._rewards)
  return _rewards_.Mutable(index);
}
inline ::client_baseserver::tbc_reward* tbc_draw_reward::add__rewards() {
  // @@protoc_insertion_point(field_add:client_baseserver.tbc_draw_reward._rewards)
  return _rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::tbc_reward >&
tbc_draw_reward::_rewards() const {
  // @@protoc_insertion_point(field_list:client_baseserver.tbc_draw_reward._rewards)
  return _rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::tbc_reward >*
tbc_draw_reward::mutable__rewards() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.tbc_draw_reward._rewards)
  return &_rewards_;
}

// repeated .client_baseserver.hero _heroes = 4;
inline int tbc_draw_reward::_heroes_size() const {
  return _heroes_.size();
}
inline void tbc_draw_reward::clear__heroes() {
  _heroes_.Clear();
}
inline const ::client_baseserver::hero& tbc_draw_reward::_heroes(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.tbc_draw_reward._heroes)
  return _heroes_.Get(index);
}
inline ::client_baseserver::hero* tbc_draw_reward::mutable__heroes(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.tbc_draw_reward._heroes)
  return _heroes_.Mutable(index);
}
inline ::client_baseserver::hero* tbc_draw_reward::add__heroes() {
  // @@protoc_insertion_point(field_add:client_baseserver.tbc_draw_reward._heroes)
  return _heroes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >&
tbc_draw_reward::_heroes() const {
  // @@protoc_insertion_point(field_list:client_baseserver.tbc_draw_reward._heroes)
  return _heroes_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >*
tbc_draw_reward::mutable__heroes() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.tbc_draw_reward._heroes)
  return &_heroes_;
}

// -------------------------------------------------------------------

// get_maillist_reply

// repeated .client_baseserver.sys_mail _sys_mail_list = 1;
inline int get_maillist_reply::_sys_mail_list_size() const {
  return _sys_mail_list_.size();
}
inline void get_maillist_reply::clear__sys_mail_list() {
  _sys_mail_list_.Clear();
}
inline const ::client_baseserver::sys_mail& get_maillist_reply::_sys_mail_list(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.get_maillist_reply._sys_mail_list)
  return _sys_mail_list_.Get(index);
}
inline ::client_baseserver::sys_mail* get_maillist_reply::mutable__sys_mail_list(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.get_maillist_reply._sys_mail_list)
  return _sys_mail_list_.Mutable(index);
}
inline ::client_baseserver::sys_mail* get_maillist_reply::add__sys_mail_list() {
  // @@protoc_insertion_point(field_add:client_baseserver.get_maillist_reply._sys_mail_list)
  return _sys_mail_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::sys_mail >&
get_maillist_reply::_sys_mail_list() const {
  // @@protoc_insertion_point(field_list:client_baseserver.get_maillist_reply._sys_mail_list)
  return _sys_mail_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::sys_mail >*
get_maillist_reply::mutable__sys_mail_list() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.get_maillist_reply._sys_mail_list)
  return &_sys_mail_list_;
}

// -------------------------------------------------------------------

// sys_mail

// required uint32 _id = 1;
inline bool sys_mail::has__id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void sys_mail::set_has__id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void sys_mail::clear_has__id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void sys_mail::clear__id() {
  _id_ = 0u;
  clear_has__id();
}
inline ::google::protobuf::uint32 sys_mail::_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.sys_mail._id)
  return _id_;
}
inline void sys_mail::set__id(::google::protobuf::uint32 value) {
  set_has__id();
  _id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.sys_mail._id)
}

// required .client_baseserver.sys_mail.status _status = 2;
inline bool sys_mail::has__status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void sys_mail::set_has__status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void sys_mail::clear_has__status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void sys_mail::clear__status() {
  _status_ = 0;
  clear_has__status();
}
inline ::client_baseserver::sys_mail_status sys_mail::_status() const {
  // @@protoc_insertion_point(field_get:client_baseserver.sys_mail._status)
  return static_cast< ::client_baseserver::sys_mail_status >(_status_);
}
inline void sys_mail::set__status(::client_baseserver::sys_mail_status value) {
  assert(::client_baseserver::sys_mail_status_IsValid(value));
  set_has__status();
  _status_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.sys_mail._status)
}

// required uint32 _mail_time = 3;
inline bool sys_mail::has__mail_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void sys_mail::set_has__mail_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void sys_mail::clear_has__mail_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void sys_mail::clear__mail_time() {
  _mail_time_ = 0u;
  clear_has__mail_time();
}
inline ::google::protobuf::uint32 sys_mail::_mail_time() const {
  // @@protoc_insertion_point(field_get:client_baseserver.sys_mail._mail_time)
  return _mail_time_;
}
inline void sys_mail::set__mail_time(::google::protobuf::uint32 value) {
  set_has__mail_time();
  _mail_time_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.sys_mail._mail_time)
}

// required uint32 _expire_time = 4;
inline bool sys_mail::has__expire_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void sys_mail::set_has__expire_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void sys_mail::clear_has__expire_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void sys_mail::clear__expire_time() {
  _expire_time_ = 0u;
  clear_has__expire_time();
}
inline ::google::protobuf::uint32 sys_mail::_expire_time() const {
  // @@protoc_insertion_point(field_get:client_baseserver.sys_mail._expire_time)
  return _expire_time_;
}
inline void sys_mail::set__expire_time(::google::protobuf::uint32 value) {
  set_has__expire_time();
  _expire_time_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.sys_mail._expire_time)
}

// required .client_baseserver.mail_content _content = 5;
inline bool sys_mail::has__content() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void sys_mail::set_has__content() {
  _has_bits_[0] |= 0x00000010u;
}
inline void sys_mail::clear_has__content() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void sys_mail::clear__content() {
  if (_content_ != NULL) _content_->::client_baseserver::mail_content::Clear();
  clear_has__content();
}
inline const ::client_baseserver::mail_content& sys_mail::_content() const {
  // @@protoc_insertion_point(field_get:client_baseserver.sys_mail._content)
  return _content_ != NULL ? *_content_ : *default_instance_->_content_;
}
inline ::client_baseserver::mail_content* sys_mail::mutable__content() {
  set_has__content();
  if (_content_ == NULL) _content_ = new ::client_baseserver::mail_content;
  // @@protoc_insertion_point(field_mutable:client_baseserver.sys_mail._content)
  return _content_;
}
inline ::client_baseserver::mail_content* sys_mail::release__content() {
  clear_has__content();
  ::client_baseserver::mail_content* temp = _content_;
  _content_ = NULL;
  return temp;
}
inline void sys_mail::set_allocated__content(::client_baseserver::mail_content* _content) {
  delete _content_;
  _content_ = _content;
  if (_content) {
    set_has__content();
  } else {
    clear_has__content();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.sys_mail._content)
}

// optional uint32 _money = 6;
inline bool sys_mail::has__money() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void sys_mail::set_has__money() {
  _has_bits_[0] |= 0x00000020u;
}
inline void sys_mail::clear_has__money() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void sys_mail::clear__money() {
  _money_ = 0u;
  clear_has__money();
}
inline ::google::protobuf::uint32 sys_mail::_money() const {
  // @@protoc_insertion_point(field_get:client_baseserver.sys_mail._money)
  return _money_;
}
inline void sys_mail::set__money(::google::protobuf::uint32 value) {
  set_has__money();
  _money_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.sys_mail._money)
}

// optional uint32 _diamonds = 7;
inline bool sys_mail::has__diamonds() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void sys_mail::set_has__diamonds() {
  _has_bits_[0] |= 0x00000040u;
}
inline void sys_mail::clear_has__diamonds() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void sys_mail::clear__diamonds() {
  _diamonds_ = 0u;
  clear_has__diamonds();
}
inline ::google::protobuf::uint32 sys_mail::_diamonds() const {
  // @@protoc_insertion_point(field_get:client_baseserver.sys_mail._diamonds)
  return _diamonds_;
}
inline void sys_mail::set__diamonds(::google::protobuf::uint32 value) {
  set_has__diamonds();
  _diamonds_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.sys_mail._diamonds)
}

// optional uint32 _skill_point = 8;
inline bool sys_mail::has__skill_point() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void sys_mail::set_has__skill_point() {
  _has_bits_[0] |= 0x00000080u;
}
inline void sys_mail::clear_has__skill_point() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void sys_mail::clear__skill_point() {
  _skill_point_ = 0u;
  clear_has__skill_point();
}
inline ::google::protobuf::uint32 sys_mail::_skill_point() const {
  // @@protoc_insertion_point(field_get:client_baseserver.sys_mail._skill_point)
  return _skill_point_;
}
inline void sys_mail::set__skill_point(::google::protobuf::uint32 value) {
  set_has__skill_point();
  _skill_point_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.sys_mail._skill_point)
}

// repeated uint32 _items = 9;
inline int sys_mail::_items_size() const {
  return _items_.size();
}
inline void sys_mail::clear__items() {
  _items_.Clear();
}
inline ::google::protobuf::uint32 sys_mail::_items(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.sys_mail._items)
  return _items_.Get(index);
}
inline void sys_mail::set__items(int index, ::google::protobuf::uint32 value) {
  _items_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.sys_mail._items)
}
inline void sys_mail::add__items(::google::protobuf::uint32 value) {
  _items_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.sys_mail._items)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
sys_mail::_items() const {
  // @@protoc_insertion_point(field_list:client_baseserver.sys_mail._items)
  return _items_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
sys_mail::mutable__items() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.sys_mail._items)
  return &_items_;
}

// required uint32 _type = 11;
inline bool sys_mail::has__type() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void sys_mail::set_has__type() {
  _has_bits_[0] |= 0x00000200u;
}
inline void sys_mail::clear_has__type() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void sys_mail::clear__type() {
  _type_ = 0u;
  clear_has__type();
}
inline ::google::protobuf::uint32 sys_mail::_type() const {
  // @@protoc_insertion_point(field_get:client_baseserver.sys_mail._type)
  return _type_;
}
inline void sys_mail::set__type(::google::protobuf::uint32 value) {
  set_has__type();
  _type_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.sys_mail._type)
}

// repeated .client_baseserver.user_point _points = 10;
inline int sys_mail::_points_size() const {
  return _points_.size();
}
inline void sys_mail::clear__points() {
  _points_.Clear();
}
inline const ::client_baseserver::user_point& sys_mail::_points(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.sys_mail._points)
  return _points_.Get(index);
}
inline ::client_baseserver::user_point* sys_mail::mutable__points(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.sys_mail._points)
  return _points_.Mutable(index);
}
inline ::client_baseserver::user_point* sys_mail::add__points() {
  // @@protoc_insertion_point(field_add:client_baseserver.sys_mail._points)
  return _points_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::user_point >&
sys_mail::_points() const {
  // @@protoc_insertion_point(field_list:client_baseserver.sys_mail._points)
  return _points_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::user_point >*
sys_mail::mutable__points() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.sys_mail._points)
  return &_points_;
}

// -------------------------------------------------------------------

// mail_content

// optional .client_baseserver.plain_mail _plain_mail = 1;
inline bool mail_content::has__plain_mail() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mail_content::set_has__plain_mail() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mail_content::clear_has__plain_mail() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mail_content::clear__plain_mail() {
  if (_plain_mail_ != NULL) _plain_mail_->::client_baseserver::plain_mail::Clear();
  clear_has__plain_mail();
}
inline const ::client_baseserver::plain_mail& mail_content::_plain_mail() const {
  // @@protoc_insertion_point(field_get:client_baseserver.mail_content._plain_mail)
  return _plain_mail_ != NULL ? *_plain_mail_ : *default_instance_->_plain_mail_;
}
inline ::client_baseserver::plain_mail* mail_content::mutable__plain_mail() {
  set_has__plain_mail();
  if (_plain_mail_ == NULL) _plain_mail_ = new ::client_baseserver::plain_mail;
  // @@protoc_insertion_point(field_mutable:client_baseserver.mail_content._plain_mail)
  return _plain_mail_;
}
inline ::client_baseserver::plain_mail* mail_content::release__plain_mail() {
  clear_has__plain_mail();
  ::client_baseserver::plain_mail* temp = _plain_mail_;
  _plain_mail_ = NULL;
  return temp;
}
inline void mail_content::set_allocated__plain_mail(::client_baseserver::plain_mail* _plain_mail) {
  delete _plain_mail_;
  _plain_mail_ = _plain_mail;
  if (_plain_mail) {
    set_has__plain_mail();
  } else {
    clear_has__plain_mail();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.mail_content._plain_mail)
}

// optional .client_baseserver.format_mail _format_mail = 2;
inline bool mail_content::has__format_mail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mail_content::set_has__format_mail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mail_content::clear_has__format_mail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mail_content::clear__format_mail() {
  if (_format_mail_ != NULL) _format_mail_->::client_baseserver::format_mail::Clear();
  clear_has__format_mail();
}
inline const ::client_baseserver::format_mail& mail_content::_format_mail() const {
  // @@protoc_insertion_point(field_get:client_baseserver.mail_content._format_mail)
  return _format_mail_ != NULL ? *_format_mail_ : *default_instance_->_format_mail_;
}
inline ::client_baseserver::format_mail* mail_content::mutable__format_mail() {
  set_has__format_mail();
  if (_format_mail_ == NULL) _format_mail_ = new ::client_baseserver::format_mail;
  // @@protoc_insertion_point(field_mutable:client_baseserver.mail_content._format_mail)
  return _format_mail_;
}
inline ::client_baseserver::format_mail* mail_content::release__format_mail() {
  clear_has__format_mail();
  ::client_baseserver::format_mail* temp = _format_mail_;
  _format_mail_ = NULL;
  return temp;
}
inline void mail_content::set_allocated__format_mail(::client_baseserver::format_mail* _format_mail) {
  delete _format_mail_;
  _format_mail_ = _format_mail;
  if (_format_mail) {
    set_has__format_mail();
  } else {
    clear_has__format_mail();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.mail_content._format_mail)
}

// -------------------------------------------------------------------

// plain_mail

// required string _from = 1;
inline bool plain_mail::has__from() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void plain_mail::set_has__from() {
  _has_bits_[0] |= 0x00000001u;
}
inline void plain_mail::clear_has__from() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void plain_mail::clear__from() {
  if (_from_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _from_->clear();
  }
  clear_has__from();
}
inline const ::std::string& plain_mail::_from() const {
  // @@protoc_insertion_point(field_get:client_baseserver.plain_mail._from)
  return *_from_;
}
inline void plain_mail::set__from(const ::std::string& value) {
  set_has__from();
  if (_from_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _from_ = new ::std::string;
  }
  _from_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.plain_mail._from)
}
inline void plain_mail::set__from(const char* value) {
  set_has__from();
  if (_from_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _from_ = new ::std::string;
  }
  _from_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.plain_mail._from)
}
inline void plain_mail::set__from(const char* value, size_t size) {
  set_has__from();
  if (_from_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _from_ = new ::std::string;
  }
  _from_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.plain_mail._from)
}
inline ::std::string* plain_mail::mutable__from() {
  set_has__from();
  if (_from_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _from_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.plain_mail._from)
  return _from_;
}
inline ::std::string* plain_mail::release__from() {
  clear_has__from();
  if (_from_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = _from_;
    _from_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void plain_mail::set_allocated__from(::std::string* _from) {
  if (_from_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete _from_;
  }
  if (_from) {
    set_has__from();
    _from_ = _from;
  } else {
    clear_has__from();
    _from_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.plain_mail._from)
}

// required string _title = 2;
inline bool plain_mail::has__title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void plain_mail::set_has__title() {
  _has_bits_[0] |= 0x00000002u;
}
inline void plain_mail::clear_has__title() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void plain_mail::clear__title() {
  if (_title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _title_->clear();
  }
  clear_has__title();
}
inline const ::std::string& plain_mail::_title() const {
  // @@protoc_insertion_point(field_get:client_baseserver.plain_mail._title)
  return *_title_;
}
inline void plain_mail::set__title(const ::std::string& value) {
  set_has__title();
  if (_title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _title_ = new ::std::string;
  }
  _title_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.plain_mail._title)
}
inline void plain_mail::set__title(const char* value) {
  set_has__title();
  if (_title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _title_ = new ::std::string;
  }
  _title_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.plain_mail._title)
}
inline void plain_mail::set__title(const char* value, size_t size) {
  set_has__title();
  if (_title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _title_ = new ::std::string;
  }
  _title_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.plain_mail._title)
}
inline ::std::string* plain_mail::mutable__title() {
  set_has__title();
  if (_title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _title_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.plain_mail._title)
  return _title_;
}
inline ::std::string* plain_mail::release__title() {
  clear_has__title();
  if (_title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = _title_;
    _title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void plain_mail::set_allocated__title(::std::string* _title) {
  if (_title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete _title_;
  }
  if (_title) {
    set_has__title();
    _title_ = _title;
  } else {
    clear_has__title();
    _title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.plain_mail._title)
}

// required string _content = 3;
inline bool plain_mail::has__content() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void plain_mail::set_has__content() {
  _has_bits_[0] |= 0x00000004u;
}
inline void plain_mail::clear_has__content() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void plain_mail::clear__content() {
  if (_content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _content_->clear();
  }
  clear_has__content();
}
inline const ::std::string& plain_mail::_content() const {
  // @@protoc_insertion_point(field_get:client_baseserver.plain_mail._content)
  return *_content_;
}
inline void plain_mail::set__content(const ::std::string& value) {
  set_has__content();
  if (_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _content_ = new ::std::string;
  }
  _content_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.plain_mail._content)
}
inline void plain_mail::set__content(const char* value) {
  set_has__content();
  if (_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _content_ = new ::std::string;
  }
  _content_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.plain_mail._content)
}
inline void plain_mail::set__content(const char* value, size_t size) {
  set_has__content();
  if (_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _content_ = new ::std::string;
  }
  _content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.plain_mail._content)
}
inline ::std::string* plain_mail::mutable__content() {
  set_has__content();
  if (_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.plain_mail._content)
  return _content_;
}
inline ::std::string* plain_mail::release__content() {
  clear_has__content();
  if (_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = _content_;
    _content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void plain_mail::set_allocated__content(::std::string* _content) {
  if (_content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete _content_;
  }
  if (_content) {
    set_has__content();
    _content_ = _content;
  } else {
    clear_has__content();
    _content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.plain_mail._content)
}

// -------------------------------------------------------------------

// format_mail

// required uint32 _mail_cfg_id = 1;
inline bool format_mail::has__mail_cfg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void format_mail::set_has__mail_cfg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void format_mail::clear_has__mail_cfg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void format_mail::clear__mail_cfg_id() {
  _mail_cfg_id_ = 0u;
  clear_has__mail_cfg_id();
}
inline ::google::protobuf::uint32 format_mail::_mail_cfg_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.format_mail._mail_cfg_id)
  return _mail_cfg_id_;
}
inline void format_mail::set__mail_cfg_id(::google::protobuf::uint32 value) {
  set_has__mail_cfg_id();
  _mail_cfg_id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.format_mail._mail_cfg_id)
}

// repeated .client_baseserver.mail_param _params = 2;
inline int format_mail::_params_size() const {
  return _params_.size();
}
inline void format_mail::clear__params() {
  _params_.Clear();
}
inline const ::client_baseserver::mail_param& format_mail::_params(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.format_mail._params)
  return _params_.Get(index);
}
inline ::client_baseserver::mail_param* format_mail::mutable__params(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.format_mail._params)
  return _params_.Mutable(index);
}
inline ::client_baseserver::mail_param* format_mail::add__params() {
  // @@protoc_insertion_point(field_add:client_baseserver.format_mail._params)
  return _params_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::mail_param >&
format_mail::_params() const {
  // @@protoc_insertion_point(field_list:client_baseserver.format_mail._params)
  return _params_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::mail_param >*
format_mail::mutable__params() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.format_mail._params)
  return &_params_;
}

// -------------------------------------------------------------------

// mail_param

// required uint32 _idx = 1;
inline bool mail_param::has__idx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mail_param::set_has__idx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mail_param::clear_has__idx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mail_param::clear__idx() {
  _idx_ = 0u;
  clear_has__idx();
}
inline ::google::protobuf::uint32 mail_param::_idx() const {
  // @@protoc_insertion_point(field_get:client_baseserver.mail_param._idx)
  return _idx_;
}
inline void mail_param::set__idx(::google::protobuf::uint32 value) {
  set_has__idx();
  _idx_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.mail_param._idx)
}

// optional .client_baseserver.mail_param.mail_param_type _type = 2;
inline bool mail_param::has__type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mail_param::set_has__type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mail_param::clear_has__type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mail_param::clear__type() {
  _type_ = 1;
  clear_has__type();
}
inline ::client_baseserver::mail_param_mail_param_type mail_param::_type() const {
  // @@protoc_insertion_point(field_get:client_baseserver.mail_param._type)
  return static_cast< ::client_baseserver::mail_param_mail_param_type >(_type_);
}
inline void mail_param::set__type(::client_baseserver::mail_param_mail_param_type value) {
  assert(::client_baseserver::mail_param_mail_param_type_IsValid(value));
  set_has__type();
  _type_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.mail_param._type)
}

// optional string _value = 3;
inline bool mail_param::has__value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mail_param::set_has__value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mail_param::clear_has__value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mail_param::clear__value() {
  if (_value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _value_->clear();
  }
  clear_has__value();
}
inline const ::std::string& mail_param::_value() const {
  // @@protoc_insertion_point(field_get:client_baseserver.mail_param._value)
  return *_value_;
}
inline void mail_param::set__value(const ::std::string& value) {
  set_has__value();
  if (_value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _value_ = new ::std::string;
  }
  _value_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.mail_param._value)
}
inline void mail_param::set__value(const char* value) {
  set_has__value();
  if (_value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _value_ = new ::std::string;
  }
  _value_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.mail_param._value)
}
inline void mail_param::set__value(const char* value, size_t size) {
  set_has__value();
  if (_value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _value_ = new ::std::string;
  }
  _value_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.mail_param._value)
}
inline ::std::string* mail_param::mutable__value() {
  set_has__value();
  if (_value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _value_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.mail_param._value)
  return _value_;
}
inline ::std::string* mail_param::release__value() {
  clear_has__value();
  if (_value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = _value_;
    _value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void mail_param::set_allocated__value(::std::string* _value) {
  if (_value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete _value_;
  }
  if (_value) {
    set_has__value();
    _value_ = _value;
  } else {
    clear_has__value();
    _value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.mail_param._value)
}

// -------------------------------------------------------------------

// user_point

// required .client_baseserver.user_point.user_point_type _type = 1 [default = arenapoint];
inline bool user_point::has__type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void user_point::set_has__type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void user_point::clear_has__type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void user_point::clear__type() {
  _type_ = 1;
  clear_has__type();
}
inline ::client_baseserver::user_point_user_point_type user_point::_type() const {
  // @@protoc_insertion_point(field_get:client_baseserver.user_point._type)
  return static_cast< ::client_baseserver::user_point_user_point_type >(_type_);
}
inline void user_point::set__type(::client_baseserver::user_point_user_point_type value) {
  assert(::client_baseserver::user_point_user_point_type_IsValid(value));
  set_has__type();
  _type_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.user_point._type)
}

// required uint32 _value = 2;
inline bool user_point::has__value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void user_point::set_has__value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void user_point::clear_has__value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void user_point::clear__value() {
  _value_ = 0u;
  clear_has__value();
}
inline ::google::protobuf::uint32 user_point::_value() const {
  // @@protoc_insertion_point(field_get:client_baseserver.user_point._value)
  return _value_;
}
inline void user_point::set__value(::google::protobuf::uint32 value) {
  set_has__value();
  _value_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.user_point._value)
}

// -------------------------------------------------------------------

// read_mail_reply

// required .client_baseserver.result _result = 1;
inline bool read_mail_reply::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void read_mail_reply::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void read_mail_reply::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void read_mail_reply::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result read_mail_reply::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.read_mail_reply._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void read_mail_reply::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.read_mail_reply._result)
}

// -------------------------------------------------------------------

// get_vip_gift_reply

// required .client_baseserver.result _result = 1;
inline bool get_vip_gift_reply::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void get_vip_gift_reply::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void get_vip_gift_reply::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void get_vip_gift_reply::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result get_vip_gift_reply::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.get_vip_gift_reply._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void get_vip_gift_reply::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.get_vip_gift_reply._result)
}

// -------------------------------------------------------------------

// chat_reply

// optional .client_baseserver.chat_say _say = 1;
inline bool chat_reply::has__say() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void chat_reply::set_has__say() {
  _has_bits_[0] |= 0x00000001u;
}
inline void chat_reply::clear_has__say() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void chat_reply::clear__say() {
  if (_say_ != NULL) _say_->::client_baseserver::chat_say::Clear();
  clear_has__say();
}
inline const ::client_baseserver::chat_say& chat_reply::_say() const {
  // @@protoc_insertion_point(field_get:client_baseserver.chat_reply._say)
  return _say_ != NULL ? *_say_ : *default_instance_->_say_;
}
inline ::client_baseserver::chat_say* chat_reply::mutable__say() {
  set_has__say();
  if (_say_ == NULL) _say_ = new ::client_baseserver::chat_say;
  // @@protoc_insertion_point(field_mutable:client_baseserver.chat_reply._say)
  return _say_;
}
inline ::client_baseserver::chat_say* chat_reply::release__say() {
  clear_has__say();
  ::client_baseserver::chat_say* temp = _say_;
  _say_ = NULL;
  return temp;
}
inline void chat_reply::set_allocated__say(::client_baseserver::chat_say* _say) {
  delete _say_;
  _say_ = _say;
  if (_say) {
    set_has__say();
  } else {
    clear_has__say();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.chat_reply._say)
}

// optional .client_baseserver.chat_fresh _fresh = 2;
inline bool chat_reply::has__fresh() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void chat_reply::set_has__fresh() {
  _has_bits_[0] |= 0x00000002u;
}
inline void chat_reply::clear_has__fresh() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void chat_reply::clear__fresh() {
  if (_fresh_ != NULL) _fresh_->::client_baseserver::chat_fresh::Clear();
  clear_has__fresh();
}
inline const ::client_baseserver::chat_fresh& chat_reply::_fresh() const {
  // @@protoc_insertion_point(field_get:client_baseserver.chat_reply._fresh)
  return _fresh_ != NULL ? *_fresh_ : *default_instance_->_fresh_;
}
inline ::client_baseserver::chat_fresh* chat_reply::mutable__fresh() {
  set_has__fresh();
  if (_fresh_ == NULL) _fresh_ = new ::client_baseserver::chat_fresh;
  // @@protoc_insertion_point(field_mutable:client_baseserver.chat_reply._fresh)
  return _fresh_;
}
inline ::client_baseserver::chat_fresh* chat_reply::release__fresh() {
  clear_has__fresh();
  ::client_baseserver::chat_fresh* temp = _fresh_;
  _fresh_ = NULL;
  return temp;
}
inline void chat_reply::set_allocated__fresh(::client_baseserver::chat_fresh* _fresh) {
  delete _fresh_;
  _fresh_ = _fresh;
  if (_fresh) {
    set_has__fresh();
  } else {
    clear_has__fresh();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.chat_reply._fresh)
}

// optional .client_baseserver.chat_fetch _fetch = 3;
inline bool chat_reply::has__fetch() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void chat_reply::set_has__fetch() {
  _has_bits_[0] |= 0x00000004u;
}
inline void chat_reply::clear_has__fetch() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void chat_reply::clear__fetch() {
  if (_fetch_ != NULL) _fetch_->::client_baseserver::chat_fetch::Clear();
  clear_has__fetch();
}
inline const ::client_baseserver::chat_fetch& chat_reply::_fetch() const {
  // @@protoc_insertion_point(field_get:client_baseserver.chat_reply._fetch)
  return _fetch_ != NULL ? *_fetch_ : *default_instance_->_fetch_;
}
inline ::client_baseserver::chat_fetch* chat_reply::mutable__fetch() {
  set_has__fetch();
  if (_fetch_ == NULL) _fetch_ = new ::client_baseserver::chat_fetch;
  // @@protoc_insertion_point(field_mutable:client_baseserver.chat_reply._fetch)
  return _fetch_;
}
inline ::client_baseserver::chat_fetch* chat_reply::release__fetch() {
  clear_has__fetch();
  ::client_baseserver::chat_fetch* temp = _fetch_;
  _fetch_ = NULL;
  return temp;
}
inline void chat_reply::set_allocated__fetch(::client_baseserver::chat_fetch* _fetch) {
  delete _fetch_;
  _fetch_ = _fetch;
  if (_fetch) {
    set_has__fetch();
  } else {
    clear_has__fetch();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.chat_reply._fetch)
}

// optional .client_baseserver.chat_add_bl _chat_add_bl = 4;
inline bool chat_reply::has__chat_add_bl() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void chat_reply::set_has__chat_add_bl() {
  _has_bits_[0] |= 0x00000008u;
}
inline void chat_reply::clear_has__chat_add_bl() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void chat_reply::clear__chat_add_bl() {
  if (_chat_add_bl_ != NULL) _chat_add_bl_->::client_baseserver::chat_add_bl::Clear();
  clear_has__chat_add_bl();
}
inline const ::client_baseserver::chat_add_bl& chat_reply::_chat_add_bl() const {
  // @@protoc_insertion_point(field_get:client_baseserver.chat_reply._chat_add_bl)
  return _chat_add_bl_ != NULL ? *_chat_add_bl_ : *default_instance_->_chat_add_bl_;
}
inline ::client_baseserver::chat_add_bl* chat_reply::mutable__chat_add_bl() {
  set_has__chat_add_bl();
  if (_chat_add_bl_ == NULL) _chat_add_bl_ = new ::client_baseserver::chat_add_bl;
  // @@protoc_insertion_point(field_mutable:client_baseserver.chat_reply._chat_add_bl)
  return _chat_add_bl_;
}
inline ::client_baseserver::chat_add_bl* chat_reply::release__chat_add_bl() {
  clear_has__chat_add_bl();
  ::client_baseserver::chat_add_bl* temp = _chat_add_bl_;
  _chat_add_bl_ = NULL;
  return temp;
}
inline void chat_reply::set_allocated__chat_add_bl(::client_baseserver::chat_add_bl* _chat_add_bl) {
  delete _chat_add_bl_;
  _chat_add_bl_ = _chat_add_bl;
  if (_chat_add_bl) {
    set_has__chat_add_bl();
  } else {
    clear_has__chat_add_bl();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.chat_reply._chat_add_bl)
}

// optional .client_baseserver.chat_del_bl _chat_del_bl = 5;
inline bool chat_reply::has__chat_del_bl() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void chat_reply::set_has__chat_del_bl() {
  _has_bits_[0] |= 0x00000010u;
}
inline void chat_reply::clear_has__chat_del_bl() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void chat_reply::clear__chat_del_bl() {
  if (_chat_del_bl_ != NULL) _chat_del_bl_->::client_baseserver::chat_del_bl::Clear();
  clear_has__chat_del_bl();
}
inline const ::client_baseserver::chat_del_bl& chat_reply::_chat_del_bl() const {
  // @@protoc_insertion_point(field_get:client_baseserver.chat_reply._chat_del_bl)
  return _chat_del_bl_ != NULL ? *_chat_del_bl_ : *default_instance_->_chat_del_bl_;
}
inline ::client_baseserver::chat_del_bl* chat_reply::mutable__chat_del_bl() {
  set_has__chat_del_bl();
  if (_chat_del_bl_ == NULL) _chat_del_bl_ = new ::client_baseserver::chat_del_bl;
  // @@protoc_insertion_point(field_mutable:client_baseserver.chat_reply._chat_del_bl)
  return _chat_del_bl_;
}
inline ::client_baseserver::chat_del_bl* chat_reply::release__chat_del_bl() {
  clear_has__chat_del_bl();
  ::client_baseserver::chat_del_bl* temp = _chat_del_bl_;
  _chat_del_bl_ = NULL;
  return temp;
}
inline void chat_reply::set_allocated__chat_del_bl(::client_baseserver::chat_del_bl* _chat_del_bl) {
  delete _chat_del_bl_;
  _chat_del_bl_ = _chat_del_bl;
  if (_chat_del_bl) {
    set_has__chat_del_bl();
  } else {
    clear_has__chat_del_bl();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.chat_reply._chat_del_bl)
}

// optional .client_baseserver.chat_blacklist _chat_blacklist = 6;
inline bool chat_reply::has__chat_blacklist() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void chat_reply::set_has__chat_blacklist() {
  _has_bits_[0] |= 0x00000020u;
}
inline void chat_reply::clear_has__chat_blacklist() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void chat_reply::clear__chat_blacklist() {
  if (_chat_blacklist_ != NULL) _chat_blacklist_->::client_baseserver::chat_blacklist::Clear();
  clear_has__chat_blacklist();
}
inline const ::client_baseserver::chat_blacklist& chat_reply::_chat_blacklist() const {
  // @@protoc_insertion_point(field_get:client_baseserver.chat_reply._chat_blacklist)
  return _chat_blacklist_ != NULL ? *_chat_blacklist_ : *default_instance_->_chat_blacklist_;
}
inline ::client_baseserver::chat_blacklist* chat_reply::mutable__chat_blacklist() {
  set_has__chat_blacklist();
  if (_chat_blacklist_ == NULL) _chat_blacklist_ = new ::client_baseserver::chat_blacklist;
  // @@protoc_insertion_point(field_mutable:client_baseserver.chat_reply._chat_blacklist)
  return _chat_blacklist_;
}
inline ::client_baseserver::chat_blacklist* chat_reply::release__chat_blacklist() {
  clear_has__chat_blacklist();
  ::client_baseserver::chat_blacklist* temp = _chat_blacklist_;
  _chat_blacklist_ = NULL;
  return temp;
}
inline void chat_reply::set_allocated__chat_blacklist(::client_baseserver::chat_blacklist* _chat_blacklist) {
  delete _chat_blacklist_;
  _chat_blacklist_ = _chat_blacklist;
  if (_chat_blacklist) {
    set_has__chat_blacklist();
  } else {
    clear_has__chat_blacklist();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.chat_reply._chat_blacklist)
}

// optional .client_baseserver.chat_broad_say _chat_borad_say = 7;
inline bool chat_reply::has__chat_borad_say() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void chat_reply::set_has__chat_borad_say() {
  _has_bits_[0] |= 0x00000040u;
}
inline void chat_reply::clear_has__chat_borad_say() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void chat_reply::clear__chat_borad_say() {
  if (_chat_borad_say_ != NULL) _chat_borad_say_->::client_baseserver::chat_broad_say::Clear();
  clear_has__chat_borad_say();
}
inline const ::client_baseserver::chat_broad_say& chat_reply::_chat_borad_say() const {
  // @@protoc_insertion_point(field_get:client_baseserver.chat_reply._chat_borad_say)
  return _chat_borad_say_ != NULL ? *_chat_borad_say_ : *default_instance_->_chat_borad_say_;
}
inline ::client_baseserver::chat_broad_say* chat_reply::mutable__chat_borad_say() {
  set_has__chat_borad_say();
  if (_chat_borad_say_ == NULL) _chat_borad_say_ = new ::client_baseserver::chat_broad_say;
  // @@protoc_insertion_point(field_mutable:client_baseserver.chat_reply._chat_borad_say)
  return _chat_borad_say_;
}
inline ::client_baseserver::chat_broad_say* chat_reply::release__chat_borad_say() {
  clear_has__chat_borad_say();
  ::client_baseserver::chat_broad_say* temp = _chat_borad_say_;
  _chat_borad_say_ = NULL;
  return temp;
}
inline void chat_reply::set_allocated__chat_borad_say(::client_baseserver::chat_broad_say* _chat_borad_say) {
  delete _chat_borad_say_;
  _chat_borad_say_ = _chat_borad_say;
  if (_chat_borad_say) {
    set_has__chat_borad_say();
  } else {
    clear_has__chat_borad_say();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.chat_reply._chat_borad_say)
}

// -------------------------------------------------------------------

// chat_blacklist_user

// optional uint32 _userid = 1;
inline bool chat_blacklist_user::has__userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void chat_blacklist_user::set_has__userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void chat_blacklist_user::clear_has__userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void chat_blacklist_user::clear__userid() {
  _userid_ = 0u;
  clear_has__userid();
}
inline ::google::protobuf::uint32 chat_blacklist_user::_userid() const {
  // @@protoc_insertion_point(field_get:client_baseserver.chat_blacklist_user._userid)
  return _userid_;
}
inline void chat_blacklist_user::set__userid(::google::protobuf::uint32 value) {
  set_has__userid();
  _userid_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.chat_blacklist_user._userid)
}

// optional .client_baseserver.user_summary _user_summary = 2;
inline bool chat_blacklist_user::has__user_summary() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void chat_blacklist_user::set_has__user_summary() {
  _has_bits_[0] |= 0x00000002u;
}
inline void chat_blacklist_user::clear_has__user_summary() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void chat_blacklist_user::clear__user_summary() {
  if (_user_summary_ != NULL) _user_summary_->::client_baseserver::user_summary::Clear();
  clear_has__user_summary();
}
inline const ::client_baseserver::user_summary& chat_blacklist_user::_user_summary() const {
  // @@protoc_insertion_point(field_get:client_baseserver.chat_blacklist_user._user_summary)
  return _user_summary_ != NULL ? *_user_summary_ : *default_instance_->_user_summary_;
}
inline ::client_baseserver::user_summary* chat_blacklist_user::mutable__user_summary() {
  set_has__user_summary();
  if (_user_summary_ == NULL) _user_summary_ = new ::client_baseserver::user_summary;
  // @@protoc_insertion_point(field_mutable:client_baseserver.chat_blacklist_user._user_summary)
  return _user_summary_;
}
inline ::client_baseserver::user_summary* chat_blacklist_user::release__user_summary() {
  clear_has__user_summary();
  ::client_baseserver::user_summary* temp = _user_summary_;
  _user_summary_ = NULL;
  return temp;
}
inline void chat_blacklist_user::set_allocated__user_summary(::client_baseserver::user_summary* _user_summary) {
  delete _user_summary_;
  _user_summary_ = _user_summary;
  if (_user_summary) {
    set_has__user_summary();
  } else {
    clear_has__user_summary();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.chat_blacklist_user._user_summary)
}

// -------------------------------------------------------------------

// chat_blacklist

// repeated .client_baseserver.chat_blacklist_user _chat_blacklist_user = 1;
inline int chat_blacklist::_chat_blacklist_user_size() const {
  return _chat_blacklist_user_.size();
}
inline void chat_blacklist::clear__chat_blacklist_user() {
  _chat_blacklist_user_.Clear();
}
inline const ::client_baseserver::chat_blacklist_user& chat_blacklist::_chat_blacklist_user(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.chat_blacklist._chat_blacklist_user)
  return _chat_blacklist_user_.Get(index);
}
inline ::client_baseserver::chat_blacklist_user* chat_blacklist::mutable__chat_blacklist_user(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.chat_blacklist._chat_blacklist_user)
  return _chat_blacklist_user_.Mutable(index);
}
inline ::client_baseserver::chat_blacklist_user* chat_blacklist::add__chat_blacklist_user() {
  // @@protoc_insertion_point(field_add:client_baseserver.chat_blacklist._chat_blacklist_user)
  return _chat_blacklist_user_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::chat_blacklist_user >&
chat_blacklist::_chat_blacklist_user() const {
  // @@protoc_insertion_point(field_list:client_baseserver.chat_blacklist._chat_blacklist_user)
  return _chat_blacklist_user_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::chat_blacklist_user >*
chat_blacklist::mutable__chat_blacklist_user() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.chat_blacklist._chat_blacklist_user)
  return &_chat_blacklist_user_;
}

// -------------------------------------------------------------------

// chat_broad_say

// optional .client_baseserver.result _result = 1;
inline bool chat_broad_say::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void chat_broad_say::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void chat_broad_say::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void chat_broad_say::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result chat_broad_say::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.chat_broad_say._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void chat_broad_say::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.chat_broad_say._result)
}

// optional .client_baseserver.chat_channel _channel = 2;
inline bool chat_broad_say::has__channel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void chat_broad_say::set_has__channel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void chat_broad_say::clear_has__channel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void chat_broad_say::clear__channel() {
  _channel_ = 1;
  clear_has__channel();
}
inline ::client_baseserver::chat_channel chat_broad_say::_channel() const {
  // @@protoc_insertion_point(field_get:client_baseserver.chat_broad_say._channel)
  return static_cast< ::client_baseserver::chat_channel >(_channel_);
}
inline void chat_broad_say::set__channel(::client_baseserver::chat_channel value) {
  assert(::client_baseserver::chat_channel_IsValid(value));
  set_has__channel();
  _channel_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.chat_broad_say._channel)
}

// repeated .client_baseserver.chat_content _contents = 3;
inline int chat_broad_say::_contents_size() const {
  return _contents_.size();
}
inline void chat_broad_say::clear__contents() {
  _contents_.Clear();
}
inline const ::client_baseserver::chat_content& chat_broad_say::_contents(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.chat_broad_say._contents)
  return _contents_.Get(index);
}
inline ::client_baseserver::chat_content* chat_broad_say::mutable__contents(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.chat_broad_say._contents)
  return _contents_.Mutable(index);
}
inline ::client_baseserver::chat_content* chat_broad_say::add__contents() {
  // @@protoc_insertion_point(field_add:client_baseserver.chat_broad_say._contents)
  return _contents_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::chat_content >&
chat_broad_say::_contents() const {
  // @@protoc_insertion_point(field_list:client_baseserver.chat_broad_say._contents)
  return _contents_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::chat_content >*
chat_broad_say::mutable__contents() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.chat_broad_say._contents)
  return &_contents_;
}

// -------------------------------------------------------------------

// chat_say

// required .client_baseserver.result _result = 1 [default = success];
inline bool chat_say::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void chat_say::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void chat_say::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void chat_say::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result chat_say::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.chat_say._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void chat_say::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.chat_say._result)
}

// required .client_baseserver.chat_channel _channel = 2 [default = world_channel];
inline bool chat_say::has__channel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void chat_say::set_has__channel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void chat_say::clear_has__channel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void chat_say::clear__channel() {
  _channel_ = 1;
  clear_has__channel();
}
inline ::client_baseserver::chat_channel chat_say::_channel() const {
  // @@protoc_insertion_point(field_get:client_baseserver.chat_say._channel)
  return static_cast< ::client_baseserver::chat_channel >(_channel_);
}
inline void chat_say::set__channel(::client_baseserver::chat_channel value) {
  assert(::client_baseserver::chat_channel_IsValid(value));
  set_has__channel();
  _channel_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.chat_say._channel)
}

// repeated .client_baseserver.chat_content _contents = 3;
inline int chat_say::_contents_size() const {
  return _contents_.size();
}
inline void chat_say::clear__contents() {
  _contents_.Clear();
}
inline const ::client_baseserver::chat_content& chat_say::_contents(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.chat_say._contents)
  return _contents_.Get(index);
}
inline ::client_baseserver::chat_content* chat_say::mutable__contents(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.chat_say._contents)
  return _contents_.Mutable(index);
}
inline ::client_baseserver::chat_content* chat_say::add__contents() {
  // @@protoc_insertion_point(field_add:client_baseserver.chat_say._contents)
  return _contents_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::chat_content >&
chat_say::_contents() const {
  // @@protoc_insertion_point(field_list:client_baseserver.chat_say._contents)
  return _contents_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::chat_content >*
chat_say::mutable__contents() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.chat_say._contents)
  return &_contents_;
}

// -------------------------------------------------------------------

// chat_fresh

// required .client_baseserver.chat_channel _channel = 1 [default = world_channel];
inline bool chat_fresh::has__channel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void chat_fresh::set_has__channel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void chat_fresh::clear_has__channel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void chat_fresh::clear__channel() {
  _channel_ = 1;
  clear_has__channel();
}
inline ::client_baseserver::chat_channel chat_fresh::_channel() const {
  // @@protoc_insertion_point(field_get:client_baseserver.chat_fresh._channel)
  return static_cast< ::client_baseserver::chat_channel >(_channel_);
}
inline void chat_fresh::set__channel(::client_baseserver::chat_channel value) {
  assert(::client_baseserver::chat_channel_IsValid(value));
  set_has__channel();
  _channel_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.chat_fresh._channel)
}

// repeated .client_baseserver.chat_content _contents = 2;
inline int chat_fresh::_contents_size() const {
  return _contents_.size();
}
inline void chat_fresh::clear__contents() {
  _contents_.Clear();
}
inline const ::client_baseserver::chat_content& chat_fresh::_contents(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.chat_fresh._contents)
  return _contents_.Get(index);
}
inline ::client_baseserver::chat_content* chat_fresh::mutable__contents(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.chat_fresh._contents)
  return _contents_.Mutable(index);
}
inline ::client_baseserver::chat_content* chat_fresh::add__contents() {
  // @@protoc_insertion_point(field_add:client_baseserver.chat_fresh._contents)
  return _contents_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::chat_content >&
chat_fresh::_contents() const {
  // @@protoc_insertion_point(field_list:client_baseserver.chat_fresh._contents)
  return _contents_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::chat_content >*
chat_fresh::mutable__contents() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.chat_fresh._contents)
  return &_contents_;
}

// -------------------------------------------------------------------

// chat_fetch

// required .client_baseserver.chat_channel _channel = 1 [default = world_channel];
inline bool chat_fetch::has__channel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void chat_fetch::set_has__channel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void chat_fetch::clear_has__channel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void chat_fetch::clear__channel() {
  _channel_ = 1;
  clear_has__channel();
}
inline ::client_baseserver::chat_channel chat_fetch::_channel() const {
  // @@protoc_insertion_point(field_get:client_baseserver.chat_fetch._channel)
  return static_cast< ::client_baseserver::chat_channel >(_channel_);
}
inline void chat_fetch::set__channel(::client_baseserver::chat_channel value) {
  assert(::client_baseserver::chat_channel_IsValid(value));
  set_has__channel();
  _channel_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.chat_fetch._channel)
}

// required uint32 _chat_id = 2;
inline bool chat_fetch::has__chat_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void chat_fetch::set_has__chat_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void chat_fetch::clear_has__chat_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void chat_fetch::clear__chat_id() {
  _chat_id_ = 0u;
  clear_has__chat_id();
}
inline ::google::protobuf::uint32 chat_fetch::_chat_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.chat_fetch._chat_id)
  return _chat_id_;
}
inline void chat_fetch::set__chat_id(::google::protobuf::uint32 value) {
  set_has__chat_id();
  _chat_id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.chat_fetch._chat_id)
}

// optional .client_baseserver.chat_acc _accessory = 3;
inline bool chat_fetch::has__accessory() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void chat_fetch::set_has__accessory() {
  _has_bits_[0] |= 0x00000004u;
}
inline void chat_fetch::clear_has__accessory() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void chat_fetch::clear__accessory() {
  if (_accessory_ != NULL) _accessory_->::client_baseserver::chat_acc::Clear();
  clear_has__accessory();
}
inline const ::client_baseserver::chat_acc& chat_fetch::_accessory() const {
  // @@protoc_insertion_point(field_get:client_baseserver.chat_fetch._accessory)
  return _accessory_ != NULL ? *_accessory_ : *default_instance_->_accessory_;
}
inline ::client_baseserver::chat_acc* chat_fetch::mutable__accessory() {
  set_has__accessory();
  if (_accessory_ == NULL) _accessory_ = new ::client_baseserver::chat_acc;
  // @@protoc_insertion_point(field_mutable:client_baseserver.chat_fetch._accessory)
  return _accessory_;
}
inline ::client_baseserver::chat_acc* chat_fetch::release__accessory() {
  clear_has__accessory();
  ::client_baseserver::chat_acc* temp = _accessory_;
  _accessory_ = NULL;
  return temp;
}
inline void chat_fetch::set_allocated__accessory(::client_baseserver::chat_acc* _accessory) {
  delete _accessory_;
  _accessory_ = _accessory;
  if (_accessory) {
    set_has__accessory();
  } else {
    clear_has__accessory();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.chat_fetch._accessory)
}

// -------------------------------------------------------------------

// chat_acc

// required .client_baseserver.chat_acc.chat_acc_t _type = 1 [default = binary];
inline bool chat_acc::has__type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void chat_acc::set_has__type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void chat_acc::clear_has__type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void chat_acc::clear__type() {
  _type_ = 1;
  clear_has__type();
}
inline ::client_baseserver::chat_acc_chat_acc_t chat_acc::_type() const {
  // @@protoc_insertion_point(field_get:client_baseserver.chat_acc._type)
  return static_cast< ::client_baseserver::chat_acc_chat_acc_t >(_type_);
}
inline void chat_acc::set__type(::client_baseserver::chat_acc_chat_acc_t value) {
  assert(::client_baseserver::chat_acc_chat_acc_t_IsValid(value));
  set_has__type();
  _type_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.chat_acc._type)
}

// optional string _binary = 2;
inline bool chat_acc::has__binary() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void chat_acc::set_has__binary() {
  _has_bits_[0] |= 0x00000002u;
}
inline void chat_acc::clear_has__binary() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void chat_acc::clear__binary() {
  if (_binary_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _binary_->clear();
  }
  clear_has__binary();
}
inline const ::std::string& chat_acc::_binary() const {
  // @@protoc_insertion_point(field_get:client_baseserver.chat_acc._binary)
  return *_binary_;
}
inline void chat_acc::set__binary(const ::std::string& value) {
  set_has__binary();
  if (_binary_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _binary_ = new ::std::string;
  }
  _binary_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.chat_acc._binary)
}
inline void chat_acc::set__binary(const char* value) {
  set_has__binary();
  if (_binary_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _binary_ = new ::std::string;
  }
  _binary_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.chat_acc._binary)
}
inline void chat_acc::set__binary(const char* value, size_t size) {
  set_has__binary();
  if (_binary_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _binary_ = new ::std::string;
  }
  _binary_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.chat_acc._binary)
}
inline ::std::string* chat_acc::mutable__binary() {
  set_has__binary();
  if (_binary_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _binary_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.chat_acc._binary)
  return _binary_;
}
inline ::std::string* chat_acc::release__binary() {
  clear_has__binary();
  if (_binary_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = _binary_;
    _binary_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void chat_acc::set_allocated__binary(::std::string* _binary) {
  if (_binary_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete _binary_;
  }
  if (_binary) {
    set_has__binary();
    _binary_ = _binary;
  } else {
    clear_has__binary();
    _binary_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.chat_acc._binary)
}

// optional .client_baseserver.pvp_record _replay = 3;
inline bool chat_acc::has__replay() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void chat_acc::set_has__replay() {
  _has_bits_[0] |= 0x00000004u;
}
inline void chat_acc::clear_has__replay() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void chat_acc::clear__replay() {
  if (_replay_ != NULL) _replay_->::client_baseserver::pvp_record::Clear();
  clear_has__replay();
}
inline const ::client_baseserver::pvp_record& chat_acc::_replay() const {
  // @@protoc_insertion_point(field_get:client_baseserver.chat_acc._replay)
  return _replay_ != NULL ? *_replay_ : *default_instance_->_replay_;
}
inline ::client_baseserver::pvp_record* chat_acc::mutable__replay() {
  set_has__replay();
  if (_replay_ == NULL) _replay_ = new ::client_baseserver::pvp_record;
  // @@protoc_insertion_point(field_mutable:client_baseserver.chat_acc._replay)
  return _replay_;
}
inline ::client_baseserver::pvp_record* chat_acc::release__replay() {
  clear_has__replay();
  ::client_baseserver::pvp_record* temp = _replay_;
  _replay_ = NULL;
  return temp;
}
inline void chat_acc::set_allocated__replay(::client_baseserver::pvp_record* _replay) {
  delete _replay_;
  _replay_ = _replay;
  if (_replay) {
    set_has__replay();
  } else {
    clear_has__replay();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.chat_acc._replay)
}

// -------------------------------------------------------------------

// chat_content

// required uint32 _chat_id = 1;
inline bool chat_content::has__chat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void chat_content::set_has__chat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void chat_content::clear_has__chat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void chat_content::clear__chat_id() {
  _chat_id_ = 0u;
  clear_has__chat_id();
}
inline ::google::protobuf::uint32 chat_content::_chat_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.chat_content._chat_id)
  return _chat_id_;
}
inline void chat_content::set__chat_id(::google::protobuf::uint32 value) {
  set_has__chat_id();
  _chat_id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.chat_content._chat_id)
}

// required uint32 _speaker_uid = 2;
inline bool chat_content::has__speaker_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void chat_content::set_has__speaker_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void chat_content::clear_has__speaker_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void chat_content::clear__speaker_uid() {
  _speaker_uid_ = 0u;
  clear_has__speaker_uid();
}
inline ::google::protobuf::uint32 chat_content::_speaker_uid() const {
  // @@protoc_insertion_point(field_get:client_baseserver.chat_content._speaker_uid)
  return _speaker_uid_;
}
inline void chat_content::set__speaker_uid(::google::protobuf::uint32 value) {
  set_has__speaker_uid();
  _speaker_uid_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.chat_content._speaker_uid)
}

// required .client_baseserver.user_summary _speaker_summary = 3;
inline bool chat_content::has__speaker_summary() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void chat_content::set_has__speaker_summary() {
  _has_bits_[0] |= 0x00000004u;
}
inline void chat_content::clear_has__speaker_summary() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void chat_content::clear__speaker_summary() {
  if (_speaker_summary_ != NULL) _speaker_summary_->::client_baseserver::user_summary::Clear();
  clear_has__speaker_summary();
}
inline const ::client_baseserver::user_summary& chat_content::_speaker_summary() const {
  // @@protoc_insertion_point(field_get:client_baseserver.chat_content._speaker_summary)
  return _speaker_summary_ != NULL ? *_speaker_summary_ : *default_instance_->_speaker_summary_;
}
inline ::client_baseserver::user_summary* chat_content::mutable__speaker_summary() {
  set_has__speaker_summary();
  if (_speaker_summary_ == NULL) _speaker_summary_ = new ::client_baseserver::user_summary;
  // @@protoc_insertion_point(field_mutable:client_baseserver.chat_content._speaker_summary)
  return _speaker_summary_;
}
inline ::client_baseserver::user_summary* chat_content::release__speaker_summary() {
  clear_has__speaker_summary();
  ::client_baseserver::user_summary* temp = _speaker_summary_;
  _speaker_summary_ = NULL;
  return temp;
}
inline void chat_content::set_allocated__speaker_summary(::client_baseserver::user_summary* _speaker_summary) {
  delete _speaker_summary_;
  _speaker_summary_ = _speaker_summary;
  if (_speaker_summary) {
    set_has__speaker_summary();
  } else {
    clear_has__speaker_summary();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.chat_content._speaker_summary)
}

// optional uint32 _target_uid = 4;
inline bool chat_content::has__target_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void chat_content::set_has__target_uid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void chat_content::clear_has__target_uid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void chat_content::clear__target_uid() {
  _target_uid_ = 0u;
  clear_has__target_uid();
}
inline ::google::protobuf::uint32 chat_content::_target_uid() const {
  // @@protoc_insertion_point(field_get:client_baseserver.chat_content._target_uid)
  return _target_uid_;
}
inline void chat_content::set__target_uid(::google::protobuf::uint32 value) {
  set_has__target_uid();
  _target_uid_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.chat_content._target_uid)
}

// optional .client_baseserver.user_summary _target_summary = 5;
inline bool chat_content::has__target_summary() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void chat_content::set_has__target_summary() {
  _has_bits_[0] |= 0x00000010u;
}
inline void chat_content::clear_has__target_summary() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void chat_content::clear__target_summary() {
  if (_target_summary_ != NULL) _target_summary_->::client_baseserver::user_summary::Clear();
  clear_has__target_summary();
}
inline const ::client_baseserver::user_summary& chat_content::_target_summary() const {
  // @@protoc_insertion_point(field_get:client_baseserver.chat_content._target_summary)
  return _target_summary_ != NULL ? *_target_summary_ : *default_instance_->_target_summary_;
}
inline ::client_baseserver::user_summary* chat_content::mutable__target_summary() {
  set_has__target_summary();
  if (_target_summary_ == NULL) _target_summary_ = new ::client_baseserver::user_summary;
  // @@protoc_insertion_point(field_mutable:client_baseserver.chat_content._target_summary)
  return _target_summary_;
}
inline ::client_baseserver::user_summary* chat_content::release__target_summary() {
  clear_has__target_summary();
  ::client_baseserver::user_summary* temp = _target_summary_;
  _target_summary_ = NULL;
  return temp;
}
inline void chat_content::set_allocated__target_summary(::client_baseserver::user_summary* _target_summary) {
  delete _target_summary_;
  _target_summary_ = _target_summary;
  if (_target_summary) {
    set_has__target_summary();
  } else {
    clear_has__target_summary();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.chat_content._target_summary)
}

// optional uint32 _speaker_post = 6;
inline bool chat_content::has__speaker_post() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void chat_content::set_has__speaker_post() {
  _has_bits_[0] |= 0x00000020u;
}
inline void chat_content::clear_has__speaker_post() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void chat_content::clear__speaker_post() {
  _speaker_post_ = 0u;
  clear_has__speaker_post();
}
inline ::google::protobuf::uint32 chat_content::_speaker_post() const {
  // @@protoc_insertion_point(field_get:client_baseserver.chat_content._speaker_post)
  return _speaker_post_;
}
inline void chat_content::set__speaker_post(::google::protobuf::uint32 value) {
  set_has__speaker_post();
  _speaker_post_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.chat_content._speaker_post)
}

// required uint32 _speak_time = 7;
inline bool chat_content::has__speak_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void chat_content::set_has__speak_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void chat_content::clear_has__speak_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void chat_content::clear__speak_time() {
  _speak_time_ = 0u;
  clear_has__speak_time();
}
inline ::google::protobuf::uint32 chat_content::_speak_time() const {
  // @@protoc_insertion_point(field_get:client_baseserver.chat_content._speak_time)
  return _speak_time_;
}
inline void chat_content::set__speak_time(::google::protobuf::uint32 value) {
  set_has__speak_time();
  _speak_time_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.chat_content._speak_time)
}

// required uint32 _content_type = 8;
inline bool chat_content::has__content_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void chat_content::set_has__content_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void chat_content::clear_has__content_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void chat_content::clear__content_type() {
  _content_type_ = 0u;
  clear_has__content_type();
}
inline ::google::protobuf::uint32 chat_content::_content_type() const {
  // @@protoc_insertion_point(field_get:client_baseserver.chat_content._content_type)
  return _content_type_;
}
inline void chat_content::set__content_type(::google::protobuf::uint32 value) {
  set_has__content_type();
  _content_type_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.chat_content._content_type)
}

// required string _content = 9;
inline bool chat_content::has__content() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void chat_content::set_has__content() {
  _has_bits_[0] |= 0x00000100u;
}
inline void chat_content::clear_has__content() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void chat_content::clear__content() {
  if (_content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _content_->clear();
  }
  clear_has__content();
}
inline const ::std::string& chat_content::_content() const {
  // @@protoc_insertion_point(field_get:client_baseserver.chat_content._content)
  return *_content_;
}
inline void chat_content::set__content(const ::std::string& value) {
  set_has__content();
  if (_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _content_ = new ::std::string;
  }
  _content_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.chat_content._content)
}
inline void chat_content::set__content(const char* value) {
  set_has__content();
  if (_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _content_ = new ::std::string;
  }
  _content_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.chat_content._content)
}
inline void chat_content::set__content(const char* value, size_t size) {
  set_has__content();
  if (_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _content_ = new ::std::string;
  }
  _content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.chat_content._content)
}
inline ::std::string* chat_content::mutable__content() {
  set_has__content();
  if (_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.chat_content._content)
  return _content_;
}
inline ::std::string* chat_content::release__content() {
  clear_has__content();
  if (_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = _content_;
    _content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void chat_content::set_allocated__content(::std::string* _content) {
  if (_content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete _content_;
  }
  if (_content) {
    set_has__content();
    _content_ = _content;
  } else {
    clear_has__content();
    _content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.chat_content._content)
}

// -------------------------------------------------------------------

// chat_add_bl

// required .client_baseserver.result _ret = 1;
inline bool chat_add_bl::has__ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void chat_add_bl::set_has__ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void chat_add_bl::clear_has__ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void chat_add_bl::clear__ret() {
  _ret_ = 0;
  clear_has__ret();
}
inline ::client_baseserver::result chat_add_bl::_ret() const {
  // @@protoc_insertion_point(field_get:client_baseserver.chat_add_bl._ret)
  return static_cast< ::client_baseserver::result >(_ret_);
}
inline void chat_add_bl::set__ret(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__ret();
  _ret_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.chat_add_bl._ret)
}

// -------------------------------------------------------------------

// chat_del_bl

// required .client_baseserver.result _ret = 1;
inline bool chat_del_bl::has__ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void chat_del_bl::set_has__ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void chat_del_bl::clear_has__ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void chat_del_bl::clear__ret() {
  _ret_ = 0;
  clear_has__ret();
}
inline ::client_baseserver::result chat_del_bl::_ret() const {
  // @@protoc_insertion_point(field_get:client_baseserver.chat_del_bl._ret)
  return static_cast< ::client_baseserver::result >(_ret_);
}
inline void chat_del_bl::set__ret(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__ret();
  _ret_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.chat_del_bl._ret)
}

// -------------------------------------------------------------------

// chat

// required uint32 _world_chat_times = 1;
inline bool chat::has__world_chat_times() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void chat::set_has__world_chat_times() {
  _has_bits_[0] |= 0x00000001u;
}
inline void chat::clear_has__world_chat_times() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void chat::clear__world_chat_times() {
  _world_chat_times_ = 0u;
  clear_has__world_chat_times();
}
inline ::google::protobuf::uint32 chat::_world_chat_times() const {
  // @@protoc_insertion_point(field_get:client_baseserver.chat._world_chat_times)
  return _world_chat_times_;
}
inline void chat::set__world_chat_times(::google::protobuf::uint32 value) {
  set_has__world_chat_times();
  _world_chat_times_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.chat._world_chat_times)
}

// required uint32 _last_reset_world_chat_time = 2;
inline bool chat::has__last_reset_world_chat_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void chat::set_has__last_reset_world_chat_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void chat::clear_has__last_reset_world_chat_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void chat::clear__last_reset_world_chat_time() {
  _last_reset_world_chat_time_ = 0u;
  clear_has__last_reset_world_chat_time();
}
inline ::google::protobuf::uint32 chat::_last_reset_world_chat_time() const {
  // @@protoc_insertion_point(field_get:client_baseserver.chat._last_reset_world_chat_time)
  return _last_reset_world_chat_time_;
}
inline void chat::set__last_reset_world_chat_time(::google::protobuf::uint32 value) {
  set_has__last_reset_world_chat_time();
  _last_reset_world_chat_time_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.chat._last_reset_world_chat_time)
}

// repeated uint32 _black_list = 3;
inline int chat::_black_list_size() const {
  return _black_list_.size();
}
inline void chat::clear__black_list() {
  _black_list_.Clear();
}
inline ::google::protobuf::uint32 chat::_black_list(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.chat._black_list)
  return _black_list_.Get(index);
}
inline void chat::set__black_list(int index, ::google::protobuf::uint32 value) {
  _black_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.chat._black_list)
}
inline void chat::add__black_list(::google::protobuf::uint32 value) {
  _black_list_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.chat._black_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
chat::_black_list() const {
  // @@protoc_insertion_point(field_list:client_baseserver.chat._black_list)
  return _black_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
chat::mutable__black_list() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.chat._black_list)
  return &_black_list_;
}

// -------------------------------------------------------------------

// user_guild

// required uint32 _id = 1;
inline bool user_guild::has__id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void user_guild::set_has__id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void user_guild::clear_has__id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void user_guild::clear__id() {
  _id_ = 0u;
  clear_has__id();
}
inline ::google::protobuf::uint32 user_guild::_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.user_guild._id)
  return _id_;
}
inline void user_guild::set__id(::google::protobuf::uint32 value) {
  set_has__id();
  _id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.user_guild._id)
}

// required string _name = 2;
inline bool user_guild::has__name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void user_guild::set_has__name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void user_guild::clear_has__name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void user_guild::clear__name() {
  if (_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _name_->clear();
  }
  clear_has__name();
}
inline const ::std::string& user_guild::_name() const {
  // @@protoc_insertion_point(field_get:client_baseserver.user_guild._name)
  return *_name_;
}
inline void user_guild::set__name(const ::std::string& value) {
  set_has__name();
  if (_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _name_ = new ::std::string;
  }
  _name_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.user_guild._name)
}
inline void user_guild::set__name(const char* value) {
  set_has__name();
  if (_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _name_ = new ::std::string;
  }
  _name_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.user_guild._name)
}
inline void user_guild::set__name(const char* value, size_t size) {
  set_has__name();
  if (_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _name_ = new ::std::string;
  }
  _name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.user_guild._name)
}
inline ::std::string* user_guild::mutable__name() {
  set_has__name();
  if (_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.user_guild._name)
  return _name_;
}
inline ::std::string* user_guild::release__name() {
  clear_has__name();
  if (_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = _name_;
    _name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void user_guild::set_allocated__name(::std::string* _name) {
  if (_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete _name_;
  }
  if (_name) {
    set_has__name();
    _name_ = _name;
  } else {
    clear_has__name();
    _name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.user_guild._name)
}

// optional .client_baseserver.guild_job_t _job = 3 [default = member];
inline bool user_guild::has__job() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void user_guild::set_has__job() {
  _has_bits_[0] |= 0x00000004u;
}
inline void user_guild::clear_has__job() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void user_guild::clear__job() {
  _job_ = 2;
  clear_has__job();
}
inline ::client_baseserver::guild_job_t user_guild::_job() const {
  // @@protoc_insertion_point(field_get:client_baseserver.user_guild._job)
  return static_cast< ::client_baseserver::guild_job_t >(_job_);
}
inline void user_guild::set__job(::client_baseserver::guild_job_t value) {
  assert(::client_baseserver::guild_job_t_IsValid(value));
  set_has__job();
  _job_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.user_guild._job)
}

// optional uint32 _req_guild_id = 4;
inline bool user_guild::has__req_guild_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void user_guild::set_has__req_guild_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void user_guild::clear_has__req_guild_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void user_guild::clear__req_guild_id() {
  _req_guild_id_ = 0u;
  clear_has__req_guild_id();
}
inline ::google::protobuf::uint32 user_guild::_req_guild_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.user_guild._req_guild_id)
  return _req_guild_id_;
}
inline void user_guild::set__req_guild_id(::google::protobuf::uint32 value) {
  set_has__req_guild_id();
  _req_guild_id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.user_guild._req_guild_id)
}

// repeated uint32 _hire_hero = 5;
inline int user_guild::_hire_hero_size() const {
  return _hire_hero_.size();
}
inline void user_guild::clear__hire_hero() {
  _hire_hero_.Clear();
}
inline ::google::protobuf::uint32 user_guild::_hire_hero(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.user_guild._hire_hero)
  return _hire_hero_.Get(index);
}
inline void user_guild::set__hire_hero(int index, ::google::protobuf::uint32 value) {
  _hire_hero_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.user_guild._hire_hero)
}
inline void user_guild::add__hire_hero(::google::protobuf::uint32 value) {
  _hire_hero_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.user_guild._hire_hero)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
user_guild::_hire_hero() const {
  // @@protoc_insertion_point(field_list:client_baseserver.user_guild._hire_hero)
  return _hire_hero_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
user_guild::mutable__hire_hero() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.user_guild._hire_hero)
  return &_hire_hero_;
}

// -------------------------------------------------------------------

// guild_reply

// optional .client_baseserver.guild_create _create = 1;
inline bool guild_reply::has__create() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_reply::set_has__create() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_reply::clear_has__create() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_reply::clear__create() {
  if (_create_ != NULL) _create_->::client_baseserver::guild_create::Clear();
  clear_has__create();
}
inline const ::client_baseserver::guild_create& guild_reply::_create() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_reply._create)
  return _create_ != NULL ? *_create_ : *default_instance_->_create_;
}
inline ::client_baseserver::guild_create* guild_reply::mutable__create() {
  set_has__create();
  if (_create_ == NULL) _create_ = new ::client_baseserver::guild_create;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_reply._create)
  return _create_;
}
inline ::client_baseserver::guild_create* guild_reply::release__create() {
  clear_has__create();
  ::client_baseserver::guild_create* temp = _create_;
  _create_ = NULL;
  return temp;
}
inline void guild_reply::set_allocated__create(::client_baseserver::guild_create* _create) {
  delete _create_;
  _create_ = _create;
  if (_create) {
    set_has__create();
  } else {
    clear_has__create();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_reply._create)
}

// optional .client_baseserver.guild_dismiss _dismiss = 2;
inline bool guild_reply::has__dismiss() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guild_reply::set_has__dismiss() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guild_reply::clear_has__dismiss() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guild_reply::clear__dismiss() {
  if (_dismiss_ != NULL) _dismiss_->::client_baseserver::guild_dismiss::Clear();
  clear_has__dismiss();
}
inline const ::client_baseserver::guild_dismiss& guild_reply::_dismiss() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_reply._dismiss)
  return _dismiss_ != NULL ? *_dismiss_ : *default_instance_->_dismiss_;
}
inline ::client_baseserver::guild_dismiss* guild_reply::mutable__dismiss() {
  set_has__dismiss();
  if (_dismiss_ == NULL) _dismiss_ = new ::client_baseserver::guild_dismiss;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_reply._dismiss)
  return _dismiss_;
}
inline ::client_baseserver::guild_dismiss* guild_reply::release__dismiss() {
  clear_has__dismiss();
  ::client_baseserver::guild_dismiss* temp = _dismiss_;
  _dismiss_ = NULL;
  return temp;
}
inline void guild_reply::set_allocated__dismiss(::client_baseserver::guild_dismiss* _dismiss) {
  delete _dismiss_;
  _dismiss_ = _dismiss;
  if (_dismiss) {
    set_has__dismiss();
  } else {
    clear_has__dismiss();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_reply._dismiss)
}

// optional .client_baseserver.guild_list _list = 3;
inline bool guild_reply::has__list() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void guild_reply::set_has__list() {
  _has_bits_[0] |= 0x00000004u;
}
inline void guild_reply::clear_has__list() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void guild_reply::clear__list() {
  if (_list_ != NULL) _list_->::client_baseserver::guild_list::Clear();
  clear_has__list();
}
inline const ::client_baseserver::guild_list& guild_reply::_list() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_reply._list)
  return _list_ != NULL ? *_list_ : *default_instance_->_list_;
}
inline ::client_baseserver::guild_list* guild_reply::mutable__list() {
  set_has__list();
  if (_list_ == NULL) _list_ = new ::client_baseserver::guild_list;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_reply._list)
  return _list_;
}
inline ::client_baseserver::guild_list* guild_reply::release__list() {
  clear_has__list();
  ::client_baseserver::guild_list* temp = _list_;
  _list_ = NULL;
  return temp;
}
inline void guild_reply::set_allocated__list(::client_baseserver::guild_list* _list) {
  delete _list_;
  _list_ = _list;
  if (_list) {
    set_has__list();
  } else {
    clear_has__list();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_reply._list)
}

// optional .client_baseserver.guild_search _search = 4;
inline bool guild_reply::has__search() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void guild_reply::set_has__search() {
  _has_bits_[0] |= 0x00000008u;
}
inline void guild_reply::clear_has__search() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void guild_reply::clear__search() {
  if (_search_ != NULL) _search_->::client_baseserver::guild_search::Clear();
  clear_has__search();
}
inline const ::client_baseserver::guild_search& guild_reply::_search() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_reply._search)
  return _search_ != NULL ? *_search_ : *default_instance_->_search_;
}
inline ::client_baseserver::guild_search* guild_reply::mutable__search() {
  set_has__search();
  if (_search_ == NULL) _search_ = new ::client_baseserver::guild_search;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_reply._search)
  return _search_;
}
inline ::client_baseserver::guild_search* guild_reply::release__search() {
  clear_has__search();
  ::client_baseserver::guild_search* temp = _search_;
  _search_ = NULL;
  return temp;
}
inline void guild_reply::set_allocated__search(::client_baseserver::guild_search* _search) {
  delete _search_;
  _search_ = _search;
  if (_search) {
    set_has__search();
  } else {
    clear_has__search();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_reply._search)
}

// optional .client_baseserver.guild_join _join = 5;
inline bool guild_reply::has__join() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void guild_reply::set_has__join() {
  _has_bits_[0] |= 0x00000010u;
}
inline void guild_reply::clear_has__join() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void guild_reply::clear__join() {
  if (_join_ != NULL) _join_->::client_baseserver::guild_join::Clear();
  clear_has__join();
}
inline const ::client_baseserver::guild_join& guild_reply::_join() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_reply._join)
  return _join_ != NULL ? *_join_ : *default_instance_->_join_;
}
inline ::client_baseserver::guild_join* guild_reply::mutable__join() {
  set_has__join();
  if (_join_ == NULL) _join_ = new ::client_baseserver::guild_join;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_reply._join)
  return _join_;
}
inline ::client_baseserver::guild_join* guild_reply::release__join() {
  clear_has__join();
  ::client_baseserver::guild_join* temp = _join_;
  _join_ = NULL;
  return temp;
}
inline void guild_reply::set_allocated__join(::client_baseserver::guild_join* _join) {
  delete _join_;
  _join_ = _join;
  if (_join) {
    set_has__join();
  } else {
    clear_has__join();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_reply._join)
}

// optional .client_baseserver.guild_join_confirm _join_confirm = 6;
inline bool guild_reply::has__join_confirm() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void guild_reply::set_has__join_confirm() {
  _has_bits_[0] |= 0x00000020u;
}
inline void guild_reply::clear_has__join_confirm() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void guild_reply::clear__join_confirm() {
  if (_join_confirm_ != NULL) _join_confirm_->::client_baseserver::guild_join_confirm::Clear();
  clear_has__join_confirm();
}
inline const ::client_baseserver::guild_join_confirm& guild_reply::_join_confirm() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_reply._join_confirm)
  return _join_confirm_ != NULL ? *_join_confirm_ : *default_instance_->_join_confirm_;
}
inline ::client_baseserver::guild_join_confirm* guild_reply::mutable__join_confirm() {
  set_has__join_confirm();
  if (_join_confirm_ == NULL) _join_confirm_ = new ::client_baseserver::guild_join_confirm;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_reply._join_confirm)
  return _join_confirm_;
}
inline ::client_baseserver::guild_join_confirm* guild_reply::release__join_confirm() {
  clear_has__join_confirm();
  ::client_baseserver::guild_join_confirm* temp = _join_confirm_;
  _join_confirm_ = NULL;
  return temp;
}
inline void guild_reply::set_allocated__join_confirm(::client_baseserver::guild_join_confirm* _join_confirm) {
  delete _join_confirm_;
  _join_confirm_ = _join_confirm;
  if (_join_confirm) {
    set_has__join_confirm();
  } else {
    clear_has__join_confirm();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_reply._join_confirm)
}

// optional .client_baseserver.guild_leave _leave = 7;
inline bool guild_reply::has__leave() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void guild_reply::set_has__leave() {
  _has_bits_[0] |= 0x00000040u;
}
inline void guild_reply::clear_has__leave() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void guild_reply::clear__leave() {
  if (_leave_ != NULL) _leave_->::client_baseserver::guild_leave::Clear();
  clear_has__leave();
}
inline const ::client_baseserver::guild_leave& guild_reply::_leave() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_reply._leave)
  return _leave_ != NULL ? *_leave_ : *default_instance_->_leave_;
}
inline ::client_baseserver::guild_leave* guild_reply::mutable__leave() {
  set_has__leave();
  if (_leave_ == NULL) _leave_ = new ::client_baseserver::guild_leave;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_reply._leave)
  return _leave_;
}
inline ::client_baseserver::guild_leave* guild_reply::release__leave() {
  clear_has__leave();
  ::client_baseserver::guild_leave* temp = _leave_;
  _leave_ = NULL;
  return temp;
}
inline void guild_reply::set_allocated__leave(::client_baseserver::guild_leave* _leave) {
  delete _leave_;
  _leave_ = _leave;
  if (_leave) {
    set_has__leave();
  } else {
    clear_has__leave();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_reply._leave)
}

// optional .client_baseserver.guild_kick _kick = 8;
inline bool guild_reply::has__kick() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void guild_reply::set_has__kick() {
  _has_bits_[0] |= 0x00000080u;
}
inline void guild_reply::clear_has__kick() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void guild_reply::clear__kick() {
  if (_kick_ != NULL) _kick_->::client_baseserver::guild_kick::Clear();
  clear_has__kick();
}
inline const ::client_baseserver::guild_kick& guild_reply::_kick() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_reply._kick)
  return _kick_ != NULL ? *_kick_ : *default_instance_->_kick_;
}
inline ::client_baseserver::guild_kick* guild_reply::mutable__kick() {
  set_has__kick();
  if (_kick_ == NULL) _kick_ = new ::client_baseserver::guild_kick;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_reply._kick)
  return _kick_;
}
inline ::client_baseserver::guild_kick* guild_reply::release__kick() {
  clear_has__kick();
  ::client_baseserver::guild_kick* temp = _kick_;
  _kick_ = NULL;
  return temp;
}
inline void guild_reply::set_allocated__kick(::client_baseserver::guild_kick* _kick) {
  delete _kick_;
  _kick_ = _kick;
  if (_kick) {
    set_has__kick();
  } else {
    clear_has__kick();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_reply._kick)
}

// optional .client_baseserver.guild_set _set = 9;
inline bool guild_reply::has__set() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void guild_reply::set_has__set() {
  _has_bits_[0] |= 0x00000100u;
}
inline void guild_reply::clear_has__set() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void guild_reply::clear__set() {
  if (_set_ != NULL) _set_->::client_baseserver::guild_set::Clear();
  clear_has__set();
}
inline const ::client_baseserver::guild_set& guild_reply::_set() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_reply._set)
  return _set_ != NULL ? *_set_ : *default_instance_->_set_;
}
inline ::client_baseserver::guild_set* guild_reply::mutable__set() {
  set_has__set();
  if (_set_ == NULL) _set_ = new ::client_baseserver::guild_set;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_reply._set)
  return _set_;
}
inline ::client_baseserver::guild_set* guild_reply::release__set() {
  clear_has__set();
  ::client_baseserver::guild_set* temp = _set_;
  _set_ = NULL;
  return temp;
}
inline void guild_reply::set_allocated__set(::client_baseserver::guild_set* _set) {
  delete _set_;
  _set_ = _set;
  if (_set) {
    set_has__set();
  } else {
    clear_has__set();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_reply._set)
}

// optional .client_baseserver.guild_query _query = 10;
inline bool guild_reply::has__query() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void guild_reply::set_has__query() {
  _has_bits_[0] |= 0x00000200u;
}
inline void guild_reply::clear_has__query() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void guild_reply::clear__query() {
  if (_query_ != NULL) _query_->::client_baseserver::guild_query::Clear();
  clear_has__query();
}
inline const ::client_baseserver::guild_query& guild_reply::_query() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_reply._query)
  return _query_ != NULL ? *_query_ : *default_instance_->_query_;
}
inline ::client_baseserver::guild_query* guild_reply::mutable__query() {
  set_has__query();
  if (_query_ == NULL) _query_ = new ::client_baseserver::guild_query;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_reply._query)
  return _query_;
}
inline ::client_baseserver::guild_query* guild_reply::release__query() {
  clear_has__query();
  ::client_baseserver::guild_query* temp = _query_;
  _query_ = NULL;
  return temp;
}
inline void guild_reply::set_allocated__query(::client_baseserver::guild_query* _query) {
  delete _query_;
  _query_ = _query;
  if (_query) {
    set_has__query();
  } else {
    clear_has__query();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_reply._query)
}

// optional .client_baseserver.guild_set_job _set_job = 11;
inline bool guild_reply::has__set_job() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void guild_reply::set_has__set_job() {
  _has_bits_[0] |= 0x00000400u;
}
inline void guild_reply::clear_has__set_job() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void guild_reply::clear__set_job() {
  if (_set_job_ != NULL) _set_job_->::client_baseserver::guild_set_job::Clear();
  clear_has__set_job();
}
inline const ::client_baseserver::guild_set_job& guild_reply::_set_job() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_reply._set_job)
  return _set_job_ != NULL ? *_set_job_ : *default_instance_->_set_job_;
}
inline ::client_baseserver::guild_set_job* guild_reply::mutable__set_job() {
  set_has__set_job();
  if (_set_job_ == NULL) _set_job_ = new ::client_baseserver::guild_set_job;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_reply._set_job)
  return _set_job_;
}
inline ::client_baseserver::guild_set_job* guild_reply::release__set_job() {
  clear_has__set_job();
  ::client_baseserver::guild_set_job* temp = _set_job_;
  _set_job_ = NULL;
  return temp;
}
inline void guild_reply::set_allocated__set_job(::client_baseserver::guild_set_job* _set_job) {
  delete _set_job_;
  _set_job_ = _set_job;
  if (_set_job) {
    set_has__set_job();
  } else {
    clear_has__set_job();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_reply._set_job)
}

// optional .client_baseserver.guild_add_hire _add_hire = 12;
inline bool guild_reply::has__add_hire() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void guild_reply::set_has__add_hire() {
  _has_bits_[0] |= 0x00000800u;
}
inline void guild_reply::clear_has__add_hire() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void guild_reply::clear__add_hire() {
  if (_add_hire_ != NULL) _add_hire_->::client_baseserver::guild_add_hire::Clear();
  clear_has__add_hire();
}
inline const ::client_baseserver::guild_add_hire& guild_reply::_add_hire() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_reply._add_hire)
  return _add_hire_ != NULL ? *_add_hire_ : *default_instance_->_add_hire_;
}
inline ::client_baseserver::guild_add_hire* guild_reply::mutable__add_hire() {
  set_has__add_hire();
  if (_add_hire_ == NULL) _add_hire_ = new ::client_baseserver::guild_add_hire;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_reply._add_hire)
  return _add_hire_;
}
inline ::client_baseserver::guild_add_hire* guild_reply::release__add_hire() {
  clear_has__add_hire();
  ::client_baseserver::guild_add_hire* temp = _add_hire_;
  _add_hire_ = NULL;
  return temp;
}
inline void guild_reply::set_allocated__add_hire(::client_baseserver::guild_add_hire* _add_hire) {
  delete _add_hire_;
  _add_hire_ = _add_hire;
  if (_add_hire) {
    set_has__add_hire();
  } else {
    clear_has__add_hire();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_reply._add_hire)
}

// optional .client_baseserver.guild_del_hire _del_hire = 13;
inline bool guild_reply::has__del_hire() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void guild_reply::set_has__del_hire() {
  _has_bits_[0] |= 0x00001000u;
}
inline void guild_reply::clear_has__del_hire() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void guild_reply::clear__del_hire() {
  if (_del_hire_ != NULL) _del_hire_->::client_baseserver::guild_del_hire::Clear();
  clear_has__del_hire();
}
inline const ::client_baseserver::guild_del_hire& guild_reply::_del_hire() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_reply._del_hire)
  return _del_hire_ != NULL ? *_del_hire_ : *default_instance_->_del_hire_;
}
inline ::client_baseserver::guild_del_hire* guild_reply::mutable__del_hire() {
  set_has__del_hire();
  if (_del_hire_ == NULL) _del_hire_ = new ::client_baseserver::guild_del_hire;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_reply._del_hire)
  return _del_hire_;
}
inline ::client_baseserver::guild_del_hire* guild_reply::release__del_hire() {
  clear_has__del_hire();
  ::client_baseserver::guild_del_hire* temp = _del_hire_;
  _del_hire_ = NULL;
  return temp;
}
inline void guild_reply::set_allocated__del_hire(::client_baseserver::guild_del_hire* _del_hire) {
  delete _del_hire_;
  _del_hire_ = _del_hire;
  if (_del_hire) {
    set_has__del_hire();
  } else {
    clear_has__del_hire();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_reply._del_hire)
}

// optional .client_baseserver.guild_query_hires _query_hires = 14;
inline bool guild_reply::has__query_hires() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void guild_reply::set_has__query_hires() {
  _has_bits_[0] |= 0x00002000u;
}
inline void guild_reply::clear_has__query_hires() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void guild_reply::clear__query_hires() {
  if (_query_hires_ != NULL) _query_hires_->::client_baseserver::guild_query_hires::Clear();
  clear_has__query_hires();
}
inline const ::client_baseserver::guild_query_hires& guild_reply::_query_hires() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_reply._query_hires)
  return _query_hires_ != NULL ? *_query_hires_ : *default_instance_->_query_hires_;
}
inline ::client_baseserver::guild_query_hires* guild_reply::mutable__query_hires() {
  set_has__query_hires();
  if (_query_hires_ == NULL) _query_hires_ = new ::client_baseserver::guild_query_hires;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_reply._query_hires)
  return _query_hires_;
}
inline ::client_baseserver::guild_query_hires* guild_reply::release__query_hires() {
  clear_has__query_hires();
  ::client_baseserver::guild_query_hires* temp = _query_hires_;
  _query_hires_ = NULL;
  return temp;
}
inline void guild_reply::set_allocated__query_hires(::client_baseserver::guild_query_hires* _query_hires) {
  delete _query_hires_;
  _query_hires_ = _query_hires;
  if (_query_hires) {
    set_has__query_hires();
  } else {
    clear_has__query_hires();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_reply._query_hires)
}

// optional .client_baseserver.guild_hire_hero _hire_hero = 15;
inline bool guild_reply::has__hire_hero() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void guild_reply::set_has__hire_hero() {
  _has_bits_[0] |= 0x00004000u;
}
inline void guild_reply::clear_has__hire_hero() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void guild_reply::clear__hire_hero() {
  if (_hire_hero_ != NULL) _hire_hero_->::client_baseserver::guild_hire_hero::Clear();
  clear_has__hire_hero();
}
inline const ::client_baseserver::guild_hire_hero& guild_reply::_hire_hero() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_reply._hire_hero)
  return _hire_hero_ != NULL ? *_hire_hero_ : *default_instance_->_hire_hero_;
}
inline ::client_baseserver::guild_hire_hero* guild_reply::mutable__hire_hero() {
  set_has__hire_hero();
  if (_hire_hero_ == NULL) _hire_hero_ = new ::client_baseserver::guild_hire_hero;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_reply._hire_hero)
  return _hire_hero_;
}
inline ::client_baseserver::guild_hire_hero* guild_reply::release__hire_hero() {
  clear_has__hire_hero();
  ::client_baseserver::guild_hire_hero* temp = _hire_hero_;
  _hire_hero_ = NULL;
  return temp;
}
inline void guild_reply::set_allocated__hire_hero(::client_baseserver::guild_hire_hero* _hire_hero) {
  delete _hire_hero_;
  _hire_hero_ = _hire_hero;
  if (_hire_hero) {
    set_has__hire_hero();
  } else {
    clear_has__hire_hero();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_reply._hire_hero)
}

// optional .client_baseserver.guild_worship_req _worship_req = 16;
inline bool guild_reply::has__worship_req() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void guild_reply::set_has__worship_req() {
  _has_bits_[0] |= 0x00008000u;
}
inline void guild_reply::clear_has__worship_req() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void guild_reply::clear__worship_req() {
  if (_worship_req_ != NULL) _worship_req_->::client_baseserver::guild_worship_req::Clear();
  clear_has__worship_req();
}
inline const ::client_baseserver::guild_worship_req& guild_reply::_worship_req() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_reply._worship_req)
  return _worship_req_ != NULL ? *_worship_req_ : *default_instance_->_worship_req_;
}
inline ::client_baseserver::guild_worship_req* guild_reply::mutable__worship_req() {
  set_has__worship_req();
  if (_worship_req_ == NULL) _worship_req_ = new ::client_baseserver::guild_worship_req;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_reply._worship_req)
  return _worship_req_;
}
inline ::client_baseserver::guild_worship_req* guild_reply::release__worship_req() {
  clear_has__worship_req();
  ::client_baseserver::guild_worship_req* temp = _worship_req_;
  _worship_req_ = NULL;
  return temp;
}
inline void guild_reply::set_allocated__worship_req(::client_baseserver::guild_worship_req* _worship_req) {
  delete _worship_req_;
  _worship_req_ = _worship_req;
  if (_worship_req) {
    set_has__worship_req();
  } else {
    clear_has__worship_req();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_reply._worship_req)
}

// optional .client_baseserver.guild_worship_withdraw _worship_withdraw = 17;
inline bool guild_reply::has__worship_withdraw() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void guild_reply::set_has__worship_withdraw() {
  _has_bits_[0] |= 0x00010000u;
}
inline void guild_reply::clear_has__worship_withdraw() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void guild_reply::clear__worship_withdraw() {
  if (_worship_withdraw_ != NULL) _worship_withdraw_->::client_baseserver::guild_worship_withdraw::Clear();
  clear_has__worship_withdraw();
}
inline const ::client_baseserver::guild_worship_withdraw& guild_reply::_worship_withdraw() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_reply._worship_withdraw)
  return _worship_withdraw_ != NULL ? *_worship_withdraw_ : *default_instance_->_worship_withdraw_;
}
inline ::client_baseserver::guild_worship_withdraw* guild_reply::mutable__worship_withdraw() {
  set_has__worship_withdraw();
  if (_worship_withdraw_ == NULL) _worship_withdraw_ = new ::client_baseserver::guild_worship_withdraw;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_reply._worship_withdraw)
  return _worship_withdraw_;
}
inline ::client_baseserver::guild_worship_withdraw* guild_reply::release__worship_withdraw() {
  clear_has__worship_withdraw();
  ::client_baseserver::guild_worship_withdraw* temp = _worship_withdraw_;
  _worship_withdraw_ = NULL;
  return temp;
}
inline void guild_reply::set_allocated__worship_withdraw(::client_baseserver::guild_worship_withdraw* _worship_withdraw) {
  delete _worship_withdraw_;
  _worship_withdraw_ = _worship_withdraw;
  if (_worship_withdraw) {
    set_has__worship_withdraw();
  } else {
    clear_has__worship_withdraw();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_reply._worship_withdraw)
}

// optional .client_baseserver.guild_qurey_hh_detail _query_hh_detail = 18;
inline bool guild_reply::has__query_hh_detail() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void guild_reply::set_has__query_hh_detail() {
  _has_bits_[0] |= 0x00020000u;
}
inline void guild_reply::clear_has__query_hh_detail() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void guild_reply::clear__query_hh_detail() {
  if (_query_hh_detail_ != NULL) _query_hh_detail_->::client_baseserver::guild_qurey_hh_detail::Clear();
  clear_has__query_hh_detail();
}
inline const ::client_baseserver::guild_qurey_hh_detail& guild_reply::_query_hh_detail() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_reply._query_hh_detail)
  return _query_hh_detail_ != NULL ? *_query_hh_detail_ : *default_instance_->_query_hh_detail_;
}
inline ::client_baseserver::guild_qurey_hh_detail* guild_reply::mutable__query_hh_detail() {
  set_has__query_hh_detail();
  if (_query_hh_detail_ == NULL) _query_hh_detail_ = new ::client_baseserver::guild_qurey_hh_detail;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_reply._query_hh_detail)
  return _query_hh_detail_;
}
inline ::client_baseserver::guild_qurey_hh_detail* guild_reply::release__query_hh_detail() {
  clear_has__query_hh_detail();
  ::client_baseserver::guild_qurey_hh_detail* temp = _query_hh_detail_;
  _query_hh_detail_ = NULL;
  return temp;
}
inline void guild_reply::set_allocated__query_hh_detail(::client_baseserver::guild_qurey_hh_detail* _query_hh_detail) {
  delete _query_hh_detail_;
  _query_hh_detail_ = _query_hh_detail;
  if (_query_hh_detail) {
    set_has__query_hh_detail();
  } else {
    clear_has__query_hh_detail();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_reply._query_hh_detail)
}

// required .client_baseserver.result _result = 19 [default = success];
inline bool guild_reply::has__result() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void guild_reply::set_has__result() {
  _has_bits_[0] |= 0x00040000u;
}
inline void guild_reply::clear_has__result() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void guild_reply::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result guild_reply::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_reply._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void guild_reply::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_reply._result)
}

// optional .client_baseserver.guild_instance_query _instance_query = 20;
inline bool guild_reply::has__instance_query() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void guild_reply::set_has__instance_query() {
  _has_bits_[0] |= 0x00080000u;
}
inline void guild_reply::clear_has__instance_query() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void guild_reply::clear__instance_query() {
  if (_instance_query_ != NULL) _instance_query_->::client_baseserver::guild_instance_query::Clear();
  clear_has__instance_query();
}
inline const ::client_baseserver::guild_instance_query& guild_reply::_instance_query() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_reply._instance_query)
  return _instance_query_ != NULL ? *_instance_query_ : *default_instance_->_instance_query_;
}
inline ::client_baseserver::guild_instance_query* guild_reply::mutable__instance_query() {
  set_has__instance_query();
  if (_instance_query_ == NULL) _instance_query_ = new ::client_baseserver::guild_instance_query;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_reply._instance_query)
  return _instance_query_;
}
inline ::client_baseserver::guild_instance_query* guild_reply::release__instance_query() {
  clear_has__instance_query();
  ::client_baseserver::guild_instance_query* temp = _instance_query_;
  _instance_query_ = NULL;
  return temp;
}
inline void guild_reply::set_allocated__instance_query(::client_baseserver::guild_instance_query* _instance_query) {
  delete _instance_query_;
  _instance_query_ = _instance_query;
  if (_instance_query) {
    set_has__instance_query();
  } else {
    clear_has__instance_query();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_reply._instance_query)
}

// optional .client_baseserver.guild_instance_detail _instance_detail = 21;
inline bool guild_reply::has__instance_detail() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void guild_reply::set_has__instance_detail() {
  _has_bits_[0] |= 0x00100000u;
}
inline void guild_reply::clear_has__instance_detail() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void guild_reply::clear__instance_detail() {
  if (_instance_detail_ != NULL) _instance_detail_->::client_baseserver::guild_instance_detail::Clear();
  clear_has__instance_detail();
}
inline const ::client_baseserver::guild_instance_detail& guild_reply::_instance_detail() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_reply._instance_detail)
  return _instance_detail_ != NULL ? *_instance_detail_ : *default_instance_->_instance_detail_;
}
inline ::client_baseserver::guild_instance_detail* guild_reply::mutable__instance_detail() {
  set_has__instance_detail();
  if (_instance_detail_ == NULL) _instance_detail_ = new ::client_baseserver::guild_instance_detail;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_reply._instance_detail)
  return _instance_detail_;
}
inline ::client_baseserver::guild_instance_detail* guild_reply::release__instance_detail() {
  clear_has__instance_detail();
  ::client_baseserver::guild_instance_detail* temp = _instance_detail_;
  _instance_detail_ = NULL;
  return temp;
}
inline void guild_reply::set_allocated__instance_detail(::client_baseserver::guild_instance_detail* _instance_detail) {
  delete _instance_detail_;
  _instance_detail_ = _instance_detail;
  if (_instance_detail) {
    set_has__instance_detail();
  } else {
    clear_has__instance_detail();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_reply._instance_detail)
}

// optional .client_baseserver.guild_instance_start _instance_start = 22;
inline bool guild_reply::has__instance_start() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void guild_reply::set_has__instance_start() {
  _has_bits_[0] |= 0x00200000u;
}
inline void guild_reply::clear_has__instance_start() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void guild_reply::clear__instance_start() {
  if (_instance_start_ != NULL) _instance_start_->::client_baseserver::guild_instance_start::Clear();
  clear_has__instance_start();
}
inline const ::client_baseserver::guild_instance_start& guild_reply::_instance_start() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_reply._instance_start)
  return _instance_start_ != NULL ? *_instance_start_ : *default_instance_->_instance_start_;
}
inline ::client_baseserver::guild_instance_start* guild_reply::mutable__instance_start() {
  set_has__instance_start();
  if (_instance_start_ == NULL) _instance_start_ = new ::client_baseserver::guild_instance_start;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_reply._instance_start)
  return _instance_start_;
}
inline ::client_baseserver::guild_instance_start* guild_reply::release__instance_start() {
  clear_has__instance_start();
  ::client_baseserver::guild_instance_start* temp = _instance_start_;
  _instance_start_ = NULL;
  return temp;
}
inline void guild_reply::set_allocated__instance_start(::client_baseserver::guild_instance_start* _instance_start) {
  delete _instance_start_;
  _instance_start_ = _instance_start;
  if (_instance_start) {
    set_has__instance_start();
  } else {
    clear_has__instance_start();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_reply._instance_start)
}

// optional .client_baseserver.guild_instance_end_down _instance_end = 23;
inline bool guild_reply::has__instance_end() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void guild_reply::set_has__instance_end() {
  _has_bits_[0] |= 0x00400000u;
}
inline void guild_reply::clear_has__instance_end() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void guild_reply::clear__instance_end() {
  if (_instance_end_ != NULL) _instance_end_->::client_baseserver::guild_instance_end_down::Clear();
  clear_has__instance_end();
}
inline const ::client_baseserver::guild_instance_end_down& guild_reply::_instance_end() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_reply._instance_end)
  return _instance_end_ != NULL ? *_instance_end_ : *default_instance_->_instance_end_;
}
inline ::client_baseserver::guild_instance_end_down* guild_reply::mutable__instance_end() {
  set_has__instance_end();
  if (_instance_end_ == NULL) _instance_end_ = new ::client_baseserver::guild_instance_end_down;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_reply._instance_end)
  return _instance_end_;
}
inline ::client_baseserver::guild_instance_end_down* guild_reply::release__instance_end() {
  clear_has__instance_end();
  ::client_baseserver::guild_instance_end_down* temp = _instance_end_;
  _instance_end_ = NULL;
  return temp;
}
inline void guild_reply::set_allocated__instance_end(::client_baseserver::guild_instance_end_down* _instance_end) {
  delete _instance_end_;
  _instance_end_ = _instance_end;
  if (_instance_end) {
    set_has__instance_end();
  } else {
    clear_has__instance_end();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_reply._instance_end)
}

// optional .client_baseserver.guild_instance_drop _instance_drop = 24;
inline bool guild_reply::has__instance_drop() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void guild_reply::set_has__instance_drop() {
  _has_bits_[0] |= 0x00800000u;
}
inline void guild_reply::clear_has__instance_drop() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void guild_reply::clear__instance_drop() {
  if (_instance_drop_ != NULL) _instance_drop_->::client_baseserver::guild_instance_drop::Clear();
  clear_has__instance_drop();
}
inline const ::client_baseserver::guild_instance_drop& guild_reply::_instance_drop() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_reply._instance_drop)
  return _instance_drop_ != NULL ? *_instance_drop_ : *default_instance_->_instance_drop_;
}
inline ::client_baseserver::guild_instance_drop* guild_reply::mutable__instance_drop() {
  set_has__instance_drop();
  if (_instance_drop_ == NULL) _instance_drop_ = new ::client_baseserver::guild_instance_drop;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_reply._instance_drop)
  return _instance_drop_;
}
inline ::client_baseserver::guild_instance_drop* guild_reply::release__instance_drop() {
  clear_has__instance_drop();
  ::client_baseserver::guild_instance_drop* temp = _instance_drop_;
  _instance_drop_ = NULL;
  return temp;
}
inline void guild_reply::set_allocated__instance_drop(::client_baseserver::guild_instance_drop* _instance_drop) {
  delete _instance_drop_;
  _instance_drop_ = _instance_drop;
  if (_instance_drop) {
    set_has__instance_drop();
  } else {
    clear_has__instance_drop();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_reply._instance_drop)
}

// optional .client_baseserver.guild_instance_open _instance_open = 25;
inline bool guild_reply::has__instance_open() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void guild_reply::set_has__instance_open() {
  _has_bits_[0] |= 0x01000000u;
}
inline void guild_reply::clear_has__instance_open() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void guild_reply::clear__instance_open() {
  if (_instance_open_ != NULL) _instance_open_->::client_baseserver::guild_instance_open::Clear();
  clear_has__instance_open();
}
inline const ::client_baseserver::guild_instance_open& guild_reply::_instance_open() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_reply._instance_open)
  return _instance_open_ != NULL ? *_instance_open_ : *default_instance_->_instance_open_;
}
inline ::client_baseserver::guild_instance_open* guild_reply::mutable__instance_open() {
  set_has__instance_open();
  if (_instance_open_ == NULL) _instance_open_ = new ::client_baseserver::guild_instance_open;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_reply._instance_open)
  return _instance_open_;
}
inline ::client_baseserver::guild_instance_open* guild_reply::release__instance_open() {
  clear_has__instance_open();
  ::client_baseserver::guild_instance_open* temp = _instance_open_;
  _instance_open_ = NULL;
  return temp;
}
inline void guild_reply::set_allocated__instance_open(::client_baseserver::guild_instance_open* _instance_open) {
  delete _instance_open_;
  _instance_open_ = _instance_open;
  if (_instance_open) {
    set_has__instance_open();
  } else {
    clear_has__instance_open();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_reply._instance_open)
}

// optional .client_baseserver.guild_instance_apply _instance_apply = 26;
inline bool guild_reply::has__instance_apply() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void guild_reply::set_has__instance_apply() {
  _has_bits_[0] |= 0x02000000u;
}
inline void guild_reply::clear_has__instance_apply() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void guild_reply::clear__instance_apply() {
  if (_instance_apply_ != NULL) _instance_apply_->::client_baseserver::guild_instance_apply::Clear();
  clear_has__instance_apply();
}
inline const ::client_baseserver::guild_instance_apply& guild_reply::_instance_apply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_reply._instance_apply)
  return _instance_apply_ != NULL ? *_instance_apply_ : *default_instance_->_instance_apply_;
}
inline ::client_baseserver::guild_instance_apply* guild_reply::mutable__instance_apply() {
  set_has__instance_apply();
  if (_instance_apply_ == NULL) _instance_apply_ = new ::client_baseserver::guild_instance_apply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_reply._instance_apply)
  return _instance_apply_;
}
inline ::client_baseserver::guild_instance_apply* guild_reply::release__instance_apply() {
  clear_has__instance_apply();
  ::client_baseserver::guild_instance_apply* temp = _instance_apply_;
  _instance_apply_ = NULL;
  return temp;
}
inline void guild_reply::set_allocated__instance_apply(::client_baseserver::guild_instance_apply* _instance_apply) {
  delete _instance_apply_;
  _instance_apply_ = _instance_apply;
  if (_instance_apply) {
    set_has__instance_apply();
  } else {
    clear_has__instance_apply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_reply._instance_apply)
}

// optional .client_baseserver.guild_drop_info _drop_info = 27;
inline bool guild_reply::has__drop_info() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void guild_reply::set_has__drop_info() {
  _has_bits_[0] |= 0x04000000u;
}
inline void guild_reply::clear_has__drop_info() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void guild_reply::clear__drop_info() {
  if (_drop_info_ != NULL) _drop_info_->::client_baseserver::guild_drop_info::Clear();
  clear_has__drop_info();
}
inline const ::client_baseserver::guild_drop_info& guild_reply::_drop_info() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_reply._drop_info)
  return _drop_info_ != NULL ? *_drop_info_ : *default_instance_->_drop_info_;
}
inline ::client_baseserver::guild_drop_info* guild_reply::mutable__drop_info() {
  set_has__drop_info();
  if (_drop_info_ == NULL) _drop_info_ = new ::client_baseserver::guild_drop_info;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_reply._drop_info)
  return _drop_info_;
}
inline ::client_baseserver::guild_drop_info* guild_reply::release__drop_info() {
  clear_has__drop_info();
  ::client_baseserver::guild_drop_info* temp = _drop_info_;
  _drop_info_ = NULL;
  return temp;
}
inline void guild_reply::set_allocated__drop_info(::client_baseserver::guild_drop_info* _drop_info) {
  delete _drop_info_;
  _drop_info_ = _drop_info;
  if (_drop_info) {
    set_has__drop_info();
  } else {
    clear_has__drop_info();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_reply._drop_info)
}

// optional .client_baseserver.guild_drop_give _drop_give = 28;
inline bool guild_reply::has__drop_give() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void guild_reply::set_has__drop_give() {
  _has_bits_[0] |= 0x08000000u;
}
inline void guild_reply::clear_has__drop_give() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void guild_reply::clear__drop_give() {
  if (_drop_give_ != NULL) _drop_give_->::client_baseserver::guild_drop_give::Clear();
  clear_has__drop_give();
}
inline const ::client_baseserver::guild_drop_give& guild_reply::_drop_give() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_reply._drop_give)
  return _drop_give_ != NULL ? *_drop_give_ : *default_instance_->_drop_give_;
}
inline ::client_baseserver::guild_drop_give* guild_reply::mutable__drop_give() {
  set_has__drop_give();
  if (_drop_give_ == NULL) _drop_give_ = new ::client_baseserver::guild_drop_give;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_reply._drop_give)
  return _drop_give_;
}
inline ::client_baseserver::guild_drop_give* guild_reply::release__drop_give() {
  clear_has__drop_give();
  ::client_baseserver::guild_drop_give* temp = _drop_give_;
  _drop_give_ = NULL;
  return temp;
}
inline void guild_reply::set_allocated__drop_give(::client_baseserver::guild_drop_give* _drop_give) {
  delete _drop_give_;
  _drop_give_ = _drop_give;
  if (_drop_give) {
    set_has__drop_give();
  } else {
    clear_has__drop_give();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_reply._drop_give)
}

// optional .client_baseserver.guild_instance_damage _instance_damage = 29;
inline bool guild_reply::has__instance_damage() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void guild_reply::set_has__instance_damage() {
  _has_bits_[0] |= 0x10000000u;
}
inline void guild_reply::clear_has__instance_damage() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void guild_reply::clear__instance_damage() {
  if (_instance_damage_ != NULL) _instance_damage_->::client_baseserver::guild_instance_damage::Clear();
  clear_has__instance_damage();
}
inline const ::client_baseserver::guild_instance_damage& guild_reply::_instance_damage() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_reply._instance_damage)
  return _instance_damage_ != NULL ? *_instance_damage_ : *default_instance_->_instance_damage_;
}
inline ::client_baseserver::guild_instance_damage* guild_reply::mutable__instance_damage() {
  set_has__instance_damage();
  if (_instance_damage_ == NULL) _instance_damage_ = new ::client_baseserver::guild_instance_damage;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_reply._instance_damage)
  return _instance_damage_;
}
inline ::client_baseserver::guild_instance_damage* guild_reply::release__instance_damage() {
  clear_has__instance_damage();
  ::client_baseserver::guild_instance_damage* temp = _instance_damage_;
  _instance_damage_ = NULL;
  return temp;
}
inline void guild_reply::set_allocated__instance_damage(::client_baseserver::guild_instance_damage* _instance_damage) {
  delete _instance_damage_;
  _instance_damage_ = _instance_damage;
  if (_instance_damage) {
    set_has__instance_damage();
  } else {
    clear_has__instance_damage();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_reply._instance_damage)
}

// optional .client_baseserver.guild_items_history _items_history = 30;
inline bool guild_reply::has__items_history() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void guild_reply::set_has__items_history() {
  _has_bits_[0] |= 0x20000000u;
}
inline void guild_reply::clear_has__items_history() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void guild_reply::clear__items_history() {
  if (_items_history_ != NULL) _items_history_->::client_baseserver::guild_items_history::Clear();
  clear_has__items_history();
}
inline const ::client_baseserver::guild_items_history& guild_reply::_items_history() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_reply._items_history)
  return _items_history_ != NULL ? *_items_history_ : *default_instance_->_items_history_;
}
inline ::client_baseserver::guild_items_history* guild_reply::mutable__items_history() {
  set_has__items_history();
  if (_items_history_ == NULL) _items_history_ = new ::client_baseserver::guild_items_history;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_reply._items_history)
  return _items_history_;
}
inline ::client_baseserver::guild_items_history* guild_reply::release__items_history() {
  clear_has__items_history();
  ::client_baseserver::guild_items_history* temp = _items_history_;
  _items_history_ = NULL;
  return temp;
}
inline void guild_reply::set_allocated__items_history(::client_baseserver::guild_items_history* _items_history) {
  delete _items_history_;
  _items_history_ = _items_history;
  if (_items_history) {
    set_has__items_history();
  } else {
    clear_has__items_history();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_reply._items_history)
}

// optional .client_baseserver.guild_jump _guild_jump = 31;
inline bool guild_reply::has__guild_jump() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void guild_reply::set_has__guild_jump() {
  _has_bits_[0] |= 0x40000000u;
}
inline void guild_reply::clear_has__guild_jump() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void guild_reply::clear__guild_jump() {
  if (_guild_jump_ != NULL) _guild_jump_->::client_baseserver::guild_jump::Clear();
  clear_has__guild_jump();
}
inline const ::client_baseserver::guild_jump& guild_reply::_guild_jump() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_reply._guild_jump)
  return _guild_jump_ != NULL ? *_guild_jump_ : *default_instance_->_guild_jump_;
}
inline ::client_baseserver::guild_jump* guild_reply::mutable__guild_jump() {
  set_has__guild_jump();
  if (_guild_jump_ == NULL) _guild_jump_ = new ::client_baseserver::guild_jump;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_reply._guild_jump)
  return _guild_jump_;
}
inline ::client_baseserver::guild_jump* guild_reply::release__guild_jump() {
  clear_has__guild_jump();
  ::client_baseserver::guild_jump* temp = _guild_jump_;
  _guild_jump_ = NULL;
  return temp;
}
inline void guild_reply::set_allocated__guild_jump(::client_baseserver::guild_jump* _guild_jump) {
  delete _guild_jump_;
  _guild_jump_ = _guild_jump;
  if (_guild_jump) {
    set_has__guild_jump();
  } else {
    clear_has__guild_jump();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_reply._guild_jump)
}

// optional .client_baseserver.guild_app_queue _guild_app_queue = 32;
inline bool guild_reply::has__guild_app_queue() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void guild_reply::set_has__guild_app_queue() {
  _has_bits_[0] |= 0x80000000u;
}
inline void guild_reply::clear_has__guild_app_queue() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void guild_reply::clear__guild_app_queue() {
  if (_guild_app_queue_ != NULL) _guild_app_queue_->::client_baseserver::guild_app_queue::Clear();
  clear_has__guild_app_queue();
}
inline const ::client_baseserver::guild_app_queue& guild_reply::_guild_app_queue() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_reply._guild_app_queue)
  return _guild_app_queue_ != NULL ? *_guild_app_queue_ : *default_instance_->_guild_app_queue_;
}
inline ::client_baseserver::guild_app_queue* guild_reply::mutable__guild_app_queue() {
  set_has__guild_app_queue();
  if (_guild_app_queue_ == NULL) _guild_app_queue_ = new ::client_baseserver::guild_app_queue;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_reply._guild_app_queue)
  return _guild_app_queue_;
}
inline ::client_baseserver::guild_app_queue* guild_reply::release__guild_app_queue() {
  clear_has__guild_app_queue();
  ::client_baseserver::guild_app_queue* temp = _guild_app_queue_;
  _guild_app_queue_ = NULL;
  return temp;
}
inline void guild_reply::set_allocated__guild_app_queue(::client_baseserver::guild_app_queue* _guild_app_queue) {
  delete _guild_app_queue_;
  _guild_app_queue_ = _guild_app_queue;
  if (_guild_app_queue) {
    set_has__guild_app_queue();
  } else {
    clear_has__guild_app_queue();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_reply._guild_app_queue)
}

// optional .client_baseserver.guild_instance_prepare _instance_prepare = 33;
inline bool guild_reply::has__instance_prepare() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void guild_reply::set_has__instance_prepare() {
  _has_bits_[1] |= 0x00000001u;
}
inline void guild_reply::clear_has__instance_prepare() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void guild_reply::clear__instance_prepare() {
  if (_instance_prepare_ != NULL) _instance_prepare_->::client_baseserver::guild_instance_prepare::Clear();
  clear_has__instance_prepare();
}
inline const ::client_baseserver::guild_instance_prepare& guild_reply::_instance_prepare() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_reply._instance_prepare)
  return _instance_prepare_ != NULL ? *_instance_prepare_ : *default_instance_->_instance_prepare_;
}
inline ::client_baseserver::guild_instance_prepare* guild_reply::mutable__instance_prepare() {
  set_has__instance_prepare();
  if (_instance_prepare_ == NULL) _instance_prepare_ = new ::client_baseserver::guild_instance_prepare;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_reply._instance_prepare)
  return _instance_prepare_;
}
inline ::client_baseserver::guild_instance_prepare* guild_reply::release__instance_prepare() {
  clear_has__instance_prepare();
  ::client_baseserver::guild_instance_prepare* temp = _instance_prepare_;
  _instance_prepare_ = NULL;
  return temp;
}
inline void guild_reply::set_allocated__instance_prepare(::client_baseserver::guild_instance_prepare* _instance_prepare) {
  delete _instance_prepare_;
  _instance_prepare_ = _instance_prepare;
  if (_instance_prepare) {
    set_has__instance_prepare();
  } else {
    clear_has__instance_prepare();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_reply._instance_prepare)
}

// optional .client_baseserver.guild_members _guild_members = 34;
inline bool guild_reply::has__guild_members() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void guild_reply::set_has__guild_members() {
  _has_bits_[1] |= 0x00000002u;
}
inline void guild_reply::clear_has__guild_members() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void guild_reply::clear__guild_members() {
  if (_guild_members_ != NULL) _guild_members_->::client_baseserver::guild_members::Clear();
  clear_has__guild_members();
}
inline const ::client_baseserver::guild_members& guild_reply::_guild_members() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_reply._guild_members)
  return _guild_members_ != NULL ? *_guild_members_ : *default_instance_->_guild_members_;
}
inline ::client_baseserver::guild_members* guild_reply::mutable__guild_members() {
  set_has__guild_members();
  if (_guild_members_ == NULL) _guild_members_ = new ::client_baseserver::guild_members;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_reply._guild_members)
  return _guild_members_;
}
inline ::client_baseserver::guild_members* guild_reply::release__guild_members() {
  clear_has__guild_members();
  ::client_baseserver::guild_members* temp = _guild_members_;
  _guild_members_ = NULL;
  return temp;
}
inline void guild_reply::set_allocated__guild_members(::client_baseserver::guild_members* _guild_members) {
  delete _guild_members_;
  _guild_members_ = _guild_members;
  if (_guild_members) {
    set_has__guild_members();
  } else {
    clear_has__guild_members();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_reply._guild_members)
}

// optional .client_baseserver.guild_stage_rank _guild_stage_rank = 35;
inline bool guild_reply::has__guild_stage_rank() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void guild_reply::set_has__guild_stage_rank() {
  _has_bits_[1] |= 0x00000004u;
}
inline void guild_reply::clear_has__guild_stage_rank() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void guild_reply::clear__guild_stage_rank() {
  if (_guild_stage_rank_ != NULL) _guild_stage_rank_->::client_baseserver::guild_stage_rank::Clear();
  clear_has__guild_stage_rank();
}
inline const ::client_baseserver::guild_stage_rank& guild_reply::_guild_stage_rank() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_reply._guild_stage_rank)
  return _guild_stage_rank_ != NULL ? *_guild_stage_rank_ : *default_instance_->_guild_stage_rank_;
}
inline ::client_baseserver::guild_stage_rank* guild_reply::mutable__guild_stage_rank() {
  set_has__guild_stage_rank();
  if (_guild_stage_rank_ == NULL) _guild_stage_rank_ = new ::client_baseserver::guild_stage_rank;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_reply._guild_stage_rank)
  return _guild_stage_rank_;
}
inline ::client_baseserver::guild_stage_rank* guild_reply::release__guild_stage_rank() {
  clear_has__guild_stage_rank();
  ::client_baseserver::guild_stage_rank* temp = _guild_stage_rank_;
  _guild_stage_rank_ = NULL;
  return temp;
}
inline void guild_reply::set_allocated__guild_stage_rank(::client_baseserver::guild_stage_rank* _guild_stage_rank) {
  delete _guild_stage_rank_;
  _guild_stage_rank_ = _guild_stage_rank;
  if (_guild_stage_rank) {
    set_has__guild_stage_rank();
  } else {
    clear_has__guild_stage_rank();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_reply._guild_stage_rank)
}

// optional .client_baseserver.guild_set_jump _set_jump = 36;
inline bool guild_reply::has__set_jump() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void guild_reply::set_has__set_jump() {
  _has_bits_[1] |= 0x00000008u;
}
inline void guild_reply::clear_has__set_jump() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void guild_reply::clear__set_jump() {
  if (_set_jump_ != NULL) _set_jump_->::client_baseserver::guild_set_jump::Clear();
  clear_has__set_jump();
}
inline const ::client_baseserver::guild_set_jump& guild_reply::_set_jump() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_reply._set_jump)
  return _set_jump_ != NULL ? *_set_jump_ : *default_instance_->_set_jump_;
}
inline ::client_baseserver::guild_set_jump* guild_reply::mutable__set_jump() {
  set_has__set_jump();
  if (_set_jump_ == NULL) _set_jump_ = new ::client_baseserver::guild_set_jump;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_reply._set_jump)
  return _set_jump_;
}
inline ::client_baseserver::guild_set_jump* guild_reply::release__set_jump() {
  clear_has__set_jump();
  ::client_baseserver::guild_set_jump* temp = _set_jump_;
  _set_jump_ = NULL;
  return temp;
}
inline void guild_reply::set_allocated__set_jump(::client_baseserver::guild_set_jump* _set_jump) {
  delete _set_jump_;
  _set_jump_ = _set_jump;
  if (_set_jump) {
    set_has__set_jump();
  } else {
    clear_has__set_jump();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_reply._set_jump)
}

// optional .client_baseserver.guild_send_mail _send_mail_reply = 37;
inline bool guild_reply::has__send_mail_reply() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void guild_reply::set_has__send_mail_reply() {
  _has_bits_[1] |= 0x00000010u;
}
inline void guild_reply::clear_has__send_mail_reply() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void guild_reply::clear__send_mail_reply() {
  if (_send_mail_reply_ != NULL) _send_mail_reply_->::client_baseserver::guild_send_mail::Clear();
  clear_has__send_mail_reply();
}
inline const ::client_baseserver::guild_send_mail& guild_reply::_send_mail_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_reply._send_mail_reply)
  return _send_mail_reply_ != NULL ? *_send_mail_reply_ : *default_instance_->_send_mail_reply_;
}
inline ::client_baseserver::guild_send_mail* guild_reply::mutable__send_mail_reply() {
  set_has__send_mail_reply();
  if (_send_mail_reply_ == NULL) _send_mail_reply_ = new ::client_baseserver::guild_send_mail;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_reply._send_mail_reply)
  return _send_mail_reply_;
}
inline ::client_baseserver::guild_send_mail* guild_reply::release__send_mail_reply() {
  clear_has__send_mail_reply();
  ::client_baseserver::guild_send_mail* temp = _send_mail_reply_;
  _send_mail_reply_ = NULL;
  return temp;
}
inline void guild_reply::set_allocated__send_mail_reply(::client_baseserver::guild_send_mail* _send_mail_reply) {
  delete _send_mail_reply_;
  _send_mail_reply_ = _send_mail_reply;
  if (_send_mail_reply) {
    set_has__send_mail_reply();
  } else {
    clear_has__send_mail_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_reply._send_mail_reply)
}

// -------------------------------------------------------------------

// guild_send_mail

// required .client_baseserver.result _result = 1;
inline bool guild_send_mail::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_send_mail::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_send_mail::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_send_mail::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result guild_send_mail::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_send_mail._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void guild_send_mail::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_send_mail._result)
}

// -------------------------------------------------------------------

// guild_set_jump

// required .client_baseserver.result _result = 1;
inline bool guild_set_jump::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_set_jump::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_set_jump::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_set_jump::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result guild_set_jump::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_set_jump._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void guild_set_jump::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_set_jump._result)
}

// -------------------------------------------------------------------

// guild_instance_prepare

// required .client_baseserver.result _result = 1;
inline bool guild_instance_prepare::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_instance_prepare::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_instance_prepare::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_instance_prepare::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result guild_instance_prepare::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_prepare._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void guild_instance_prepare::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_prepare._result)
}

// required uint32 _left_time = 2;
inline bool guild_instance_prepare::has__left_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guild_instance_prepare::set_has__left_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guild_instance_prepare::clear_has__left_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guild_instance_prepare::clear__left_time() {
  _left_time_ = 0u;
  clear_has__left_time();
}
inline ::google::protobuf::uint32 guild_instance_prepare::_left_time() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_prepare._left_time)
  return _left_time_;
}
inline void guild_instance_prepare::set__left_time(::google::protobuf::uint32 value) {
  set_has__left_time();
  _left_time_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_prepare._left_time)
}

// -------------------------------------------------------------------

// dps_rank

// required uint32 _dps = 1;
inline bool dps_rank::has__dps() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void dps_rank::set_has__dps() {
  _has_bits_[0] |= 0x00000001u;
}
inline void dps_rank::clear_has__dps() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void dps_rank::clear__dps() {
  _dps_ = 0u;
  clear_has__dps();
}
inline ::google::protobuf::uint32 dps_rank::_dps() const {
  // @@protoc_insertion_point(field_get:client_baseserver.dps_rank._dps)
  return _dps_;
}
inline void dps_rank::set__dps(::google::protobuf::uint32 value) {
  set_has__dps();
  _dps_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.dps_rank._dps)
}

// required .client_baseserver.user_summary _dps_user = 2;
inline bool dps_rank::has__dps_user() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void dps_rank::set_has__dps_user() {
  _has_bits_[0] |= 0x00000002u;
}
inline void dps_rank::clear_has__dps_user() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void dps_rank::clear__dps_user() {
  if (_dps_user_ != NULL) _dps_user_->::client_baseserver::user_summary::Clear();
  clear_has__dps_user();
}
inline const ::client_baseserver::user_summary& dps_rank::_dps_user() const {
  // @@protoc_insertion_point(field_get:client_baseserver.dps_rank._dps_user)
  return _dps_user_ != NULL ? *_dps_user_ : *default_instance_->_dps_user_;
}
inline ::client_baseserver::user_summary* dps_rank::mutable__dps_user() {
  set_has__dps_user();
  if (_dps_user_ == NULL) _dps_user_ = new ::client_baseserver::user_summary;
  // @@protoc_insertion_point(field_mutable:client_baseserver.dps_rank._dps_user)
  return _dps_user_;
}
inline ::client_baseserver::user_summary* dps_rank::release__dps_user() {
  clear_has__dps_user();
  ::client_baseserver::user_summary* temp = _dps_user_;
  _dps_user_ = NULL;
  return temp;
}
inline void dps_rank::set_allocated__dps_user(::client_baseserver::user_summary* _dps_user) {
  delete _dps_user_;
  _dps_user_ = _dps_user;
  if (_dps_user) {
    set_has__dps_user();
  } else {
    clear_has__dps_user();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.dps_rank._dps_user)
}

// optional .client_baseserver.dps_rank_array _array = 3;
inline bool dps_rank::has__array() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void dps_rank::set_has__array() {
  _has_bits_[0] |= 0x00000004u;
}
inline void dps_rank::clear_has__array() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void dps_rank::clear__array() {
  if (_array_ != NULL) _array_->::client_baseserver::dps_rank_array::Clear();
  clear_has__array();
}
inline const ::client_baseserver::dps_rank_array& dps_rank::_array() const {
  // @@protoc_insertion_point(field_get:client_baseserver.dps_rank._array)
  return _array_ != NULL ? *_array_ : *default_instance_->_array_;
}
inline ::client_baseserver::dps_rank_array* dps_rank::mutable__array() {
  set_has__array();
  if (_array_ == NULL) _array_ = new ::client_baseserver::dps_rank_array;
  // @@protoc_insertion_point(field_mutable:client_baseserver.dps_rank._array)
  return _array_;
}
inline ::client_baseserver::dps_rank_array* dps_rank::release__array() {
  clear_has__array();
  ::client_baseserver::dps_rank_array* temp = _array_;
  _array_ = NULL;
  return temp;
}
inline void dps_rank::set_allocated__array(::client_baseserver::dps_rank_array* _array) {
  delete _array_;
  _array_ = _array;
  if (_array) {
    set_has__array();
  } else {
    clear_has__array();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.dps_rank._array)
}

// -------------------------------------------------------------------

// dps_rank_array

// repeated .client_baseserver.hero_summary _heros = 1;
inline int dps_rank_array::_heros_size() const {
  return _heros_.size();
}
inline void dps_rank_array::clear__heros() {
  _heros_.Clear();
}
inline const ::client_baseserver::hero_summary& dps_rank_array::_heros(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.dps_rank_array._heros)
  return _heros_.Get(index);
}
inline ::client_baseserver::hero_summary* dps_rank_array::mutable__heros(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.dps_rank_array._heros)
  return _heros_.Mutable(index);
}
inline ::client_baseserver::hero_summary* dps_rank_array::add__heros() {
  // @@protoc_insertion_point(field_add:client_baseserver.dps_rank_array._heros)
  return _heros_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero_summary >&
dps_rank_array::_heros() const {
  // @@protoc_insertion_point(field_list:client_baseserver.dps_rank_array._heros)
  return _heros_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero_summary >*
dps_rank_array::mutable__heros() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.dps_rank_array._heros)
  return &_heros_;
}

// -------------------------------------------------------------------

// guild_first_pass

// required .client_baseserver.user_summary _summary = 1;
inline bool guild_first_pass::has__summary() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_first_pass::set_has__summary() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_first_pass::clear_has__summary() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_first_pass::clear__summary() {
  if (_summary_ != NULL) _summary_->::client_baseserver::user_summary::Clear();
  clear_has__summary();
}
inline const ::client_baseserver::user_summary& guild_first_pass::_summary() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_first_pass._summary)
  return _summary_ != NULL ? *_summary_ : *default_instance_->_summary_;
}
inline ::client_baseserver::user_summary* guild_first_pass::mutable__summary() {
  set_has__summary();
  if (_summary_ == NULL) _summary_ = new ::client_baseserver::user_summary;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_first_pass._summary)
  return _summary_;
}
inline ::client_baseserver::user_summary* guild_first_pass::release__summary() {
  clear_has__summary();
  ::client_baseserver::user_summary* temp = _summary_;
  _summary_ = NULL;
  return temp;
}
inline void guild_first_pass::set_allocated__summary(::client_baseserver::user_summary* _summary) {
  delete _summary_;
  _summary_ = _summary;
  if (_summary) {
    set_has__summary();
  } else {
    clear_has__summary();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_first_pass._summary)
}

// required uint32 _pass_time = 2;
inline bool guild_first_pass::has__pass_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guild_first_pass::set_has__pass_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guild_first_pass::clear_has__pass_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guild_first_pass::clear__pass_time() {
  _pass_time_ = 0u;
  clear_has__pass_time();
}
inline ::google::protobuf::uint32 guild_first_pass::_pass_time() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_first_pass._pass_time)
  return _pass_time_;
}
inline void guild_first_pass::set__pass_time(::google::protobuf::uint32 value) {
  set_has__pass_time();
  _pass_time_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_first_pass._pass_time)
}

// -------------------------------------------------------------------

// guild_fast_pass

// required uint32 _id = 1;
inline bool guild_fast_pass::has__id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_fast_pass::set_has__id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_fast_pass::clear_has__id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_fast_pass::clear__id() {
  _id_ = 0u;
  clear_has__id();
}
inline ::google::protobuf::uint32 guild_fast_pass::_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_fast_pass._id)
  return _id_;
}
inline void guild_fast_pass::set__id(::google::protobuf::uint32 value) {
  set_has__id();
  _id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_fast_pass._id)
}

// required uint32 _icon = 2;
inline bool guild_fast_pass::has__icon() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guild_fast_pass::set_has__icon() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guild_fast_pass::clear_has__icon() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guild_fast_pass::clear__icon() {
  _icon_ = 0u;
  clear_has__icon();
}
inline ::google::protobuf::uint32 guild_fast_pass::_icon() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_fast_pass._icon)
  return _icon_;
}
inline void guild_fast_pass::set__icon(::google::protobuf::uint32 value) {
  set_has__icon();
  _icon_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_fast_pass._icon)
}

// required uint32 _time = 3;
inline bool guild_fast_pass::has__time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void guild_fast_pass::set_has__time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void guild_fast_pass::clear_has__time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void guild_fast_pass::clear__time() {
  _time_ = 0u;
  clear_has__time();
}
inline ::google::protobuf::uint32 guild_fast_pass::_time() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_fast_pass._time)
  return _time_;
}
inline void guild_fast_pass::set__time(::google::protobuf::uint32 value) {
  set_has__time();
  _time_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_fast_pass._time)
}

// required string _name = 4;
inline bool guild_fast_pass::has__name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void guild_fast_pass::set_has__name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void guild_fast_pass::clear_has__name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void guild_fast_pass::clear__name() {
  if (_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _name_->clear();
  }
  clear_has__name();
}
inline const ::std::string& guild_fast_pass::_name() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_fast_pass._name)
  return *_name_;
}
inline void guild_fast_pass::set__name(const ::std::string& value) {
  set_has__name();
  if (_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _name_ = new ::std::string;
  }
  _name_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.guild_fast_pass._name)
}
inline void guild_fast_pass::set__name(const char* value) {
  set_has__name();
  if (_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _name_ = new ::std::string;
  }
  _name_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.guild_fast_pass._name)
}
inline void guild_fast_pass::set__name(const char* value, size_t size) {
  set_has__name();
  if (_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _name_ = new ::std::string;
  }
  _name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.guild_fast_pass._name)
}
inline ::std::string* guild_fast_pass::mutable__name() {
  set_has__name();
  if (_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_fast_pass._name)
  return _name_;
}
inline ::std::string* guild_fast_pass::release__name() {
  clear_has__name();
  if (_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = _name_;
    _name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void guild_fast_pass::set_allocated__name(::std::string* _name) {
  if (_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete _name_;
  }
  if (_name) {
    set_has__name();
    _name_ = _name;
  } else {
    clear_has__name();
    _name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_fast_pass._name)
}

// -------------------------------------------------------------------

// guild_stage_rank

// required uint32 _stage_id = 1;
inline bool guild_stage_rank::has__stage_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_stage_rank::set_has__stage_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_stage_rank::clear_has__stage_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_stage_rank::clear__stage_id() {
  _stage_id_ = 0u;
  clear_has__stage_id();
}
inline ::google::protobuf::uint32 guild_stage_rank::_stage_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_stage_rank._stage_id)
  return _stage_id_;
}
inline void guild_stage_rank::set__stage_id(::google::protobuf::uint32 value) {
  set_has__stage_id();
  _stage_id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_stage_rank._stage_id)
}

// repeated .client_baseserver.dps_rank _dps_rank = 2;
inline int guild_stage_rank::_dps_rank_size() const {
  return _dps_rank_.size();
}
inline void guild_stage_rank::clear__dps_rank() {
  _dps_rank_.Clear();
}
inline const ::client_baseserver::dps_rank& guild_stage_rank::_dps_rank(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_stage_rank._dps_rank)
  return _dps_rank_.Get(index);
}
inline ::client_baseserver::dps_rank* guild_stage_rank::mutable__dps_rank(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_stage_rank._dps_rank)
  return _dps_rank_.Mutable(index);
}
inline ::client_baseserver::dps_rank* guild_stage_rank::add__dps_rank() {
  // @@protoc_insertion_point(field_add:client_baseserver.guild_stage_rank._dps_rank)
  return _dps_rank_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::dps_rank >&
guild_stage_rank::_dps_rank() const {
  // @@protoc_insertion_point(field_list:client_baseserver.guild_stage_rank._dps_rank)
  return _dps_rank_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::dps_rank >*
guild_stage_rank::mutable__dps_rank() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.guild_stage_rank._dps_rank)
  return &_dps_rank_;
}

// optional .client_baseserver.guild_first_pass _first_pass = 3;
inline bool guild_stage_rank::has__first_pass() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void guild_stage_rank::set_has__first_pass() {
  _has_bits_[0] |= 0x00000004u;
}
inline void guild_stage_rank::clear_has__first_pass() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void guild_stage_rank::clear__first_pass() {
  if (_first_pass_ != NULL) _first_pass_->::client_baseserver::guild_first_pass::Clear();
  clear_has__first_pass();
}
inline const ::client_baseserver::guild_first_pass& guild_stage_rank::_first_pass() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_stage_rank._first_pass)
  return _first_pass_ != NULL ? *_first_pass_ : *default_instance_->_first_pass_;
}
inline ::client_baseserver::guild_first_pass* guild_stage_rank::mutable__first_pass() {
  set_has__first_pass();
  if (_first_pass_ == NULL) _first_pass_ = new ::client_baseserver::guild_first_pass;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_stage_rank._first_pass)
  return _first_pass_;
}
inline ::client_baseserver::guild_first_pass* guild_stage_rank::release__first_pass() {
  clear_has__first_pass();
  ::client_baseserver::guild_first_pass* temp = _first_pass_;
  _first_pass_ = NULL;
  return temp;
}
inline void guild_stage_rank::set_allocated__first_pass(::client_baseserver::guild_first_pass* _first_pass) {
  delete _first_pass_;
  _first_pass_ = _first_pass;
  if (_first_pass) {
    set_has__first_pass();
  } else {
    clear_has__first_pass();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_stage_rank._first_pass)
}

// optional .client_baseserver.guild_fast_pass _fast_pass = 4;
inline bool guild_stage_rank::has__fast_pass() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void guild_stage_rank::set_has__fast_pass() {
  _has_bits_[0] |= 0x00000008u;
}
inline void guild_stage_rank::clear_has__fast_pass() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void guild_stage_rank::clear__fast_pass() {
  if (_fast_pass_ != NULL) _fast_pass_->::client_baseserver::guild_fast_pass::Clear();
  clear_has__fast_pass();
}
inline const ::client_baseserver::guild_fast_pass& guild_stage_rank::_fast_pass() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_stage_rank._fast_pass)
  return _fast_pass_ != NULL ? *_fast_pass_ : *default_instance_->_fast_pass_;
}
inline ::client_baseserver::guild_fast_pass* guild_stage_rank::mutable__fast_pass() {
  set_has__fast_pass();
  if (_fast_pass_ == NULL) _fast_pass_ = new ::client_baseserver::guild_fast_pass;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_stage_rank._fast_pass)
  return _fast_pass_;
}
inline ::client_baseserver::guild_fast_pass* guild_stage_rank::release__fast_pass() {
  clear_has__fast_pass();
  ::client_baseserver::guild_fast_pass* temp = _fast_pass_;
  _fast_pass_ = NULL;
  return temp;
}
inline void guild_stage_rank::set_allocated__fast_pass(::client_baseserver::guild_fast_pass* _fast_pass) {
  delete _fast_pass_;
  _fast_pass_ = _fast_pass;
  if (_fast_pass) {
    set_has__fast_pass();
  } else {
    clear_has__fast_pass();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_stage_rank._fast_pass)
}

// -------------------------------------------------------------------

// guild_app_queue

// repeated .client_baseserver.user_summary _summary = 1;
inline int guild_app_queue::_summary_size() const {
  return _summary_.size();
}
inline void guild_app_queue::clear__summary() {
  _summary_.Clear();
}
inline const ::client_baseserver::user_summary& guild_app_queue::_summary(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_app_queue._summary)
  return _summary_.Get(index);
}
inline ::client_baseserver::user_summary* guild_app_queue::mutable__summary(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_app_queue._summary)
  return _summary_.Mutable(index);
}
inline ::client_baseserver::user_summary* guild_app_queue::add__summary() {
  // @@protoc_insertion_point(field_add:client_baseserver.guild_app_queue._summary)
  return _summary_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::user_summary >&
guild_app_queue::_summary() const {
  // @@protoc_insertion_point(field_list:client_baseserver.guild_app_queue._summary)
  return _summary_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::user_summary >*
guild_app_queue::mutable__summary() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.guild_app_queue._summary)
  return &_summary_;
}

// required uint32 _timeout = 2;
inline bool guild_app_queue::has__timeout() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guild_app_queue::set_has__timeout() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guild_app_queue::clear_has__timeout() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guild_app_queue::clear__timeout() {
  _timeout_ = 0u;
  clear_has__timeout();
}
inline ::google::protobuf::uint32 guild_app_queue::_timeout() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_app_queue._timeout)
  return _timeout_;
}
inline void guild_app_queue::set__timeout(::google::protobuf::uint32 value) {
  set_has__timeout();
  _timeout_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_app_queue._timeout)
}

// required uint32 _item_count = 3;
inline bool guild_app_queue::has__item_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void guild_app_queue::set_has__item_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void guild_app_queue::clear_has__item_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void guild_app_queue::clear__item_count() {
  _item_count_ = 0u;
  clear_has__item_count();
}
inline ::google::protobuf::uint32 guild_app_queue::_item_count() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_app_queue._item_count)
  return _item_count_;
}
inline void guild_app_queue::set__item_count(::google::protobuf::uint32 value) {
  set_has__item_count();
  _item_count_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_app_queue._item_count)
}

// required uint32 _rank = 4;
inline bool guild_app_queue::has__rank() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void guild_app_queue::set_has__rank() {
  _has_bits_[0] |= 0x00000008u;
}
inline void guild_app_queue::clear_has__rank() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void guild_app_queue::clear__rank() {
  _rank_ = 0u;
  clear_has__rank();
}
inline ::google::protobuf::uint32 guild_app_queue::_rank() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_app_queue._rank)
  return _rank_;
}
inline void guild_app_queue::set__rank(::google::protobuf::uint32 value) {
  set_has__rank();
  _rank_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_app_queue._rank)
}

// required uint32 _item_id = 5;
inline bool guild_app_queue::has__item_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void guild_app_queue::set_has__item_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void guild_app_queue::clear_has__item_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void guild_app_queue::clear__item_id() {
  _item_id_ = 0u;
  clear_has__item_id();
}
inline ::google::protobuf::uint32 guild_app_queue::_item_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_app_queue._item_id)
  return _item_id_;
}
inline void guild_app_queue::set__item_id(::google::protobuf::uint32 value) {
  set_has__item_id();
  _item_id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_app_queue._item_id)
}

// required uint32 _jump_times = 6;
inline bool guild_app_queue::has__jump_times() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void guild_app_queue::set_has__jump_times() {
  _has_bits_[0] |= 0x00000020u;
}
inline void guild_app_queue::clear_has__jump_times() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void guild_app_queue::clear__jump_times() {
  _jump_times_ = 0u;
  clear_has__jump_times();
}
inline ::google::protobuf::uint32 guild_app_queue::_jump_times() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_app_queue._jump_times)
  return _jump_times_;
}
inline void guild_app_queue::set__jump_times(::google::protobuf::uint32 value) {
  set_has__jump_times();
  _jump_times_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_app_queue._jump_times)
}

// required uint32 _cost_money = 7;
inline bool guild_app_queue::has__cost_money() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void guild_app_queue::set_has__cost_money() {
  _has_bits_[0] |= 0x00000040u;
}
inline void guild_app_queue::clear_has__cost_money() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void guild_app_queue::clear__cost_money() {
  _cost_money_ = 0u;
  clear_has__cost_money();
}
inline ::google::protobuf::uint32 guild_app_queue::_cost_money() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_app_queue._cost_money)
  return _cost_money_;
}
inline void guild_app_queue::set__cost_money(::google::protobuf::uint32 value) {
  set_has__cost_money();
  _cost_money_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_app_queue._cost_money)
}

// -------------------------------------------------------------------

// guild_members

// repeated .client_baseserver.guild_member _guild_member = 1;
inline int guild_members::_guild_member_size() const {
  return _guild_member_.size();
}
inline void guild_members::clear__guild_member() {
  _guild_member_.Clear();
}
inline const ::client_baseserver::guild_member& guild_members::_guild_member(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_members._guild_member)
  return _guild_member_.Get(index);
}
inline ::client_baseserver::guild_member* guild_members::mutable__guild_member(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_members._guild_member)
  return _guild_member_.Mutable(index);
}
inline ::client_baseserver::guild_member* guild_members::add__guild_member() {
  // @@protoc_insertion_point(field_add:client_baseserver.guild_members._guild_member)
  return _guild_member_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_member >&
guild_members::_guild_member() const {
  // @@protoc_insertion_point(field_list:client_baseserver.guild_members._guild_member)
  return _guild_member_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_member >*
guild_members::mutable__guild_member() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.guild_members._guild_member)
  return &_guild_member_;
}

// -------------------------------------------------------------------

// guild_jump

// required .client_baseserver.result _result = 1;
inline bool guild_jump::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_jump::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_jump::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_jump::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result guild_jump::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_jump._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void guild_jump::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_jump._result)
}

// required .client_baseserver.guild_app_queue _app_queue = 2;
inline bool guild_jump::has__app_queue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guild_jump::set_has__app_queue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guild_jump::clear_has__app_queue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guild_jump::clear__app_queue() {
  if (_app_queue_ != NULL) _app_queue_->::client_baseserver::guild_app_queue::Clear();
  clear_has__app_queue();
}
inline const ::client_baseserver::guild_app_queue& guild_jump::_app_queue() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_jump._app_queue)
  return _app_queue_ != NULL ? *_app_queue_ : *default_instance_->_app_queue_;
}
inline ::client_baseserver::guild_app_queue* guild_jump::mutable__app_queue() {
  set_has__app_queue();
  if (_app_queue_ == NULL) _app_queue_ = new ::client_baseserver::guild_app_queue;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_jump._app_queue)
  return _app_queue_;
}
inline ::client_baseserver::guild_app_queue* guild_jump::release__app_queue() {
  clear_has__app_queue();
  ::client_baseserver::guild_app_queue* temp = _app_queue_;
  _app_queue_ = NULL;
  return temp;
}
inline void guild_jump::set_allocated__app_queue(::client_baseserver::guild_app_queue* _app_queue) {
  delete _app_queue_;
  _app_queue_ = _app_queue;
  if (_app_queue) {
    set_has__app_queue();
  } else {
    clear_has__app_queue();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_jump._app_queue)
}

// -------------------------------------------------------------------

// guild_items_history

// required uint32 _isthere = 1;
inline bool guild_items_history::has__isthere() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_items_history::set_has__isthere() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_items_history::clear_has__isthere() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_items_history::clear__isthere() {
  _isthere_ = 0u;
  clear_has__isthere();
}
inline ::google::protobuf::uint32 guild_items_history::_isthere() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_items_history._isthere)
  return _isthere_;
}
inline void guild_items_history::set__isthere(::google::protobuf::uint32 value) {
  set_has__isthere();
  _isthere_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_items_history._isthere)
}

// repeated .client_baseserver.guild_item_history _item_historys = 2;
inline int guild_items_history::_item_historys_size() const {
  return _item_historys_.size();
}
inline void guild_items_history::clear__item_historys() {
  _item_historys_.Clear();
}
inline const ::client_baseserver::guild_item_history& guild_items_history::_item_historys(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_items_history._item_historys)
  return _item_historys_.Get(index);
}
inline ::client_baseserver::guild_item_history* guild_items_history::mutable__item_historys(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_items_history._item_historys)
  return _item_historys_.Mutable(index);
}
inline ::client_baseserver::guild_item_history* guild_items_history::add__item_historys() {
  // @@protoc_insertion_point(field_add:client_baseserver.guild_items_history._item_historys)
  return _item_historys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_item_history >&
guild_items_history::_item_historys() const {
  // @@protoc_insertion_point(field_list:client_baseserver.guild_items_history._item_historys)
  return _item_historys_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_item_history >*
guild_items_history::mutable__item_historys() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.guild_items_history._item_historys)
  return &_item_historys_;
}

// -------------------------------------------------------------------

// guild_item_history

// required uint32 _item_id = 1;
inline bool guild_item_history::has__item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_item_history::set_has__item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_item_history::clear_has__item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_item_history::clear__item_id() {
  _item_id_ = 0u;
  clear_has__item_id();
}
inline ::google::protobuf::uint32 guild_item_history::_item_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_item_history._item_id)
  return _item_id_;
}
inline void guild_item_history::set__item_id(::google::protobuf::uint32 value) {
  set_has__item_id();
  _item_id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_item_history._item_id)
}

// required string _receiver_name = 2;
inline bool guild_item_history::has__receiver_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guild_item_history::set_has__receiver_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guild_item_history::clear_has__receiver_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guild_item_history::clear__receiver_name() {
  if (_receiver_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _receiver_name_->clear();
  }
  clear_has__receiver_name();
}
inline const ::std::string& guild_item_history::_receiver_name() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_item_history._receiver_name)
  return *_receiver_name_;
}
inline void guild_item_history::set__receiver_name(const ::std::string& value) {
  set_has__receiver_name();
  if (_receiver_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _receiver_name_ = new ::std::string;
  }
  _receiver_name_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.guild_item_history._receiver_name)
}
inline void guild_item_history::set__receiver_name(const char* value) {
  set_has__receiver_name();
  if (_receiver_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _receiver_name_ = new ::std::string;
  }
  _receiver_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.guild_item_history._receiver_name)
}
inline void guild_item_history::set__receiver_name(const char* value, size_t size) {
  set_has__receiver_name();
  if (_receiver_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _receiver_name_ = new ::std::string;
  }
  _receiver_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.guild_item_history._receiver_name)
}
inline ::std::string* guild_item_history::mutable__receiver_name() {
  set_has__receiver_name();
  if (_receiver_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _receiver_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_item_history._receiver_name)
  return _receiver_name_;
}
inline ::std::string* guild_item_history::release__receiver_name() {
  clear_has__receiver_name();
  if (_receiver_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = _receiver_name_;
    _receiver_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void guild_item_history::set_allocated__receiver_name(::std::string* _receiver_name) {
  if (_receiver_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete _receiver_name_;
  }
  if (_receiver_name) {
    set_has__receiver_name();
    _receiver_name_ = _receiver_name;
  } else {
    clear_has__receiver_name();
    _receiver_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_item_history._receiver_name)
}

// required uint32 _send_time = 3;
inline bool guild_item_history::has__send_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void guild_item_history::set_has__send_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void guild_item_history::clear_has__send_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void guild_item_history::clear__send_time() {
  _send_time_ = 0u;
  clear_has__send_time();
}
inline ::google::protobuf::uint32 guild_item_history::_send_time() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_item_history._send_time)
  return _send_time_;
}
inline void guild_item_history::set__send_time(::google::protobuf::uint32 value) {
  set_has__send_time();
  _send_time_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_item_history._send_time)
}

// optional string _sender_name = 4;
inline bool guild_item_history::has__sender_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void guild_item_history::set_has__sender_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void guild_item_history::clear_has__sender_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void guild_item_history::clear__sender_name() {
  if (_sender_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _sender_name_->clear();
  }
  clear_has__sender_name();
}
inline const ::std::string& guild_item_history::_sender_name() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_item_history._sender_name)
  return *_sender_name_;
}
inline void guild_item_history::set__sender_name(const ::std::string& value) {
  set_has__sender_name();
  if (_sender_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _sender_name_ = new ::std::string;
  }
  _sender_name_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.guild_item_history._sender_name)
}
inline void guild_item_history::set__sender_name(const char* value) {
  set_has__sender_name();
  if (_sender_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _sender_name_ = new ::std::string;
  }
  _sender_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.guild_item_history._sender_name)
}
inline void guild_item_history::set__sender_name(const char* value, size_t size) {
  set_has__sender_name();
  if (_sender_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _sender_name_ = new ::std::string;
  }
  _sender_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.guild_item_history._sender_name)
}
inline ::std::string* guild_item_history::mutable__sender_name() {
  set_has__sender_name();
  if (_sender_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _sender_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_item_history._sender_name)
  return _sender_name_;
}
inline ::std::string* guild_item_history::release__sender_name() {
  clear_has__sender_name();
  if (_sender_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = _sender_name_;
    _sender_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void guild_item_history::set_allocated__sender_name(::std::string* _sender_name) {
  if (_sender_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete _sender_name_;
  }
  if (_sender_name) {
    set_has__sender_name();
    _sender_name_ = _sender_name;
  } else {
    clear_has__sender_name();
    _sender_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_item_history._sender_name)
}

// -------------------------------------------------------------------

// guild_challenger_damage

// required .client_baseserver.guild_challenger _challenger = 1;
inline bool guild_challenger_damage::has__challenger() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_challenger_damage::set_has__challenger() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_challenger_damage::clear_has__challenger() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_challenger_damage::clear__challenger() {
  if (_challenger_ != NULL) _challenger_->::client_baseserver::guild_challenger::Clear();
  clear_has__challenger();
}
inline const ::client_baseserver::guild_challenger& guild_challenger_damage::_challenger() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_challenger_damage._challenger)
  return _challenger_ != NULL ? *_challenger_ : *default_instance_->_challenger_;
}
inline ::client_baseserver::guild_challenger* guild_challenger_damage::mutable__challenger() {
  set_has__challenger();
  if (_challenger_ == NULL) _challenger_ = new ::client_baseserver::guild_challenger;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_challenger_damage._challenger)
  return _challenger_;
}
inline ::client_baseserver::guild_challenger* guild_challenger_damage::release__challenger() {
  clear_has__challenger();
  ::client_baseserver::guild_challenger* temp = _challenger_;
  _challenger_ = NULL;
  return temp;
}
inline void guild_challenger_damage::set_allocated__challenger(::client_baseserver::guild_challenger* _challenger) {
  delete _challenger_;
  _challenger_ = _challenger;
  if (_challenger) {
    set_has__challenger();
  } else {
    clear_has__challenger();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_challenger_damage._challenger)
}

// required uint32 _damage = 2;
inline bool guild_challenger_damage::has__damage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guild_challenger_damage::set_has__damage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guild_challenger_damage::clear_has__damage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guild_challenger_damage::clear__damage() {
  _damage_ = 0u;
  clear_has__damage();
}
inline ::google::protobuf::uint32 guild_challenger_damage::_damage() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_challenger_damage._damage)
  return _damage_;
}
inline void guild_challenger_damage::set__damage(::google::protobuf::uint32 value) {
  set_has__damage();
  _damage_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_challenger_damage._damage)
}

// -------------------------------------------------------------------

// guild_instance_damage

// required uint32 _isthere = 1;
inline bool guild_instance_damage::has__isthere() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_instance_damage::set_has__isthere() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_instance_damage::clear_has__isthere() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_instance_damage::clear__isthere() {
  _isthere_ = 0u;
  clear_has__isthere();
}
inline ::google::protobuf::uint32 guild_instance_damage::_isthere() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_damage._isthere)
  return _isthere_;
}
inline void guild_instance_damage::set__isthere(::google::protobuf::uint32 value) {
  set_has__isthere();
  _isthere_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_damage._isthere)
}

// repeated .client_baseserver.guild_challenger_damage _damages = 2;
inline int guild_instance_damage::_damages_size() const {
  return _damages_.size();
}
inline void guild_instance_damage::clear__damages() {
  _damages_.Clear();
}
inline const ::client_baseserver::guild_challenger_damage& guild_instance_damage::_damages(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_damage._damages)
  return _damages_.Get(index);
}
inline ::client_baseserver::guild_challenger_damage* guild_instance_damage::mutable__damages(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_instance_damage._damages)
  return _damages_.Mutable(index);
}
inline ::client_baseserver::guild_challenger_damage* guild_instance_damage::add__damages() {
  // @@protoc_insertion_point(field_add:client_baseserver.guild_instance_damage._damages)
  return _damages_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_challenger_damage >&
guild_instance_damage::_damages() const {
  // @@protoc_insertion_point(field_list:client_baseserver.guild_instance_damage._damages)
  return _damages_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_challenger_damage >*
guild_instance_damage::mutable__damages() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.guild_instance_damage._damages)
  return &_damages_;
}

// -------------------------------------------------------------------

// guild_drop_give

// required .client_baseserver.result _result = 1;
inline bool guild_drop_give::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_drop_give::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_drop_give::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_drop_give::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result guild_drop_give::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_drop_give._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void guild_drop_give::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_drop_give._result)
}

// -------------------------------------------------------------------

// guild_drop_item_info

// required uint32 _item_id = 1;
inline bool guild_drop_item_info::has__item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_drop_item_info::set_has__item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_drop_item_info::clear_has__item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_drop_item_info::clear__item_id() {
  _item_id_ = 0u;
  clear_has__item_id();
}
inline ::google::protobuf::uint32 guild_drop_item_info::_item_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_drop_item_info._item_id)
  return _item_id_;
}
inline void guild_drop_item_info::set__item_id(::google::protobuf::uint32 value) {
  set_has__item_id();
  _item_id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_drop_item_info._item_id)
}

// required uint32 _time_out_end = 2;
inline bool guild_drop_item_info::has__time_out_end() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guild_drop_item_info::set_has__time_out_end() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guild_drop_item_info::clear_has__time_out_end() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guild_drop_item_info::clear__time_out_end() {
  _time_out_end_ = 0u;
  clear_has__time_out_end();
}
inline ::google::protobuf::uint32 guild_drop_item_info::_time_out_end() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_drop_item_info._time_out_end)
  return _time_out_end_;
}
inline void guild_drop_item_info::set__time_out_end(::google::protobuf::uint32 value) {
  set_has__time_out_end();
  _time_out_end_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_drop_item_info._time_out_end)
}

// repeated uint32 _user_id = 3;
inline int guild_drop_item_info::_user_id_size() const {
  return _user_id_.size();
}
inline void guild_drop_item_info::clear__user_id() {
  _user_id_.Clear();
}
inline ::google::protobuf::uint32 guild_drop_item_info::_user_id(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_drop_item_info._user_id)
  return _user_id_.Get(index);
}
inline void guild_drop_item_info::set__user_id(int index, ::google::protobuf::uint32 value) {
  _user_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.guild_drop_item_info._user_id)
}
inline void guild_drop_item_info::add__user_id(::google::protobuf::uint32 value) {
  _user_id_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.guild_drop_item_info._user_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
guild_drop_item_info::_user_id() const {
  // @@protoc_insertion_point(field_list:client_baseserver.guild_drop_item_info._user_id)
  return _user_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
guild_drop_item_info::mutable__user_id() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.guild_drop_item_info._user_id)
  return &_user_id_;
}

// -------------------------------------------------------------------

// guild_drop_item

// required uint32 _raid_id = 1;
inline bool guild_drop_item::has__raid_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_drop_item::set_has__raid_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_drop_item::clear_has__raid_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_drop_item::clear__raid_id() {
  _raid_id_ = 0u;
  clear_has__raid_id();
}
inline ::google::protobuf::uint32 guild_drop_item::_raid_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_drop_item._raid_id)
  return _raid_id_;
}
inline void guild_drop_item::set__raid_id(::google::protobuf::uint32 value) {
  set_has__raid_id();
  _raid_id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_drop_item._raid_id)
}

// repeated .client_baseserver.guild_instance_dps _dps_list = 2;
inline int guild_drop_item::_dps_list_size() const {
  return _dps_list_.size();
}
inline void guild_drop_item::clear__dps_list() {
  _dps_list_.Clear();
}
inline const ::client_baseserver::guild_instance_dps& guild_drop_item::_dps_list(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_drop_item._dps_list)
  return _dps_list_.Get(index);
}
inline ::client_baseserver::guild_instance_dps* guild_drop_item::mutable__dps_list(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_drop_item._dps_list)
  return _dps_list_.Mutable(index);
}
inline ::client_baseserver::guild_instance_dps* guild_drop_item::add__dps_list() {
  // @@protoc_insertion_point(field_add:client_baseserver.guild_drop_item._dps_list)
  return _dps_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_instance_dps >&
guild_drop_item::_dps_list() const {
  // @@protoc_insertion_point(field_list:client_baseserver.guild_drop_item._dps_list)
  return _dps_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_instance_dps >*
guild_drop_item::mutable__dps_list() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.guild_drop_item._dps_list)
  return &_dps_list_;
}

// repeated .client_baseserver.guild_drop_item_info _item_info = 3;
inline int guild_drop_item::_item_info_size() const {
  return _item_info_.size();
}
inline void guild_drop_item::clear__item_info() {
  _item_info_.Clear();
}
inline const ::client_baseserver::guild_drop_item_info& guild_drop_item::_item_info(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_drop_item._item_info)
  return _item_info_.Get(index);
}
inline ::client_baseserver::guild_drop_item_info* guild_drop_item::mutable__item_info(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_drop_item._item_info)
  return _item_info_.Mutable(index);
}
inline ::client_baseserver::guild_drop_item_info* guild_drop_item::add__item_info() {
  // @@protoc_insertion_point(field_add:client_baseserver.guild_drop_item._item_info)
  return _item_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_drop_item_info >&
guild_drop_item::_item_info() const {
  // @@protoc_insertion_point(field_list:client_baseserver.guild_drop_item._item_info)
  return _item_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_drop_item_info >*
guild_drop_item::mutable__item_info() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.guild_drop_item._item_info)
  return &_item_info_;
}

// -------------------------------------------------------------------

// guild_instance_dps

// required uint32 _uid = 1;
inline bool guild_instance_dps::has__uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_instance_dps::set_has__uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_instance_dps::clear_has__uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_instance_dps::clear__uid() {
  _uid_ = 0u;
  clear_has__uid();
}
inline ::google::protobuf::uint32 guild_instance_dps::_uid() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_dps._uid)
  return _uid_;
}
inline void guild_instance_dps::set__uid(::google::protobuf::uint32 value) {
  set_has__uid();
  _uid_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_dps._uid)
}

// required uint32 _dps = 2;
inline bool guild_instance_dps::has__dps() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guild_instance_dps::set_has__dps() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guild_instance_dps::clear_has__dps() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guild_instance_dps::clear__dps() {
  _dps_ = 0u;
  clear_has__dps();
}
inline ::google::protobuf::uint32 guild_instance_dps::_dps() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_dps._dps)
  return _dps_;
}
inline void guild_instance_dps::set__dps(::google::protobuf::uint32 value) {
  set_has__dps();
  _dps_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_dps._dps)
}

// -------------------------------------------------------------------

// guild_drop_info

// repeated .client_baseserver.guild_member _members = 1;
inline int guild_drop_info::_members_size() const {
  return _members_.size();
}
inline void guild_drop_info::clear__members() {
  _members_.Clear();
}
inline const ::client_baseserver::guild_member& guild_drop_info::_members(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_drop_info._members)
  return _members_.Get(index);
}
inline ::client_baseserver::guild_member* guild_drop_info::mutable__members(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_drop_info._members)
  return _members_.Mutable(index);
}
inline ::client_baseserver::guild_member* guild_drop_info::add__members() {
  // @@protoc_insertion_point(field_add:client_baseserver.guild_drop_info._members)
  return _members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_member >&
guild_drop_info::_members() const {
  // @@protoc_insertion_point(field_list:client_baseserver.guild_drop_info._members)
  return _members_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_member >*
guild_drop_info::mutable__members() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.guild_drop_info._members)
  return &_members_;
}

// repeated .client_baseserver.guild_drop_item _items = 2;
inline int guild_drop_info::_items_size() const {
  return _items_.size();
}
inline void guild_drop_info::clear__items() {
  _items_.Clear();
}
inline const ::client_baseserver::guild_drop_item& guild_drop_info::_items(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_drop_info._items)
  return _items_.Get(index);
}
inline ::client_baseserver::guild_drop_item* guild_drop_info::mutable__items(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_drop_info._items)
  return _items_.Mutable(index);
}
inline ::client_baseserver::guild_drop_item* guild_drop_info::add__items() {
  // @@protoc_insertion_point(field_add:client_baseserver.guild_drop_info._items)
  return _items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_drop_item >&
guild_drop_info::_items() const {
  // @@protoc_insertion_point(field_list:client_baseserver.guild_drop_info._items)
  return _items_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_drop_item >*
guild_drop_info::mutable__items() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.guild_drop_info._items)
  return &_items_;
}

// -------------------------------------------------------------------

// guild_instance_apply

// required .client_baseserver.result _result = 1;
inline bool guild_instance_apply::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_instance_apply::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_instance_apply::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_instance_apply::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result guild_instance_apply::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_apply._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void guild_instance_apply::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_apply._result)
}

// required .client_baseserver.guild_app_queue _app_queue = 2;
inline bool guild_instance_apply::has__app_queue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guild_instance_apply::set_has__app_queue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guild_instance_apply::clear_has__app_queue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guild_instance_apply::clear__app_queue() {
  if (_app_queue_ != NULL) _app_queue_->::client_baseserver::guild_app_queue::Clear();
  clear_has__app_queue();
}
inline const ::client_baseserver::guild_app_queue& guild_instance_apply::_app_queue() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_apply._app_queue)
  return _app_queue_ != NULL ? *_app_queue_ : *default_instance_->_app_queue_;
}
inline ::client_baseserver::guild_app_queue* guild_instance_apply::mutable__app_queue() {
  set_has__app_queue();
  if (_app_queue_ == NULL) _app_queue_ = new ::client_baseserver::guild_app_queue;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_instance_apply._app_queue)
  return _app_queue_;
}
inline ::client_baseserver::guild_app_queue* guild_instance_apply::release__app_queue() {
  clear_has__app_queue();
  ::client_baseserver::guild_app_queue* temp = _app_queue_;
  _app_queue_ = NULL;
  return temp;
}
inline void guild_instance_apply::set_allocated__app_queue(::client_baseserver::guild_app_queue* _app_queue) {
  delete _app_queue_;
  _app_queue_ = _app_queue;
  if (_app_queue) {
    set_has__app_queue();
  } else {
    clear_has__app_queue();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_instance_apply._app_queue)
}

// -------------------------------------------------------------------

// guild_instance_info

// required uint32 _raid_id = 1;
inline bool guild_instance_info::has__raid_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_instance_info::set_has__raid_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_instance_info::clear_has__raid_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_instance_info::clear__raid_id() {
  _raid_id_ = 0u;
  clear_has__raid_id();
}
inline ::google::protobuf::uint32 guild_instance_info::_raid_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_info._raid_id)
  return _raid_id_;
}
inline void guild_instance_info::set__raid_id(::google::protobuf::uint32 value) {
  set_has__raid_id();
  _raid_id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_info._raid_id)
}

// required uint32 _stage_index = 2;
inline bool guild_instance_info::has__stage_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guild_instance_info::set_has__stage_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guild_instance_info::clear_has__stage_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guild_instance_info::clear__stage_index() {
  _stage_index_ = 0u;
  clear_has__stage_index();
}
inline ::google::protobuf::uint32 guild_instance_info::_stage_index() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_info._stage_index)
  return _stage_index_;
}
inline void guild_instance_info::set__stage_index(::google::protobuf::uint32 value) {
  set_has__stage_index();
  _stage_index_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_info._stage_index)
}

// required uint32 _wave_index = 3;
inline bool guild_instance_info::has__wave_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void guild_instance_info::set_has__wave_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void guild_instance_info::clear_has__wave_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void guild_instance_info::clear__wave_index() {
  _wave_index_ = 0u;
  clear_has__wave_index();
}
inline ::google::protobuf::uint32 guild_instance_info::_wave_index() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_info._wave_index)
  return _wave_index_;
}
inline void guild_instance_info::set__wave_index(::google::protobuf::uint32 value) {
  set_has__wave_index();
  _wave_index_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_info._wave_index)
}

// repeated uint32 _hp_info = 4;
inline int guild_instance_info::_hp_info_size() const {
  return _hp_info_.size();
}
inline void guild_instance_info::clear__hp_info() {
  _hp_info_.Clear();
}
inline ::google::protobuf::uint32 guild_instance_info::_hp_info(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_info._hp_info)
  return _hp_info_.Get(index);
}
inline void guild_instance_info::set__hp_info(int index, ::google::protobuf::uint32 value) {
  _hp_info_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_info._hp_info)
}
inline void guild_instance_info::add__hp_info(::google::protobuf::uint32 value) {
  _hp_info_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.guild_instance_info._hp_info)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
guild_instance_info::_hp_info() const {
  // @@protoc_insertion_point(field_list:client_baseserver.guild_instance_info._hp_info)
  return _hp_info_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
guild_instance_info::mutable__hp_info() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.guild_instance_info._hp_info)
  return &_hp_info_;
}

// -------------------------------------------------------------------

// guild_instance_start

// required .client_baseserver.guild_instance_info _instance_info = 1;
inline bool guild_instance_start::has__instance_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_instance_start::set_has__instance_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_instance_start::clear_has__instance_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_instance_start::clear__instance_info() {
  if (_instance_info_ != NULL) _instance_info_->::client_baseserver::guild_instance_info::Clear();
  clear_has__instance_info();
}
inline const ::client_baseserver::guild_instance_info& guild_instance_start::_instance_info() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_start._instance_info)
  return _instance_info_ != NULL ? *_instance_info_ : *default_instance_->_instance_info_;
}
inline ::client_baseserver::guild_instance_info* guild_instance_start::mutable__instance_info() {
  set_has__instance_info();
  if (_instance_info_ == NULL) _instance_info_ = new ::client_baseserver::guild_instance_info;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_instance_start._instance_info)
  return _instance_info_;
}
inline ::client_baseserver::guild_instance_info* guild_instance_start::release__instance_info() {
  clear_has__instance_info();
  ::client_baseserver::guild_instance_info* temp = _instance_info_;
  _instance_info_ = NULL;
  return temp;
}
inline void guild_instance_start::set_allocated__instance_info(::client_baseserver::guild_instance_info* _instance_info) {
  delete _instance_info_;
  _instance_info_ = _instance_info;
  if (_instance_info) {
    set_has__instance_info();
  } else {
    clear_has__instance_info();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_instance_start._instance_info)
}

// required uint32 _rseed = 2;
inline bool guild_instance_start::has__rseed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guild_instance_start::set_has__rseed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guild_instance_start::clear_has__rseed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guild_instance_start::clear__rseed() {
  _rseed_ = 0u;
  clear_has__rseed();
}
inline ::google::protobuf::uint32 guild_instance_start::_rseed() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_start._rseed)
  return _rseed_;
}
inline void guild_instance_start::set__rseed(::google::protobuf::uint32 value) {
  set_has__rseed();
  _rseed_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_start._rseed)
}

// repeated uint32 _loots = 3;
inline int guild_instance_start::_loots_size() const {
  return _loots_.size();
}
inline void guild_instance_start::clear__loots() {
  _loots_.Clear();
}
inline ::google::protobuf::uint32 guild_instance_start::_loots(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_start._loots)
  return _loots_.Get(index);
}
inline void guild_instance_start::set__loots(int index, ::google::protobuf::uint32 value) {
  _loots_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_start._loots)
}
inline void guild_instance_start::add__loots(::google::protobuf::uint32 value) {
  _loots_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.guild_instance_start._loots)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
guild_instance_start::_loots() const {
  // @@protoc_insertion_point(field_list:client_baseserver.guild_instance_start._loots)
  return _loots_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
guild_instance_start::mutable__loots() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.guild_instance_start._loots)
  return &_loots_;
}

// repeated .client_baseserver.guild_stage_hp_drop _hp_drop = 4;
inline int guild_instance_start::_hp_drop_size() const {
  return _hp_drop_.size();
}
inline void guild_instance_start::clear__hp_drop() {
  _hp_drop_.Clear();
}
inline const ::client_baseserver::guild_stage_hp_drop& guild_instance_start::_hp_drop(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_start._hp_drop)
  return _hp_drop_.Get(index);
}
inline ::client_baseserver::guild_stage_hp_drop* guild_instance_start::mutable__hp_drop(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_instance_start._hp_drop)
  return _hp_drop_.Mutable(index);
}
inline ::client_baseserver::guild_stage_hp_drop* guild_instance_start::add__hp_drop() {
  // @@protoc_insertion_point(field_add:client_baseserver.guild_instance_start._hp_drop)
  return _hp_drop_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_stage_hp_drop >&
guild_instance_start::_hp_drop() const {
  // @@protoc_insertion_point(field_list:client_baseserver.guild_instance_start._hp_drop)
  return _hp_drop_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_stage_hp_drop >*
guild_instance_start::mutable__hp_drop() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.guild_instance_start._hp_drop)
  return &_hp_drop_;
}

// -------------------------------------------------------------------

// guild_stage_hp_drop

// required uint32 _monster_info = 1;
inline bool guild_stage_hp_drop::has__monster_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_stage_hp_drop::set_has__monster_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_stage_hp_drop::clear_has__monster_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_stage_hp_drop::clear__monster_info() {
  _monster_info_ = 0u;
  clear_has__monster_info();
}
inline ::google::protobuf::uint32 guild_stage_hp_drop::_monster_info() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_stage_hp_drop._monster_info)
  return _monster_info_;
}
inline void guild_stage_hp_drop::set__monster_info(::google::protobuf::uint32 value) {
  set_has__monster_info();
  _monster_info_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_stage_hp_drop._monster_info)
}

// repeated .client_baseserver.hp_drop _loots = 2;
inline int guild_stage_hp_drop::_loots_size() const {
  return _loots_.size();
}
inline void guild_stage_hp_drop::clear__loots() {
  _loots_.Clear();
}
inline const ::client_baseserver::hp_drop& guild_stage_hp_drop::_loots(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_stage_hp_drop._loots)
  return _loots_.Get(index);
}
inline ::client_baseserver::hp_drop* guild_stage_hp_drop::mutable__loots(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_stage_hp_drop._loots)
  return _loots_.Mutable(index);
}
inline ::client_baseserver::hp_drop* guild_stage_hp_drop::add__loots() {
  // @@protoc_insertion_point(field_add:client_baseserver.guild_stage_hp_drop._loots)
  return _loots_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hp_drop >&
guild_stage_hp_drop::_loots() const {
  // @@protoc_insertion_point(field_list:client_baseserver.guild_stage_hp_drop._loots)
  return _loots_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hp_drop >*
guild_stage_hp_drop::mutable__loots() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.guild_stage_hp_drop._loots)
  return &_loots_;
}

// -------------------------------------------------------------------

// hp_drop

// required uint32 _per = 1;
inline bool hp_drop::has__per() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void hp_drop::set_has__per() {
  _has_bits_[0] |= 0x00000001u;
}
inline void hp_drop::clear_has__per() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void hp_drop::clear__per() {
  _per_ = 0u;
  clear_has__per();
}
inline ::google::protobuf::uint32 hp_drop::_per() const {
  // @@protoc_insertion_point(field_get:client_baseserver.hp_drop._per)
  return _per_;
}
inline void hp_drop::set__per(::google::protobuf::uint32 value) {
  set_has__per();
  _per_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.hp_drop._per)
}

// repeated uint32 _items = 2;
inline int hp_drop::_items_size() const {
  return _items_.size();
}
inline void hp_drop::clear__items() {
  _items_.Clear();
}
inline ::google::protobuf::uint32 hp_drop::_items(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.hp_drop._items)
  return _items_.Get(index);
}
inline void hp_drop::set__items(int index, ::google::protobuf::uint32 value) {
  _items_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.hp_drop._items)
}
inline void hp_drop::add__items(::google::protobuf::uint32 value) {
  _items_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.hp_drop._items)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
hp_drop::_items() const {
  // @@protoc_insertion_point(field_list:client_baseserver.hp_drop._items)
  return _items_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
hp_drop::mutable__items() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.hp_drop._items)
  return &_items_;
}

// -------------------------------------------------------------------

// guild_instance_end_down

// required .client_baseserver.guild_instance_summary _summary = 1;
inline bool guild_instance_end_down::has__summary() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_instance_end_down::set_has__summary() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_instance_end_down::clear_has__summary() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_instance_end_down::clear__summary() {
  if (_summary_ != NULL) _summary_->::client_baseserver::guild_instance_summary::Clear();
  clear_has__summary();
}
inline const ::client_baseserver::guild_instance_summary& guild_instance_end_down::_summary() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_end_down._summary)
  return _summary_ != NULL ? *_summary_ : *default_instance_->_summary_;
}
inline ::client_baseserver::guild_instance_summary* guild_instance_end_down::mutable__summary() {
  set_has__summary();
  if (_summary_ == NULL) _summary_ = new ::client_baseserver::guild_instance_summary;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_instance_end_down._summary)
  return _summary_;
}
inline ::client_baseserver::guild_instance_summary* guild_instance_end_down::release__summary() {
  clear_has__summary();
  ::client_baseserver::guild_instance_summary* temp = _summary_;
  _summary_ = NULL;
  return temp;
}
inline void guild_instance_end_down::set_allocated__summary(::client_baseserver::guild_instance_summary* _summary) {
  delete _summary_;
  _summary_ = _summary;
  if (_summary) {
    set_has__summary();
  } else {
    clear_has__summary();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_instance_end_down._summary)
}

// required .client_baseserver.battle_result _result = 2;
inline bool guild_instance_end_down::has__result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guild_instance_end_down::set_has__result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guild_instance_end_down::clear_has__result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guild_instance_end_down::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::battle_result guild_instance_end_down::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_end_down._result)
  return static_cast< ::client_baseserver::battle_result >(_result_);
}
inline void guild_instance_end_down::set__result(::client_baseserver::battle_result value) {
  assert(::client_baseserver::battle_result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_end_down._result)
}

// repeated uint32 _rewards = 3;
inline int guild_instance_end_down::_rewards_size() const {
  return _rewards_.size();
}
inline void guild_instance_end_down::clear__rewards() {
  _rewards_.Clear();
}
inline ::google::protobuf::uint32 guild_instance_end_down::_rewards(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_end_down._rewards)
  return _rewards_.Get(index);
}
inline void guild_instance_end_down::set__rewards(int index, ::google::protobuf::uint32 value) {
  _rewards_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_end_down._rewards)
}
inline void guild_instance_end_down::add__rewards(::google::protobuf::uint32 value) {
  _rewards_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.guild_instance_end_down._rewards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
guild_instance_end_down::_rewards() const {
  // @@protoc_insertion_point(field_list:client_baseserver.guild_instance_end_down._rewards)
  return _rewards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
guild_instance_end_down::mutable__rewards() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.guild_instance_end_down._rewards)
  return &_rewards_;
}

// repeated uint32 _apply_rewards = 4;
inline int guild_instance_end_down::_apply_rewards_size() const {
  return _apply_rewards_.size();
}
inline void guild_instance_end_down::clear__apply_rewards() {
  _apply_rewards_.Clear();
}
inline ::google::protobuf::uint32 guild_instance_end_down::_apply_rewards(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_end_down._apply_rewards)
  return _apply_rewards_.Get(index);
}
inline void guild_instance_end_down::set__apply_rewards(int index, ::google::protobuf::uint32 value) {
  _apply_rewards_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_end_down._apply_rewards)
}
inline void guild_instance_end_down::add__apply_rewards(::google::protobuf::uint32 value) {
  _apply_rewards_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.guild_instance_end_down._apply_rewards)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
guild_instance_end_down::_apply_rewards() const {
  // @@protoc_insertion_point(field_list:client_baseserver.guild_instance_end_down._apply_rewards)
  return _apply_rewards_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
guild_instance_end_down::mutable__apply_rewards() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.guild_instance_end_down._apply_rewards)
  return &_apply_rewards_;
}

// required uint32 _stage_old_progress = 5;
inline bool guild_instance_end_down::has__stage_old_progress() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void guild_instance_end_down::set_has__stage_old_progress() {
  _has_bits_[0] |= 0x00000010u;
}
inline void guild_instance_end_down::clear_has__stage_old_progress() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void guild_instance_end_down::clear__stage_old_progress() {
  _stage_old_progress_ = 0u;
  clear_has__stage_old_progress();
}
inline ::google::protobuf::uint32 guild_instance_end_down::_stage_old_progress() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_end_down._stage_old_progress)
  return _stage_old_progress_;
}
inline void guild_instance_end_down::set__stage_old_progress(::google::protobuf::uint32 value) {
  set_has__stage_old_progress();
  _stage_old_progress_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_end_down._stage_old_progress)
}

// required uint32 _join_times = 6;
inline bool guild_instance_end_down::has__join_times() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void guild_instance_end_down::set_has__join_times() {
  _has_bits_[0] |= 0x00000020u;
}
inline void guild_instance_end_down::clear_has__join_times() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void guild_instance_end_down::clear__join_times() {
  _join_times_ = 0u;
  clear_has__join_times();
}
inline ::google::protobuf::uint32 guild_instance_end_down::_join_times() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_end_down._join_times)
  return _join_times_;
}
inline void guild_instance_end_down::set__join_times(::google::protobuf::uint32 value) {
  set_has__join_times();
  _join_times_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_end_down._join_times)
}

// optional .client_baseserver.break_history _break_history = 7;
inline bool guild_instance_end_down::has__break_history() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void guild_instance_end_down::set_has__break_history() {
  _has_bits_[0] |= 0x00000040u;
}
inline void guild_instance_end_down::clear_has__break_history() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void guild_instance_end_down::clear__break_history() {
  if (_break_history_ != NULL) _break_history_->::client_baseserver::break_history::Clear();
  clear_has__break_history();
}
inline const ::client_baseserver::break_history& guild_instance_end_down::_break_history() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_end_down._break_history)
  return _break_history_ != NULL ? *_break_history_ : *default_instance_->_break_history_;
}
inline ::client_baseserver::break_history* guild_instance_end_down::mutable__break_history() {
  set_has__break_history();
  if (_break_history_ == NULL) _break_history_ = new ::client_baseserver::break_history;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_instance_end_down._break_history)
  return _break_history_;
}
inline ::client_baseserver::break_history* guild_instance_end_down::release__break_history() {
  clear_has__break_history();
  ::client_baseserver::break_history* temp = _break_history_;
  _break_history_ = NULL;
  return temp;
}
inline void guild_instance_end_down::set_allocated__break_history(::client_baseserver::break_history* _break_history) {
  delete _break_history_;
  _break_history_ = _break_history;
  if (_break_history) {
    set_has__break_history();
  } else {
    clear_has__break_history();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_instance_end_down._break_history)
}

// -------------------------------------------------------------------

// break_history

// required uint32 _diamond = 1;
inline bool break_history::has__diamond() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void break_history::set_has__diamond() {
  _has_bits_[0] |= 0x00000001u;
}
inline void break_history::clear_has__diamond() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void break_history::clear__diamond() {
  _diamond_ = 0u;
  clear_has__diamond();
}
inline ::google::protobuf::uint32 break_history::_diamond() const {
  // @@protoc_insertion_point(field_get:client_baseserver.break_history._diamond)
  return _diamond_;
}
inline void break_history::set__diamond(::google::protobuf::uint32 value) {
  set_has__diamond();
  _diamond_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.break_history._diamond)
}

// required uint32 _guildpoint = 2;
inline bool break_history::has__guildpoint() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void break_history::set_has__guildpoint() {
  _has_bits_[0] |= 0x00000002u;
}
inline void break_history::clear_has__guildpoint() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void break_history::clear__guildpoint() {
  _guildpoint_ = 0u;
  clear_has__guildpoint();
}
inline ::google::protobuf::uint32 break_history::_guildpoint() const {
  // @@protoc_insertion_point(field_get:client_baseserver.break_history._guildpoint)
  return _guildpoint_;
}
inline void break_history::set__guildpoint(::google::protobuf::uint32 value) {
  set_has__guildpoint();
  _guildpoint_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.break_history._guildpoint)
}

// required uint32 _dps = 3;
inline bool break_history::has__dps() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void break_history::set_has__dps() {
  _has_bits_[0] |= 0x00000004u;
}
inline void break_history::clear_has__dps() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void break_history::clear__dps() {
  _dps_ = 0u;
  clear_has__dps();
}
inline ::google::protobuf::uint32 break_history::_dps() const {
  // @@protoc_insertion_point(field_get:client_baseserver.break_history._dps)
  return _dps_;
}
inline void break_history::set__dps(::google::protobuf::uint32 value) {
  set_has__dps();
  _dps_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.break_history._dps)
}

// optional uint32 _old_dps = 4;
inline bool break_history::has__old_dps() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void break_history::set_has__old_dps() {
  _has_bits_[0] |= 0x00000008u;
}
inline void break_history::clear_has__old_dps() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void break_history::clear__old_dps() {
  _old_dps_ = 0u;
  clear_has__old_dps();
}
inline ::google::protobuf::uint32 break_history::_old_dps() const {
  // @@protoc_insertion_point(field_get:client_baseserver.break_history._old_dps)
  return _old_dps_;
}
inline void break_history::set__old_dps(::google::protobuf::uint32 value) {
  set_has__old_dps();
  _old_dps_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.break_history._old_dps)
}

// optional .client_baseserver.user_summary _old_summary = 5;
inline bool break_history::has__old_summary() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void break_history::set_has__old_summary() {
  _has_bits_[0] |= 0x00000010u;
}
inline void break_history::clear_has__old_summary() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void break_history::clear__old_summary() {
  if (_old_summary_ != NULL) _old_summary_->::client_baseserver::user_summary::Clear();
  clear_has__old_summary();
}
inline const ::client_baseserver::user_summary& break_history::_old_summary() const {
  // @@protoc_insertion_point(field_get:client_baseserver.break_history._old_summary)
  return _old_summary_ != NULL ? *_old_summary_ : *default_instance_->_old_summary_;
}
inline ::client_baseserver::user_summary* break_history::mutable__old_summary() {
  set_has__old_summary();
  if (_old_summary_ == NULL) _old_summary_ = new ::client_baseserver::user_summary;
  // @@protoc_insertion_point(field_mutable:client_baseserver.break_history._old_summary)
  return _old_summary_;
}
inline ::client_baseserver::user_summary* break_history::release__old_summary() {
  clear_has__old_summary();
  ::client_baseserver::user_summary* temp = _old_summary_;
  _old_summary_ = NULL;
  return temp;
}
inline void break_history::set_allocated__old_summary(::client_baseserver::user_summary* _old_summary) {
  delete _old_summary_;
  _old_summary_ = _old_summary;
  if (_old_summary) {
    set_has__old_summary();
  } else {
    clear_has__old_summary();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.break_history._old_summary)
}

// -------------------------------------------------------------------

// guild_instance_open

// required .client_baseserver.result _result = 1;
inline bool guild_instance_open::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_instance_open::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_instance_open::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_instance_open::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result guild_instance_open::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_open._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void guild_instance_open::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_open._result)
}

// required uint32 _raid_id = 2;
inline bool guild_instance_open::has__raid_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guild_instance_open::set_has__raid_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guild_instance_open::clear_has__raid_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guild_instance_open::clear__raid_id() {
  _raid_id_ = 0u;
  clear_has__raid_id();
}
inline ::google::protobuf::uint32 guild_instance_open::_raid_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_open._raid_id)
  return _raid_id_;
}
inline void guild_instance_open::set__raid_id(::google::protobuf::uint32 value) {
  set_has__raid_id();
  _raid_id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_open._raid_id)
}

// required uint32 _left_time = 3;
inline bool guild_instance_open::has__left_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void guild_instance_open::set_has__left_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void guild_instance_open::clear_has__left_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void guild_instance_open::clear__left_time() {
  _left_time_ = 0u;
  clear_has__left_time();
}
inline ::google::protobuf::uint32 guild_instance_open::_left_time() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_open._left_time)
  return _left_time_;
}
inline void guild_instance_open::set__left_time(::google::protobuf::uint32 value) {
  set_has__left_time();
  _left_time_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_open._left_time)
}

// -------------------------------------------------------------------

// guild_create

// required .client_baseserver.result _result = 1;
inline bool guild_create::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_create::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_create::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_create::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result guild_create::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_create._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void guild_create::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_create._result)
}

// optional .client_baseserver.guild_info _guild_info = 2;
inline bool guild_create::has__guild_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guild_create::set_has__guild_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guild_create::clear_has__guild_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guild_create::clear__guild_info() {
  if (_guild_info_ != NULL) _guild_info_->::client_baseserver::guild_info::Clear();
  clear_has__guild_info();
}
inline const ::client_baseserver::guild_info& guild_create::_guild_info() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_create._guild_info)
  return _guild_info_ != NULL ? *_guild_info_ : *default_instance_->_guild_info_;
}
inline ::client_baseserver::guild_info* guild_create::mutable__guild_info() {
  set_has__guild_info();
  if (_guild_info_ == NULL) _guild_info_ = new ::client_baseserver::guild_info;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_create._guild_info)
  return _guild_info_;
}
inline ::client_baseserver::guild_info* guild_create::release__guild_info() {
  clear_has__guild_info();
  ::client_baseserver::guild_info* temp = _guild_info_;
  _guild_info_ = NULL;
  return temp;
}
inline void guild_create::set_allocated__guild_info(::client_baseserver::guild_info* _guild_info) {
  delete _guild_info_;
  _guild_info_ = _guild_info;
  if (_guild_info) {
    set_has__guild_info();
  } else {
    clear_has__guild_info();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_create._guild_info)
}

// -------------------------------------------------------------------

// guild_dismiss

// required .client_baseserver.result _result = 1;
inline bool guild_dismiss::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_dismiss::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_dismiss::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_dismiss::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result guild_dismiss::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_dismiss._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void guild_dismiss::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_dismiss._result)
}

// -------------------------------------------------------------------

// guild_info

// required .client_baseserver.guild_summary _summary = 1;
inline bool guild_info::has__summary() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_info::set_has__summary() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_info::clear_has__summary() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_info::clear__summary() {
  if (_summary_ != NULL) _summary_->::client_baseserver::guild_summary::Clear();
  clear_has__summary();
}
inline const ::client_baseserver::guild_summary& guild_info::_summary() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_info._summary)
  return _summary_ != NULL ? *_summary_ : *default_instance_->_summary_;
}
inline ::client_baseserver::guild_summary* guild_info::mutable__summary() {
  set_has__summary();
  if (_summary_ == NULL) _summary_ = new ::client_baseserver::guild_summary;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_info._summary)
  return _summary_;
}
inline ::client_baseserver::guild_summary* guild_info::release__summary() {
  clear_has__summary();
  ::client_baseserver::guild_summary* temp = _summary_;
  _summary_ = NULL;
  return temp;
}
inline void guild_info::set_allocated__summary(::client_baseserver::guild_summary* _summary) {
  delete _summary_;
  _summary_ = _summary;
  if (_summary) {
    set_has__summary();
  } else {
    clear_has__summary();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_info._summary)
}

// repeated .client_baseserver.guild_member _members = 2;
inline int guild_info::_members_size() const {
  return _members_.size();
}
inline void guild_info::clear__members() {
  _members_.Clear();
}
inline const ::client_baseserver::guild_member& guild_info::_members(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_info._members)
  return _members_.Get(index);
}
inline ::client_baseserver::guild_member* guild_info::mutable__members(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_info._members)
  return _members_.Mutable(index);
}
inline ::client_baseserver::guild_member* guild_info::add__members() {
  // @@protoc_insertion_point(field_add:client_baseserver.guild_info._members)
  return _members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_member >&
guild_info::_members() const {
  // @@protoc_insertion_point(field_list:client_baseserver.guild_info._members)
  return _members_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_member >*
guild_info::mutable__members() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.guild_info._members)
  return &_members_;
}

// repeated .client_baseserver.guild_applier _appliers = 3;
inline int guild_info::_appliers_size() const {
  return _appliers_.size();
}
inline void guild_info::clear__appliers() {
  _appliers_.Clear();
}
inline const ::client_baseserver::guild_applier& guild_info::_appliers(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_info._appliers)
  return _appliers_.Get(index);
}
inline ::client_baseserver::guild_applier* guild_info::mutable__appliers(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_info._appliers)
  return _appliers_.Mutable(index);
}
inline ::client_baseserver::guild_applier* guild_info::add__appliers() {
  // @@protoc_insertion_point(field_add:client_baseserver.guild_info._appliers)
  return _appliers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_applier >&
guild_info::_appliers() const {
  // @@protoc_insertion_point(field_list:client_baseserver.guild_info._appliers)
  return _appliers_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_applier >*
guild_info::mutable__appliers() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.guild_info._appliers)
  return &_appliers_;
}

// required uint32 _vitality = 4;
inline bool guild_info::has__vitality() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void guild_info::set_has__vitality() {
  _has_bits_[0] |= 0x00000008u;
}
inline void guild_info::clear_has__vitality() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void guild_info::clear__vitality() {
  _vitality_ = 0u;
  clear_has__vitality();
}
inline ::google::protobuf::uint32 guild_info::_vitality() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_info._vitality)
  return _vitality_;
}
inline void guild_info::set__vitality(::google::protobuf::uint32 value) {
  set_has__vitality();
  _vitality_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_info._vitality)
}

// required uint32 _self_vitality = 5;
inline bool guild_info::has__self_vitality() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void guild_info::set_has__self_vitality() {
  _has_bits_[0] |= 0x00000010u;
}
inline void guild_info::clear_has__self_vitality() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void guild_info::clear__self_vitality() {
  _self_vitality_ = 0u;
  clear_has__self_vitality();
}
inline ::google::protobuf::uint32 guild_info::_self_vitality() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_info._self_vitality)
  return _self_vitality_;
}
inline void guild_info::set__self_vitality(::google::protobuf::uint32 value) {
  set_has__self_vitality();
  _self_vitality_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_info._self_vitality)
}

// required uint32 _left_distribute_time = 6;
inline bool guild_info::has__left_distribute_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void guild_info::set_has__left_distribute_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void guild_info::clear_has__left_distribute_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void guild_info::clear__left_distribute_time() {
  _left_distribute_time_ = 0u;
  clear_has__left_distribute_time();
}
inline ::google::protobuf::uint32 guild_info::_left_distribute_time() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_info._left_distribute_time)
  return _left_distribute_time_;
}
inline void guild_info::set__left_distribute_time(::google::protobuf::uint32 value) {
  set_has__left_distribute_time();
  _left_distribute_time_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_info._left_distribute_time)
}

// -------------------------------------------------------------------

// guild_summary

// required uint32 _id = 1;
inline bool guild_summary::has__id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_summary::set_has__id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_summary::clear_has__id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_summary::clear__id() {
  _id_ = 0u;
  clear_has__id();
}
inline ::google::protobuf::uint32 guild_summary::_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_summary._id)
  return _id_;
}
inline void guild_summary::set__id(::google::protobuf::uint32 value) {
  set_has__id();
  _id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_summary._id)
}

// required string _name = 2;
inline bool guild_summary::has__name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guild_summary::set_has__name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guild_summary::clear_has__name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guild_summary::clear__name() {
  if (_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _name_->clear();
  }
  clear_has__name();
}
inline const ::std::string& guild_summary::_name() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_summary._name)
  return *_name_;
}
inline void guild_summary::set__name(const ::std::string& value) {
  set_has__name();
  if (_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _name_ = new ::std::string;
  }
  _name_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.guild_summary._name)
}
inline void guild_summary::set__name(const char* value) {
  set_has__name();
  if (_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _name_ = new ::std::string;
  }
  _name_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.guild_summary._name)
}
inline void guild_summary::set__name(const char* value, size_t size) {
  set_has__name();
  if (_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _name_ = new ::std::string;
  }
  _name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.guild_summary._name)
}
inline ::std::string* guild_summary::mutable__name() {
  set_has__name();
  if (_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_summary._name)
  return _name_;
}
inline ::std::string* guild_summary::release__name() {
  clear_has__name();
  if (_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = _name_;
    _name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void guild_summary::set_allocated__name(::std::string* _name) {
  if (_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete _name_;
  }
  if (_name) {
    set_has__name();
    _name_ = _name;
  } else {
    clear_has__name();
    _name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_summary._name)
}

// required uint32 _avatar = 3;
inline bool guild_summary::has__avatar() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void guild_summary::set_has__avatar() {
  _has_bits_[0] |= 0x00000004u;
}
inline void guild_summary::clear_has__avatar() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void guild_summary::clear__avatar() {
  _avatar_ = 0u;
  clear_has__avatar();
}
inline ::google::protobuf::uint32 guild_summary::_avatar() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_summary._avatar)
  return _avatar_;
}
inline void guild_summary::set__avatar(::google::protobuf::uint32 value) {
  set_has__avatar();
  _avatar_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_summary._avatar)
}

// required string _slogan = 4;
inline bool guild_summary::has__slogan() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void guild_summary::set_has__slogan() {
  _has_bits_[0] |= 0x00000008u;
}
inline void guild_summary::clear_has__slogan() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void guild_summary::clear__slogan() {
  if (_slogan_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _slogan_->clear();
  }
  clear_has__slogan();
}
inline const ::std::string& guild_summary::_slogan() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_summary._slogan)
  return *_slogan_;
}
inline void guild_summary::set__slogan(const ::std::string& value) {
  set_has__slogan();
  if (_slogan_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _slogan_ = new ::std::string;
  }
  _slogan_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.guild_summary._slogan)
}
inline void guild_summary::set__slogan(const char* value) {
  set_has__slogan();
  if (_slogan_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _slogan_ = new ::std::string;
  }
  _slogan_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.guild_summary._slogan)
}
inline void guild_summary::set__slogan(const char* value, size_t size) {
  set_has__slogan();
  if (_slogan_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _slogan_ = new ::std::string;
  }
  _slogan_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.guild_summary._slogan)
}
inline ::std::string* guild_summary::mutable__slogan() {
  set_has__slogan();
  if (_slogan_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _slogan_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_summary._slogan)
  return _slogan_;
}
inline ::std::string* guild_summary::release__slogan() {
  clear_has__slogan();
  if (_slogan_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = _slogan_;
    _slogan_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void guild_summary::set_allocated__slogan(::std::string* _slogan) {
  if (_slogan_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete _slogan_;
  }
  if (_slogan) {
    set_has__slogan();
    _slogan_ = _slogan;
  } else {
    clear_has__slogan();
    _slogan_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_summary._slogan)
}

// required .client_baseserver.guild_join_t _join_type = 5;
inline bool guild_summary::has__join_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void guild_summary::set_has__join_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void guild_summary::clear_has__join_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void guild_summary::clear__join_type() {
  _join_type_ = 1;
  clear_has__join_type();
}
inline ::client_baseserver::guild_join_t guild_summary::_join_type() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_summary._join_type)
  return static_cast< ::client_baseserver::guild_join_t >(_join_type_);
}
inline void guild_summary::set__join_type(::client_baseserver::guild_join_t value) {
  assert(::client_baseserver::guild_join_t_IsValid(value));
  set_has__join_type();
  _join_type_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_summary._join_type)
}

// required uint32 _join_limit = 6;
inline bool guild_summary::has__join_limit() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void guild_summary::set_has__join_limit() {
  _has_bits_[0] |= 0x00000020u;
}
inline void guild_summary::clear_has__join_limit() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void guild_summary::clear__join_limit() {
  _join_limit_ = 0u;
  clear_has__join_limit();
}
inline ::google::protobuf::uint32 guild_summary::_join_limit() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_summary._join_limit)
  return _join_limit_;
}
inline void guild_summary::set__join_limit(::google::protobuf::uint32 value) {
  set_has__join_limit();
  _join_limit_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_summary._join_limit)
}

// required uint32 _member_cnt = 7;
inline bool guild_summary::has__member_cnt() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void guild_summary::set_has__member_cnt() {
  _has_bits_[0] |= 0x00000040u;
}
inline void guild_summary::clear_has__member_cnt() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void guild_summary::clear__member_cnt() {
  _member_cnt_ = 0u;
  clear_has__member_cnt();
}
inline ::google::protobuf::uint32 guild_summary::_member_cnt() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_summary._member_cnt)
  return _member_cnt_;
}
inline void guild_summary::set__member_cnt(::google::protobuf::uint32 value) {
  set_has__member_cnt();
  _member_cnt_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_summary._member_cnt)
}

// required .client_baseserver.user_summary _president = 8;
inline bool guild_summary::has__president() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void guild_summary::set_has__president() {
  _has_bits_[0] |= 0x00000080u;
}
inline void guild_summary::clear_has__president() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void guild_summary::clear__president() {
  if (_president_ != NULL) _president_->::client_baseserver::user_summary::Clear();
  clear_has__president();
}
inline const ::client_baseserver::user_summary& guild_summary::_president() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_summary._president)
  return _president_ != NULL ? *_president_ : *default_instance_->_president_;
}
inline ::client_baseserver::user_summary* guild_summary::mutable__president() {
  set_has__president();
  if (_president_ == NULL) _president_ = new ::client_baseserver::user_summary;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_summary._president)
  return _president_;
}
inline ::client_baseserver::user_summary* guild_summary::release__president() {
  clear_has__president();
  ::client_baseserver::user_summary* temp = _president_;
  _president_ = NULL;
  return temp;
}
inline void guild_summary::set_allocated__president(::client_baseserver::user_summary* _president) {
  delete _president_;
  _president_ = _president;
  if (_president) {
    set_has__president();
  } else {
    clear_has__president();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_summary._president)
}

// optional uint32 _liveness = 9;
inline bool guild_summary::has__liveness() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void guild_summary::set_has__liveness() {
  _has_bits_[0] |= 0x00000100u;
}
inline void guild_summary::clear_has__liveness() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void guild_summary::clear__liveness() {
  _liveness_ = 0u;
  clear_has__liveness();
}
inline ::google::protobuf::uint32 guild_summary::_liveness() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_summary._liveness)
  return _liveness_;
}
inline void guild_summary::set__liveness(::google::protobuf::uint32 value) {
  set_has__liveness();
  _liveness_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_summary._liveness)
}

// optional uint32 _can_jump = 10;
inline bool guild_summary::has__can_jump() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void guild_summary::set_has__can_jump() {
  _has_bits_[0] |= 0x00000200u;
}
inline void guild_summary::clear_has__can_jump() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void guild_summary::clear__can_jump() {
  _can_jump_ = 0u;
  clear_has__can_jump();
}
inline ::google::protobuf::uint32 guild_summary::_can_jump() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_summary._can_jump)
  return _can_jump_;
}
inline void guild_summary::set__can_jump(::google::protobuf::uint32 value) {
  set_has__can_jump();
  _can_jump_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_summary._can_jump)
}

// optional uint32 _host_id = 11;
inline bool guild_summary::has__host_id() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void guild_summary::set_has__host_id() {
  _has_bits_[0] |= 0x00000400u;
}
inline void guild_summary::clear_has__host_id() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void guild_summary::clear__host_id() {
  _host_id_ = 0u;
  clear_has__host_id();
}
inline ::google::protobuf::uint32 guild_summary::_host_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_summary._host_id)
  return _host_id_;
}
inline void guild_summary::set__host_id(::google::protobuf::uint32 value) {
  set_has__host_id();
  _host_id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_summary._host_id)
}

// -------------------------------------------------------------------

// guild_member

// required uint32 _uid = 1;
inline bool guild_member::has__uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_member::set_has__uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_member::clear_has__uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_member::clear__uid() {
  _uid_ = 0u;
  clear_has__uid();
}
inline ::google::protobuf::uint32 guild_member::_uid() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_member._uid)
  return _uid_;
}
inline void guild_member::set__uid(::google::protobuf::uint32 value) {
  set_has__uid();
  _uid_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_member._uid)
}

// required .client_baseserver.user_summary _summary = 2;
inline bool guild_member::has__summary() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guild_member::set_has__summary() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guild_member::clear_has__summary() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guild_member::clear__summary() {
  if (_summary_ != NULL) _summary_->::client_baseserver::user_summary::Clear();
  clear_has__summary();
}
inline const ::client_baseserver::user_summary& guild_member::_summary() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_member._summary)
  return _summary_ != NULL ? *_summary_ : *default_instance_->_summary_;
}
inline ::client_baseserver::user_summary* guild_member::mutable__summary() {
  set_has__summary();
  if (_summary_ == NULL) _summary_ = new ::client_baseserver::user_summary;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_member._summary)
  return _summary_;
}
inline ::client_baseserver::user_summary* guild_member::release__summary() {
  clear_has__summary();
  ::client_baseserver::user_summary* temp = _summary_;
  _summary_ = NULL;
  return temp;
}
inline void guild_member::set_allocated__summary(::client_baseserver::user_summary* _summary) {
  delete _summary_;
  _summary_ = _summary;
  if (_summary) {
    set_has__summary();
  } else {
    clear_has__summary();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_member._summary)
}

// required .client_baseserver.guild_job_t _job = 3;
inline bool guild_member::has__job() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void guild_member::set_has__job() {
  _has_bits_[0] |= 0x00000004u;
}
inline void guild_member::clear_has__job() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void guild_member::clear__job() {
  _job_ = 1;
  clear_has__job();
}
inline ::client_baseserver::guild_job_t guild_member::_job() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_member._job)
  return static_cast< ::client_baseserver::guild_job_t >(_job_);
}
inline void guild_member::set__job(::client_baseserver::guild_job_t value) {
  assert(::client_baseserver::guild_job_t_IsValid(value));
  set_has__job();
  _job_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_member._job)
}

// required uint32 _last_login = 4;
inline bool guild_member::has__last_login() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void guild_member::set_has__last_login() {
  _has_bits_[0] |= 0x00000008u;
}
inline void guild_member::clear_has__last_login() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void guild_member::clear__last_login() {
  _last_login_ = 0u;
  clear_has__last_login();
}
inline ::google::protobuf::uint32 guild_member::_last_login() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_member._last_login)
  return _last_login_;
}
inline void guild_member::set__last_login(::google::protobuf::uint32 value) {
  set_has__last_login();
  _last_login_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_member._last_login)
}

// optional uint32 _active = 5;
inline bool guild_member::has__active() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void guild_member::set_has__active() {
  _has_bits_[0] |= 0x00000010u;
}
inline void guild_member::clear_has__active() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void guild_member::clear__active() {
  _active_ = 0u;
  clear_has__active();
}
inline ::google::protobuf::uint32 guild_member::_active() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_member._active)
  return _active_;
}
inline void guild_member::set__active(::google::protobuf::uint32 value) {
  set_has__active();
  _active_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_member._active)
}

// optional uint32 _join_instance_time = 6;
inline bool guild_member::has__join_instance_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void guild_member::set_has__join_instance_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void guild_member::clear_has__join_instance_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void guild_member::clear__join_instance_time() {
  _join_instance_time_ = 0u;
  clear_has__join_instance_time();
}
inline ::google::protobuf::uint32 guild_member::_join_instance_time() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_member._join_instance_time)
  return _join_instance_time_;
}
inline void guild_member::set__join_instance_time(::google::protobuf::uint32 value) {
  set_has__join_instance_time();
  _join_instance_time_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_member._join_instance_time)
}

// -------------------------------------------------------------------

// guild_applier

// required uint32 _uid = 1;
inline bool guild_applier::has__uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_applier::set_has__uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_applier::clear_has__uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_applier::clear__uid() {
  _uid_ = 0u;
  clear_has__uid();
}
inline ::google::protobuf::uint32 guild_applier::_uid() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_applier._uid)
  return _uid_;
}
inline void guild_applier::set__uid(::google::protobuf::uint32 value) {
  set_has__uid();
  _uid_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_applier._uid)
}

// optional .client_baseserver.user_summary _user_summary = 2;
inline bool guild_applier::has__user_summary() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guild_applier::set_has__user_summary() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guild_applier::clear_has__user_summary() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guild_applier::clear__user_summary() {
  if (_user_summary_ != NULL) _user_summary_->::client_baseserver::user_summary::Clear();
  clear_has__user_summary();
}
inline const ::client_baseserver::user_summary& guild_applier::_user_summary() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_applier._user_summary)
  return _user_summary_ != NULL ? *_user_summary_ : *default_instance_->_user_summary_;
}
inline ::client_baseserver::user_summary* guild_applier::mutable__user_summary() {
  set_has__user_summary();
  if (_user_summary_ == NULL) _user_summary_ = new ::client_baseserver::user_summary;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_applier._user_summary)
  return _user_summary_;
}
inline ::client_baseserver::user_summary* guild_applier::release__user_summary() {
  clear_has__user_summary();
  ::client_baseserver::user_summary* temp = _user_summary_;
  _user_summary_ = NULL;
  return temp;
}
inline void guild_applier::set_allocated__user_summary(::client_baseserver::user_summary* _user_summary) {
  delete _user_summary_;
  _user_summary_ = _user_summary;
  if (_user_summary) {
    set_has__user_summary();
  } else {
    clear_has__user_summary();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_applier._user_summary)
}

// -------------------------------------------------------------------

// guild_list

// repeated .client_baseserver.guild_summary _guilds = 1;
inline int guild_list::_guilds_size() const {
  return _guilds_.size();
}
inline void guild_list::clear__guilds() {
  _guilds_.Clear();
}
inline const ::client_baseserver::guild_summary& guild_list::_guilds(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_list._guilds)
  return _guilds_.Get(index);
}
inline ::client_baseserver::guild_summary* guild_list::mutable__guilds(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_list._guilds)
  return _guilds_.Mutable(index);
}
inline ::client_baseserver::guild_summary* guild_list::add__guilds() {
  // @@protoc_insertion_point(field_add:client_baseserver.guild_list._guilds)
  return _guilds_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_summary >&
guild_list::_guilds() const {
  // @@protoc_insertion_point(field_list:client_baseserver.guild_list._guilds)
  return _guilds_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_summary >*
guild_list::mutable__guilds() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.guild_list._guilds)
  return &_guilds_;
}

// required .client_baseserver.result _result = 2 [default = success];
inline bool guild_list::has__result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guild_list::set_has__result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guild_list::clear_has__result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guild_list::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result guild_list::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_list._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void guild_list::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_list._result)
}

// optional uint32 _create_cost = 3;
inline bool guild_list::has__create_cost() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void guild_list::set_has__create_cost() {
  _has_bits_[0] |= 0x00000004u;
}
inline void guild_list::clear_has__create_cost() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void guild_list::clear__create_cost() {
  _create_cost_ = 0u;
  clear_has__create_cost();
}
inline ::google::protobuf::uint32 guild_list::_create_cost() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_list._create_cost)
  return _create_cost_;
}
inline void guild_list::set__create_cost(::google::protobuf::uint32 value) {
  set_has__create_cost();
  _create_cost_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_list._create_cost)
}

// -------------------------------------------------------------------

// guild_search

// optional .client_baseserver.guild_summary _guilds = 1;
inline bool guild_search::has__guilds() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_search::set_has__guilds() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_search::clear_has__guilds() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_search::clear__guilds() {
  if (_guilds_ != NULL) _guilds_->::client_baseserver::guild_summary::Clear();
  clear_has__guilds();
}
inline const ::client_baseserver::guild_summary& guild_search::_guilds() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_search._guilds)
  return _guilds_ != NULL ? *_guilds_ : *default_instance_->_guilds_;
}
inline ::client_baseserver::guild_summary* guild_search::mutable__guilds() {
  set_has__guilds();
  if (_guilds_ == NULL) _guilds_ = new ::client_baseserver::guild_summary;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_search._guilds)
  return _guilds_;
}
inline ::client_baseserver::guild_summary* guild_search::release__guilds() {
  clear_has__guilds();
  ::client_baseserver::guild_summary* temp = _guilds_;
  _guilds_ = NULL;
  return temp;
}
inline void guild_search::set_allocated__guilds(::client_baseserver::guild_summary* _guilds) {
  delete _guilds_;
  _guilds_ = _guilds;
  if (_guilds) {
    set_has__guilds();
  } else {
    clear_has__guilds();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_search._guilds)
}

// required .client_baseserver.result _result = 2 [default = success];
inline bool guild_search::has__result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guild_search::set_has__result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guild_search::clear_has__result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guild_search::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result guild_search::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_search._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void guild_search::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_search._result)
}

// optional uint32 _create_cost = 3;
inline bool guild_search::has__create_cost() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void guild_search::set_has__create_cost() {
  _has_bits_[0] |= 0x00000004u;
}
inline void guild_search::clear_has__create_cost() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void guild_search::clear__create_cost() {
  _create_cost_ = 0u;
  clear_has__create_cost();
}
inline ::google::protobuf::uint32 guild_search::_create_cost() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_search._create_cost)
  return _create_cost_;
}
inline void guild_search::set__create_cost(::google::protobuf::uint32 value) {
  set_has__create_cost();
  _create_cost_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_search._create_cost)
}

// -------------------------------------------------------------------

// guild_join

// required .client_baseserver.guild_join.join_result _result = 1;
inline bool guild_join::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_join::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_join::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_join::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::guild_join_join_result guild_join::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_join._result)
  return static_cast< ::client_baseserver::guild_join_join_result >(_result_);
}
inline void guild_join::set__result(::client_baseserver::guild_join_join_result value) {
  assert(::client_baseserver::guild_join_join_result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_join._result)
}

// required uint32 _join_guild_id = 2;
inline bool guild_join::has__join_guild_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guild_join::set_has__join_guild_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guild_join::clear_has__join_guild_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guild_join::clear__join_guild_id() {
  _join_guild_id_ = 0u;
  clear_has__join_guild_id();
}
inline ::google::protobuf::uint32 guild_join::_join_guild_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_join._join_guild_id)
  return _join_guild_id_;
}
inline void guild_join::set__join_guild_id(::google::protobuf::uint32 value) {
  set_has__join_guild_id();
  _join_guild_id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_join._join_guild_id)
}

// optional .client_baseserver.guild_info _guild_info = 3;
inline bool guild_join::has__guild_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void guild_join::set_has__guild_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void guild_join::clear_has__guild_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void guild_join::clear__guild_info() {
  if (_guild_info_ != NULL) _guild_info_->::client_baseserver::guild_info::Clear();
  clear_has__guild_info();
}
inline const ::client_baseserver::guild_info& guild_join::_guild_info() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_join._guild_info)
  return _guild_info_ != NULL ? *_guild_info_ : *default_instance_->_guild_info_;
}
inline ::client_baseserver::guild_info* guild_join::mutable__guild_info() {
  set_has__guild_info();
  if (_guild_info_ == NULL) _guild_info_ = new ::client_baseserver::guild_info;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_join._guild_info)
  return _guild_info_;
}
inline ::client_baseserver::guild_info* guild_join::release__guild_info() {
  clear_has__guild_info();
  ::client_baseserver::guild_info* temp = _guild_info_;
  _guild_info_ = NULL;
  return temp;
}
inline void guild_join::set_allocated__guild_info(::client_baseserver::guild_info* _guild_info) {
  delete _guild_info_;
  _guild_info_ = _guild_info;
  if (_guild_info) {
    set_has__guild_info();
  } else {
    clear_has__guild_info();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_join._guild_info)
}

// optional uint32 _cd_time = 4;
inline bool guild_join::has__cd_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void guild_join::set_has__cd_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void guild_join::clear_has__cd_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void guild_join::clear__cd_time() {
  _cd_time_ = 0u;
  clear_has__cd_time();
}
inline ::google::protobuf::uint32 guild_join::_cd_time() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_join._cd_time)
  return _cd_time_;
}
inline void guild_join::set__cd_time(::google::protobuf::uint32 value) {
  set_has__cd_time();
  _cd_time_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_join._cd_time)
}

// optional string _fail_reason = 5;
inline bool guild_join::has__fail_reason() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void guild_join::set_has__fail_reason() {
  _has_bits_[0] |= 0x00000010u;
}
inline void guild_join::clear_has__fail_reason() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void guild_join::clear__fail_reason() {
  if (_fail_reason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _fail_reason_->clear();
  }
  clear_has__fail_reason();
}
inline const ::std::string& guild_join::_fail_reason() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_join._fail_reason)
  return *_fail_reason_;
}
inline void guild_join::set__fail_reason(const ::std::string& value) {
  set_has__fail_reason();
  if (_fail_reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _fail_reason_ = new ::std::string;
  }
  _fail_reason_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.guild_join._fail_reason)
}
inline void guild_join::set__fail_reason(const char* value) {
  set_has__fail_reason();
  if (_fail_reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _fail_reason_ = new ::std::string;
  }
  _fail_reason_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.guild_join._fail_reason)
}
inline void guild_join::set__fail_reason(const char* value, size_t size) {
  set_has__fail_reason();
  if (_fail_reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _fail_reason_ = new ::std::string;
  }
  _fail_reason_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.guild_join._fail_reason)
}
inline ::std::string* guild_join::mutable__fail_reason() {
  set_has__fail_reason();
  if (_fail_reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _fail_reason_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_join._fail_reason)
  return _fail_reason_;
}
inline ::std::string* guild_join::release__fail_reason() {
  clear_has__fail_reason();
  if (_fail_reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = _fail_reason_;
    _fail_reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void guild_join::set_allocated__fail_reason(::std::string* _fail_reason) {
  if (_fail_reason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete _fail_reason_;
  }
  if (_fail_reason) {
    set_has__fail_reason();
    _fail_reason_ = _fail_reason;
  } else {
    clear_has__fail_reason();
    _fail_reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_join._fail_reason)
}

// -------------------------------------------------------------------

// guild_join_confirm

// required .client_baseserver.result _result = 1;
inline bool guild_join_confirm::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_join_confirm::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_join_confirm::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_join_confirm::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result guild_join_confirm::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_join_confirm._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void guild_join_confirm::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_join_confirm._result)
}

// optional .client_baseserver.guild_member _new_man = 2;
inline bool guild_join_confirm::has__new_man() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guild_join_confirm::set_has__new_man() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guild_join_confirm::clear_has__new_man() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guild_join_confirm::clear__new_man() {
  if (_new_man_ != NULL) _new_man_->::client_baseserver::guild_member::Clear();
  clear_has__new_man();
}
inline const ::client_baseserver::guild_member& guild_join_confirm::_new_man() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_join_confirm._new_man)
  return _new_man_ != NULL ? *_new_man_ : *default_instance_->_new_man_;
}
inline ::client_baseserver::guild_member* guild_join_confirm::mutable__new_man() {
  set_has__new_man();
  if (_new_man_ == NULL) _new_man_ = new ::client_baseserver::guild_member;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_join_confirm._new_man)
  return _new_man_;
}
inline ::client_baseserver::guild_member* guild_join_confirm::release__new_man() {
  clear_has__new_man();
  ::client_baseserver::guild_member* temp = _new_man_;
  _new_man_ = NULL;
  return temp;
}
inline void guild_join_confirm::set_allocated__new_man(::client_baseserver::guild_member* _new_man) {
  delete _new_man_;
  _new_man_ = _new_man;
  if (_new_man) {
    set_has__new_man();
  } else {
    clear_has__new_man();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_join_confirm._new_man)
}

// -------------------------------------------------------------------

// guild_leave

// required .client_baseserver.result _result = 1;
inline bool guild_leave::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_leave::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_leave::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_leave::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result guild_leave::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_leave._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void guild_leave::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_leave._result)
}

// -------------------------------------------------------------------

// guild_kick

// required .client_baseserver.result _result = 1;
inline bool guild_kick::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_kick::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_kick::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_kick::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result guild_kick::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_kick._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void guild_kick::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_kick._result)
}

// -------------------------------------------------------------------

// guild_set

// required .client_baseserver.result _result = 1;
inline bool guild_set::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_set::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_set::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_set::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result guild_set::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_set._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void guild_set::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_set._result)
}

// -------------------------------------------------------------------

// guild_query

// optional .client_baseserver.guild_info _info = 1;
inline bool guild_query::has__info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_query::set_has__info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_query::clear_has__info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_query::clear__info() {
  if (_info_ != NULL) _info_->::client_baseserver::guild_info::Clear();
  clear_has__info();
}
inline const ::client_baseserver::guild_info& guild_query::_info() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_query._info)
  return _info_ != NULL ? *_info_ : *default_instance_->_info_;
}
inline ::client_baseserver::guild_info* guild_query::mutable__info() {
  set_has__info();
  if (_info_ == NULL) _info_ = new ::client_baseserver::guild_info;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_query._info)
  return _info_;
}
inline ::client_baseserver::guild_info* guild_query::release__info() {
  clear_has__info();
  ::client_baseserver::guild_info* temp = _info_;
  _info_ = NULL;
  return temp;
}
inline void guild_query::set_allocated__info(::client_baseserver::guild_info* _info) {
  delete _info_;
  _info_ = _info;
  if (_info) {
    set_has__info();
  } else {
    clear_has__info();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_query._info)
}

// optional .client_baseserver.guild_worship _worship = 2;
inline bool guild_query::has__worship() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guild_query::set_has__worship() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guild_query::clear_has__worship() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guild_query::clear__worship() {
  if (_worship_ != NULL) _worship_->::client_baseserver::guild_worship::Clear();
  clear_has__worship();
}
inline const ::client_baseserver::guild_worship& guild_query::_worship() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_query._worship)
  return _worship_ != NULL ? *_worship_ : *default_instance_->_worship_;
}
inline ::client_baseserver::guild_worship* guild_query::mutable__worship() {
  set_has__worship();
  if (_worship_ == NULL) _worship_ = new ::client_baseserver::guild_worship;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_query._worship)
  return _worship_;
}
inline ::client_baseserver::guild_worship* guild_query::release__worship() {
  clear_has__worship();
  ::client_baseserver::guild_worship* temp = _worship_;
  _worship_ = NULL;
  return temp;
}
inline void guild_query::set_allocated__worship(::client_baseserver::guild_worship* _worship) {
  delete _worship_;
  _worship_ = _worship;
  if (_worship) {
    set_has__worship();
  } else {
    clear_has__worship();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_query._worship)
}

// optional uint32 _drop_info = 3;
inline bool guild_query::has__drop_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void guild_query::set_has__drop_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void guild_query::clear_has__drop_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void guild_query::clear__drop_info() {
  _drop_info_ = 0u;
  clear_has__drop_info();
}
inline ::google::protobuf::uint32 guild_query::_drop_info() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_query._drop_info)
  return _drop_info_;
}
inline void guild_query::set__drop_info(::google::protobuf::uint32 value) {
  set_has__drop_info();
  _drop_info_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_query._drop_info)
}

// optional uint32 _to_chairman = 4;
inline bool guild_query::has__to_chairman() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void guild_query::set_has__to_chairman() {
  _has_bits_[0] |= 0x00000008u;
}
inline void guild_query::clear_has__to_chairman() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void guild_query::clear__to_chairman() {
  _to_chairman_ = 0u;
  clear_has__to_chairman();
}
inline ::google::protobuf::uint32 guild_query::_to_chairman() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_query._to_chairman)
  return _to_chairman_;
}
inline void guild_query::set__to_chairman(::google::protobuf::uint32 value) {
  set_has__to_chairman();
  _to_chairman_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_query._to_chairman)
}

// -------------------------------------------------------------------

// guild_worship

// required uint32 _use_times = 1;
inline bool guild_worship::has__use_times() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_worship::set_has__use_times() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_worship::clear_has__use_times() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_worship::clear__use_times() {
  _use_times_ = 0u;
  clear_has__use_times();
}
inline ::google::protobuf::uint32 guild_worship::_use_times() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_worship._use_times)
  return _use_times_;
}
inline void guild_worship::set__use_times(::google::protobuf::uint32 value) {
  set_has__use_times();
  _use_times_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_worship._use_times)
}

// repeated .client_baseserver.worship_reward _rewards = 2;
inline int guild_worship::_rewards_size() const {
  return _rewards_.size();
}
inline void guild_worship::clear__rewards() {
  _rewards_.Clear();
}
inline const ::client_baseserver::worship_reward& guild_worship::_rewards(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_worship._rewards)
  return _rewards_.Get(index);
}
inline ::client_baseserver::worship_reward* guild_worship::mutable__rewards(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_worship._rewards)
  return _rewards_.Mutable(index);
}
inline ::client_baseserver::worship_reward* guild_worship::add__rewards() {
  // @@protoc_insertion_point(field_add:client_baseserver.guild_worship._rewards)
  return _rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::worship_reward >&
guild_worship::_rewards() const {
  // @@protoc_insertion_point(field_list:client_baseserver.guild_worship._rewards)
  return _rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::worship_reward >*
guild_worship::mutable__rewards() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.guild_worship._rewards)
  return &_rewards_;
}

// required uint32 _times = 3;
inline bool guild_worship::has__times() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void guild_worship::set_has__times() {
  _has_bits_[0] |= 0x00000004u;
}
inline void guild_worship::clear_has__times() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void guild_worship::clear__times() {
  _times_ = 0u;
  clear_has__times();
}
inline ::google::protobuf::uint32 guild_worship::_times() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_worship._times)
  return _times_;
}
inline void guild_worship::set__times(::google::protobuf::uint32 value) {
  set_has__times();
  _times_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_worship._times)
}

// -------------------------------------------------------------------

// guild_set_job

// required .client_baseserver.result _result = 1;
inline bool guild_set_job::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_set_job::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_set_job::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_set_job::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result guild_set_job::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_set_job._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void guild_set_job::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_set_job._result)
}

// -------------------------------------------------------------------

// guild_add_hire

// required .client_baseserver.result _result = 1;
inline bool guild_add_hire::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_add_hire::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_add_hire::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_add_hire::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result guild_add_hire::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_add_hire._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void guild_add_hire::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_add_hire._result)
}

// required uint32 _income = 2;
inline bool guild_add_hire::has__income() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guild_add_hire::set_has__income() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guild_add_hire::clear_has__income() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guild_add_hire::clear__income() {
  _income_ = 0u;
  clear_has__income();
}
inline ::google::protobuf::uint32 guild_add_hire::_income() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_add_hire._income)
  return _income_;
}
inline void guild_add_hire::set__income(::google::protobuf::uint32 value) {
  set_has__income();
  _income_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_add_hire._income)
}

// -------------------------------------------------------------------

// guild_del_hire

// required .client_baseserver.result _result = 1;
inline bool guild_del_hire::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_del_hire::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_del_hire::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_del_hire::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result guild_del_hire::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_del_hire._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void guild_del_hire::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_del_hire._result)
}

// optional uint32 _hire_reward = 2;
inline bool guild_del_hire::has__hire_reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guild_del_hire::set_has__hire_reward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guild_del_hire::clear_has__hire_reward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guild_del_hire::clear__hire_reward() {
  _hire_reward_ = 0u;
  clear_has__hire_reward();
}
inline ::google::protobuf::uint32 guild_del_hire::_hire_reward() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_del_hire._hire_reward)
  return _hire_reward_;
}
inline void guild_del_hire::set__hire_reward(::google::protobuf::uint32 value) {
  set_has__hire_reward();
  _hire_reward_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_del_hire._hire_reward)
}

// optional uint32 _stay_reward = 3;
inline bool guild_del_hire::has__stay_reward() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void guild_del_hire::set_has__stay_reward() {
  _has_bits_[0] |= 0x00000004u;
}
inline void guild_del_hire::clear_has__stay_reward() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void guild_del_hire::clear__stay_reward() {
  _stay_reward_ = 0u;
  clear_has__stay_reward();
}
inline ::google::protobuf::uint32 guild_del_hire::_stay_reward() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_del_hire._stay_reward)
  return _stay_reward_;
}
inline void guild_del_hire::set__stay_reward(::google::protobuf::uint32 value) {
  set_has__stay_reward();
  _stay_reward_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_del_hire._stay_reward)
}

// optional uint32 _heroid = 4;
inline bool guild_del_hire::has__heroid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void guild_del_hire::set_has__heroid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void guild_del_hire::clear_has__heroid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void guild_del_hire::clear__heroid() {
  _heroid_ = 0u;
  clear_has__heroid();
}
inline ::google::protobuf::uint32 guild_del_hire::_heroid() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_del_hire._heroid)
  return _heroid_;
}
inline void guild_del_hire::set__heroid(::google::protobuf::uint32 value) {
  set_has__heroid();
  _heroid_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_del_hire._heroid)
}

// -------------------------------------------------------------------

// guild_query_hires

// repeated .client_baseserver.guild_hire_user _users = 1;
inline int guild_query_hires::_users_size() const {
  return _users_.size();
}
inline void guild_query_hires::clear__users() {
  _users_.Clear();
}
inline const ::client_baseserver::guild_hire_user& guild_query_hires::_users(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_query_hires._users)
  return _users_.Get(index);
}
inline ::client_baseserver::guild_hire_user* guild_query_hires::mutable__users(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_query_hires._users)
  return _users_.Mutable(index);
}
inline ::client_baseserver::guild_hire_user* guild_query_hires::add__users() {
  // @@protoc_insertion_point(field_add:client_baseserver.guild_query_hires._users)
  return _users_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_hire_user >&
guild_query_hires::_users() const {
  // @@protoc_insertion_point(field_list:client_baseserver.guild_query_hires._users)
  return _users_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_hire_user >*
guild_query_hires::mutable__users() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.guild_query_hires._users)
  return &_users_;
}

// repeated uint32 _hire_uids = 2;
inline int guild_query_hires::_hire_uids_size() const {
  return _hire_uids_.size();
}
inline void guild_query_hires::clear__hire_uids() {
  _hire_uids_.Clear();
}
inline ::google::protobuf::uint32 guild_query_hires::_hire_uids(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_query_hires._hire_uids)
  return _hire_uids_.Get(index);
}
inline void guild_query_hires::set__hire_uids(int index, ::google::protobuf::uint32 value) {
  _hire_uids_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.guild_query_hires._hire_uids)
}
inline void guild_query_hires::add__hire_uids(::google::protobuf::uint32 value) {
  _hire_uids_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.guild_query_hires._hire_uids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
guild_query_hires::_hire_uids() const {
  // @@protoc_insertion_point(field_list:client_baseserver.guild_query_hires._hire_uids)
  return _hire_uids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
guild_query_hires::mutable__hire_uids() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.guild_query_hires._hire_uids)
  return &_hire_uids_;
}

// required .client_baseserver.hire_from _from = 3;
inline bool guild_query_hires::has__from() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void guild_query_hires::set_has__from() {
  _has_bits_[0] |= 0x00000004u;
}
inline void guild_query_hires::clear_has__from() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void guild_query_hires::clear__from() {
  _from_ = 0;
  clear_has__from();
}
inline ::client_baseserver::hire_from guild_query_hires::_from() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_query_hires._from)
  return static_cast< ::client_baseserver::hire_from >(_from_);
}
inline void guild_query_hires::set__from(::client_baseserver::hire_from value) {
  assert(::client_baseserver::hire_from_IsValid(value));
  set_has__from();
  _from_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_query_hires._from)
}

// -------------------------------------------------------------------

// guild_hire_user

// required uint32 _uid = 1;
inline bool guild_hire_user::has__uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_hire_user::set_has__uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_hire_user::clear_has__uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_hire_user::clear__uid() {
  _uid_ = 0u;
  clear_has__uid();
}
inline ::google::protobuf::uint32 guild_hire_user::_uid() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_hire_user._uid)
  return _uid_;
}
inline void guild_hire_user::set__uid(::google::protobuf::uint32 value) {
  set_has__uid();
  _uid_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_hire_user._uid)
}

// required string _name = 2;
inline bool guild_hire_user::has__name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guild_hire_user::set_has__name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guild_hire_user::clear_has__name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guild_hire_user::clear__name() {
  if (_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _name_->clear();
  }
  clear_has__name();
}
inline const ::std::string& guild_hire_user::_name() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_hire_user._name)
  return *_name_;
}
inline void guild_hire_user::set__name(const ::std::string& value) {
  set_has__name();
  if (_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _name_ = new ::std::string;
  }
  _name_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.guild_hire_user._name)
}
inline void guild_hire_user::set__name(const char* value) {
  set_has__name();
  if (_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _name_ = new ::std::string;
  }
  _name_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.guild_hire_user._name)
}
inline void guild_hire_user::set__name(const char* value, size_t size) {
  set_has__name();
  if (_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _name_ = new ::std::string;
  }
  _name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.guild_hire_user._name)
}
inline ::std::string* guild_hire_user::mutable__name() {
  set_has__name();
  if (_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_hire_user._name)
  return _name_;
}
inline ::std::string* guild_hire_user::release__name() {
  clear_has__name();
  if (_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = _name_;
    _name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void guild_hire_user::set_allocated__name(::std::string* _name) {
  if (_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete _name_;
  }
  if (_name) {
    set_has__name();
    _name_ = _name;
  } else {
    clear_has__name();
    _name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_hire_user._name)
}

// required uint32 _level = 3;
inline bool guild_hire_user::has__level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void guild_hire_user::set_has__level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void guild_hire_user::clear_has__level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void guild_hire_user::clear__level() {
  _level_ = 0u;
  clear_has__level();
}
inline ::google::protobuf::uint32 guild_hire_user::_level() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_hire_user._level)
  return _level_;
}
inline void guild_hire_user::set__level(::google::protobuf::uint32 value) {
  set_has__level();
  _level_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_hire_user._level)
}

// required uint32 _avatar = 4;
inline bool guild_hire_user::has__avatar() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void guild_hire_user::set_has__avatar() {
  _has_bits_[0] |= 0x00000008u;
}
inline void guild_hire_user::clear_has__avatar() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void guild_hire_user::clear__avatar() {
  _avatar_ = 0u;
  clear_has__avatar();
}
inline ::google::protobuf::uint32 guild_hire_user::_avatar() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_hire_user._avatar)
  return _avatar_;
}
inline void guild_hire_user::set__avatar(::google::protobuf::uint32 value) {
  set_has__avatar();
  _avatar_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_hire_user._avatar)
}

// repeated .client_baseserver.hire_hero_summary _heroes = 5;
inline int guild_hire_user::_heroes_size() const {
  return _heroes_.size();
}
inline void guild_hire_user::clear__heroes() {
  _heroes_.Clear();
}
inline const ::client_baseserver::hire_hero_summary& guild_hire_user::_heroes(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_hire_user._heroes)
  return _heroes_.Get(index);
}
inline ::client_baseserver::hire_hero_summary* guild_hire_user::mutable__heroes(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_hire_user._heroes)
  return _heroes_.Mutable(index);
}
inline ::client_baseserver::hire_hero_summary* guild_hire_user::add__heroes() {
  // @@protoc_insertion_point(field_add:client_baseserver.guild_hire_user._heroes)
  return _heroes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hire_hero_summary >&
guild_hire_user::_heroes() const {
  // @@protoc_insertion_point(field_list:client_baseserver.guild_hire_user._heroes)
  return _heroes_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hire_hero_summary >*
guild_hire_user::mutable__heroes() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.guild_hire_user._heroes)
  return &_heroes_;
}

// -------------------------------------------------------------------

// hire_hero_summary

// required .client_baseserver.hero_summary _hero = 1;
inline bool hire_hero_summary::has__hero() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void hire_hero_summary::set_has__hero() {
  _has_bits_[0] |= 0x00000001u;
}
inline void hire_hero_summary::clear_has__hero() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void hire_hero_summary::clear__hero() {
  if (_hero_ != NULL) _hero_->::client_baseserver::hero_summary::Clear();
  clear_has__hero();
}
inline const ::client_baseserver::hero_summary& hire_hero_summary::_hero() const {
  // @@protoc_insertion_point(field_get:client_baseserver.hire_hero_summary._hero)
  return _hero_ != NULL ? *_hero_ : *default_instance_->_hero_;
}
inline ::client_baseserver::hero_summary* hire_hero_summary::mutable__hero() {
  set_has__hero();
  if (_hero_ == NULL) _hero_ = new ::client_baseserver::hero_summary;
  // @@protoc_insertion_point(field_mutable:client_baseserver.hire_hero_summary._hero)
  return _hero_;
}
inline ::client_baseserver::hero_summary* hire_hero_summary::release__hero() {
  clear_has__hero();
  ::client_baseserver::hero_summary* temp = _hero_;
  _hero_ = NULL;
  return temp;
}
inline void hire_hero_summary::set_allocated__hero(::client_baseserver::hero_summary* _hero) {
  delete _hero_;
  _hero_ = _hero;
  if (_hero) {
    set_has__hero();
  } else {
    clear_has__hero();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.hire_hero_summary._hero)
}

// required uint32 _cost = 2;
inline bool hire_hero_summary::has__cost() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void hire_hero_summary::set_has__cost() {
  _has_bits_[0] |= 0x00000002u;
}
inline void hire_hero_summary::clear_has__cost() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void hire_hero_summary::clear__cost() {
  _cost_ = 0u;
  clear_has__cost();
}
inline ::google::protobuf::uint32 hire_hero_summary::_cost() const {
  // @@protoc_insertion_point(field_get:client_baseserver.hire_hero_summary._cost)
  return _cost_;
}
inline void hire_hero_summary::set__cost(::google::protobuf::uint32 value) {
  set_has__cost();
  _cost_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.hire_hero_summary._cost)
}

// required uint32 _income = 3;
inline bool hire_hero_summary::has__income() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void hire_hero_summary::set_has__income() {
  _has_bits_[0] |= 0x00000004u;
}
inline void hire_hero_summary::clear_has__income() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void hire_hero_summary::clear__income() {
  _income_ = 0u;
  clear_has__income();
}
inline ::google::protobuf::uint32 hire_hero_summary::_income() const {
  // @@protoc_insertion_point(field_get:client_baseserver.hire_hero_summary._income)
  return _income_;
}
inline void hire_hero_summary::set__income(::google::protobuf::uint32 value) {
  set_has__income();
  _income_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.hire_hero_summary._income)
}

// required uint32 _hire_ts = 4;
inline bool hire_hero_summary::has__hire_ts() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void hire_hero_summary::set_has__hire_ts() {
  _has_bits_[0] |= 0x00000008u;
}
inline void hire_hero_summary::clear_has__hire_ts() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void hire_hero_summary::clear__hire_ts() {
  _hire_ts_ = 0u;
  clear_has__hire_ts();
}
inline ::google::protobuf::uint32 hire_hero_summary::_hire_ts() const {
  // @@protoc_insertion_point(field_get:client_baseserver.hire_hero_summary._hire_ts)
  return _hire_ts_;
}
inline void hire_hero_summary::set__hire_ts(::google::protobuf::uint32 value) {
  set_has__hire_ts();
  _hire_ts_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.hire_hero_summary._hire_ts)
}

// -------------------------------------------------------------------

// guild_hire_hero

// required .client_baseserver.hire_result _result = 1;
inline bool guild_hire_hero::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_hire_hero::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_hire_hero::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_hire_hero::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::hire_result guild_hire_hero::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_hire_hero._result)
  return static_cast< ::client_baseserver::hire_result >(_result_);
}
inline void guild_hire_hero::set__result(::client_baseserver::hire_result value) {
  assert(::client_baseserver::hire_result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_hire_hero._result)
}

// optional .client_baseserver.hire_from _from = 2;
inline bool guild_hire_hero::has__from() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guild_hire_hero::set_has__from() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guild_hire_hero::clear_has__from() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guild_hire_hero::clear__from() {
  _from_ = 0;
  clear_has__from();
}
inline ::client_baseserver::hire_from guild_hire_hero::_from() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_hire_hero._from)
  return static_cast< ::client_baseserver::hire_from >(_from_);
}
inline void guild_hire_hero::set__from(::client_baseserver::hire_from value) {
  assert(::client_baseserver::hire_from_IsValid(value));
  set_has__from();
  _from_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_hire_hero._from)
}

// optional uint32 _uid = 3;
inline bool guild_hire_hero::has__uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void guild_hire_hero::set_has__uid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void guild_hire_hero::clear_has__uid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void guild_hire_hero::clear__uid() {
  _uid_ = 0u;
  clear_has__uid();
}
inline ::google::protobuf::uint32 guild_hire_hero::_uid() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_hire_hero._uid)
  return _uid_;
}
inline void guild_hire_hero::set__uid(::google::protobuf::uint32 value) {
  set_has__uid();
  _uid_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_hire_hero._uid)
}

// optional .client_baseserver.hero _hero = 4;
inline bool guild_hire_hero::has__hero() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void guild_hire_hero::set_has__hero() {
  _has_bits_[0] |= 0x00000008u;
}
inline void guild_hire_hero::clear_has__hero() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void guild_hire_hero::clear__hero() {
  if (_hero_ != NULL) _hero_->::client_baseserver::hero::Clear();
  clear_has__hero();
}
inline const ::client_baseserver::hero& guild_hire_hero::_hero() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_hire_hero._hero)
  return _hero_ != NULL ? *_hero_ : *default_instance_->_hero_;
}
inline ::client_baseserver::hero* guild_hire_hero::mutable__hero() {
  set_has__hero();
  if (_hero_ == NULL) _hero_ = new ::client_baseserver::hero;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_hire_hero._hero)
  return _hero_;
}
inline ::client_baseserver::hero* guild_hire_hero::release__hero() {
  clear_has__hero();
  ::client_baseserver::hero* temp = _hero_;
  _hero_ = NULL;
  return temp;
}
inline void guild_hire_hero::set_allocated__hero(::client_baseserver::hero* _hero) {
  delete _hero_;
  _hero_ = _hero;
  if (_hero) {
    set_has__hero();
  } else {
    clear_has__hero();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_hire_hero._hero)
}

// -------------------------------------------------------------------

// guild_worship_req

// required .client_baseserver.result _result = 1;
inline bool guild_worship_req::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_worship_req::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_worship_req::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_worship_req::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result guild_worship_req::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_worship_req._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void guild_worship_req::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_worship_req._result)
}

// -------------------------------------------------------------------

// guild_worship_withdraw

// required .client_baseserver.result _result = 1;
inline bool guild_worship_withdraw::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_worship_withdraw::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_worship_withdraw::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_worship_withdraw::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result guild_worship_withdraw::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_worship_withdraw._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void guild_worship_withdraw::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_worship_withdraw._result)
}

// repeated .client_baseserver.worship_reward _rewards = 2;
inline int guild_worship_withdraw::_rewards_size() const {
  return _rewards_.size();
}
inline void guild_worship_withdraw::clear__rewards() {
  _rewards_.Clear();
}
inline const ::client_baseserver::worship_reward& guild_worship_withdraw::_rewards(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_worship_withdraw._rewards)
  return _rewards_.Get(index);
}
inline ::client_baseserver::worship_reward* guild_worship_withdraw::mutable__rewards(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_worship_withdraw._rewards)
  return _rewards_.Mutable(index);
}
inline ::client_baseserver::worship_reward* guild_worship_withdraw::add__rewards() {
  // @@protoc_insertion_point(field_add:client_baseserver.guild_worship_withdraw._rewards)
  return _rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::worship_reward >&
guild_worship_withdraw::_rewards() const {
  // @@protoc_insertion_point(field_list:client_baseserver.guild_worship_withdraw._rewards)
  return _rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::worship_reward >*
guild_worship_withdraw::mutable__rewards() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.guild_worship_withdraw._rewards)
  return &_rewards_;
}

// -------------------------------------------------------------------

// guild_qurey_hh_detail

// optional .client_baseserver.hero _hero = 1;
inline bool guild_qurey_hh_detail::has__hero() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_qurey_hh_detail::set_has__hero() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_qurey_hh_detail::clear_has__hero() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_qurey_hh_detail::clear__hero() {
  if (_hero_ != NULL) _hero_->::client_baseserver::hero::Clear();
  clear_has__hero();
}
inline const ::client_baseserver::hero& guild_qurey_hh_detail::_hero() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_qurey_hh_detail._hero)
  return _hero_ != NULL ? *_hero_ : *default_instance_->_hero_;
}
inline ::client_baseserver::hero* guild_qurey_hh_detail::mutable__hero() {
  set_has__hero();
  if (_hero_ == NULL) _hero_ = new ::client_baseserver::hero;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_qurey_hh_detail._hero)
  return _hero_;
}
inline ::client_baseserver::hero* guild_qurey_hh_detail::release__hero() {
  clear_has__hero();
  ::client_baseserver::hero* temp = _hero_;
  _hero_ = NULL;
  return temp;
}
inline void guild_qurey_hh_detail::set_allocated__hero(::client_baseserver::hero* _hero) {
  delete _hero_;
  _hero_ = _hero;
  if (_hero) {
    set_has__hero();
  } else {
    clear_has__hero();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_qurey_hh_detail._hero)
}

// -------------------------------------------------------------------

// worship_reward

// required .client_baseserver.worship_reward.type _type = 1;
inline bool worship_reward::has__type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void worship_reward::set_has__type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void worship_reward::clear_has__type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void worship_reward::clear__type() {
  _type_ = 1;
  clear_has__type();
}
inline ::client_baseserver::worship_reward_type worship_reward::_type() const {
  // @@protoc_insertion_point(field_get:client_baseserver.worship_reward._type)
  return static_cast< ::client_baseserver::worship_reward_type >(_type_);
}
inline void worship_reward::set__type(::client_baseserver::worship_reward_type value) {
  assert(::client_baseserver::worship_reward_type_IsValid(value));
  set_has__type();
  _type_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.worship_reward._type)
}

// optional uint32 _param1 = 2;
inline bool worship_reward::has__param1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void worship_reward::set_has__param1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void worship_reward::clear_has__param1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void worship_reward::clear__param1() {
  _param1_ = 0u;
  clear_has__param1();
}
inline ::google::protobuf::uint32 worship_reward::_param1() const {
  // @@protoc_insertion_point(field_get:client_baseserver.worship_reward._param1)
  return _param1_;
}
inline void worship_reward::set__param1(::google::protobuf::uint32 value) {
  set_has__param1();
  _param1_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.worship_reward._param1)
}

// optional uint32 _param2 = 3;
inline bool worship_reward::has__param2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void worship_reward::set_has__param2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void worship_reward::clear_has__param2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void worship_reward::clear__param2() {
  _param2_ = 0u;
  clear_has__param2();
}
inline ::google::protobuf::uint32 worship_reward::_param2() const {
  // @@protoc_insertion_point(field_get:client_baseserver.worship_reward._param2)
  return _param2_;
}
inline void worship_reward::set__param2(::google::protobuf::uint32 value) {
  set_has__param2();
  _param2_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.worship_reward._param2)
}

// -------------------------------------------------------------------

// activity_reward

// optional .client_baseserver.activity_reward.type _type = 1;
inline bool activity_reward::has__type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activity_reward::set_has__type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activity_reward::clear_has__type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activity_reward::clear__type() {
  _type_ = 1;
  clear_has__type();
}
inline ::client_baseserver::activity_reward_type activity_reward::_type() const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_reward._type)
  return static_cast< ::client_baseserver::activity_reward_type >(_type_);
}
inline void activity_reward::set__type(::client_baseserver::activity_reward_type value) {
  assert(::client_baseserver::activity_reward_type_IsValid(value));
  set_has__type();
  _type_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.activity_reward._type)
}

// optional uint32 _id = 2;
inline bool activity_reward::has__id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activity_reward::set_has__id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activity_reward::clear_has__id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activity_reward::clear__id() {
  _id_ = 0u;
  clear_has__id();
}
inline ::google::protobuf::uint32 activity_reward::_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_reward._id)
  return _id_;
}
inline void activity_reward::set__id(::google::protobuf::uint32 value) {
  set_has__id();
  _id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.activity_reward._id)
}

// optional uint32 _amount = 3;
inline bool activity_reward::has__amount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void activity_reward::set_has__amount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void activity_reward::clear_has__amount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void activity_reward::clear__amount() {
  _amount_ = 0u;
  clear_has__amount();
}
inline ::google::protobuf::uint32 activity_reward::_amount() const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_reward._amount)
  return _amount_;
}
inline void activity_reward::set__amount(::google::protobuf::uint32 value) {
  set_has__amount();
  _amount_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.activity_reward._amount)
}

// -------------------------------------------------------------------

// activity_infos

// repeated .client_baseserver.activity_info _activity_info = 1;
inline int activity_infos::_activity_info_size() const {
  return _activity_info_.size();
}
inline void activity_infos::clear__activity_info() {
  _activity_info_.Clear();
}
inline const ::client_baseserver::activity_info& activity_infos::_activity_info(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_infos._activity_info)
  return _activity_info_.Get(index);
}
inline ::client_baseserver::activity_info* activity_infos::mutable__activity_info(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.activity_infos._activity_info)
  return _activity_info_.Mutable(index);
}
inline ::client_baseserver::activity_info* activity_infos::add__activity_info() {
  // @@protoc_insertion_point(field_add:client_baseserver.activity_infos._activity_info)
  return _activity_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::activity_info >&
activity_infos::_activity_info() const {
  // @@protoc_insertion_point(field_list:client_baseserver.activity_infos._activity_info)
  return _activity_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::activity_info >*
activity_infos::mutable__activity_info() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.activity_infos._activity_info)
  return &_activity_info_;
}

// -------------------------------------------------------------------

// activity_rewards

// optional uint32 _amount = 1;
inline bool activity_rewards::has__amount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activity_rewards::set_has__amount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activity_rewards::clear_has__amount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activity_rewards::clear__amount() {
  _amount_ = 0u;
  clear_has__amount();
}
inline ::google::protobuf::uint32 activity_rewards::_amount() const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_rewards._amount)
  return _amount_;
}
inline void activity_rewards::set__amount(::google::protobuf::uint32 value) {
  set_has__amount();
  _amount_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.activity_rewards._amount)
}

// repeated .client_baseserver.activity_reward _rewards = 2;
inline int activity_rewards::_rewards_size() const {
  return _rewards_.size();
}
inline void activity_rewards::clear__rewards() {
  _rewards_.Clear();
}
inline const ::client_baseserver::activity_reward& activity_rewards::_rewards(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_rewards._rewards)
  return _rewards_.Get(index);
}
inline ::client_baseserver::activity_reward* activity_rewards::mutable__rewards(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.activity_rewards._rewards)
  return _rewards_.Mutable(index);
}
inline ::client_baseserver::activity_reward* activity_rewards::add__rewards() {
  // @@protoc_insertion_point(field_add:client_baseserver.activity_rewards._rewards)
  return _rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::activity_reward >&
activity_rewards::_rewards() const {
  // @@protoc_insertion_point(field_list:client_baseserver.activity_rewards._rewards)
  return _rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::activity_reward >*
activity_rewards::mutable__rewards() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.activity_rewards._rewards)
  return &_rewards_;
}

// optional .client_baseserver.dailyjob _dailyjob = 3;
inline bool activity_rewards::has__dailyjob() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void activity_rewards::set_has__dailyjob() {
  _has_bits_[0] |= 0x00000004u;
}
inline void activity_rewards::clear_has__dailyjob() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void activity_rewards::clear__dailyjob() {
  if (_dailyjob_ != NULL) _dailyjob_->::client_baseserver::dailyjob::Clear();
  clear_has__dailyjob();
}
inline const ::client_baseserver::dailyjob& activity_rewards::_dailyjob() const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_rewards._dailyjob)
  return _dailyjob_ != NULL ? *_dailyjob_ : *default_instance_->_dailyjob_;
}
inline ::client_baseserver::dailyjob* activity_rewards::mutable__dailyjob() {
  set_has__dailyjob();
  if (_dailyjob_ == NULL) _dailyjob_ = new ::client_baseserver::dailyjob;
  // @@protoc_insertion_point(field_mutable:client_baseserver.activity_rewards._dailyjob)
  return _dailyjob_;
}
inline ::client_baseserver::dailyjob* activity_rewards::release__dailyjob() {
  clear_has__dailyjob();
  ::client_baseserver::dailyjob* temp = _dailyjob_;
  _dailyjob_ = NULL;
  return temp;
}
inline void activity_rewards::set_allocated__dailyjob(::client_baseserver::dailyjob* _dailyjob) {
  delete _dailyjob_;
  _dailyjob_ = _dailyjob;
  if (_dailyjob) {
    set_has__dailyjob();
  } else {
    clear_has__dailyjob();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.activity_rewards._dailyjob)
}

// -------------------------------------------------------------------

// activity_info

// optional uint32 _id = 1;
inline bool activity_info::has__id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void activity_info::set_has__id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void activity_info::clear_has__id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void activity_info::clear__id() {
  _id_ = 0u;
  clear_has__id();
}
inline ::google::protobuf::uint32 activity_info::_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_info._id)
  return _id_;
}
inline void activity_info::set__id(::google::protobuf::uint32 value) {
  set_has__id();
  _id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.activity_info._id)
}

// optional .client_baseserver.activity_info.type _type = 2;
inline bool activity_info::has__type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void activity_info::set_has__type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void activity_info::clear_has__type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void activity_info::clear__type() {
  _type_ = 1;
  clear_has__type();
}
inline ::client_baseserver::activity_info_type activity_info::_type() const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_info._type)
  return static_cast< ::client_baseserver::activity_info_type >(_type_);
}
inline void activity_info::set__type(::client_baseserver::activity_info_type value) {
  assert(::client_baseserver::activity_info_type_IsValid(value));
  set_has__type();
  _type_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.activity_info._type)
}

// optional uint32 _start_time = 3;
inline bool activity_info::has__start_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void activity_info::set_has__start_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void activity_info::clear_has__start_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void activity_info::clear__start_time() {
  _start_time_ = 0u;
  clear_has__start_time();
}
inline ::google::protobuf::uint32 activity_info::_start_time() const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_info._start_time)
  return _start_time_;
}
inline void activity_info::set__start_time(::google::protobuf::uint32 value) {
  set_has__start_time();
  _start_time_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.activity_info._start_time)
}

// optional uint32 _end_time = 4;
inline bool activity_info::has__end_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void activity_info::set_has__end_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void activity_info::clear_has__end_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void activity_info::clear__end_time() {
  _end_time_ = 0u;
  clear_has__end_time();
}
inline ::google::protobuf::uint32 activity_info::_end_time() const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_info._end_time)
  return _end_time_;
}
inline void activity_info::set__end_time(::google::protobuf::uint32 value) {
  set_has__end_time();
  _end_time_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.activity_info._end_time)
}

// repeated .client_baseserver.activity_rewards _rewards = 5;
inline int activity_info::_rewards_size() const {
  return _rewards_.size();
}
inline void activity_info::clear__rewards() {
  _rewards_.Clear();
}
inline const ::client_baseserver::activity_rewards& activity_info::_rewards(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_info._rewards)
  return _rewards_.Get(index);
}
inline ::client_baseserver::activity_rewards* activity_info::mutable__rewards(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.activity_info._rewards)
  return _rewards_.Mutable(index);
}
inline ::client_baseserver::activity_rewards* activity_info::add__rewards() {
  // @@protoc_insertion_point(field_add:client_baseserver.activity_info._rewards)
  return _rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::activity_rewards >&
activity_info::_rewards() const {
  // @@protoc_insertion_point(field_list:client_baseserver.activity_info._rewards)
  return _rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::activity_rewards >*
activity_info::mutable__rewards() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.activity_info._rewards)
  return &_rewards_;
}

// optional string _title = 6;
inline bool activity_info::has__title() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void activity_info::set_has__title() {
  _has_bits_[0] |= 0x00000020u;
}
inline void activity_info::clear_has__title() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void activity_info::clear__title() {
  if (_title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _title_->clear();
  }
  clear_has__title();
}
inline const ::std::string& activity_info::_title() const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_info._title)
  return *_title_;
}
inline void activity_info::set__title(const ::std::string& value) {
  set_has__title();
  if (_title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _title_ = new ::std::string;
  }
  _title_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.activity_info._title)
}
inline void activity_info::set__title(const char* value) {
  set_has__title();
  if (_title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _title_ = new ::std::string;
  }
  _title_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.activity_info._title)
}
inline void activity_info::set__title(const char* value, size_t size) {
  set_has__title();
  if (_title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _title_ = new ::std::string;
  }
  _title_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.activity_info._title)
}
inline ::std::string* activity_info::mutable__title() {
  set_has__title();
  if (_title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _title_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.activity_info._title)
  return _title_;
}
inline ::std::string* activity_info::release__title() {
  clear_has__title();
  if (_title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = _title_;
    _title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void activity_info::set_allocated__title(::std::string* _title) {
  if (_title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete _title_;
  }
  if (_title) {
    set_has__title();
    _title_ = _title;
  } else {
    clear_has__title();
    _title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.activity_info._title)
}

// optional string _desc = 7;
inline bool activity_info::has__desc() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void activity_info::set_has__desc() {
  _has_bits_[0] |= 0x00000040u;
}
inline void activity_info::clear_has__desc() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void activity_info::clear__desc() {
  if (_desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _desc_->clear();
  }
  clear_has__desc();
}
inline const ::std::string& activity_info::_desc() const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_info._desc)
  return *_desc_;
}
inline void activity_info::set__desc(const ::std::string& value) {
  set_has__desc();
  if (_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _desc_ = new ::std::string;
  }
  _desc_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.activity_info._desc)
}
inline void activity_info::set__desc(const char* value) {
  set_has__desc();
  if (_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _desc_ = new ::std::string;
  }
  _desc_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.activity_info._desc)
}
inline void activity_info::set__desc(const char* value, size_t size) {
  set_has__desc();
  if (_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _desc_ = new ::std::string;
  }
  _desc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.activity_info._desc)
}
inline ::std::string* activity_info::mutable__desc() {
  set_has__desc();
  if (_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _desc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.activity_info._desc)
  return _desc_;
}
inline ::std::string* activity_info::release__desc() {
  clear_has__desc();
  if (_desc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = _desc_;
    _desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void activity_info::set_allocated__desc(::std::string* _desc) {
  if (_desc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete _desc_;
  }
  if (_desc) {
    set_has__desc();
    _desc_ = _desc;
  } else {
    clear_has__desc();
    _desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.activity_info._desc)
}

// optional string _rules = 8;
inline bool activity_info::has__rules() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void activity_info::set_has__rules() {
  _has_bits_[0] |= 0x00000080u;
}
inline void activity_info::clear_has__rules() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void activity_info::clear__rules() {
  if (_rules_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _rules_->clear();
  }
  clear_has__rules();
}
inline const ::std::string& activity_info::_rules() const {
  // @@protoc_insertion_point(field_get:client_baseserver.activity_info._rules)
  return *_rules_;
}
inline void activity_info::set__rules(const ::std::string& value) {
  set_has__rules();
  if (_rules_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _rules_ = new ::std::string;
  }
  _rules_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.activity_info._rules)
}
inline void activity_info::set__rules(const char* value) {
  set_has__rules();
  if (_rules_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _rules_ = new ::std::string;
  }
  _rules_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.activity_info._rules)
}
inline void activity_info::set__rules(const char* value, size_t size) {
  set_has__rules();
  if (_rules_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _rules_ = new ::std::string;
  }
  _rules_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.activity_info._rules)
}
inline ::std::string* activity_info::mutable__rules() {
  set_has__rules();
  if (_rules_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _rules_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.activity_info._rules)
  return _rules_;
}
inline ::std::string* activity_info::release__rules() {
  clear_has__rules();
  if (_rules_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = _rules_;
    _rules_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void activity_info::set_allocated__rules(::std::string* _rules) {
  if (_rules_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete _rules_;
  }
  if (_rules) {
    set_has__rules();
    _rules_ = _rules;
  } else {
    clear_has__rules();
    _rules_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.activity_info._rules)
}

// -------------------------------------------------------------------

// cdkey_gift_reply

// required .client_baseserver.cdkey_gift_reply.cdkey_result _result = 1;
inline bool cdkey_gift_reply::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void cdkey_gift_reply::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void cdkey_gift_reply::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void cdkey_gift_reply::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::cdkey_gift_reply_cdkey_result cdkey_gift_reply::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.cdkey_gift_reply._result)
  return static_cast< ::client_baseserver::cdkey_gift_reply_cdkey_result >(_result_);
}
inline void cdkey_gift_reply::set__result(::client_baseserver::cdkey_gift_reply_cdkey_result value) {
  assert(::client_baseserver::cdkey_gift_reply_cdkey_result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.cdkey_gift_reply._result)
}

// optional .client_baseserver.res_pack _pack = 2;
inline bool cdkey_gift_reply::has__pack() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void cdkey_gift_reply::set_has__pack() {
  _has_bits_[0] |= 0x00000002u;
}
inline void cdkey_gift_reply::clear_has__pack() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void cdkey_gift_reply::clear__pack() {
  if (_pack_ != NULL) _pack_->::client_baseserver::res_pack::Clear();
  clear_has__pack();
}
inline const ::client_baseserver::res_pack& cdkey_gift_reply::_pack() const {
  // @@protoc_insertion_point(field_get:client_baseserver.cdkey_gift_reply._pack)
  return _pack_ != NULL ? *_pack_ : *default_instance_->_pack_;
}
inline ::client_baseserver::res_pack* cdkey_gift_reply::mutable__pack() {
  set_has__pack();
  if (_pack_ == NULL) _pack_ = new ::client_baseserver::res_pack;
  // @@protoc_insertion_point(field_mutable:client_baseserver.cdkey_gift_reply._pack)
  return _pack_;
}
inline ::client_baseserver::res_pack* cdkey_gift_reply::release__pack() {
  clear_has__pack();
  ::client_baseserver::res_pack* temp = _pack_;
  _pack_ = NULL;
  return temp;
}
inline void cdkey_gift_reply::set_allocated__pack(::client_baseserver::res_pack* _pack) {
  delete _pack_;
  _pack_ = _pack;
  if (_pack) {
    set_has__pack();
  } else {
    clear_has__pack();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.cdkey_gift_reply._pack)
}

// -------------------------------------------------------------------

// res_pack

// optional uint32 _money = 1;
inline bool res_pack::has__money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void res_pack::set_has__money() {
  _has_bits_[0] |= 0x00000001u;
}
inline void res_pack::clear_has__money() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void res_pack::clear__money() {
  _money_ = 0u;
  clear_has__money();
}
inline ::google::protobuf::uint32 res_pack::_money() const {
  // @@protoc_insertion_point(field_get:client_baseserver.res_pack._money)
  return _money_;
}
inline void res_pack::set__money(::google::protobuf::uint32 value) {
  set_has__money();
  _money_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.res_pack._money)
}

// optional uint32 _diamond = 2;
inline bool res_pack::has__diamond() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void res_pack::set_has__diamond() {
  _has_bits_[0] |= 0x00000002u;
}
inline void res_pack::clear_has__diamond() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void res_pack::clear__diamond() {
  _diamond_ = 0u;
  clear_has__diamond();
}
inline ::google::protobuf::uint32 res_pack::_diamond() const {
  // @@protoc_insertion_point(field_get:client_baseserver.res_pack._diamond)
  return _diamond_;
}
inline void res_pack::set__diamond(::google::protobuf::uint32 value) {
  set_has__diamond();
  _diamond_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.res_pack._diamond)
}

// repeated uint32 _items = 3;
inline int res_pack::_items_size() const {
  return _items_.size();
}
inline void res_pack::clear__items() {
  _items_.Clear();
}
inline ::google::protobuf::uint32 res_pack::_items(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.res_pack._items)
  return _items_.Get(index);
}
inline void res_pack::set__items(int index, ::google::protobuf::uint32 value) {
  _items_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.res_pack._items)
}
inline void res_pack::add__items(::google::protobuf::uint32 value) {
  _items_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.res_pack._items)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
res_pack::_items() const {
  // @@protoc_insertion_point(field_list:client_baseserver.res_pack._items)
  return _items_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
res_pack::mutable__items() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.res_pack._items)
  return &_items_;
}

// repeated .client_baseserver.hero _heroes = 4;
inline int res_pack::_heroes_size() const {
  return _heroes_.size();
}
inline void res_pack::clear__heroes() {
  _heroes_.Clear();
}
inline const ::client_baseserver::hero& res_pack::_heroes(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.res_pack._heroes)
  return _heroes_.Get(index);
}
inline ::client_baseserver::hero* res_pack::mutable__heroes(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.res_pack._heroes)
  return _heroes_.Mutable(index);
}
inline ::client_baseserver::hero* res_pack::add__heroes() {
  // @@protoc_insertion_point(field_add:client_baseserver.res_pack._heroes)
  return _heroes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >&
res_pack::_heroes() const {
  // @@protoc_insertion_point(field_list:client_baseserver.res_pack._heroes)
  return _heroes_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >*
res_pack::mutable__heroes() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.res_pack._heroes)
  return &_heroes_;
}

// optional .client_baseserver.monthcard _month_card = 5;
inline bool res_pack::has__month_card() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void res_pack::set_has__month_card() {
  _has_bits_[0] |= 0x00000010u;
}
inline void res_pack::clear_has__month_card() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void res_pack::clear__month_card() {
  if (_month_card_ != NULL) _month_card_->::client_baseserver::monthcard::Clear();
  clear_has__month_card();
}
inline const ::client_baseserver::monthcard& res_pack::_month_card() const {
  // @@protoc_insertion_point(field_get:client_baseserver.res_pack._month_card)
  return _month_card_ != NULL ? *_month_card_ : *default_instance_->_month_card_;
}
inline ::client_baseserver::monthcard* res_pack::mutable__month_card() {
  set_has__month_card();
  if (_month_card_ == NULL) _month_card_ = new ::client_baseserver::monthcard;
  // @@protoc_insertion_point(field_mutable:client_baseserver.res_pack._month_card)
  return _month_card_;
}
inline ::client_baseserver::monthcard* res_pack::release__month_card() {
  clear_has__month_card();
  ::client_baseserver::monthcard* temp = _month_card_;
  _month_card_ = NULL;
  return temp;
}
inline void res_pack::set_allocated__month_card(::client_baseserver::monthcard* _month_card) {
  delete _month_card_;
  _month_card_ = _month_card;
  if (_month_card) {
    set_has__month_card();
  } else {
    clear_has__month_card();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.res_pack._month_card)
}

// -------------------------------------------------------------------

// ask_magicsoul_reply

// repeated uint32 _id = 1;
inline int ask_magicsoul_reply::_id_size() const {
  return _id_.size();
}
inline void ask_magicsoul_reply::clear__id() {
  _id_.Clear();
}
inline ::google::protobuf::uint32 ask_magicsoul_reply::_id(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.ask_magicsoul_reply._id)
  return _id_.Get(index);
}
inline void ask_magicsoul_reply::set__id(int index, ::google::protobuf::uint32 value) {
  _id_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.ask_magicsoul_reply._id)
}
inline void ask_magicsoul_reply::add__id(::google::protobuf::uint32 value) {
  _id_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.ask_magicsoul_reply._id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ask_magicsoul_reply::_id() const {
  // @@protoc_insertion_point(field_list:client_baseserver.ask_magicsoul_reply._id)
  return _id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ask_magicsoul_reply::mutable__id() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.ask_magicsoul_reply._id)
  return &_id_;
}

// -------------------------------------------------------------------

// important_data

// required uint32 _money = 1;
inline bool important_data::has__money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void important_data::set_has__money() {
  _has_bits_[0] |= 0x00000001u;
}
inline void important_data::clear_has__money() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void important_data::clear__money() {
  _money_ = 0u;
  clear_has__money();
}
inline ::google::protobuf::uint32 important_data::_money() const {
  // @@protoc_insertion_point(field_get:client_baseserver.important_data._money)
  return _money_;
}
inline void important_data::set__money(::google::protobuf::uint32 value) {
  set_has__money();
  _money_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.important_data._money)
}

// required uint32 _rmb = 2;
inline bool important_data::has__rmb() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void important_data::set_has__rmb() {
  _has_bits_[0] |= 0x00000002u;
}
inline void important_data::clear_has__rmb() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void important_data::clear__rmb() {
  _rmb_ = 0u;
  clear_has__rmb();
}
inline ::google::protobuf::uint32 important_data::_rmb() const {
  // @@protoc_insertion_point(field_get:client_baseserver.important_data._rmb)
  return _rmb_;
}
inline void important_data::set__rmb(::google::protobuf::uint32 value) {
  set_has__rmb();
  _rmb_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.important_data._rmb)
}

// repeated .client_baseserver.hero _heroes = 3;
inline int important_data::_heroes_size() const {
  return _heroes_.size();
}
inline void important_data::clear__heroes() {
  _heroes_.Clear();
}
inline const ::client_baseserver::hero& important_data::_heroes(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.important_data._heroes)
  return _heroes_.Get(index);
}
inline ::client_baseserver::hero* important_data::mutable__heroes(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.important_data._heroes)
  return _heroes_.Mutable(index);
}
inline ::client_baseserver::hero* important_data::add__heroes() {
  // @@protoc_insertion_point(field_add:client_baseserver.important_data._heroes)
  return _heroes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >&
important_data::_heroes() const {
  // @@protoc_insertion_point(field_list:client_baseserver.important_data._heroes)
  return _heroes_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >*
important_data::mutable__heroes() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.important_data._heroes)
  return &_heroes_;
}

// repeated uint32 _items = 4;
inline int important_data::_items_size() const {
  return _items_.size();
}
inline void important_data::clear__items() {
  _items_.Clear();
}
inline ::google::protobuf::uint32 important_data::_items(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.important_data._items)
  return _items_.Get(index);
}
inline void important_data::set__items(int index, ::google::protobuf::uint32 value) {
  _items_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.important_data._items)
}
inline void important_data::add__items(::google::protobuf::uint32 value) {
  _items_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.important_data._items)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
important_data::_items() const {
  // @@protoc_insertion_point(field_list:client_baseserver.important_data._items)
  return _items_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
important_data::mutable__items() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.important_data._items)
  return &_items_;
}

// -------------------------------------------------------------------

// monthcard

// required uint32 _id = 1;
inline bool monthcard::has__id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void monthcard::set_has__id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void monthcard::clear_has__id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void monthcard::clear__id() {
  _id_ = 0u;
  clear_has__id();
}
inline ::google::protobuf::uint32 monthcard::_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.monthcard._id)
  return _id_;
}
inline void monthcard::set__id(::google::protobuf::uint32 value) {
  set_has__id();
  _id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.monthcard._id)
}

// required uint32 _expire_time = 2;
inline bool monthcard::has__expire_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void monthcard::set_has__expire_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void monthcard::clear_has__expire_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void monthcard::clear__expire_time() {
  _expire_time_ = 0u;
  clear_has__expire_time();
}
inline ::google::protobuf::uint32 monthcard::_expire_time() const {
  // @@protoc_insertion_point(field_get:client_baseserver.monthcard._expire_time)
  return _expire_time_;
}
inline void monthcard::set__expire_time(::google::protobuf::uint32 value) {
  set_has__expire_time();
  _expire_time_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.monthcard._expire_time)
}

// -------------------------------------------------------------------

// excavate_reply

// optional .client_baseserver.search_excavate_reply _search_excavate_reply = 1;
inline bool excavate_reply::has__search_excavate_reply() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void excavate_reply::set_has__search_excavate_reply() {
  _has_bits_[0] |= 0x00000001u;
}
inline void excavate_reply::clear_has__search_excavate_reply() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void excavate_reply::clear__search_excavate_reply() {
  if (_search_excavate_reply_ != NULL) _search_excavate_reply_->::client_baseserver::search_excavate_reply::Clear();
  clear_has__search_excavate_reply();
}
inline const ::client_baseserver::search_excavate_reply& excavate_reply::_search_excavate_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_reply._search_excavate_reply)
  return _search_excavate_reply_ != NULL ? *_search_excavate_reply_ : *default_instance_->_search_excavate_reply_;
}
inline ::client_baseserver::search_excavate_reply* excavate_reply::mutable__search_excavate_reply() {
  set_has__search_excavate_reply();
  if (_search_excavate_reply_ == NULL) _search_excavate_reply_ = new ::client_baseserver::search_excavate_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.excavate_reply._search_excavate_reply)
  return _search_excavate_reply_;
}
inline ::client_baseserver::search_excavate_reply* excavate_reply::release__search_excavate_reply() {
  clear_has__search_excavate_reply();
  ::client_baseserver::search_excavate_reply* temp = _search_excavate_reply_;
  _search_excavate_reply_ = NULL;
  return temp;
}
inline void excavate_reply::set_allocated__search_excavate_reply(::client_baseserver::search_excavate_reply* _search_excavate_reply) {
  delete _search_excavate_reply_;
  _search_excavate_reply_ = _search_excavate_reply;
  if (_search_excavate_reply) {
    set_has__search_excavate_reply();
  } else {
    clear_has__search_excavate_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.excavate_reply._search_excavate_reply)
}

// optional .client_baseserver.query_excavate_data_reply _query_excavate_data_reply = 2;
inline bool excavate_reply::has__query_excavate_data_reply() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void excavate_reply::set_has__query_excavate_data_reply() {
  _has_bits_[0] |= 0x00000002u;
}
inline void excavate_reply::clear_has__query_excavate_data_reply() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void excavate_reply::clear__query_excavate_data_reply() {
  if (_query_excavate_data_reply_ != NULL) _query_excavate_data_reply_->::client_baseserver::query_excavate_data_reply::Clear();
  clear_has__query_excavate_data_reply();
}
inline const ::client_baseserver::query_excavate_data_reply& excavate_reply::_query_excavate_data_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_reply._query_excavate_data_reply)
  return _query_excavate_data_reply_ != NULL ? *_query_excavate_data_reply_ : *default_instance_->_query_excavate_data_reply_;
}
inline ::client_baseserver::query_excavate_data_reply* excavate_reply::mutable__query_excavate_data_reply() {
  set_has__query_excavate_data_reply();
  if (_query_excavate_data_reply_ == NULL) _query_excavate_data_reply_ = new ::client_baseserver::query_excavate_data_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.excavate_reply._query_excavate_data_reply)
  return _query_excavate_data_reply_;
}
inline ::client_baseserver::query_excavate_data_reply* excavate_reply::release__query_excavate_data_reply() {
  clear_has__query_excavate_data_reply();
  ::client_baseserver::query_excavate_data_reply* temp = _query_excavate_data_reply_;
  _query_excavate_data_reply_ = NULL;
  return temp;
}
inline void excavate_reply::set_allocated__query_excavate_data_reply(::client_baseserver::query_excavate_data_reply* _query_excavate_data_reply) {
  delete _query_excavate_data_reply_;
  _query_excavate_data_reply_ = _query_excavate_data_reply;
  if (_query_excavate_data_reply) {
    set_has__query_excavate_data_reply();
  } else {
    clear_has__query_excavate_data_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.excavate_reply._query_excavate_data_reply)
}

// optional .client_baseserver.query_excavate_history_reply _query_excavate_history_reply = 3;
inline bool excavate_reply::has__query_excavate_history_reply() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void excavate_reply::set_has__query_excavate_history_reply() {
  _has_bits_[0] |= 0x00000004u;
}
inline void excavate_reply::clear_has__query_excavate_history_reply() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void excavate_reply::clear__query_excavate_history_reply() {
  if (_query_excavate_history_reply_ != NULL) _query_excavate_history_reply_->::client_baseserver::query_excavate_history_reply::Clear();
  clear_has__query_excavate_history_reply();
}
inline const ::client_baseserver::query_excavate_history_reply& excavate_reply::_query_excavate_history_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_reply._query_excavate_history_reply)
  return _query_excavate_history_reply_ != NULL ? *_query_excavate_history_reply_ : *default_instance_->_query_excavate_history_reply_;
}
inline ::client_baseserver::query_excavate_history_reply* excavate_reply::mutable__query_excavate_history_reply() {
  set_has__query_excavate_history_reply();
  if (_query_excavate_history_reply_ == NULL) _query_excavate_history_reply_ = new ::client_baseserver::query_excavate_history_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.excavate_reply._query_excavate_history_reply)
  return _query_excavate_history_reply_;
}
inline ::client_baseserver::query_excavate_history_reply* excavate_reply::release__query_excavate_history_reply() {
  clear_has__query_excavate_history_reply();
  ::client_baseserver::query_excavate_history_reply* temp = _query_excavate_history_reply_;
  _query_excavate_history_reply_ = NULL;
  return temp;
}
inline void excavate_reply::set_allocated__query_excavate_history_reply(::client_baseserver::query_excavate_history_reply* _query_excavate_history_reply) {
  delete _query_excavate_history_reply_;
  _query_excavate_history_reply_ = _query_excavate_history_reply;
  if (_query_excavate_history_reply) {
    set_has__query_excavate_history_reply();
  } else {
    clear_has__query_excavate_history_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.excavate_reply._query_excavate_history_reply)
}

// optional .client_baseserver.query_excavate_battle_reply _query_excavate_battle_reply = 4;
inline bool excavate_reply::has__query_excavate_battle_reply() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void excavate_reply::set_has__query_excavate_battle_reply() {
  _has_bits_[0] |= 0x00000008u;
}
inline void excavate_reply::clear_has__query_excavate_battle_reply() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void excavate_reply::clear__query_excavate_battle_reply() {
  if (_query_excavate_battle_reply_ != NULL) _query_excavate_battle_reply_->::client_baseserver::query_excavate_battle_reply::Clear();
  clear_has__query_excavate_battle_reply();
}
inline const ::client_baseserver::query_excavate_battle_reply& excavate_reply::_query_excavate_battle_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_reply._query_excavate_battle_reply)
  return _query_excavate_battle_reply_ != NULL ? *_query_excavate_battle_reply_ : *default_instance_->_query_excavate_battle_reply_;
}
inline ::client_baseserver::query_excavate_battle_reply* excavate_reply::mutable__query_excavate_battle_reply() {
  set_has__query_excavate_battle_reply();
  if (_query_excavate_battle_reply_ == NULL) _query_excavate_battle_reply_ = new ::client_baseserver::query_excavate_battle_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.excavate_reply._query_excavate_battle_reply)
  return _query_excavate_battle_reply_;
}
inline ::client_baseserver::query_excavate_battle_reply* excavate_reply::release__query_excavate_battle_reply() {
  clear_has__query_excavate_battle_reply();
  ::client_baseserver::query_excavate_battle_reply* temp = _query_excavate_battle_reply_;
  _query_excavate_battle_reply_ = NULL;
  return temp;
}
inline void excavate_reply::set_allocated__query_excavate_battle_reply(::client_baseserver::query_excavate_battle_reply* _query_excavate_battle_reply) {
  delete _query_excavate_battle_reply_;
  _query_excavate_battle_reply_ = _query_excavate_battle_reply;
  if (_query_excavate_battle_reply) {
    set_has__query_excavate_battle_reply();
  } else {
    clear_has__query_excavate_battle_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.excavate_reply._query_excavate_battle_reply)
}

// optional .client_baseserver.set_excavate_team_reply _set_excavate_team_reply = 5;
inline bool excavate_reply::has__set_excavate_team_reply() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void excavate_reply::set_has__set_excavate_team_reply() {
  _has_bits_[0] |= 0x00000010u;
}
inline void excavate_reply::clear_has__set_excavate_team_reply() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void excavate_reply::clear__set_excavate_team_reply() {
  if (_set_excavate_team_reply_ != NULL) _set_excavate_team_reply_->::client_baseserver::set_excavate_team_reply::Clear();
  clear_has__set_excavate_team_reply();
}
inline const ::client_baseserver::set_excavate_team_reply& excavate_reply::_set_excavate_team_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_reply._set_excavate_team_reply)
  return _set_excavate_team_reply_ != NULL ? *_set_excavate_team_reply_ : *default_instance_->_set_excavate_team_reply_;
}
inline ::client_baseserver::set_excavate_team_reply* excavate_reply::mutable__set_excavate_team_reply() {
  set_has__set_excavate_team_reply();
  if (_set_excavate_team_reply_ == NULL) _set_excavate_team_reply_ = new ::client_baseserver::set_excavate_team_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.excavate_reply._set_excavate_team_reply)
  return _set_excavate_team_reply_;
}
inline ::client_baseserver::set_excavate_team_reply* excavate_reply::release__set_excavate_team_reply() {
  clear_has__set_excavate_team_reply();
  ::client_baseserver::set_excavate_team_reply* temp = _set_excavate_team_reply_;
  _set_excavate_team_reply_ = NULL;
  return temp;
}
inline void excavate_reply::set_allocated__set_excavate_team_reply(::client_baseserver::set_excavate_team_reply* _set_excavate_team_reply) {
  delete _set_excavate_team_reply_;
  _set_excavate_team_reply_ = _set_excavate_team_reply;
  if (_set_excavate_team_reply) {
    set_has__set_excavate_team_reply();
  } else {
    clear_has__set_excavate_team_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.excavate_reply._set_excavate_team_reply)
}

// optional .client_baseserver.excavate_start_battle_reply _excavate_start_battle_reply = 6;
inline bool excavate_reply::has__excavate_start_battle_reply() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void excavate_reply::set_has__excavate_start_battle_reply() {
  _has_bits_[0] |= 0x00000020u;
}
inline void excavate_reply::clear_has__excavate_start_battle_reply() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void excavate_reply::clear__excavate_start_battle_reply() {
  if (_excavate_start_battle_reply_ != NULL) _excavate_start_battle_reply_->::client_baseserver::excavate_start_battle_reply::Clear();
  clear_has__excavate_start_battle_reply();
}
inline const ::client_baseserver::excavate_start_battle_reply& excavate_reply::_excavate_start_battle_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_reply._excavate_start_battle_reply)
  return _excavate_start_battle_reply_ != NULL ? *_excavate_start_battle_reply_ : *default_instance_->_excavate_start_battle_reply_;
}
inline ::client_baseserver::excavate_start_battle_reply* excavate_reply::mutable__excavate_start_battle_reply() {
  set_has__excavate_start_battle_reply();
  if (_excavate_start_battle_reply_ == NULL) _excavate_start_battle_reply_ = new ::client_baseserver::excavate_start_battle_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.excavate_reply._excavate_start_battle_reply)
  return _excavate_start_battle_reply_;
}
inline ::client_baseserver::excavate_start_battle_reply* excavate_reply::release__excavate_start_battle_reply() {
  clear_has__excavate_start_battle_reply();
  ::client_baseserver::excavate_start_battle_reply* temp = _excavate_start_battle_reply_;
  _excavate_start_battle_reply_ = NULL;
  return temp;
}
inline void excavate_reply::set_allocated__excavate_start_battle_reply(::client_baseserver::excavate_start_battle_reply* _excavate_start_battle_reply) {
  delete _excavate_start_battle_reply_;
  _excavate_start_battle_reply_ = _excavate_start_battle_reply;
  if (_excavate_start_battle_reply) {
    set_has__excavate_start_battle_reply();
  } else {
    clear_has__excavate_start_battle_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.excavate_reply._excavate_start_battle_reply)
}

// optional .client_baseserver.excavate_end_battle_reply _excavate_end_battle_reply = 7;
inline bool excavate_reply::has__excavate_end_battle_reply() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void excavate_reply::set_has__excavate_end_battle_reply() {
  _has_bits_[0] |= 0x00000040u;
}
inline void excavate_reply::clear_has__excavate_end_battle_reply() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void excavate_reply::clear__excavate_end_battle_reply() {
  if (_excavate_end_battle_reply_ != NULL) _excavate_end_battle_reply_->::client_baseserver::excavate_end_battle_reply::Clear();
  clear_has__excavate_end_battle_reply();
}
inline const ::client_baseserver::excavate_end_battle_reply& excavate_reply::_excavate_end_battle_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_reply._excavate_end_battle_reply)
  return _excavate_end_battle_reply_ != NULL ? *_excavate_end_battle_reply_ : *default_instance_->_excavate_end_battle_reply_;
}
inline ::client_baseserver::excavate_end_battle_reply* excavate_reply::mutable__excavate_end_battle_reply() {
  set_has__excavate_end_battle_reply();
  if (_excavate_end_battle_reply_ == NULL) _excavate_end_battle_reply_ = new ::client_baseserver::excavate_end_battle_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.excavate_reply._excavate_end_battle_reply)
  return _excavate_end_battle_reply_;
}
inline ::client_baseserver::excavate_end_battle_reply* excavate_reply::release__excavate_end_battle_reply() {
  clear_has__excavate_end_battle_reply();
  ::client_baseserver::excavate_end_battle_reply* temp = _excavate_end_battle_reply_;
  _excavate_end_battle_reply_ = NULL;
  return temp;
}
inline void excavate_reply::set_allocated__excavate_end_battle_reply(::client_baseserver::excavate_end_battle_reply* _excavate_end_battle_reply) {
  delete _excavate_end_battle_reply_;
  _excavate_end_battle_reply_ = _excavate_end_battle_reply;
  if (_excavate_end_battle_reply) {
    set_has__excavate_end_battle_reply();
  } else {
    clear_has__excavate_end_battle_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.excavate_reply._excavate_end_battle_reply)
}

// optional .client_baseserver.query_excavate_def_reply _query_excavate_def_reply = 8;
inline bool excavate_reply::has__query_excavate_def_reply() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void excavate_reply::set_has__query_excavate_def_reply() {
  _has_bits_[0] |= 0x00000080u;
}
inline void excavate_reply::clear_has__query_excavate_def_reply() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void excavate_reply::clear__query_excavate_def_reply() {
  if (_query_excavate_def_reply_ != NULL) _query_excavate_def_reply_->::client_baseserver::query_excavate_def_reply::Clear();
  clear_has__query_excavate_def_reply();
}
inline const ::client_baseserver::query_excavate_def_reply& excavate_reply::_query_excavate_def_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_reply._query_excavate_def_reply)
  return _query_excavate_def_reply_ != NULL ? *_query_excavate_def_reply_ : *default_instance_->_query_excavate_def_reply_;
}
inline ::client_baseserver::query_excavate_def_reply* excavate_reply::mutable__query_excavate_def_reply() {
  set_has__query_excavate_def_reply();
  if (_query_excavate_def_reply_ == NULL) _query_excavate_def_reply_ = new ::client_baseserver::query_excavate_def_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.excavate_reply._query_excavate_def_reply)
  return _query_excavate_def_reply_;
}
inline ::client_baseserver::query_excavate_def_reply* excavate_reply::release__query_excavate_def_reply() {
  clear_has__query_excavate_def_reply();
  ::client_baseserver::query_excavate_def_reply* temp = _query_excavate_def_reply_;
  _query_excavate_def_reply_ = NULL;
  return temp;
}
inline void excavate_reply::set_allocated__query_excavate_def_reply(::client_baseserver::query_excavate_def_reply* _query_excavate_def_reply) {
  delete _query_excavate_def_reply_;
  _query_excavate_def_reply_ = _query_excavate_def_reply;
  if (_query_excavate_def_reply) {
    set_has__query_excavate_def_reply();
  } else {
    clear_has__query_excavate_def_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.excavate_reply._query_excavate_def_reply)
}

// optional .client_baseserver.clear_excavate_battle_reply _clear_excavate_battle_reply = 9;
inline bool excavate_reply::has__clear_excavate_battle_reply() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void excavate_reply::set_has__clear_excavate_battle_reply() {
  _has_bits_[0] |= 0x00000100u;
}
inline void excavate_reply::clear_has__clear_excavate_battle_reply() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void excavate_reply::clear__clear_excavate_battle_reply() {
  if (_clear_excavate_battle_reply_ != NULL) _clear_excavate_battle_reply_->::client_baseserver::clear_excavate_battle_reply::Clear();
  clear_has__clear_excavate_battle_reply();
}
inline const ::client_baseserver::clear_excavate_battle_reply& excavate_reply::_clear_excavate_battle_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_reply._clear_excavate_battle_reply)
  return _clear_excavate_battle_reply_ != NULL ? *_clear_excavate_battle_reply_ : *default_instance_->_clear_excavate_battle_reply_;
}
inline ::client_baseserver::clear_excavate_battle_reply* excavate_reply::mutable__clear_excavate_battle_reply() {
  set_has__clear_excavate_battle_reply();
  if (_clear_excavate_battle_reply_ == NULL) _clear_excavate_battle_reply_ = new ::client_baseserver::clear_excavate_battle_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.excavate_reply._clear_excavate_battle_reply)
  return _clear_excavate_battle_reply_;
}
inline ::client_baseserver::clear_excavate_battle_reply* excavate_reply::release__clear_excavate_battle_reply() {
  clear_has__clear_excavate_battle_reply();
  ::client_baseserver::clear_excavate_battle_reply* temp = _clear_excavate_battle_reply_;
  _clear_excavate_battle_reply_ = NULL;
  return temp;
}
inline void excavate_reply::set_allocated__clear_excavate_battle_reply(::client_baseserver::clear_excavate_battle_reply* _clear_excavate_battle_reply) {
  delete _clear_excavate_battle_reply_;
  _clear_excavate_battle_reply_ = _clear_excavate_battle_reply;
  if (_clear_excavate_battle_reply) {
    set_has__clear_excavate_battle_reply();
  } else {
    clear_has__clear_excavate_battle_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.excavate_reply._clear_excavate_battle_reply)
}

// optional .client_baseserver.draw_excavate_def_rwd_reply _draw_excavate_def_rwd_reply = 10;
inline bool excavate_reply::has__draw_excavate_def_rwd_reply() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void excavate_reply::set_has__draw_excavate_def_rwd_reply() {
  _has_bits_[0] |= 0x00000200u;
}
inline void excavate_reply::clear_has__draw_excavate_def_rwd_reply() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void excavate_reply::clear__draw_excavate_def_rwd_reply() {
  if (_draw_excavate_def_rwd_reply_ != NULL) _draw_excavate_def_rwd_reply_->::client_baseserver::draw_excavate_def_rwd_reply::Clear();
  clear_has__draw_excavate_def_rwd_reply();
}
inline const ::client_baseserver::draw_excavate_def_rwd_reply& excavate_reply::_draw_excavate_def_rwd_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_reply._draw_excavate_def_rwd_reply)
  return _draw_excavate_def_rwd_reply_ != NULL ? *_draw_excavate_def_rwd_reply_ : *default_instance_->_draw_excavate_def_rwd_reply_;
}
inline ::client_baseserver::draw_excavate_def_rwd_reply* excavate_reply::mutable__draw_excavate_def_rwd_reply() {
  set_has__draw_excavate_def_rwd_reply();
  if (_draw_excavate_def_rwd_reply_ == NULL) _draw_excavate_def_rwd_reply_ = new ::client_baseserver::draw_excavate_def_rwd_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.excavate_reply._draw_excavate_def_rwd_reply)
  return _draw_excavate_def_rwd_reply_;
}
inline ::client_baseserver::draw_excavate_def_rwd_reply* excavate_reply::release__draw_excavate_def_rwd_reply() {
  clear_has__draw_excavate_def_rwd_reply();
  ::client_baseserver::draw_excavate_def_rwd_reply* temp = _draw_excavate_def_rwd_reply_;
  _draw_excavate_def_rwd_reply_ = NULL;
  return temp;
}
inline void excavate_reply::set_allocated__draw_excavate_def_rwd_reply(::client_baseserver::draw_excavate_def_rwd_reply* _draw_excavate_def_rwd_reply) {
  delete _draw_excavate_def_rwd_reply_;
  _draw_excavate_def_rwd_reply_ = _draw_excavate_def_rwd_reply;
  if (_draw_excavate_def_rwd_reply) {
    set_has__draw_excavate_def_rwd_reply();
  } else {
    clear_has__draw_excavate_def_rwd_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.excavate_reply._draw_excavate_def_rwd_reply)
}

// optional .client_baseserver.revenge_excavate_reply _revenge_excavate_reply = 11;
inline bool excavate_reply::has__revenge_excavate_reply() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void excavate_reply::set_has__revenge_excavate_reply() {
  _has_bits_[0] |= 0x00000400u;
}
inline void excavate_reply::clear_has__revenge_excavate_reply() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void excavate_reply::clear__revenge_excavate_reply() {
  if (_revenge_excavate_reply_ != NULL) _revenge_excavate_reply_->::client_baseserver::revenge_excavate_reply::Clear();
  clear_has__revenge_excavate_reply();
}
inline const ::client_baseserver::revenge_excavate_reply& excavate_reply::_revenge_excavate_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_reply._revenge_excavate_reply)
  return _revenge_excavate_reply_ != NULL ? *_revenge_excavate_reply_ : *default_instance_->_revenge_excavate_reply_;
}
inline ::client_baseserver::revenge_excavate_reply* excavate_reply::mutable__revenge_excavate_reply() {
  set_has__revenge_excavate_reply();
  if (_revenge_excavate_reply_ == NULL) _revenge_excavate_reply_ = new ::client_baseserver::revenge_excavate_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.excavate_reply._revenge_excavate_reply)
  return _revenge_excavate_reply_;
}
inline ::client_baseserver::revenge_excavate_reply* excavate_reply::release__revenge_excavate_reply() {
  clear_has__revenge_excavate_reply();
  ::client_baseserver::revenge_excavate_reply* temp = _revenge_excavate_reply_;
  _revenge_excavate_reply_ = NULL;
  return temp;
}
inline void excavate_reply::set_allocated__revenge_excavate_reply(::client_baseserver::revenge_excavate_reply* _revenge_excavate_reply) {
  delete _revenge_excavate_reply_;
  _revenge_excavate_reply_ = _revenge_excavate_reply;
  if (_revenge_excavate_reply) {
    set_has__revenge_excavate_reply();
  } else {
    clear_has__revenge_excavate_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.excavate_reply._revenge_excavate_reply)
}

// optional .client_baseserver.draw_excav_res_reply _draw_excav_res_reply = 12;
inline bool excavate_reply::has__draw_excav_res_reply() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void excavate_reply::set_has__draw_excav_res_reply() {
  _has_bits_[0] |= 0x00000800u;
}
inline void excavate_reply::clear_has__draw_excav_res_reply() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void excavate_reply::clear__draw_excav_res_reply() {
  if (_draw_excav_res_reply_ != NULL) _draw_excav_res_reply_->::client_baseserver::draw_excav_res_reply::Clear();
  clear_has__draw_excav_res_reply();
}
inline const ::client_baseserver::draw_excav_res_reply& excavate_reply::_draw_excav_res_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_reply._draw_excav_res_reply)
  return _draw_excav_res_reply_ != NULL ? *_draw_excav_res_reply_ : *default_instance_->_draw_excav_res_reply_;
}
inline ::client_baseserver::draw_excav_res_reply* excavate_reply::mutable__draw_excav_res_reply() {
  set_has__draw_excav_res_reply();
  if (_draw_excav_res_reply_ == NULL) _draw_excav_res_reply_ = new ::client_baseserver::draw_excav_res_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.excavate_reply._draw_excav_res_reply)
  return _draw_excav_res_reply_;
}
inline ::client_baseserver::draw_excav_res_reply* excavate_reply::release__draw_excav_res_reply() {
  clear_has__draw_excav_res_reply();
  ::client_baseserver::draw_excav_res_reply* temp = _draw_excav_res_reply_;
  _draw_excav_res_reply_ = NULL;
  return temp;
}
inline void excavate_reply::set_allocated__draw_excav_res_reply(::client_baseserver::draw_excav_res_reply* _draw_excav_res_reply) {
  delete _draw_excav_res_reply_;
  _draw_excav_res_reply_ = _draw_excav_res_reply;
  if (_draw_excav_res_reply) {
    set_has__draw_excav_res_reply();
  } else {
    clear_has__draw_excav_res_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.excavate_reply._draw_excav_res_reply)
}

// optional .client_baseserver.withdraw_excavate_hero_reply _withdraw_excavate_hero_reply = 13;
inline bool excavate_reply::has__withdraw_excavate_hero_reply() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void excavate_reply::set_has__withdraw_excavate_hero_reply() {
  _has_bits_[0] |= 0x00001000u;
}
inline void excavate_reply::clear_has__withdraw_excavate_hero_reply() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void excavate_reply::clear__withdraw_excavate_hero_reply() {
  if (_withdraw_excavate_hero_reply_ != NULL) _withdraw_excavate_hero_reply_->::client_baseserver::withdraw_excavate_hero_reply::Clear();
  clear_has__withdraw_excavate_hero_reply();
}
inline const ::client_baseserver::withdraw_excavate_hero_reply& excavate_reply::_withdraw_excavate_hero_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_reply._withdraw_excavate_hero_reply)
  return _withdraw_excavate_hero_reply_ != NULL ? *_withdraw_excavate_hero_reply_ : *default_instance_->_withdraw_excavate_hero_reply_;
}
inline ::client_baseserver::withdraw_excavate_hero_reply* excavate_reply::mutable__withdraw_excavate_hero_reply() {
  set_has__withdraw_excavate_hero_reply();
  if (_withdraw_excavate_hero_reply_ == NULL) _withdraw_excavate_hero_reply_ = new ::client_baseserver::withdraw_excavate_hero_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.excavate_reply._withdraw_excavate_hero_reply)
  return _withdraw_excavate_hero_reply_;
}
inline ::client_baseserver::withdraw_excavate_hero_reply* excavate_reply::release__withdraw_excavate_hero_reply() {
  clear_has__withdraw_excavate_hero_reply();
  ::client_baseserver::withdraw_excavate_hero_reply* temp = _withdraw_excavate_hero_reply_;
  _withdraw_excavate_hero_reply_ = NULL;
  return temp;
}
inline void excavate_reply::set_allocated__withdraw_excavate_hero_reply(::client_baseserver::withdraw_excavate_hero_reply* _withdraw_excavate_hero_reply) {
  delete _withdraw_excavate_hero_reply_;
  _withdraw_excavate_hero_reply_ = _withdraw_excavate_hero_reply;
  if (_withdraw_excavate_hero_reply) {
    set_has__withdraw_excavate_hero_reply();
  } else {
    clear_has__withdraw_excavate_hero_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.excavate_reply._withdraw_excavate_hero_reply)
}

// -------------------------------------------------------------------

// revenge_excavate_reply

// optional .client_baseserver.excavate _excavate = 1;
inline bool revenge_excavate_reply::has__excavate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void revenge_excavate_reply::set_has__excavate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void revenge_excavate_reply::clear_has__excavate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void revenge_excavate_reply::clear__excavate() {
  if (_excavate_ != NULL) _excavate_->::client_baseserver::excavate::Clear();
  clear_has__excavate();
}
inline const ::client_baseserver::excavate& revenge_excavate_reply::_excavate() const {
  // @@protoc_insertion_point(field_get:client_baseserver.revenge_excavate_reply._excavate)
  return _excavate_ != NULL ? *_excavate_ : *default_instance_->_excavate_;
}
inline ::client_baseserver::excavate* revenge_excavate_reply::mutable__excavate() {
  set_has__excavate();
  if (_excavate_ == NULL) _excavate_ = new ::client_baseserver::excavate;
  // @@protoc_insertion_point(field_mutable:client_baseserver.revenge_excavate_reply._excavate)
  return _excavate_;
}
inline ::client_baseserver::excavate* revenge_excavate_reply::release__excavate() {
  clear_has__excavate();
  ::client_baseserver::excavate* temp = _excavate_;
  _excavate_ = NULL;
  return temp;
}
inline void revenge_excavate_reply::set_allocated__excavate(::client_baseserver::excavate* _excavate) {
  delete _excavate_;
  _excavate_ = _excavate;
  if (_excavate) {
    set_has__excavate();
  } else {
    clear_has__excavate();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.revenge_excavate_reply._excavate)
}

// -------------------------------------------------------------------

// search_excavate_reply

// required .client_baseserver.search_excavate_reply.search_result _result = 1;
inline bool search_excavate_reply::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void search_excavate_reply::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void search_excavate_reply::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void search_excavate_reply::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::search_excavate_reply_search_result search_excavate_reply::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.search_excavate_reply._result)
  return static_cast< ::client_baseserver::search_excavate_reply_search_result >(_result_);
}
inline void search_excavate_reply::set__result(::client_baseserver::search_excavate_reply_search_result value) {
  assert(::client_baseserver::search_excavate_reply_search_result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.search_excavate_reply._result)
}

// optional .client_baseserver.excavate _excavate = 2;
inline bool search_excavate_reply::has__excavate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void search_excavate_reply::set_has__excavate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void search_excavate_reply::clear_has__excavate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void search_excavate_reply::clear__excavate() {
  if (_excavate_ != NULL) _excavate_->::client_baseserver::excavate::Clear();
  clear_has__excavate();
}
inline const ::client_baseserver::excavate& search_excavate_reply::_excavate() const {
  // @@protoc_insertion_point(field_get:client_baseserver.search_excavate_reply._excavate)
  return _excavate_ != NULL ? *_excavate_ : *default_instance_->_excavate_;
}
inline ::client_baseserver::excavate* search_excavate_reply::mutable__excavate() {
  set_has__excavate();
  if (_excavate_ == NULL) _excavate_ = new ::client_baseserver::excavate;
  // @@protoc_insertion_point(field_mutable:client_baseserver.search_excavate_reply._excavate)
  return _excavate_;
}
inline ::client_baseserver::excavate* search_excavate_reply::release__excavate() {
  clear_has__excavate();
  ::client_baseserver::excavate* temp = _excavate_;
  _excavate_ = NULL;
  return temp;
}
inline void search_excavate_reply::set_allocated__excavate(::client_baseserver::excavate* _excavate) {
  delete _excavate_;
  _excavate_ = _excavate;
  if (_excavate) {
    set_has__excavate();
  } else {
    clear_has__excavate();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.search_excavate_reply._excavate)
}

// -------------------------------------------------------------------

// query_excavate_data_reply

// repeated .client_baseserver.excavate _excavate = 1;
inline int query_excavate_data_reply::_excavate_size() const {
  return _excavate_.size();
}
inline void query_excavate_data_reply::clear__excavate() {
  _excavate_.Clear();
}
inline const ::client_baseserver::excavate& query_excavate_data_reply::_excavate(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.query_excavate_data_reply._excavate)
  return _excavate_.Get(index);
}
inline ::client_baseserver::excavate* query_excavate_data_reply::mutable__excavate(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.query_excavate_data_reply._excavate)
  return _excavate_.Mutable(index);
}
inline ::client_baseserver::excavate* query_excavate_data_reply::add__excavate() {
  // @@protoc_insertion_point(field_add:client_baseserver.query_excavate_data_reply._excavate)
  return _excavate_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate >&
query_excavate_data_reply::_excavate() const {
  // @@protoc_insertion_point(field_list:client_baseserver.query_excavate_data_reply._excavate)
  return _excavate_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate >*
query_excavate_data_reply::mutable__excavate() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.query_excavate_data_reply._excavate)
  return &_excavate_;
}

// required uint32 _searched_id = 2;
inline bool query_excavate_data_reply::has__searched_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void query_excavate_data_reply::set_has__searched_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void query_excavate_data_reply::clear_has__searched_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void query_excavate_data_reply::clear__searched_id() {
  _searched_id_ = 0u;
  clear_has__searched_id();
}
inline ::google::protobuf::uint32 query_excavate_data_reply::_searched_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.query_excavate_data_reply._searched_id)
  return _searched_id_;
}
inline void query_excavate_data_reply::set__searched_id(::google::protobuf::uint32 value) {
  set_has__searched_id();
  _searched_id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.query_excavate_data_reply._searched_id)
}

// required uint32 _search_times = 3;
inline bool query_excavate_data_reply::has__search_times() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void query_excavate_data_reply::set_has__search_times() {
  _has_bits_[0] |= 0x00000004u;
}
inline void query_excavate_data_reply::clear_has__search_times() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void query_excavate_data_reply::clear__search_times() {
  _search_times_ = 0u;
  clear_has__search_times();
}
inline ::google::protobuf::uint32 query_excavate_data_reply::_search_times() const {
  // @@protoc_insertion_point(field_get:client_baseserver.query_excavate_data_reply._search_times)
  return _search_times_;
}
inline void query_excavate_data_reply::set__search_times(::google::protobuf::uint32 value) {
  set_has__search_times();
  _search_times_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.query_excavate_data_reply._search_times)
}

// required uint32 _last_search_ts = 4;
inline bool query_excavate_data_reply::has__last_search_ts() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void query_excavate_data_reply::set_has__last_search_ts() {
  _has_bits_[0] |= 0x00000008u;
}
inline void query_excavate_data_reply::clear_has__last_search_ts() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void query_excavate_data_reply::clear__last_search_ts() {
  _last_search_ts_ = 0u;
  clear_has__last_search_ts();
}
inline ::google::protobuf::uint32 query_excavate_data_reply::_last_search_ts() const {
  // @@protoc_insertion_point(field_get:client_baseserver.query_excavate_data_reply._last_search_ts)
  return _last_search_ts_;
}
inline void query_excavate_data_reply::set__last_search_ts(::google::protobuf::uint32 value) {
  set_has__last_search_ts();
  _last_search_ts_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.query_excavate_data_reply._last_search_ts)
}

// optional uint32 _attacking_id = 5;
inline bool query_excavate_data_reply::has__attacking_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void query_excavate_data_reply::set_has__attacking_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void query_excavate_data_reply::clear_has__attacking_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void query_excavate_data_reply::clear__attacking_id() {
  _attacking_id_ = 0u;
  clear_has__attacking_id();
}
inline ::google::protobuf::uint32 query_excavate_data_reply::_attacking_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.query_excavate_data_reply._attacking_id)
  return _attacking_id_;
}
inline void query_excavate_data_reply::set__attacking_id(::google::protobuf::uint32 value) {
  set_has__attacking_id();
  _attacking_id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.query_excavate_data_reply._attacking_id)
}

// repeated .client_baseserver.excavate_self_hero _bat_heroes = 6;
inline int query_excavate_data_reply::_bat_heroes_size() const {
  return _bat_heroes_.size();
}
inline void query_excavate_data_reply::clear__bat_heroes() {
  _bat_heroes_.Clear();
}
inline const ::client_baseserver::excavate_self_hero& query_excavate_data_reply::_bat_heroes(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.query_excavate_data_reply._bat_heroes)
  return _bat_heroes_.Get(index);
}
inline ::client_baseserver::excavate_self_hero* query_excavate_data_reply::mutable__bat_heroes(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.query_excavate_data_reply._bat_heroes)
  return _bat_heroes_.Mutable(index);
}
inline ::client_baseserver::excavate_self_hero* query_excavate_data_reply::add__bat_heroes() {
  // @@protoc_insertion_point(field_add:client_baseserver.query_excavate_data_reply._bat_heroes)
  return _bat_heroes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate_self_hero >&
query_excavate_data_reply::_bat_heroes() const {
  // @@protoc_insertion_point(field_list:client_baseserver.query_excavate_data_reply._bat_heroes)
  return _bat_heroes_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate_self_hero >*
query_excavate_data_reply::mutable__bat_heroes() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.query_excavate_data_reply._bat_heroes)
  return &_bat_heroes_;
}

// optional .client_baseserver.excavate_cfg _cfg = 7;
inline bool query_excavate_data_reply::has__cfg() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void query_excavate_data_reply::set_has__cfg() {
  _has_bits_[0] |= 0x00000040u;
}
inline void query_excavate_data_reply::clear_has__cfg() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void query_excavate_data_reply::clear__cfg() {
  if (_cfg_ != NULL) _cfg_->::client_baseserver::excavate_cfg::Clear();
  clear_has__cfg();
}
inline const ::client_baseserver::excavate_cfg& query_excavate_data_reply::_cfg() const {
  // @@protoc_insertion_point(field_get:client_baseserver.query_excavate_data_reply._cfg)
  return _cfg_ != NULL ? *_cfg_ : *default_instance_->_cfg_;
}
inline ::client_baseserver::excavate_cfg* query_excavate_data_reply::mutable__cfg() {
  set_has__cfg();
  if (_cfg_ == NULL) _cfg_ = new ::client_baseserver::excavate_cfg;
  // @@protoc_insertion_point(field_mutable:client_baseserver.query_excavate_data_reply._cfg)
  return _cfg_;
}
inline ::client_baseserver::excavate_cfg* query_excavate_data_reply::release__cfg() {
  clear_has__cfg();
  ::client_baseserver::excavate_cfg* temp = _cfg_;
  _cfg_ = NULL;
  return temp;
}
inline void query_excavate_data_reply::set_allocated__cfg(::client_baseserver::excavate_cfg* _cfg) {
  delete _cfg_;
  _cfg_ = _cfg;
  if (_cfg) {
    set_has__cfg();
  } else {
    clear_has__cfg();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.query_excavate_data_reply._cfg)
}

// optional .client_baseserver.hire_data _hire = 8;
inline bool query_excavate_data_reply::has__hire() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void query_excavate_data_reply::set_has__hire() {
  _has_bits_[0] |= 0x00000080u;
}
inline void query_excavate_data_reply::clear_has__hire() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void query_excavate_data_reply::clear__hire() {
  if (_hire_ != NULL) _hire_->::client_baseserver::hire_data::Clear();
  clear_has__hire();
}
inline const ::client_baseserver::hire_data& query_excavate_data_reply::_hire() const {
  // @@protoc_insertion_point(field_get:client_baseserver.query_excavate_data_reply._hire)
  return _hire_ != NULL ? *_hire_ : *default_instance_->_hire_;
}
inline ::client_baseserver::hire_data* query_excavate_data_reply::mutable__hire() {
  set_has__hire();
  if (_hire_ == NULL) _hire_ = new ::client_baseserver::hire_data;
  // @@protoc_insertion_point(field_mutable:client_baseserver.query_excavate_data_reply._hire)
  return _hire_;
}
inline ::client_baseserver::hire_data* query_excavate_data_reply::release__hire() {
  clear_has__hire();
  ::client_baseserver::hire_data* temp = _hire_;
  _hire_ = NULL;
  return temp;
}
inline void query_excavate_data_reply::set_allocated__hire(::client_baseserver::hire_data* _hire) {
  delete _hire_;
  _hire_ = _hire;
  if (_hire) {
    set_has__hire();
  } else {
    clear_has__hire();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.query_excavate_data_reply._hire)
}

// -------------------------------------------------------------------

// excavate_self_hero

// required uint32 _hero_id = 1;
inline bool excavate_self_hero::has__hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void excavate_self_hero::set_has__hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void excavate_self_hero::clear_has__hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void excavate_self_hero::clear__hero_id() {
  _hero_id_ = 0u;
  clear_has__hero_id();
}
inline ::google::protobuf::uint32 excavate_self_hero::_hero_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_self_hero._hero_id)
  return _hero_id_;
}
inline void excavate_self_hero::set__hero_id(::google::protobuf::uint32 value) {
  set_has__hero_id();
  _hero_id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.excavate_self_hero._hero_id)
}

// required .client_baseserver.hero_dyna _dyna = 2;
inline bool excavate_self_hero::has__dyna() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void excavate_self_hero::set_has__dyna() {
  _has_bits_[0] |= 0x00000002u;
}
inline void excavate_self_hero::clear_has__dyna() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void excavate_self_hero::clear__dyna() {
  if (_dyna_ != NULL) _dyna_->::client_baseserver::hero_dyna::Clear();
  clear_has__dyna();
}
inline const ::client_baseserver::hero_dyna& excavate_self_hero::_dyna() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_self_hero._dyna)
  return _dyna_ != NULL ? *_dyna_ : *default_instance_->_dyna_;
}
inline ::client_baseserver::hero_dyna* excavate_self_hero::mutable__dyna() {
  set_has__dyna();
  if (_dyna_ == NULL) _dyna_ = new ::client_baseserver::hero_dyna;
  // @@protoc_insertion_point(field_mutable:client_baseserver.excavate_self_hero._dyna)
  return _dyna_;
}
inline ::client_baseserver::hero_dyna* excavate_self_hero::release__dyna() {
  clear_has__dyna();
  ::client_baseserver::hero_dyna* temp = _dyna_;
  _dyna_ = NULL;
  return temp;
}
inline void excavate_self_hero::set_allocated__dyna(::client_baseserver::hero_dyna* _dyna) {
  delete _dyna_;
  _dyna_ = _dyna;
  if (_dyna) {
    set_has__dyna();
  } else {
    clear_has__dyna();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.excavate_self_hero._dyna)
}

// -------------------------------------------------------------------

// excavate_cfg

// optional uint32 _attack_timeout = 1;
inline bool excavate_cfg::has__attack_timeout() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void excavate_cfg::set_has__attack_timeout() {
  _has_bits_[0] |= 0x00000001u;
}
inline void excavate_cfg::clear_has__attack_timeout() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void excavate_cfg::clear__attack_timeout() {
  _attack_timeout_ = 0u;
  clear_has__attack_timeout();
}
inline ::google::protobuf::uint32 excavate_cfg::_attack_timeout() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_cfg._attack_timeout)
  return _attack_timeout_;
}
inline void excavate_cfg::set__attack_timeout(::google::protobuf::uint32 value) {
  set_has__attack_timeout();
  _attack_timeout_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.excavate_cfg._attack_timeout)
}

// -------------------------------------------------------------------

// excavate_team

// required uint32 _team_id = 1;
inline bool excavate_team::has__team_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void excavate_team::set_has__team_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void excavate_team::clear_has__team_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void excavate_team::clear__team_id() {
  _team_id_ = 0u;
  clear_has__team_id();
}
inline ::google::protobuf::uint32 excavate_team::_team_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_team._team_id)
  return _team_id_;
}
inline void excavate_team::set__team_id(::google::protobuf::uint32 value) {
  set_has__team_id();
  _team_id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.excavate_team._team_id)
}

// optional .client_baseserver.user_summary _player = 2;
inline bool excavate_team::has__player() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void excavate_team::set_has__player() {
  _has_bits_[0] |= 0x00000002u;
}
inline void excavate_team::clear_has__player() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void excavate_team::clear__player() {
  if (_player_ != NULL) _player_->::client_baseserver::user_summary::Clear();
  clear_has__player();
}
inline const ::client_baseserver::user_summary& excavate_team::_player() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_team._player)
  return _player_ != NULL ? *_player_ : *default_instance_->_player_;
}
inline ::client_baseserver::user_summary* excavate_team::mutable__player() {
  set_has__player();
  if (_player_ == NULL) _player_ = new ::client_baseserver::user_summary;
  // @@protoc_insertion_point(field_mutable:client_baseserver.excavate_team._player)
  return _player_;
}
inline ::client_baseserver::user_summary* excavate_team::release__player() {
  clear_has__player();
  ::client_baseserver::user_summary* temp = _player_;
  _player_ = NULL;
  return temp;
}
inline void excavate_team::set_allocated__player(::client_baseserver::user_summary* _player) {
  delete _player_;
  _player_ = _player;
  if (_player) {
    set_has__player();
  } else {
    clear_has__player();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.excavate_team._player)
}

// repeated .client_baseserver.hero_summary _hero_bases = 3;
inline int excavate_team::_hero_bases_size() const {
  return _hero_bases_.size();
}
inline void excavate_team::clear__hero_bases() {
  _hero_bases_.Clear();
}
inline const ::client_baseserver::hero_summary& excavate_team::_hero_bases(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_team._hero_bases)
  return _hero_bases_.Get(index);
}
inline ::client_baseserver::hero_summary* excavate_team::mutable__hero_bases(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.excavate_team._hero_bases)
  return _hero_bases_.Mutable(index);
}
inline ::client_baseserver::hero_summary* excavate_team::add__hero_bases() {
  // @@protoc_insertion_point(field_add:client_baseserver.excavate_team._hero_bases)
  return _hero_bases_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero_summary >&
excavate_team::_hero_bases() const {
  // @@protoc_insertion_point(field_list:client_baseserver.excavate_team._hero_bases)
  return _hero_bases_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero_summary >*
excavate_team::mutable__hero_bases() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.excavate_team._hero_bases)
  return &_hero_bases_;
}

// repeated .client_baseserver.hero_dyna _hero_dynas = 4;
inline int excavate_team::_hero_dynas_size() const {
  return _hero_dynas_.size();
}
inline void excavate_team::clear__hero_dynas() {
  _hero_dynas_.Clear();
}
inline const ::client_baseserver::hero_dyna& excavate_team::_hero_dynas(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_team._hero_dynas)
  return _hero_dynas_.Get(index);
}
inline ::client_baseserver::hero_dyna* excavate_team::mutable__hero_dynas(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.excavate_team._hero_dynas)
  return _hero_dynas_.Mutable(index);
}
inline ::client_baseserver::hero_dyna* excavate_team::add__hero_dynas() {
  // @@protoc_insertion_point(field_add:client_baseserver.excavate_team._hero_dynas)
  return _hero_dynas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero_dyna >&
excavate_team::_hero_dynas() const {
  // @@protoc_insertion_point(field_list:client_baseserver.excavate_team._hero_dynas)
  return _hero_dynas_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero_dyna >*
excavate_team::mutable__hero_dynas() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.excavate_team._hero_dynas)
  return &_hero_dynas_;
}

// required uint32 _res_got = 5;
inline bool excavate_team::has__res_got() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void excavate_team::set_has__res_got() {
  _has_bits_[0] |= 0x00000010u;
}
inline void excavate_team::clear_has__res_got() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void excavate_team::clear__res_got() {
  _res_got_ = 0u;
  clear_has__res_got();
}
inline ::google::protobuf::uint32 excavate_team::_res_got() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_team._res_got)
  return _res_got_;
}
inline void excavate_team::set__res_got(::google::protobuf::uint32 value) {
  set_has__res_got();
  _res_got_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.excavate_team._res_got)
}

// optional uint32 _svr_id = 6;
inline bool excavate_team::has__svr_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void excavate_team::set_has__svr_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void excavate_team::clear_has__svr_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void excavate_team::clear__svr_id() {
  _svr_id_ = 0u;
  clear_has__svr_id();
}
inline ::google::protobuf::uint32 excavate_team::_svr_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_team._svr_id)
  return _svr_id_;
}
inline void excavate_team::set__svr_id(::google::protobuf::uint32 value) {
  set_has__svr_id();
  _svr_id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.excavate_team._svr_id)
}

// optional uint32 _display_svr_id = 7;
inline bool excavate_team::has__display_svr_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void excavate_team::set_has__display_svr_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void excavate_team::clear_has__display_svr_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void excavate_team::clear__display_svr_id() {
  _display_svr_id_ = 0u;
  clear_has__display_svr_id();
}
inline ::google::protobuf::uint32 excavate_team::_display_svr_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_team._display_svr_id)
  return _display_svr_id_;
}
inline void excavate_team::set__display_svr_id(::google::protobuf::uint32 value) {
  set_has__display_svr_id();
  _display_svr_id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.excavate_team._display_svr_id)
}

// optional string _svr_name = 8;
inline bool excavate_team::has__svr_name() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void excavate_team::set_has__svr_name() {
  _has_bits_[0] |= 0x00000080u;
}
inline void excavate_team::clear_has__svr_name() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void excavate_team::clear__svr_name() {
  if (_svr_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _svr_name_->clear();
  }
  clear_has__svr_name();
}
inline const ::std::string& excavate_team::_svr_name() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_team._svr_name)
  return *_svr_name_;
}
inline void excavate_team::set__svr_name(const ::std::string& value) {
  set_has__svr_name();
  if (_svr_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _svr_name_ = new ::std::string;
  }
  _svr_name_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.excavate_team._svr_name)
}
inline void excavate_team::set__svr_name(const char* value) {
  set_has__svr_name();
  if (_svr_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _svr_name_ = new ::std::string;
  }
  _svr_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.excavate_team._svr_name)
}
inline void excavate_team::set__svr_name(const char* value, size_t size) {
  set_has__svr_name();
  if (_svr_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _svr_name_ = new ::std::string;
  }
  _svr_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.excavate_team._svr_name)
}
inline ::std::string* excavate_team::mutable__svr_name() {
  set_has__svr_name();
  if (_svr_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _svr_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.excavate_team._svr_name)
  return _svr_name_;
}
inline ::std::string* excavate_team::release__svr_name() {
  clear_has__svr_name();
  if (_svr_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = _svr_name_;
    _svr_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void excavate_team::set_allocated__svr_name(::std::string* _svr_name) {
  if (_svr_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete _svr_name_;
  }
  if (_svr_name) {
    set_has__svr_name();
    _svr_name_ = _svr_name;
  } else {
    clear_has__svr_name();
    _svr_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.excavate_team._svr_name)
}

// optional uint32 _team_gs = 9;
inline bool excavate_team::has__team_gs() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void excavate_team::set_has__team_gs() {
  _has_bits_[0] |= 0x00000100u;
}
inline void excavate_team::clear_has__team_gs() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void excavate_team::clear__team_gs() {
  _team_gs_ = 0u;
  clear_has__team_gs();
}
inline ::google::protobuf::uint32 excavate_team::_team_gs() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_team._team_gs)
  return _team_gs_;
}
inline void excavate_team::set__team_gs(::google::protobuf::uint32 value) {
  set_has__team_gs();
  _team_gs_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.excavate_team._team_gs)
}

// optional uint32 _speed = 10;
inline bool excavate_team::has__speed() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void excavate_team::set_has__speed() {
  _has_bits_[0] |= 0x00000200u;
}
inline void excavate_team::clear_has__speed() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void excavate_team::clear__speed() {
  _speed_ = 0u;
  clear_has__speed();
}
inline ::google::protobuf::uint32 excavate_team::_speed() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_team._speed)
  return _speed_;
}
inline void excavate_team::set__speed(::google::protobuf::uint32 value) {
  set_has__speed();
  _speed_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.excavate_team._speed)
}

// optional uint32 _robbed = 11;
inline bool excavate_team::has__robbed() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void excavate_team::set_has__robbed() {
  _has_bits_[0] |= 0x00000400u;
}
inline void excavate_team::clear_has__robbed() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void excavate_team::clear__robbed() {
  _robbed_ = 0u;
  clear_has__robbed();
}
inline ::google::protobuf::uint32 excavate_team::_robbed() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_team._robbed)
  return _robbed_;
}
inline void excavate_team::set__robbed(::google::protobuf::uint32 value) {
  set_has__robbed();
  _robbed_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.excavate_team._robbed)
}

// -------------------------------------------------------------------

// excavate

// required .client_baseserver.excavate.owner _owner = 1;
inline bool excavate::has__owner() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void excavate::set_has__owner() {
  _has_bits_[0] |= 0x00000001u;
}
inline void excavate::clear_has__owner() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void excavate::clear__owner() {
  _owner_ = 0;
  clear_has__owner();
}
inline ::client_baseserver::excavate_owner excavate::_owner() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate._owner)
  return static_cast< ::client_baseserver::excavate_owner >(_owner_);
}
inline void excavate::set__owner(::client_baseserver::excavate_owner value) {
  assert(::client_baseserver::excavate_owner_IsValid(value));
  set_has__owner();
  _owner_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.excavate._owner)
}

// required uint32 _id = 2;
inline bool excavate::has__id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void excavate::set_has__id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void excavate::clear_has__id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void excavate::clear__id() {
  _id_ = 0u;
  clear_has__id();
}
inline ::google::protobuf::uint32 excavate::_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate._id)
  return _id_;
}
inline void excavate::set__id(::google::protobuf::uint32 value) {
  set_has__id();
  _id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.excavate._id)
}

// required uint32 _type_id = 3;
inline bool excavate::has__type_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void excavate::set_has__type_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void excavate::clear_has__type_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void excavate::clear__type_id() {
  _type_id_ = 0u;
  clear_has__type_id();
}
inline ::google::protobuf::uint32 excavate::_type_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate._type_id)
  return _type_id_;
}
inline void excavate::set__type_id(::google::protobuf::uint32 value) {
  set_has__type_id();
  _type_id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.excavate._type_id)
}

// repeated .client_baseserver.excavate_team _team = 4;
inline int excavate::_team_size() const {
  return _team_.size();
}
inline void excavate::clear__team() {
  _team_.Clear();
}
inline const ::client_baseserver::excavate_team& excavate::_team(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate._team)
  return _team_.Get(index);
}
inline ::client_baseserver::excavate_team* excavate::mutable__team(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.excavate._team)
  return _team_.Mutable(index);
}
inline ::client_baseserver::excavate_team* excavate::add__team() {
  // @@protoc_insertion_point(field_add:client_baseserver.excavate._team)
  return _team_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate_team >&
excavate::_team() const {
  // @@protoc_insertion_point(field_list:client_baseserver.excavate._team)
  return _team_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate_team >*
excavate::mutable__team() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.excavate._team)
  return &_team_;
}

// required .client_baseserver.excavate.state _state = 5;
inline bool excavate::has__state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void excavate::set_has__state() {
  _has_bits_[0] |= 0x00000010u;
}
inline void excavate::clear_has__state() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void excavate::clear__state() {
  _state_ = 1;
  clear_has__state();
}
inline ::client_baseserver::excavate_state excavate::_state() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate._state)
  return static_cast< ::client_baseserver::excavate_state >(_state_);
}
inline void excavate::set__state(::client_baseserver::excavate_state value) {
  assert(::client_baseserver::excavate_state_IsValid(value));
  set_has__state();
  _state_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.excavate._state)
}

// optional uint32 _state_end_ts = 6;
inline bool excavate::has__state_end_ts() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void excavate::set_has__state_end_ts() {
  _has_bits_[0] |= 0x00000020u;
}
inline void excavate::clear_has__state_end_ts() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void excavate::clear__state_end_ts() {
  _state_end_ts_ = 0u;
  clear_has__state_end_ts();
}
inline ::google::protobuf::uint32 excavate::_state_end_ts() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate._state_end_ts)
  return _state_end_ts_;
}
inline void excavate::set__state_end_ts(::google::protobuf::uint32 value) {
  set_has__state_end_ts();
  _state_end_ts_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.excavate._state_end_ts)
}

// optional uint32 _create_time = 7;
inline bool excavate::has__create_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void excavate::set_has__create_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void excavate::clear_has__create_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void excavate::clear__create_time() {
  _create_time_ = 0u;
  clear_has__create_time();
}
inline ::google::protobuf::uint32 excavate::_create_time() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate._create_time)
  return _create_time_;
}
inline void excavate::set__create_time(::google::protobuf::uint32 value) {
  set_has__create_time();
  _create_time_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.excavate._create_time)
}

// -------------------------------------------------------------------

// excavate_history

// required string _id = 1;
inline bool excavate_history::has__id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void excavate_history::set_has__id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void excavate_history::clear_has__id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void excavate_history::clear__id() {
  if (_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _id_->clear();
  }
  clear_has__id();
}
inline const ::std::string& excavate_history::_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_history._id)
  return *_id_;
}
inline void excavate_history::set__id(const ::std::string& value) {
  set_has__id();
  if (_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _id_ = new ::std::string;
  }
  _id_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.excavate_history._id)
}
inline void excavate_history::set__id(const char* value) {
  set_has__id();
  if (_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _id_ = new ::std::string;
  }
  _id_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.excavate_history._id)
}
inline void excavate_history::set__id(const char* value, size_t size) {
  set_has__id();
  if (_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _id_ = new ::std::string;
  }
  _id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.excavate_history._id)
}
inline ::std::string* excavate_history::mutable__id() {
  set_has__id();
  if (_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.excavate_history._id)
  return _id_;
}
inline ::std::string* excavate_history::release__id() {
  clear_has__id();
  if (_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = _id_;
    _id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void excavate_history::set_allocated__id(::std::string* _id) {
  if (_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete _id_;
  }
  if (_id) {
    set_has__id();
    _id_ = _id;
  } else {
    clear_has__id();
    _id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.excavate_history._id)
}

// required uint32 _excavate_id = 2;
inline bool excavate_history::has__excavate_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void excavate_history::set_has__excavate_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void excavate_history::clear_has__excavate_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void excavate_history::clear__excavate_id() {
  _excavate_id_ = 0u;
  clear_has__excavate_id();
}
inline ::google::protobuf::uint32 excavate_history::_excavate_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_history._excavate_id)
  return _excavate_id_;
}
inline void excavate_history::set__excavate_id(::google::protobuf::uint32 value) {
  set_has__excavate_id();
  _excavate_id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.excavate_history._excavate_id)
}

// required .client_baseserver.excavate_history.def_result _result = 3;
inline bool excavate_history::has__result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void excavate_history::set_has__result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void excavate_history::clear_has__result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void excavate_history::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::excavate_history_def_result excavate_history::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_history._result)
  return static_cast< ::client_baseserver::excavate_history_def_result >(_result_);
}
inline void excavate_history::set__result(::client_baseserver::excavate_history_def_result value) {
  assert(::client_baseserver::excavate_history_def_result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.excavate_history._result)
}

// required string _enemy_name = 4;
inline bool excavate_history::has__enemy_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void excavate_history::set_has__enemy_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void excavate_history::clear_has__enemy_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void excavate_history::clear__enemy_name() {
  if (_enemy_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _enemy_name_->clear();
  }
  clear_has__enemy_name();
}
inline const ::std::string& excavate_history::_enemy_name() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_history._enemy_name)
  return *_enemy_name_;
}
inline void excavate_history::set__enemy_name(const ::std::string& value) {
  set_has__enemy_name();
  if (_enemy_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _enemy_name_ = new ::std::string;
  }
  _enemy_name_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.excavate_history._enemy_name)
}
inline void excavate_history::set__enemy_name(const char* value) {
  set_has__enemy_name();
  if (_enemy_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _enemy_name_ = new ::std::string;
  }
  _enemy_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.excavate_history._enemy_name)
}
inline void excavate_history::set__enemy_name(const char* value, size_t size) {
  set_has__enemy_name();
  if (_enemy_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _enemy_name_ = new ::std::string;
  }
  _enemy_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.excavate_history._enemy_name)
}
inline ::std::string* excavate_history::mutable__enemy_name() {
  set_has__enemy_name();
  if (_enemy_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _enemy_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.excavate_history._enemy_name)
  return _enemy_name_;
}
inline ::std::string* excavate_history::release__enemy_name() {
  clear_has__enemy_name();
  if (_enemy_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = _enemy_name_;
    _enemy_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void excavate_history::set_allocated__enemy_name(::std::string* _enemy_name) {
  if (_enemy_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete _enemy_name_;
  }
  if (_enemy_name) {
    set_has__enemy_name();
    _enemy_name_ = _enemy_name;
  } else {
    clear_has__enemy_name();
    _enemy_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.excavate_history._enemy_name)
}

// optional uint32 _enemy_svrid = 5;
inline bool excavate_history::has__enemy_svrid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void excavate_history::set_has__enemy_svrid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void excavate_history::clear_has__enemy_svrid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void excavate_history::clear__enemy_svrid() {
  _enemy_svrid_ = 0u;
  clear_has__enemy_svrid();
}
inline ::google::protobuf::uint32 excavate_history::_enemy_svrid() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_history._enemy_svrid)
  return _enemy_svrid_;
}
inline void excavate_history::set__enemy_svrid(::google::protobuf::uint32 value) {
  set_has__enemy_svrid();
  _enemy_svrid_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.excavate_history._enemy_svrid)
}

// optional string _enemy_svrname = 6;
inline bool excavate_history::has__enemy_svrname() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void excavate_history::set_has__enemy_svrname() {
  _has_bits_[0] |= 0x00000020u;
}
inline void excavate_history::clear_has__enemy_svrname() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void excavate_history::clear__enemy_svrname() {
  if (_enemy_svrname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _enemy_svrname_->clear();
  }
  clear_has__enemy_svrname();
}
inline const ::std::string& excavate_history::_enemy_svrname() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_history._enemy_svrname)
  return *_enemy_svrname_;
}
inline void excavate_history::set__enemy_svrname(const ::std::string& value) {
  set_has__enemy_svrname();
  if (_enemy_svrname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _enemy_svrname_ = new ::std::string;
  }
  _enemy_svrname_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.excavate_history._enemy_svrname)
}
inline void excavate_history::set__enemy_svrname(const char* value) {
  set_has__enemy_svrname();
  if (_enemy_svrname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _enemy_svrname_ = new ::std::string;
  }
  _enemy_svrname_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.excavate_history._enemy_svrname)
}
inline void excavate_history::set__enemy_svrname(const char* value, size_t size) {
  set_has__enemy_svrname();
  if (_enemy_svrname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _enemy_svrname_ = new ::std::string;
  }
  _enemy_svrname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.excavate_history._enemy_svrname)
}
inline ::std::string* excavate_history::mutable__enemy_svrname() {
  set_has__enemy_svrname();
  if (_enemy_svrname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _enemy_svrname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.excavate_history._enemy_svrname)
  return _enemy_svrname_;
}
inline ::std::string* excavate_history::release__enemy_svrname() {
  clear_has__enemy_svrname();
  if (_enemy_svrname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = _enemy_svrname_;
    _enemy_svrname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void excavate_history::set_allocated__enemy_svrname(::std::string* _enemy_svrname) {
  if (_enemy_svrname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete _enemy_svrname_;
  }
  if (_enemy_svrname) {
    set_has__enemy_svrname();
    _enemy_svrname_ = _enemy_svrname;
  } else {
    clear_has__enemy_svrname();
    _enemy_svrname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.excavate_history._enemy_svrname)
}

// required uint32 _time = 7;
inline bool excavate_history::has__time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void excavate_history::set_has__time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void excavate_history::clear_has__time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void excavate_history::clear__time() {
  _time_ = 0u;
  clear_has__time();
}
inline ::google::protobuf::uint32 excavate_history::_time() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_history._time)
  return _time_;
}
inline void excavate_history::set__time(::google::protobuf::uint32 value) {
  set_has__time();
  _time_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.excavate_history._time)
}

// optional uint32 _vatility = 8;
inline bool excavate_history::has__vatility() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void excavate_history::set_has__vatility() {
  _has_bits_[0] |= 0x00000080u;
}
inline void excavate_history::clear_has__vatility() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void excavate_history::clear__vatility() {
  _vatility_ = 0u;
  clear_has__vatility();
}
inline ::google::protobuf::uint32 excavate_history::_vatility() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_history._vatility)
  return _vatility_;
}
inline void excavate_history::set__vatility(::google::protobuf::uint32 value) {
  set_has__vatility();
  _vatility_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.excavate_history._vatility)
}

// repeated .client_baseserver.excavate_reward _reward = 9;
inline int excavate_history::_reward_size() const {
  return _reward_.size();
}
inline void excavate_history::clear__reward() {
  _reward_.Clear();
}
inline const ::client_baseserver::excavate_reward& excavate_history::_reward(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_history._reward)
  return _reward_.Get(index);
}
inline ::client_baseserver::excavate_reward* excavate_history::mutable__reward(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.excavate_history._reward)
  return _reward_.Mutable(index);
}
inline ::client_baseserver::excavate_reward* excavate_history::add__reward() {
  // @@protoc_insertion_point(field_add:client_baseserver.excavate_history._reward)
  return _reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate_reward >&
excavate_history::_reward() const {
  // @@protoc_insertion_point(field_list:client_baseserver.excavate_history._reward)
  return _reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate_reward >*
excavate_history::mutable__reward() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.excavate_history._reward)
  return &_reward_;
}

// -------------------------------------------------------------------

// query_excavate_history_reply

// repeated .client_baseserver.excavate_history _excavate_history = 1;
inline int query_excavate_history_reply::_excavate_history_size() const {
  return _excavate_history_.size();
}
inline void query_excavate_history_reply::clear__excavate_history() {
  _excavate_history_.Clear();
}
inline const ::client_baseserver::excavate_history& query_excavate_history_reply::_excavate_history(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.query_excavate_history_reply._excavate_history)
  return _excavate_history_.Get(index);
}
inline ::client_baseserver::excavate_history* query_excavate_history_reply::mutable__excavate_history(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.query_excavate_history_reply._excavate_history)
  return _excavate_history_.Mutable(index);
}
inline ::client_baseserver::excavate_history* query_excavate_history_reply::add__excavate_history() {
  // @@protoc_insertion_point(field_add:client_baseserver.query_excavate_history_reply._excavate_history)
  return _excavate_history_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate_history >&
query_excavate_history_reply::_excavate_history() const {
  // @@protoc_insertion_point(field_list:client_baseserver.query_excavate_history_reply._excavate_history)
  return _excavate_history_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate_history >*
query_excavate_history_reply::mutable__excavate_history() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.query_excavate_history_reply._excavate_history)
  return &_excavate_history_;
}

// optional uint32 _draw_def_vitality = 2;
inline bool query_excavate_history_reply::has__draw_def_vitality() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void query_excavate_history_reply::set_has__draw_def_vitality() {
  _has_bits_[0] |= 0x00000002u;
}
inline void query_excavate_history_reply::clear_has__draw_def_vitality() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void query_excavate_history_reply::clear__draw_def_vitality() {
  _draw_def_vitality_ = 0u;
  clear_has__draw_def_vitality();
}
inline ::google::protobuf::uint32 query_excavate_history_reply::_draw_def_vitality() const {
  // @@protoc_insertion_point(field_get:client_baseserver.query_excavate_history_reply._draw_def_vitality)
  return _draw_def_vitality_;
}
inline void query_excavate_history_reply::set__draw_def_vitality(::google::protobuf::uint32 value) {
  set_has__draw_def_vitality();
  _draw_def_vitality_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.query_excavate_history_reply._draw_def_vitality)
}

// -------------------------------------------------------------------

// excavate_battle_hero

// required .client_baseserver.hero_summary _base = 1;
inline bool excavate_battle_hero::has__base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void excavate_battle_hero::set_has__base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void excavate_battle_hero::clear_has__base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void excavate_battle_hero::clear__base() {
  if (_base_ != NULL) _base_->::client_baseserver::hero_summary::Clear();
  clear_has__base();
}
inline const ::client_baseserver::hero_summary& excavate_battle_hero::_base() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_battle_hero._base)
  return _base_ != NULL ? *_base_ : *default_instance_->_base_;
}
inline ::client_baseserver::hero_summary* excavate_battle_hero::mutable__base() {
  set_has__base();
  if (_base_ == NULL) _base_ = new ::client_baseserver::hero_summary;
  // @@protoc_insertion_point(field_mutable:client_baseserver.excavate_battle_hero._base)
  return _base_;
}
inline ::client_baseserver::hero_summary* excavate_battle_hero::release__base() {
  clear_has__base();
  ::client_baseserver::hero_summary* temp = _base_;
  _base_ = NULL;
  return temp;
}
inline void excavate_battle_hero::set_allocated__base(::client_baseserver::hero_summary* _base) {
  delete _base_;
  _base_ = _base;
  if (_base) {
    set_has__base();
  } else {
    clear_has__base();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.excavate_battle_hero._base)
}

// required .client_baseserver.hero_dyna _dyna = 2;
inline bool excavate_battle_hero::has__dyna() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void excavate_battle_hero::set_has__dyna() {
  _has_bits_[0] |= 0x00000002u;
}
inline void excavate_battle_hero::clear_has__dyna() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void excavate_battle_hero::clear__dyna() {
  if (_dyna_ != NULL) _dyna_->::client_baseserver::hero_dyna::Clear();
  clear_has__dyna();
}
inline const ::client_baseserver::hero_dyna& excavate_battle_hero::_dyna() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_battle_hero._dyna)
  return _dyna_ != NULL ? *_dyna_ : *default_instance_->_dyna_;
}
inline ::client_baseserver::hero_dyna* excavate_battle_hero::mutable__dyna() {
  set_has__dyna();
  if (_dyna_ == NULL) _dyna_ = new ::client_baseserver::hero_dyna;
  // @@protoc_insertion_point(field_mutable:client_baseserver.excavate_battle_hero._dyna)
  return _dyna_;
}
inline ::client_baseserver::hero_dyna* excavate_battle_hero::release__dyna() {
  clear_has__dyna();
  ::client_baseserver::hero_dyna* temp = _dyna_;
  _dyna_ = NULL;
  return temp;
}
inline void excavate_battle_hero::set_allocated__dyna(::client_baseserver::hero_dyna* _dyna) {
  delete _dyna_;
  _dyna_ = _dyna;
  if (_dyna) {
    set_has__dyna();
  } else {
    clear_has__dyna();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.excavate_battle_hero._dyna)
}

// -------------------------------------------------------------------

// excavate_battle_team

// required .client_baseserver.user_summary _player = 1;
inline bool excavate_battle_team::has__player() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void excavate_battle_team::set_has__player() {
  _has_bits_[0] |= 0x00000001u;
}
inline void excavate_battle_team::clear_has__player() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void excavate_battle_team::clear__player() {
  if (_player_ != NULL) _player_->::client_baseserver::user_summary::Clear();
  clear_has__player();
}
inline const ::client_baseserver::user_summary& excavate_battle_team::_player() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_battle_team._player)
  return _player_ != NULL ? *_player_ : *default_instance_->_player_;
}
inline ::client_baseserver::user_summary* excavate_battle_team::mutable__player() {
  set_has__player();
  if (_player_ == NULL) _player_ = new ::client_baseserver::user_summary;
  // @@protoc_insertion_point(field_mutable:client_baseserver.excavate_battle_team._player)
  return _player_;
}
inline ::client_baseserver::user_summary* excavate_battle_team::release__player() {
  clear_has__player();
  ::client_baseserver::user_summary* temp = _player_;
  _player_ = NULL;
  return temp;
}
inline void excavate_battle_team::set_allocated__player(::client_baseserver::user_summary* _player) {
  delete _player_;
  _player_ = _player;
  if (_player) {
    set_has__player();
  } else {
    clear_has__player();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.excavate_battle_team._player)
}

// repeated .client_baseserver.excavate_battle_hero _hero = 2;
inline int excavate_battle_team::_hero_size() const {
  return _hero_.size();
}
inline void excavate_battle_team::clear__hero() {
  _hero_.Clear();
}
inline const ::client_baseserver::excavate_battle_hero& excavate_battle_team::_hero(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_battle_team._hero)
  return _hero_.Get(index);
}
inline ::client_baseserver::excavate_battle_hero* excavate_battle_team::mutable__hero(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.excavate_battle_team._hero)
  return _hero_.Mutable(index);
}
inline ::client_baseserver::excavate_battle_hero* excavate_battle_team::add__hero() {
  // @@protoc_insertion_point(field_add:client_baseserver.excavate_battle_team._hero)
  return _hero_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate_battle_hero >&
excavate_battle_team::_hero() const {
  // @@protoc_insertion_point(field_list:client_baseserver.excavate_battle_team._hero)
  return _hero_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate_battle_hero >*
excavate_battle_team::mutable__hero() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.excavate_battle_team._hero)
  return &_hero_;
}

// -------------------------------------------------------------------

// excavate_battle

// required .client_baseserver.excavate_battle_team _self_team = 1;
inline bool excavate_battle::has__self_team() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void excavate_battle::set_has__self_team() {
  _has_bits_[0] |= 0x00000001u;
}
inline void excavate_battle::clear_has__self_team() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void excavate_battle::clear__self_team() {
  if (_self_team_ != NULL) _self_team_->::client_baseserver::excavate_battle_team::Clear();
  clear_has__self_team();
}
inline const ::client_baseserver::excavate_battle_team& excavate_battle::_self_team() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_battle._self_team)
  return _self_team_ != NULL ? *_self_team_ : *default_instance_->_self_team_;
}
inline ::client_baseserver::excavate_battle_team* excavate_battle::mutable__self_team() {
  set_has__self_team();
  if (_self_team_ == NULL) _self_team_ = new ::client_baseserver::excavate_battle_team;
  // @@protoc_insertion_point(field_mutable:client_baseserver.excavate_battle._self_team)
  return _self_team_;
}
inline ::client_baseserver::excavate_battle_team* excavate_battle::release__self_team() {
  clear_has__self_team();
  ::client_baseserver::excavate_battle_team* temp = _self_team_;
  _self_team_ = NULL;
  return temp;
}
inline void excavate_battle::set_allocated__self_team(::client_baseserver::excavate_battle_team* _self_team) {
  delete _self_team_;
  _self_team_ = _self_team;
  if (_self_team) {
    set_has__self_team();
  } else {
    clear_has__self_team();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.excavate_battle._self_team)
}

// required .client_baseserver.excavate_battle_team _oppo_team = 2;
inline bool excavate_battle::has__oppo_team() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void excavate_battle::set_has__oppo_team() {
  _has_bits_[0] |= 0x00000002u;
}
inline void excavate_battle::clear_has__oppo_team() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void excavate_battle::clear__oppo_team() {
  if (_oppo_team_ != NULL) _oppo_team_->::client_baseserver::excavate_battle_team::Clear();
  clear_has__oppo_team();
}
inline const ::client_baseserver::excavate_battle_team& excavate_battle::_oppo_team() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_battle._oppo_team)
  return _oppo_team_ != NULL ? *_oppo_team_ : *default_instance_->_oppo_team_;
}
inline ::client_baseserver::excavate_battle_team* excavate_battle::mutable__oppo_team() {
  set_has__oppo_team();
  if (_oppo_team_ == NULL) _oppo_team_ = new ::client_baseserver::excavate_battle_team;
  // @@protoc_insertion_point(field_mutable:client_baseserver.excavate_battle._oppo_team)
  return _oppo_team_;
}
inline ::client_baseserver::excavate_battle_team* excavate_battle::release__oppo_team() {
  clear_has__oppo_team();
  ::client_baseserver::excavate_battle_team* temp = _oppo_team_;
  _oppo_team_ = NULL;
  return temp;
}
inline void excavate_battle::set_allocated__oppo_team(::client_baseserver::excavate_battle_team* _oppo_team) {
  delete _oppo_team_;
  _oppo_team_ = _oppo_team;
  if (_oppo_team) {
    set_has__oppo_team();
  } else {
    clear_has__oppo_team();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.excavate_battle._oppo_team)
}

// required .client_baseserver.battle_result _result = 3;
inline bool excavate_battle::has__result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void excavate_battle::set_has__result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void excavate_battle::clear_has__result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void excavate_battle::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::battle_result excavate_battle::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_battle._result)
  return static_cast< ::client_baseserver::battle_result >(_result_);
}
inline void excavate_battle::set__result(::client_baseserver::battle_result value) {
  assert(::client_baseserver::battle_result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.excavate_battle._result)
}

// required uint32 _record_id = 4;
inline bool excavate_battle::has__record_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void excavate_battle::set_has__record_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void excavate_battle::clear_has__record_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void excavate_battle::clear__record_id() {
  _record_id_ = 0u;
  clear_has__record_id();
}
inline ::google::protobuf::uint32 excavate_battle::_record_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_battle._record_id)
  return _record_id_;
}
inline void excavate_battle::set__record_id(::google::protobuf::uint32 value) {
  set_has__record_id();
  _record_id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.excavate_battle._record_id)
}

// required uint32 _record_svrid = 5;
inline bool excavate_battle::has__record_svrid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void excavate_battle::set_has__record_svrid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void excavate_battle::clear_has__record_svrid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void excavate_battle::clear__record_svrid() {
  _record_svrid_ = 0u;
  clear_has__record_svrid();
}
inline ::google::protobuf::uint32 excavate_battle::_record_svrid() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_battle._record_svrid)
  return _record_svrid_;
}
inline void excavate_battle::set__record_svrid(::google::protobuf::uint32 value) {
  set_has__record_svrid();
  _record_svrid_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.excavate_battle._record_svrid)
}

// -------------------------------------------------------------------

// query_excavate_battle_reply

// repeated .client_baseserver.excavate_battle _battles = 1;
inline int query_excavate_battle_reply::_battles_size() const {
  return _battles_.size();
}
inline void query_excavate_battle_reply::clear__battles() {
  _battles_.Clear();
}
inline const ::client_baseserver::excavate_battle& query_excavate_battle_reply::_battles(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.query_excavate_battle_reply._battles)
  return _battles_.Get(index);
}
inline ::client_baseserver::excavate_battle* query_excavate_battle_reply::mutable__battles(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.query_excavate_battle_reply._battles)
  return _battles_.Mutable(index);
}
inline ::client_baseserver::excavate_battle* query_excavate_battle_reply::add__battles() {
  // @@protoc_insertion_point(field_add:client_baseserver.query_excavate_battle_reply._battles)
  return _battles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate_battle >&
query_excavate_battle_reply::_battles() const {
  // @@protoc_insertion_point(field_list:client_baseserver.query_excavate_battle_reply._battles)
  return _battles_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate_battle >*
query_excavate_battle_reply::mutable__battles() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.query_excavate_battle_reply._battles)
  return &_battles_;
}

// -------------------------------------------------------------------

// set_excavate_team_reply

// required .client_baseserver.set_excavate_team_reply.result _result = 1;
inline bool set_excavate_team_reply::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void set_excavate_team_reply::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void set_excavate_team_reply::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void set_excavate_team_reply::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::set_excavate_team_reply_result set_excavate_team_reply::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.set_excavate_team_reply._result)
  return static_cast< ::client_baseserver::set_excavate_team_reply_result >(_result_);
}
inline void set_excavate_team_reply::set__result(::client_baseserver::set_excavate_team_reply_result value) {
  assert(::client_baseserver::set_excavate_team_reply_result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.set_excavate_team_reply._result)
}

// optional .client_baseserver.excavate _mine = 2;
inline bool set_excavate_team_reply::has__mine() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void set_excavate_team_reply::set_has__mine() {
  _has_bits_[0] |= 0x00000002u;
}
inline void set_excavate_team_reply::clear_has__mine() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void set_excavate_team_reply::clear__mine() {
  if (_mine_ != NULL) _mine_->::client_baseserver::excavate::Clear();
  clear_has__mine();
}
inline const ::client_baseserver::excavate& set_excavate_team_reply::_mine() const {
  // @@protoc_insertion_point(field_get:client_baseserver.set_excavate_team_reply._mine)
  return _mine_ != NULL ? *_mine_ : *default_instance_->_mine_;
}
inline ::client_baseserver::excavate* set_excavate_team_reply::mutable__mine() {
  set_has__mine();
  if (_mine_ == NULL) _mine_ = new ::client_baseserver::excavate;
  // @@protoc_insertion_point(field_mutable:client_baseserver.set_excavate_team_reply._mine)
  return _mine_;
}
inline ::client_baseserver::excavate* set_excavate_team_reply::release__mine() {
  clear_has__mine();
  ::client_baseserver::excavate* temp = _mine_;
  _mine_ = NULL;
  return temp;
}
inline void set_excavate_team_reply::set_allocated__mine(::client_baseserver::excavate* _mine) {
  delete _mine_;
  _mine_ = _mine;
  if (_mine) {
    set_has__mine();
  } else {
    clear_has__mine();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.set_excavate_team_reply._mine)
}

// -------------------------------------------------------------------

// excavate_start_battle_reply

// required .client_baseserver.result _result = 1 [default = success];
inline bool excavate_start_battle_reply::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void excavate_start_battle_reply::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void excavate_start_battle_reply::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void excavate_start_battle_reply::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result excavate_start_battle_reply::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_start_battle_reply._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void excavate_start_battle_reply::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.excavate_start_battle_reply._result)
}

// required uint32 _rseed = 2;
inline bool excavate_start_battle_reply::has__rseed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void excavate_start_battle_reply::set_has__rseed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void excavate_start_battle_reply::clear_has__rseed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void excavate_start_battle_reply::clear__rseed() {
  _rseed_ = 0u;
  clear_has__rseed();
}
inline ::google::protobuf::uint32 excavate_start_battle_reply::_rseed() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_start_battle_reply._rseed)
  return _rseed_;
}
inline void excavate_start_battle_reply::set__rseed(::google::protobuf::uint32 value) {
  set_has__rseed();
  _rseed_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.excavate_start_battle_reply._rseed)
}

// repeated .client_baseserver.hero _hero_bases = 3;
inline int excavate_start_battle_reply::_hero_bases_size() const {
  return _hero_bases_.size();
}
inline void excavate_start_battle_reply::clear__hero_bases() {
  _hero_bases_.Clear();
}
inline const ::client_baseserver::hero& excavate_start_battle_reply::_hero_bases(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_start_battle_reply._hero_bases)
  return _hero_bases_.Get(index);
}
inline ::client_baseserver::hero* excavate_start_battle_reply::mutable__hero_bases(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.excavate_start_battle_reply._hero_bases)
  return _hero_bases_.Mutable(index);
}
inline ::client_baseserver::hero* excavate_start_battle_reply::add__hero_bases() {
  // @@protoc_insertion_point(field_add:client_baseserver.excavate_start_battle_reply._hero_bases)
  return _hero_bases_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >&
excavate_start_battle_reply::_hero_bases() const {
  // @@protoc_insertion_point(field_list:client_baseserver.excavate_start_battle_reply._hero_bases)
  return _hero_bases_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero >*
excavate_start_battle_reply::mutable__hero_bases() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.excavate_start_battle_reply._hero_bases)
  return &_hero_bases_;
}

// repeated .client_baseserver.hero_dyna _hero_dynas = 4;
inline int excavate_start_battle_reply::_hero_dynas_size() const {
  return _hero_dynas_.size();
}
inline void excavate_start_battle_reply::clear__hero_dynas() {
  _hero_dynas_.Clear();
}
inline const ::client_baseserver::hero_dyna& excavate_start_battle_reply::_hero_dynas(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_start_battle_reply._hero_dynas)
  return _hero_dynas_.Get(index);
}
inline ::client_baseserver::hero_dyna* excavate_start_battle_reply::mutable__hero_dynas(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.excavate_start_battle_reply._hero_dynas)
  return _hero_dynas_.Mutable(index);
}
inline ::client_baseserver::hero_dyna* excavate_start_battle_reply::add__hero_dynas() {
  // @@protoc_insertion_point(field_add:client_baseserver.excavate_start_battle_reply._hero_dynas)
  return _hero_dynas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero_dyna >&
excavate_start_battle_reply::_hero_dynas() const {
  // @@protoc_insertion_point(field_list:client_baseserver.excavate_start_battle_reply._hero_dynas)
  return _hero_dynas_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::hero_dyna >*
excavate_start_battle_reply::mutable__hero_dynas() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.excavate_start_battle_reply._hero_dynas)
  return &_hero_dynas_;
}

// -------------------------------------------------------------------

// excavate_end_battle_reply

// optional .client_baseserver.battle_result _result = 1 [default = victory];
inline bool excavate_end_battle_reply::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void excavate_end_battle_reply::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void excavate_end_battle_reply::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void excavate_end_battle_reply::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::battle_result excavate_end_battle_reply::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_end_battle_reply._result)
  return static_cast< ::client_baseserver::battle_result >(_result_);
}
inline void excavate_end_battle_reply::set__result(::client_baseserver::battle_result value) {
  assert(::client_baseserver::battle_result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.excavate_end_battle_reply._result)
}

// optional .client_baseserver.excavate _excavate = 2;
inline bool excavate_end_battle_reply::has__excavate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void excavate_end_battle_reply::set_has__excavate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void excavate_end_battle_reply::clear_has__excavate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void excavate_end_battle_reply::clear__excavate() {
  if (_excavate_ != NULL) _excavate_->::client_baseserver::excavate::Clear();
  clear_has__excavate();
}
inline const ::client_baseserver::excavate& excavate_end_battle_reply::_excavate() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_end_battle_reply._excavate)
  return _excavate_ != NULL ? *_excavate_ : *default_instance_->_excavate_;
}
inline ::client_baseserver::excavate* excavate_end_battle_reply::mutable__excavate() {
  set_has__excavate();
  if (_excavate_ == NULL) _excavate_ = new ::client_baseserver::excavate;
  // @@protoc_insertion_point(field_mutable:client_baseserver.excavate_end_battle_reply._excavate)
  return _excavate_;
}
inline ::client_baseserver::excavate* excavate_end_battle_reply::release__excavate() {
  clear_has__excavate();
  ::client_baseserver::excavate* temp = _excavate_;
  _excavate_ = NULL;
  return temp;
}
inline void excavate_end_battle_reply::set_allocated__excavate(::client_baseserver::excavate* _excavate) {
  delete _excavate_;
  _excavate_ = _excavate;
  if (_excavate) {
    set_has__excavate();
  } else {
    clear_has__excavate();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.excavate_end_battle_reply._excavate)
}

// repeated .client_baseserver.excavate_reward _reward = 3;
inline int excavate_end_battle_reply::_reward_size() const {
  return _reward_.size();
}
inline void excavate_end_battle_reply::clear__reward() {
  _reward_.Clear();
}
inline const ::client_baseserver::excavate_reward& excavate_end_battle_reply::_reward(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_end_battle_reply._reward)
  return _reward_.Get(index);
}
inline ::client_baseserver::excavate_reward* excavate_end_battle_reply::mutable__reward(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.excavate_end_battle_reply._reward)
  return _reward_.Mutable(index);
}
inline ::client_baseserver::excavate_reward* excavate_end_battle_reply::add__reward() {
  // @@protoc_insertion_point(field_add:client_baseserver.excavate_end_battle_reply._reward)
  return _reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate_reward >&
excavate_end_battle_reply::_reward() const {
  // @@protoc_insertion_point(field_list:client_baseserver.excavate_end_battle_reply._reward)
  return _reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate_reward >*
excavate_end_battle_reply::mutable__reward() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.excavate_end_battle_reply._reward)
  return &_reward_;
}

// optional .client_baseserver.excavate_end_battle_reply.mine_battle_result _mine_battle_result = 4 [default = success];
inline bool excavate_end_battle_reply::has__mine_battle_result() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void excavate_end_battle_reply::set_has__mine_battle_result() {
  _has_bits_[0] |= 0x00000008u;
}
inline void excavate_end_battle_reply::clear_has__mine_battle_result() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void excavate_end_battle_reply::clear__mine_battle_result() {
  _mine_battle_result_ = 0;
  clear_has__mine_battle_result();
}
inline ::client_baseserver::excavate_end_battle_reply_mine_battle_result excavate_end_battle_reply::_mine_battle_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_end_battle_reply._mine_battle_result)
  return static_cast< ::client_baseserver::excavate_end_battle_reply_mine_battle_result >(_mine_battle_result_);
}
inline void excavate_end_battle_reply::set__mine_battle_result(::client_baseserver::excavate_end_battle_reply_mine_battle_result value) {
  assert(::client_baseserver::excavate_end_battle_reply_mine_battle_result_IsValid(value));
  set_has__mine_battle_result();
  _mine_battle_result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.excavate_end_battle_reply._mine_battle_result)
}

// -------------------------------------------------------------------

// draw_excav_res_reply

// optional uint32 _diamond = 1;
inline bool draw_excav_res_reply::has__diamond() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void draw_excav_res_reply::set_has__diamond() {
  _has_bits_[0] |= 0x00000001u;
}
inline void draw_excav_res_reply::clear_has__diamond() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void draw_excav_res_reply::clear__diamond() {
  _diamond_ = 0u;
  clear_has__diamond();
}
inline ::google::protobuf::uint32 draw_excav_res_reply::_diamond() const {
  // @@protoc_insertion_point(field_get:client_baseserver.draw_excav_res_reply._diamond)
  return _diamond_;
}
inline void draw_excav_res_reply::set__diamond(::google::protobuf::uint32 value) {
  set_has__diamond();
  _diamond_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.draw_excav_res_reply._diamond)
}

// repeated .client_baseserver.excavate_reward _reward = 2;
inline int draw_excav_res_reply::_reward_size() const {
  return _reward_.size();
}
inline void draw_excav_res_reply::clear__reward() {
  _reward_.Clear();
}
inline const ::client_baseserver::excavate_reward& draw_excav_res_reply::_reward(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.draw_excav_res_reply._reward)
  return _reward_.Get(index);
}
inline ::client_baseserver::excavate_reward* draw_excav_res_reply::mutable__reward(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.draw_excav_res_reply._reward)
  return _reward_.Mutable(index);
}
inline ::client_baseserver::excavate_reward* draw_excav_res_reply::add__reward() {
  // @@protoc_insertion_point(field_add:client_baseserver.draw_excav_res_reply._reward)
  return _reward_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate_reward >&
draw_excav_res_reply::_reward() const {
  // @@protoc_insertion_point(field_list:client_baseserver.draw_excav_res_reply._reward)
  return _reward_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::excavate_reward >*
draw_excav_res_reply::mutable__reward() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.draw_excav_res_reply._reward)
  return &_reward_;
}

// -------------------------------------------------------------------

// excavate_reward

// required .client_baseserver.excavate_reward.type _type = 1;
inline bool excavate_reward::has__type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void excavate_reward::set_has__type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void excavate_reward::clear_has__type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void excavate_reward::clear__type() {
  _type_ = 1;
  clear_has__type();
}
inline ::client_baseserver::excavate_reward_type excavate_reward::_type() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_reward._type)
  return static_cast< ::client_baseserver::excavate_reward_type >(_type_);
}
inline void excavate_reward::set__type(::client_baseserver::excavate_reward_type value) {
  assert(::client_baseserver::excavate_reward_type_IsValid(value));
  set_has__type();
  _type_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.excavate_reward._type)
}

// optional uint32 _team_id = 2;
inline bool excavate_reward::has__team_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void excavate_reward::set_has__team_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void excavate_reward::clear_has__team_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void excavate_reward::clear__team_id() {
  _team_id_ = 0u;
  clear_has__team_id();
}
inline ::google::protobuf::uint32 excavate_reward::_team_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_reward._team_id)
  return _team_id_;
}
inline void excavate_reward::set__team_id(::google::protobuf::uint32 value) {
  set_has__team_id();
  _team_id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.excavate_reward._team_id)
}

// optional uint32 _param1 = 3;
inline bool excavate_reward::has__param1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void excavate_reward::set_has__param1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void excavate_reward::clear_has__param1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void excavate_reward::clear__param1() {
  _param1_ = 0u;
  clear_has__param1();
}
inline ::google::protobuf::uint32 excavate_reward::_param1() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_reward._param1)
  return _param1_;
}
inline void excavate_reward::set__param1(::google::protobuf::uint32 value) {
  set_has__param1();
  _param1_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.excavate_reward._param1)
}

// optional uint32 _param2 = 4;
inline bool excavate_reward::has__param2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void excavate_reward::set_has__param2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void excavate_reward::clear_has__param2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void excavate_reward::clear__param2() {
  _param2_ = 0u;
  clear_has__param2();
}
inline ::google::protobuf::uint32 excavate_reward::_param2() const {
  // @@protoc_insertion_point(field_get:client_baseserver.excavate_reward._param2)
  return _param2_;
}
inline void excavate_reward::set__param2(::google::protobuf::uint32 value) {
  set_has__param2();
  _param2_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.excavate_reward._param2)
}

// -------------------------------------------------------------------

// query_excavate_def_reply

// optional .client_baseserver.excavate _excavate = 1;
inline bool query_excavate_def_reply::has__excavate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void query_excavate_def_reply::set_has__excavate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void query_excavate_def_reply::clear_has__excavate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void query_excavate_def_reply::clear__excavate() {
  if (_excavate_ != NULL) _excavate_->::client_baseserver::excavate::Clear();
  clear_has__excavate();
}
inline const ::client_baseserver::excavate& query_excavate_def_reply::_excavate() const {
  // @@protoc_insertion_point(field_get:client_baseserver.query_excavate_def_reply._excavate)
  return _excavate_ != NULL ? *_excavate_ : *default_instance_->_excavate_;
}
inline ::client_baseserver::excavate* query_excavate_def_reply::mutable__excavate() {
  set_has__excavate();
  if (_excavate_ == NULL) _excavate_ = new ::client_baseserver::excavate;
  // @@protoc_insertion_point(field_mutable:client_baseserver.query_excavate_def_reply._excavate)
  return _excavate_;
}
inline ::client_baseserver::excavate* query_excavate_def_reply::release__excavate() {
  clear_has__excavate();
  ::client_baseserver::excavate* temp = _excavate_;
  _excavate_ = NULL;
  return temp;
}
inline void query_excavate_def_reply::set_allocated__excavate(::client_baseserver::excavate* _excavate) {
  delete _excavate_;
  _excavate_ = _excavate;
  if (_excavate) {
    set_has__excavate();
  } else {
    clear_has__excavate();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.query_excavate_def_reply._excavate)
}

// -------------------------------------------------------------------

// clear_excavate_battle_reply

// required .client_baseserver.result _result = 1 [default = success];
inline bool clear_excavate_battle_reply::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void clear_excavate_battle_reply::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void clear_excavate_battle_reply::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void clear_excavate_battle_reply::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result clear_excavate_battle_reply::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.clear_excavate_battle_reply._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void clear_excavate_battle_reply::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.clear_excavate_battle_reply._result)
}

// -------------------------------------------------------------------

// withdraw_excavate_hero_reply

// required .client_baseserver.result _result = 1 [default = success];
inline bool withdraw_excavate_hero_reply::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void withdraw_excavate_hero_reply::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void withdraw_excavate_hero_reply::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void withdraw_excavate_hero_reply::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result withdraw_excavate_hero_reply::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.withdraw_excavate_hero_reply._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void withdraw_excavate_hero_reply::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.withdraw_excavate_hero_reply._result)
}

// -------------------------------------------------------------------

// draw_excavate_def_rwd_reply

// required .client_baseserver.result _result = 1 [default = success];
inline bool draw_excavate_def_rwd_reply::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void draw_excavate_def_rwd_reply::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void draw_excavate_def_rwd_reply::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void draw_excavate_def_rwd_reply::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result draw_excavate_def_rwd_reply::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.draw_excavate_def_rwd_reply._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void draw_excavate_def_rwd_reply::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.draw_excavate_def_rwd_reply._result)
}

// optional uint32 _draw_vitality = 2;
inline bool draw_excavate_def_rwd_reply::has__draw_vitality() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void draw_excavate_def_rwd_reply::set_has__draw_vitality() {
  _has_bits_[0] |= 0x00000002u;
}
inline void draw_excavate_def_rwd_reply::clear_has__draw_vitality() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void draw_excavate_def_rwd_reply::clear__draw_vitality() {
  _draw_vitality_ = 0u;
  clear_has__draw_vitality();
}
inline ::google::protobuf::uint32 draw_excavate_def_rwd_reply::_draw_vitality() const {
  // @@protoc_insertion_point(field_get:client_baseserver.draw_excavate_def_rwd_reply._draw_vitality)
  return _draw_vitality_;
}
inline void draw_excavate_def_rwd_reply::set__draw_vitality(::google::protobuf::uint32 value) {
  set_has__draw_vitality();
  _draw_vitality_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.draw_excavate_def_rwd_reply._draw_vitality)
}

// -------------------------------------------------------------------

// drop_excavate_reply

// required .client_baseserver.result _result = 1 [default = success];
inline bool drop_excavate_reply::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void drop_excavate_reply::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void drop_excavate_reply::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void drop_excavate_reply::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result drop_excavate_reply::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.drop_excavate_reply._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void drop_excavate_reply::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.drop_excavate_reply._result)
}

// optional .client_baseserver.excavate_reward _reward = 2;
inline bool drop_excavate_reply::has__reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void drop_excavate_reply::set_has__reward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void drop_excavate_reply::clear_has__reward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void drop_excavate_reply::clear__reward() {
  if (_reward_ != NULL) _reward_->::client_baseserver::excavate_reward::Clear();
  clear_has__reward();
}
inline const ::client_baseserver::excavate_reward& drop_excavate_reply::_reward() const {
  // @@protoc_insertion_point(field_get:client_baseserver.drop_excavate_reply._reward)
  return _reward_ != NULL ? *_reward_ : *default_instance_->_reward_;
}
inline ::client_baseserver::excavate_reward* drop_excavate_reply::mutable__reward() {
  set_has__reward();
  if (_reward_ == NULL) _reward_ = new ::client_baseserver::excavate_reward;
  // @@protoc_insertion_point(field_mutable:client_baseserver.drop_excavate_reply._reward)
  return _reward_;
}
inline ::client_baseserver::excavate_reward* drop_excavate_reply::release__reward() {
  clear_has__reward();
  ::client_baseserver::excavate_reward* temp = _reward_;
  _reward_ = NULL;
  return temp;
}
inline void drop_excavate_reply::set_allocated__reward(::client_baseserver::excavate_reward* _reward) {
  delete _reward_;
  _reward_ = _reward;
  if (_reward) {
    set_has__reward();
  } else {
    clear_has__reward();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.drop_excavate_reply._reward)
}

// -------------------------------------------------------------------

// change_server_reply

// required .client_baseserver.server_opt_result _result = 1;
inline bool change_server_reply::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void change_server_reply::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void change_server_reply::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void change_server_reply::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::server_opt_result change_server_reply::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.change_server_reply._result)
  return static_cast< ::client_baseserver::server_opt_result >(_result_);
}
inline void change_server_reply::set__result(::client_baseserver::server_opt_result value) {
  assert(::client_baseserver::server_opt_result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.change_server_reply._result)
}

// repeated .client_baseserver.server_info _server_info = 2;
inline int change_server_reply::_server_info_size() const {
  return _server_info_.size();
}
inline void change_server_reply::clear__server_info() {
  _server_info_.Clear();
}
inline const ::client_baseserver::server_info& change_server_reply::_server_info(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.change_server_reply._server_info)
  return _server_info_.Get(index);
}
inline ::client_baseserver::server_info* change_server_reply::mutable__server_info(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.change_server_reply._server_info)
  return _server_info_.Mutable(index);
}
inline ::client_baseserver::server_info* change_server_reply::add__server_info() {
  // @@protoc_insertion_point(field_add:client_baseserver.change_server_reply._server_info)
  return _server_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::server_info >&
change_server_reply::_server_info() const {
  // @@protoc_insertion_point(field_list:client_baseserver.change_server_reply._server_info)
  return _server_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::server_info >*
change_server_reply::mutable__server_info() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.change_server_reply._server_info)
  return &_server_info_;
}

// -------------------------------------------------------------------

// server_info

// required uint32 _server_id = 1;
inline bool server_info::has__server_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void server_info::set_has__server_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void server_info::clear_has__server_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void server_info::clear__server_id() {
  _server_id_ = 0u;
  clear_has__server_id();
}
inline ::google::protobuf::uint32 server_info::_server_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.server_info._server_id)
  return _server_id_;
}
inline void server_info::set__server_id(::google::protobuf::uint32 value) {
  set_has__server_id();
  _server_id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.server_info._server_id)
}

// required string _server_name = 2;
inline bool server_info::has__server_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void server_info::set_has__server_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void server_info::clear_has__server_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void server_info::clear__server_name() {
  if (_server_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _server_name_->clear();
  }
  clear_has__server_name();
}
inline const ::std::string& server_info::_server_name() const {
  // @@protoc_insertion_point(field_get:client_baseserver.server_info._server_name)
  return *_server_name_;
}
inline void server_info::set__server_name(const ::std::string& value) {
  set_has__server_name();
  if (_server_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _server_name_ = new ::std::string;
  }
  _server_name_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.server_info._server_name)
}
inline void server_info::set__server_name(const char* value) {
  set_has__server_name();
  if (_server_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _server_name_ = new ::std::string;
  }
  _server_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.server_info._server_name)
}
inline void server_info::set__server_name(const char* value, size_t size) {
  set_has__server_name();
  if (_server_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _server_name_ = new ::std::string;
  }
  _server_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.server_info._server_name)
}
inline ::std::string* server_info::mutable__server_name() {
  set_has__server_name();
  if (_server_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _server_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.server_info._server_name)
  return _server_name_;
}
inline ::std::string* server_info::release__server_name() {
  clear_has__server_name();
  if (_server_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = _server_name_;
    _server_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void server_info::set_allocated__server_name(::std::string* _server_name) {
  if (_server_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete _server_name_;
  }
  if (_server_name) {
    set_has__server_name();
    _server_name_ = _server_name;
  } else {
    clear_has__server_name();
    _server_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.server_info._server_name)
}

// optional string _player_name = 3;
inline bool server_info::has__player_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void server_info::set_has__player_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void server_info::clear_has__player_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void server_info::clear__player_name() {
  if (_player_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _player_name_->clear();
  }
  clear_has__player_name();
}
inline const ::std::string& server_info::_player_name() const {
  // @@protoc_insertion_point(field_get:client_baseserver.server_info._player_name)
  return *_player_name_;
}
inline void server_info::set__player_name(const ::std::string& value) {
  set_has__player_name();
  if (_player_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _player_name_ = new ::std::string;
  }
  _player_name_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.server_info._player_name)
}
inline void server_info::set__player_name(const char* value) {
  set_has__player_name();
  if (_player_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _player_name_ = new ::std::string;
  }
  _player_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.server_info._player_name)
}
inline void server_info::set__player_name(const char* value, size_t size) {
  set_has__player_name();
  if (_player_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _player_name_ = new ::std::string;
  }
  _player_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.server_info._player_name)
}
inline ::std::string* server_info::mutable__player_name() {
  set_has__player_name();
  if (_player_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _player_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.server_info._player_name)
  return _player_name_;
}
inline ::std::string* server_info::release__player_name() {
  clear_has__player_name();
  if (_player_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = _player_name_;
    _player_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void server_info::set_allocated__player_name(::std::string* _player_name) {
  if (_player_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete _player_name_;
  }
  if (_player_name) {
    set_has__player_name();
    _player_name_ = _player_name;
  } else {
    clear_has__player_name();
    _player_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.server_info._player_name)
}

// optional uint32 _player_level = 4;
inline bool server_info::has__player_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void server_info::set_has__player_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void server_info::clear_has__player_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void server_info::clear__player_level() {
  _player_level_ = 0u;
  clear_has__player_level();
}
inline ::google::protobuf::uint32 server_info::_player_level() const {
  // @@protoc_insertion_point(field_get:client_baseserver.server_info._player_level)
  return _player_level_;
}
inline void server_info::set__player_level(::google::protobuf::uint32 value) {
  set_has__player_level();
  _player_level_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.server_info._player_level)
}

// -------------------------------------------------------------------

// guild_instance_query

// required uint32 _current_raid_id = 1;
inline bool guild_instance_query::has__current_raid_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_instance_query::set_has__current_raid_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_instance_query::clear_has__current_raid_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_instance_query::clear__current_raid_id() {
  _current_raid_id_ = 0u;
  clear_has__current_raid_id();
}
inline ::google::protobuf::uint32 guild_instance_query::_current_raid_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_query._current_raid_id)
  return _current_raid_id_;
}
inline void guild_instance_query::set__current_raid_id(::google::protobuf::uint32 value) {
  set_has__current_raid_id();
  _current_raid_id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_query._current_raid_id)
}

// repeated .client_baseserver.guild_instance_summary _summary = 2;
inline int guild_instance_query::_summary_size() const {
  return _summary_.size();
}
inline void guild_instance_query::clear__summary() {
  _summary_.Clear();
}
inline const ::client_baseserver::guild_instance_summary& guild_instance_query::_summary(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_query._summary)
  return _summary_.Get(index);
}
inline ::client_baseserver::guild_instance_summary* guild_instance_query::mutable__summary(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_instance_query._summary)
  return _summary_.Mutable(index);
}
inline ::client_baseserver::guild_instance_summary* guild_instance_query::add__summary() {
  // @@protoc_insertion_point(field_add:client_baseserver.guild_instance_query._summary)
  return _summary_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_instance_summary >&
guild_instance_query::_summary() const {
  // @@protoc_insertion_point(field_list:client_baseserver.guild_instance_query._summary)
  return _summary_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_instance_summary >*
guild_instance_query::mutable__summary() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.guild_instance_query._summary)
  return &_summary_;
}

// optional uint32 _stage_pass = 3;
inline bool guild_instance_query::has__stage_pass() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void guild_instance_query::set_has__stage_pass() {
  _has_bits_[0] |= 0x00000004u;
}
inline void guild_instance_query::clear_has__stage_pass() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void guild_instance_query::clear__stage_pass() {
  _stage_pass_ = 0u;
  clear_has__stage_pass();
}
inline ::google::protobuf::uint32 guild_instance_query::_stage_pass() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_query._stage_pass)
  return _stage_pass_;
}
inline void guild_instance_query::set__stage_pass(::google::protobuf::uint32 value) {
  set_has__stage_pass();
  _stage_pass_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_query._stage_pass)
}

// required .client_baseserver.guild_instance_query.is_can_jump _is_can_jump = 4;
inline bool guild_instance_query::has__is_can_jump() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void guild_instance_query::set_has__is_can_jump() {
  _has_bits_[0] |= 0x00000008u;
}
inline void guild_instance_query::clear_has__is_can_jump() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void guild_instance_query::clear__is_can_jump() {
  _is_can_jump_ = 1;
  clear_has__is_can_jump();
}
inline ::client_baseserver::guild_instance_query_is_can_jump guild_instance_query::_is_can_jump() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_query._is_can_jump)
  return static_cast< ::client_baseserver::guild_instance_query_is_can_jump >(_is_can_jump_);
}
inline void guild_instance_query::set__is_can_jump(::client_baseserver::guild_instance_query_is_can_jump value) {
  assert(::client_baseserver::guild_instance_query_is_can_jump_IsValid(value));
  set_has__is_can_jump();
  _is_can_jump_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_query._is_can_jump)
}

// -------------------------------------------------------------------

// guild_chapter

// required uint32 _id = 1;
inline bool guild_chapter::has__id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_chapter::set_has__id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_chapter::clear_has__id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_chapter::clear__id() {
  _id_ = 0u;
  clear_has__id();
}
inline ::google::protobuf::uint32 guild_chapter::_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_chapter._id)
  return _id_;
}
inline void guild_chapter::set__id(::google::protobuf::uint32 value) {
  set_has__id();
  _id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_chapter._id)
}

// required uint32 _progress = 2;
inline bool guild_chapter::has__progress() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guild_chapter::set_has__progress() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guild_chapter::clear_has__progress() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guild_chapter::clear__progress() {
  _progress_ = 0u;
  clear_has__progress();
}
inline ::google::protobuf::uint32 guild_chapter::_progress() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_chapter._progress)
  return _progress_;
}
inline void guild_chapter::set__progress(::google::protobuf::uint32 value) {
  set_has__progress();
  _progress_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_chapter._progress)
}

// required uint32 _begin_time = 3;
inline bool guild_chapter::has__begin_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void guild_chapter::set_has__begin_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void guild_chapter::clear_has__begin_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void guild_chapter::clear__begin_time() {
  _begin_time_ = 0u;
  clear_has__begin_time();
}
inline ::google::protobuf::uint32 guild_chapter::_begin_time() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_chapter._begin_time)
  return _begin_time_;
}
inline void guild_chapter::set__begin_time(::google::protobuf::uint32 value) {
  set_has__begin_time();
  _begin_time_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_chapter._begin_time)
}

// required uint32 _rest_times = 4;
inline bool guild_chapter::has__rest_times() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void guild_chapter::set_has__rest_times() {
  _has_bits_[0] |= 0x00000008u;
}
inline void guild_chapter::clear_has__rest_times() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void guild_chapter::clear__rest_times() {
  _rest_times_ = 0u;
  clear_has__rest_times();
}
inline ::google::protobuf::uint32 guild_chapter::_rest_times() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_chapter._rest_times)
  return _rest_times_;
}
inline void guild_chapter::set__rest_times(::google::protobuf::uint32 value) {
  set_has__rest_times();
  _rest_times_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_chapter._rest_times)
}

// required uint32 _cur_stage_id = 5;
inline bool guild_chapter::has__cur_stage_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void guild_chapter::set_has__cur_stage_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void guild_chapter::clear_has__cur_stage_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void guild_chapter::clear__cur_stage_id() {
  _cur_stage_id_ = 0u;
  clear_has__cur_stage_id();
}
inline ::google::protobuf::uint32 guild_chapter::_cur_stage_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_chapter._cur_stage_id)
  return _cur_stage_id_;
}
inline void guild_chapter::set__cur_stage_id(::google::protobuf::uint32 value) {
  set_has__cur_stage_id();
  _cur_stage_id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_chapter._cur_stage_id)
}

// -------------------------------------------------------------------

// guild_instance_detail

// required uint32 _stage = 1;
inline bool guild_instance_detail::has__stage() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_instance_detail::set_has__stage() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_instance_detail::clear_has__stage() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_instance_detail::clear__stage() {
  _stage_ = 0u;
  clear_has__stage();
}
inline ::google::protobuf::uint32 guild_instance_detail::_stage() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_detail._stage)
  return _stage_;
}
inline void guild_instance_detail::set__stage(::google::protobuf::uint32 value) {
  set_has__stage();
  _stage_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_detail._stage)
}

// required uint32 _wave = 2;
inline bool guild_instance_detail::has__wave() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guild_instance_detail::set_has__wave() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guild_instance_detail::clear_has__wave() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guild_instance_detail::clear__wave() {
  _wave_ = 0u;
  clear_has__wave();
}
inline ::google::protobuf::uint32 guild_instance_detail::_wave() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_detail._wave)
  return _wave_;
}
inline void guild_instance_detail::set__wave(::google::protobuf::uint32 value) {
  set_has__wave();
  _wave_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_detail._wave)
}

// repeated uint32 _hp = 3;
inline int guild_instance_detail::_hp_size() const {
  return _hp_.size();
}
inline void guild_instance_detail::clear__hp() {
  _hp_.Clear();
}
inline ::google::protobuf::uint32 guild_instance_detail::_hp(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_detail._hp)
  return _hp_.Get(index);
}
inline void guild_instance_detail::set__hp(int index, ::google::protobuf::uint32 value) {
  _hp_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_detail._hp)
}
inline void guild_instance_detail::add__hp(::google::protobuf::uint32 value) {
  _hp_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.guild_instance_detail._hp)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
guild_instance_detail::_hp() const {
  // @@protoc_insertion_point(field_list:client_baseserver.guild_instance_detail._hp)
  return _hp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
guild_instance_detail::mutable__hp() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.guild_instance_detail._hp)
  return &_hp_;
}

// repeated .client_baseserver.guild_instance_record _record = 4;
inline int guild_instance_detail::_record_size() const {
  return _record_.size();
}
inline void guild_instance_detail::clear__record() {
  _record_.Clear();
}
inline const ::client_baseserver::guild_instance_record& guild_instance_detail::_record(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_detail._record)
  return _record_.Get(index);
}
inline ::client_baseserver::guild_instance_record* guild_instance_detail::mutable__record(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_instance_detail._record)
  return _record_.Mutable(index);
}
inline ::client_baseserver::guild_instance_record* guild_instance_detail::add__record() {
  // @@protoc_insertion_point(field_add:client_baseserver.guild_instance_detail._record)
  return _record_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_instance_record >&
guild_instance_detail::_record() const {
  // @@protoc_insertion_point(field_list:client_baseserver.guild_instance_detail._record)
  return _record_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_instance_record >*
guild_instance_detail::mutable__record() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.guild_instance_detail._record)
  return &_record_;
}

// optional .client_baseserver.guild_challenger _challenger = 5;
inline bool guild_instance_detail::has__challenger() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void guild_instance_detail::set_has__challenger() {
  _has_bits_[0] |= 0x00000010u;
}
inline void guild_instance_detail::clear_has__challenger() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void guild_instance_detail::clear__challenger() {
  if (_challenger_ != NULL) _challenger_->::client_baseserver::guild_challenger::Clear();
  clear_has__challenger();
}
inline const ::client_baseserver::guild_challenger& guild_instance_detail::_challenger() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_detail._challenger)
  return _challenger_ != NULL ? *_challenger_ : *default_instance_->_challenger_;
}
inline ::client_baseserver::guild_challenger* guild_instance_detail::mutable__challenger() {
  set_has__challenger();
  if (_challenger_ == NULL) _challenger_ = new ::client_baseserver::guild_challenger;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_instance_detail._challenger)
  return _challenger_;
}
inline ::client_baseserver::guild_challenger* guild_instance_detail::release__challenger() {
  clear_has__challenger();
  ::client_baseserver::guild_challenger* temp = _challenger_;
  _challenger_ = NULL;
  return temp;
}
inline void guild_instance_detail::set_allocated__challenger(::client_baseserver::guild_challenger* _challenger) {
  delete _challenger_;
  _challenger_ = _challenger;
  if (_challenger) {
    set_has__challenger();
  } else {
    clear_has__challenger();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_instance_detail._challenger)
}

// optional .client_baseserver.guild_instance_detail.challenger_status _challenger_status = 6;
inline bool guild_instance_detail::has__challenger_status() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void guild_instance_detail::set_has__challenger_status() {
  _has_bits_[0] |= 0x00000020u;
}
inline void guild_instance_detail::clear_has__challenger_status() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void guild_instance_detail::clear__challenger_status() {
  _challenger_status_ = 1;
  clear_has__challenger_status();
}
inline ::client_baseserver::guild_instance_detail_challenger_status guild_instance_detail::_challenger_status() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_detail._challenger_status)
  return static_cast< ::client_baseserver::guild_instance_detail_challenger_status >(_challenger_status_);
}
inline void guild_instance_detail::set__challenger_status(::client_baseserver::guild_instance_detail_challenger_status value) {
  assert(::client_baseserver::guild_instance_detail_challenger_status_IsValid(value));
  set_has__challenger_status();
  _challenger_status_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_detail._challenger_status)
}

// -------------------------------------------------------------------

// guild_challenger

// required .client_baseserver.user_summary _summary = 1;
inline bool guild_challenger::has__summary() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_challenger::set_has__summary() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_challenger::clear_has__summary() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_challenger::clear__summary() {
  if (_summary_ != NULL) _summary_->::client_baseserver::user_summary::Clear();
  clear_has__summary();
}
inline const ::client_baseserver::user_summary& guild_challenger::_summary() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_challenger._summary)
  return _summary_ != NULL ? *_summary_ : *default_instance_->_summary_;
}
inline ::client_baseserver::user_summary* guild_challenger::mutable__summary() {
  set_has__summary();
  if (_summary_ == NULL) _summary_ = new ::client_baseserver::user_summary;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_challenger._summary)
  return _summary_;
}
inline ::client_baseserver::user_summary* guild_challenger::release__summary() {
  clear_has__summary();
  ::client_baseserver::user_summary* temp = _summary_;
  _summary_ = NULL;
  return temp;
}
inline void guild_challenger::set_allocated__summary(::client_baseserver::user_summary* _summary) {
  delete _summary_;
  _summary_ = _summary;
  if (_summary) {
    set_has__summary();
  } else {
    clear_has__summary();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_challenger._summary)
}

// -------------------------------------------------------------------

// guild_instance_record

// required .client_baseserver.guild_challenger _challenger = 1;
inline bool guild_instance_record::has__challenger() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_instance_record::set_has__challenger() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_instance_record::clear_has__challenger() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_instance_record::clear__challenger() {
  if (_challenger_ != NULL) _challenger_->::client_baseserver::guild_challenger::Clear();
  clear_has__challenger();
}
inline const ::client_baseserver::guild_challenger& guild_instance_record::_challenger() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_record._challenger)
  return _challenger_ != NULL ? *_challenger_ : *default_instance_->_challenger_;
}
inline ::client_baseserver::guild_challenger* guild_instance_record::mutable__challenger() {
  set_has__challenger();
  if (_challenger_ == NULL) _challenger_ = new ::client_baseserver::guild_challenger;
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_instance_record._challenger)
  return _challenger_;
}
inline ::client_baseserver::guild_challenger* guild_instance_record::release__challenger() {
  clear_has__challenger();
  ::client_baseserver::guild_challenger* temp = _challenger_;
  _challenger_ = NULL;
  return temp;
}
inline void guild_instance_record::set_allocated__challenger(::client_baseserver::guild_challenger* _challenger) {
  delete _challenger_;
  _challenger_ = _challenger;
  if (_challenger) {
    set_has__challenger();
  } else {
    clear_has__challenger();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_instance_record._challenger)
}

// required uint32 _damage = 2;
inline bool guild_instance_record::has__damage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guild_instance_record::set_has__damage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guild_instance_record::clear_has__damage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guild_instance_record::clear__damage() {
  _damage_ = 0u;
  clear_has__damage();
}
inline ::google::protobuf::uint32 guild_instance_record::_damage() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_record._damage)
  return _damage_;
}
inline void guild_instance_record::set__damage(::google::protobuf::uint32 value) {
  set_has__damage();
  _damage_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_record._damage)
}

// -------------------------------------------------------------------

// guild_instance_summary

// required uint32 _id = 1;
inline bool guild_instance_summary::has__id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_instance_summary::set_has__id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_instance_summary::clear_has__id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_instance_summary::clear__id() {
  _id_ = 0u;
  clear_has__id();
}
inline ::google::protobuf::uint32 guild_instance_summary::_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_summary._id)
  return _id_;
}
inline void guild_instance_summary::set__id(::google::protobuf::uint32 value) {
  set_has__id();
  _id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_summary._id)
}

// required uint32 _stage_id = 2;
inline bool guild_instance_summary::has__stage_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guild_instance_summary::set_has__stage_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guild_instance_summary::clear_has__stage_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guild_instance_summary::clear__stage_id() {
  _stage_id_ = 0u;
  clear_has__stage_id();
}
inline ::google::protobuf::uint32 guild_instance_summary::_stage_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_summary._stage_id)
  return _stage_id_;
}
inline void guild_instance_summary::set__stage_id(::google::protobuf::uint32 value) {
  set_has__stage_id();
  _stage_id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_summary._stage_id)
}

// required uint32 _left_time = 3;
inline bool guild_instance_summary::has__left_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void guild_instance_summary::set_has__left_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void guild_instance_summary::clear_has__left_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void guild_instance_summary::clear__left_time() {
  _left_time_ = 0u;
  clear_has__left_time();
}
inline ::google::protobuf::uint32 guild_instance_summary::_left_time() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_summary._left_time)
  return _left_time_;
}
inline void guild_instance_summary::set__left_time(::google::protobuf::uint32 value) {
  set_has__left_time();
  _left_time_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_summary._left_time)
}

// required uint32 _start_time = 4;
inline bool guild_instance_summary::has__start_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void guild_instance_summary::set_has__start_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void guild_instance_summary::clear_has__start_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void guild_instance_summary::clear__start_time() {
  _start_time_ = 0u;
  clear_has__start_time();
}
inline ::google::protobuf::uint32 guild_instance_summary::_start_time() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_summary._start_time)
  return _start_time_;
}
inline void guild_instance_summary::set__start_time(::google::protobuf::uint32 value) {
  set_has__start_time();
  _start_time_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_summary._start_time)
}

// required uint32 _progress = 5;
inline bool guild_instance_summary::has__progress() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void guild_instance_summary::set_has__progress() {
  _has_bits_[0] |= 0x00000010u;
}
inline void guild_instance_summary::clear_has__progress() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void guild_instance_summary::clear__progress() {
  _progress_ = 0u;
  clear_has__progress();
}
inline ::google::protobuf::uint32 guild_instance_summary::_progress() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_summary._progress)
  return _progress_;
}
inline void guild_instance_summary::set__progress(::google::protobuf::uint32 value) {
  set_has__progress();
  _progress_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_summary._progress)
}

// required uint32 _stage_progress = 6;
inline bool guild_instance_summary::has__stage_progress() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void guild_instance_summary::set_has__stage_progress() {
  _has_bits_[0] |= 0x00000020u;
}
inline void guild_instance_summary::clear_has__stage_progress() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void guild_instance_summary::clear__stage_progress() {
  _stage_progress_ = 0u;
  clear_has__stage_progress();
}
inline ::google::protobuf::uint32 guild_instance_summary::_stage_progress() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_summary._stage_progress)
  return _stage_progress_;
}
inline void guild_instance_summary::set__stage_progress(::google::protobuf::uint32 value) {
  set_has__stage_progress();
  _stage_progress_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_summary._stage_progress)
}

// optional uint32 _battle_user_id = 7;
inline bool guild_instance_summary::has__battle_user_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void guild_instance_summary::set_has__battle_user_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void guild_instance_summary::clear_has__battle_user_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void guild_instance_summary::clear__battle_user_id() {
  _battle_user_id_ = 0u;
  clear_has__battle_user_id();
}
inline ::google::protobuf::uint32 guild_instance_summary::_battle_user_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_summary._battle_user_id)
  return _battle_user_id_;
}
inline void guild_instance_summary::set__battle_user_id(::google::protobuf::uint32 value) {
  set_has__battle_user_id();
  _battle_user_id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_summary._battle_user_id)
}

// -------------------------------------------------------------------

// guild_instance_item

// required uint32 _item_id = 1;
inline bool guild_instance_item::has__item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_instance_item::set_has__item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_instance_item::clear_has__item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_instance_item::clear__item_id() {
  _item_id_ = 0u;
  clear_has__item_id();
}
inline ::google::protobuf::uint32 guild_instance_item::_item_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_item._item_id)
  return _item_id_;
}
inline void guild_instance_item::set__item_id(::google::protobuf::uint32 value) {
  set_has__item_id();
  _item_id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_item._item_id)
}

// required uint32 _num = 2;
inline bool guild_instance_item::has__num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guild_instance_item::set_has__num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guild_instance_item::clear_has__num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guild_instance_item::clear__num() {
  _num_ = 0u;
  clear_has__num();
}
inline ::google::protobuf::uint32 guild_instance_item::_num() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_item._num)
  return _num_;
}
inline void guild_instance_item::set__num(::google::protobuf::uint32 value) {
  set_has__num();
  _num_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_item._num)
}

// required .client_baseserver.guild_instance_item.drop_state _state = 3;
inline bool guild_instance_item::has__state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void guild_instance_item::set_has__state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void guild_instance_item::clear_has__state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void guild_instance_item::clear__state() {
  _state_ = 1;
  clear_has__state();
}
inline ::client_baseserver::guild_instance_item_drop_state guild_instance_item::_state() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_item._state)
  return static_cast< ::client_baseserver::guild_instance_item_drop_state >(_state_);
}
inline void guild_instance_item::set__state(::client_baseserver::guild_instance_item_drop_state value) {
  assert(::client_baseserver::guild_instance_item_drop_state_IsValid(value));
  set_has__state();
  _state_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_item._state)
}

// required uint32 _apply_num = 4;
inline bool guild_instance_item::has__apply_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void guild_instance_item::set_has__apply_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void guild_instance_item::clear_has__apply_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void guild_instance_item::clear__apply_num() {
  _apply_num_ = 0u;
  clear_has__apply_num();
}
inline ::google::protobuf::uint32 guild_instance_item::_apply_num() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_item._apply_num)
  return _apply_num_;
}
inline void guild_instance_item::set__apply_num(::google::protobuf::uint32 value) {
  set_has__apply_num();
  _apply_num_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_item._apply_num)
}

// required uint32 _able_app_count = 5;
inline bool guild_instance_item::has__able_app_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void guild_instance_item::set_has__able_app_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void guild_instance_item::clear_has__able_app_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void guild_instance_item::clear__able_app_count() {
  _able_app_count_ = 0u;
  clear_has__able_app_count();
}
inline ::google::protobuf::uint32 guild_instance_item::_able_app_count() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_item._able_app_count)
  return _able_app_count_;
}
inline void guild_instance_item::set__able_app_count(::google::protobuf::uint32 value) {
  set_has__able_app_count();
  _able_app_count_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_item._able_app_count)
}

// -------------------------------------------------------------------

// guild_instance_drop

// repeated .client_baseserver.guild_instance_item _items = 1;
inline int guild_instance_drop::_items_size() const {
  return _items_.size();
}
inline void guild_instance_drop::clear__items() {
  _items_.Clear();
}
inline const ::client_baseserver::guild_instance_item& guild_instance_drop::_items(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_drop._items)
  return _items_.Get(index);
}
inline ::client_baseserver::guild_instance_item* guild_instance_drop::mutable__items(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_instance_drop._items)
  return _items_.Mutable(index);
}
inline ::client_baseserver::guild_instance_item* guild_instance_drop::add__items() {
  // @@protoc_insertion_point(field_add:client_baseserver.guild_instance_drop._items)
  return _items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_instance_item >&
guild_instance_drop::_items() const {
  // @@protoc_insertion_point(field_list:client_baseserver.guild_instance_drop._items)
  return _items_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_instance_item >*
guild_instance_drop::mutable__items() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.guild_instance_drop._items)
  return &_items_;
}

// required uint32 _raid_id = 2;
inline bool guild_instance_drop::has__raid_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guild_instance_drop::set_has__raid_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guild_instance_drop::clear_has__raid_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guild_instance_drop::clear__raid_id() {
  _raid_id_ = 0u;
  clear_has__raid_id();
}
inline ::google::protobuf::uint32 guild_instance_drop::_raid_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_drop._raid_id)
  return _raid_id_;
}
inline void guild_instance_drop::set__raid_id(::google::protobuf::uint32 value) {
  set_has__raid_id();
  _raid_id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_drop._raid_id)
}

// optional uint32 _apply_item_id = 3;
inline bool guild_instance_drop::has__apply_item_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void guild_instance_drop::set_has__apply_item_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void guild_instance_drop::clear_has__apply_item_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void guild_instance_drop::clear__apply_item_id() {
  _apply_item_id_ = 0u;
  clear_has__apply_item_id();
}
inline ::google::protobuf::uint32 guild_instance_drop::_apply_item_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_drop._apply_item_id)
  return _apply_item_id_;
}
inline void guild_instance_drop::set__apply_item_id(::google::protobuf::uint32 value) {
  set_has__apply_item_id();
  _apply_item_id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_drop._apply_item_id)
}

// optional uint32 _rank = 4;
inline bool guild_instance_drop::has__rank() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void guild_instance_drop::set_has__rank() {
  _has_bits_[0] |= 0x00000008u;
}
inline void guild_instance_drop::clear_has__rank() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void guild_instance_drop::clear__rank() {
  _rank_ = 0u;
  clear_has__rank();
}
inline ::google::protobuf::uint32 guild_instance_drop::_rank() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_instance_drop._rank)
  return _rank_;
}
inline void guild_instance_drop::set__rank(::google::protobuf::uint32 value) {
  set_has__rank();
  _rank_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_instance_drop._rank)
}

// -------------------------------------------------------------------

// splitable_hero

// required uint32 _tid = 1;
inline bool splitable_hero::has__tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void splitable_hero::set_has__tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void splitable_hero::clear_has__tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void splitable_hero::clear__tid() {
  _tid_ = 0u;
  clear_has__tid();
}
inline ::google::protobuf::uint32 splitable_hero::_tid() const {
  // @@protoc_insertion_point(field_get:client_baseserver.splitable_hero._tid)
  return _tid_;
}
inline void splitable_hero::set__tid(::google::protobuf::uint32 value) {
  set_has__tid();
  _tid_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.splitable_hero._tid)
}

// required uint32 _split_times = 2;
inline bool splitable_hero::has__split_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void splitable_hero::set_has__split_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void splitable_hero::clear_has__split_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void splitable_hero::clear__split_times() {
  _split_times_ = 0u;
  clear_has__split_times();
}
inline ::google::protobuf::uint32 splitable_hero::_split_times() const {
  // @@protoc_insertion_point(field_get:client_baseserver.splitable_hero._split_times)
  return _split_times_;
}
inline void splitable_hero::set__split_times(::google::protobuf::uint32 value) {
  set_has__split_times();
  _split_times_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.splitable_hero._split_times)
}

// required uint32 _end_point = 3;
inline bool splitable_hero::has__end_point() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void splitable_hero::set_has__end_point() {
  _has_bits_[0] |= 0x00000004u;
}
inline void splitable_hero::clear_has__end_point() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void splitable_hero::clear__end_point() {
  _end_point_ = 0u;
  clear_has__end_point();
}
inline ::google::protobuf::uint32 splitable_hero::_end_point() const {
  // @@protoc_insertion_point(field_get:client_baseserver.splitable_hero._end_point)
  return _end_point_;
}
inline void splitable_hero::set__end_point(::google::protobuf::uint32 value) {
  set_has__end_point();
  _end_point_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.splitable_hero._end_point)
}

// -------------------------------------------------------------------

// query_split_data_reply

// repeated .client_baseserver.splitable_hero _heroes = 1;
inline int query_split_data_reply::_heroes_size() const {
  return _heroes_.size();
}
inline void query_split_data_reply::clear__heroes() {
  _heroes_.Clear();
}
inline const ::client_baseserver::splitable_hero& query_split_data_reply::_heroes(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.query_split_data_reply._heroes)
  return _heroes_.Get(index);
}
inline ::client_baseserver::splitable_hero* query_split_data_reply::mutable__heroes(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.query_split_data_reply._heroes)
  return _heroes_.Mutable(index);
}
inline ::client_baseserver::splitable_hero* query_split_data_reply::add__heroes() {
  // @@protoc_insertion_point(field_add:client_baseserver.query_split_data_reply._heroes)
  return _heroes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::splitable_hero >&
query_split_data_reply::_heroes() const {
  // @@protoc_insertion_point(field_list:client_baseserver.query_split_data_reply._heroes)
  return _heroes_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::splitable_hero >*
query_split_data_reply::mutable__heroes() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.query_split_data_reply._heroes)
  return &_heroes_;
}

// -------------------------------------------------------------------

// query_split_return_reply

// repeated uint32 _items = 1;
inline int query_split_return_reply::_items_size() const {
  return _items_.size();
}
inline void query_split_return_reply::clear__items() {
  _items_.Clear();
}
inline ::google::protobuf::uint32 query_split_return_reply::_items(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.query_split_return_reply._items)
  return _items_.Get(index);
}
inline void query_split_return_reply::set__items(int index, ::google::protobuf::uint32 value) {
  _items_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.query_split_return_reply._items)
}
inline void query_split_return_reply::add__items(::google::protobuf::uint32 value) {
  _items_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.query_split_return_reply._items)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
query_split_return_reply::_items() const {
  // @@protoc_insertion_point(field_list:client_baseserver.query_split_return_reply._items)
  return _items_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
query_split_return_reply::mutable__items() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.query_split_return_reply._items)
  return &_items_;
}

// required uint32 _gold = 2;
inline bool query_split_return_reply::has__gold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void query_split_return_reply::set_has__gold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void query_split_return_reply::clear_has__gold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void query_split_return_reply::clear__gold() {
  _gold_ = 0u;
  clear_has__gold();
}
inline ::google::protobuf::uint32 query_split_return_reply::_gold() const {
  // @@protoc_insertion_point(field_get:client_baseserver.query_split_return_reply._gold)
  return _gold_;
}
inline void query_split_return_reply::set__gold(::google::protobuf::uint32 value) {
  set_has__gold();
  _gold_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.query_split_return_reply._gold)
}

// required uint32 _skill_point = 3;
inline bool query_split_return_reply::has__skill_point() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void query_split_return_reply::set_has__skill_point() {
  _has_bits_[0] |= 0x00000004u;
}
inline void query_split_return_reply::clear_has__skill_point() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void query_split_return_reply::clear__skill_point() {
  _skill_point_ = 0u;
  clear_has__skill_point();
}
inline ::google::protobuf::uint32 query_split_return_reply::_skill_point() const {
  // @@protoc_insertion_point(field_get:client_baseserver.query_split_return_reply._skill_point)
  return _skill_point_;
}
inline void query_split_return_reply::set__skill_point(::google::protobuf::uint32 value) {
  set_has__skill_point();
  _skill_point_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.query_split_return_reply._skill_point)
}

// -------------------------------------------------------------------

// split_hero_reply

// required .client_baseserver.result _result = 1;
inline bool split_hero_reply::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void split_hero_reply::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void split_hero_reply::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void split_hero_reply::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result split_hero_reply::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.split_hero_reply._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void split_hero_reply::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.split_hero_reply._result)
}

// optional .client_baseserver.hero _hero = 2;
inline bool split_hero_reply::has__hero() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void split_hero_reply::set_has__hero() {
  _has_bits_[0] |= 0x00000002u;
}
inline void split_hero_reply::clear_has__hero() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void split_hero_reply::clear__hero() {
  if (_hero_ != NULL) _hero_->::client_baseserver::hero::Clear();
  clear_has__hero();
}
inline const ::client_baseserver::hero& split_hero_reply::_hero() const {
  // @@protoc_insertion_point(field_get:client_baseserver.split_hero_reply._hero)
  return _hero_ != NULL ? *_hero_ : *default_instance_->_hero_;
}
inline ::client_baseserver::hero* split_hero_reply::mutable__hero() {
  set_has__hero();
  if (_hero_ == NULL) _hero_ = new ::client_baseserver::hero;
  // @@protoc_insertion_point(field_mutable:client_baseserver.split_hero_reply._hero)
  return _hero_;
}
inline ::client_baseserver::hero* split_hero_reply::release__hero() {
  clear_has__hero();
  ::client_baseserver::hero* temp = _hero_;
  _hero_ = NULL;
  return temp;
}
inline void split_hero_reply::set_allocated__hero(::client_baseserver::hero* _hero) {
  delete _hero_;
  _hero_ = _hero;
  if (_hero) {
    set_has__hero();
  } else {
    clear_has__hero();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.split_hero_reply._hero)
}

// -------------------------------------------------------------------

// worldcup_reply

// optional .client_baseserver.worldcup_query_reply _worldcup_query_reply = 1;
inline bool worldcup_reply::has__worldcup_query_reply() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void worldcup_reply::set_has__worldcup_query_reply() {
  _has_bits_[0] |= 0x00000001u;
}
inline void worldcup_reply::clear_has__worldcup_query_reply() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void worldcup_reply::clear__worldcup_query_reply() {
  if (_worldcup_query_reply_ != NULL) _worldcup_query_reply_->::client_baseserver::worldcup_query_reply::Clear();
  clear_has__worldcup_query_reply();
}
inline const ::client_baseserver::worldcup_query_reply& worldcup_reply::_worldcup_query_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.worldcup_reply._worldcup_query_reply)
  return _worldcup_query_reply_ != NULL ? *_worldcup_query_reply_ : *default_instance_->_worldcup_query_reply_;
}
inline ::client_baseserver::worldcup_query_reply* worldcup_reply::mutable__worldcup_query_reply() {
  set_has__worldcup_query_reply();
  if (_worldcup_query_reply_ == NULL) _worldcup_query_reply_ = new ::client_baseserver::worldcup_query_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.worldcup_reply._worldcup_query_reply)
  return _worldcup_query_reply_;
}
inline ::client_baseserver::worldcup_query_reply* worldcup_reply::release__worldcup_query_reply() {
  clear_has__worldcup_query_reply();
  ::client_baseserver::worldcup_query_reply* temp = _worldcup_query_reply_;
  _worldcup_query_reply_ = NULL;
  return temp;
}
inline void worldcup_reply::set_allocated__worldcup_query_reply(::client_baseserver::worldcup_query_reply* _worldcup_query_reply) {
  delete _worldcup_query_reply_;
  _worldcup_query_reply_ = _worldcup_query_reply;
  if (_worldcup_query_reply) {
    set_has__worldcup_query_reply();
  } else {
    clear_has__worldcup_query_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.worldcup_reply._worldcup_query_reply)
}

// optional .client_baseserver.worldcup_submit_reply _worldcup_submit_reply = 2;
inline bool worldcup_reply::has__worldcup_submit_reply() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void worldcup_reply::set_has__worldcup_submit_reply() {
  _has_bits_[0] |= 0x00000002u;
}
inline void worldcup_reply::clear_has__worldcup_submit_reply() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void worldcup_reply::clear__worldcup_submit_reply() {
  if (_worldcup_submit_reply_ != NULL) _worldcup_submit_reply_->::client_baseserver::worldcup_submit_reply::Clear();
  clear_has__worldcup_submit_reply();
}
inline const ::client_baseserver::worldcup_submit_reply& worldcup_reply::_worldcup_submit_reply() const {
  // @@protoc_insertion_point(field_get:client_baseserver.worldcup_reply._worldcup_submit_reply)
  return _worldcup_submit_reply_ != NULL ? *_worldcup_submit_reply_ : *default_instance_->_worldcup_submit_reply_;
}
inline ::client_baseserver::worldcup_submit_reply* worldcup_reply::mutable__worldcup_submit_reply() {
  set_has__worldcup_submit_reply();
  if (_worldcup_submit_reply_ == NULL) _worldcup_submit_reply_ = new ::client_baseserver::worldcup_submit_reply;
  // @@protoc_insertion_point(field_mutable:client_baseserver.worldcup_reply._worldcup_submit_reply)
  return _worldcup_submit_reply_;
}
inline ::client_baseserver::worldcup_submit_reply* worldcup_reply::release__worldcup_submit_reply() {
  clear_has__worldcup_submit_reply();
  ::client_baseserver::worldcup_submit_reply* temp = _worldcup_submit_reply_;
  _worldcup_submit_reply_ = NULL;
  return temp;
}
inline void worldcup_reply::set_allocated__worldcup_submit_reply(::client_baseserver::worldcup_submit_reply* _worldcup_submit_reply) {
  delete _worldcup_submit_reply_;
  _worldcup_submit_reply_ = _worldcup_submit_reply;
  if (_worldcup_submit_reply) {
    set_has__worldcup_submit_reply();
  } else {
    clear_has__worldcup_submit_reply();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.worldcup_reply._worldcup_submit_reply)
}

// -------------------------------------------------------------------

// worldcup_reward

// optional uint32 _gold = 1;
inline bool worldcup_reward::has__gold() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void worldcup_reward::set_has__gold() {
  _has_bits_[0] |= 0x00000001u;
}
inline void worldcup_reward::clear_has__gold() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void worldcup_reward::clear__gold() {
  _gold_ = 0u;
  clear_has__gold();
}
inline ::google::protobuf::uint32 worldcup_reward::_gold() const {
  // @@protoc_insertion_point(field_get:client_baseserver.worldcup_reward._gold)
  return _gold_;
}
inline void worldcup_reward::set__gold(::google::protobuf::uint32 value) {
  set_has__gold();
  _gold_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.worldcup_reward._gold)
}

// optional uint32 _diamond = 2;
inline bool worldcup_reward::has__diamond() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void worldcup_reward::set_has__diamond() {
  _has_bits_[0] |= 0x00000002u;
}
inline void worldcup_reward::clear_has__diamond() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void worldcup_reward::clear__diamond() {
  _diamond_ = 0u;
  clear_has__diamond();
}
inline ::google::protobuf::uint32 worldcup_reward::_diamond() const {
  // @@protoc_insertion_point(field_get:client_baseserver.worldcup_reward._diamond)
  return _diamond_;
}
inline void worldcup_reward::set__diamond(::google::protobuf::uint32 value) {
  set_has__diamond();
  _diamond_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.worldcup_reward._diamond)
}

// -------------------------------------------------------------------

// worldcup_comp

// repeated uint32 _teams = 1;
inline int worldcup_comp::_teams_size() const {
  return _teams_.size();
}
inline void worldcup_comp::clear__teams() {
  _teams_.Clear();
}
inline ::google::protobuf::uint32 worldcup_comp::_teams(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.worldcup_comp._teams)
  return _teams_.Get(index);
}
inline void worldcup_comp::set__teams(int index, ::google::protobuf::uint32 value) {
  _teams_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.worldcup_comp._teams)
}
inline void worldcup_comp::add__teams(::google::protobuf::uint32 value) {
  _teams_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.worldcup_comp._teams)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
worldcup_comp::_teams() const {
  // @@protoc_insertion_point(field_list:client_baseserver.worldcup_comp._teams)
  return _teams_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
worldcup_comp::mutable__teams() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.worldcup_comp._teams)
  return &_teams_;
}

// required .client_baseserver.worldcup_reward _reward = 2;
inline bool worldcup_comp::has__reward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void worldcup_comp::set_has__reward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void worldcup_comp::clear_has__reward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void worldcup_comp::clear__reward() {
  if (_reward_ != NULL) _reward_->::client_baseserver::worldcup_reward::Clear();
  clear_has__reward();
}
inline const ::client_baseserver::worldcup_reward& worldcup_comp::_reward() const {
  // @@protoc_insertion_point(field_get:client_baseserver.worldcup_comp._reward)
  return _reward_ != NULL ? *_reward_ : *default_instance_->_reward_;
}
inline ::client_baseserver::worldcup_reward* worldcup_comp::mutable__reward() {
  set_has__reward();
  if (_reward_ == NULL) _reward_ = new ::client_baseserver::worldcup_reward;
  // @@protoc_insertion_point(field_mutable:client_baseserver.worldcup_comp._reward)
  return _reward_;
}
inline ::client_baseserver::worldcup_reward* worldcup_comp::release__reward() {
  clear_has__reward();
  ::client_baseserver::worldcup_reward* temp = _reward_;
  _reward_ = NULL;
  return temp;
}
inline void worldcup_comp::set_allocated__reward(::client_baseserver::worldcup_reward* _reward) {
  delete _reward_;
  _reward_ = _reward;
  if (_reward) {
    set_has__reward();
  } else {
    clear_has__reward();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.worldcup_comp._reward)
}

// optional uint32 _guess = 3;
inline bool worldcup_comp::has__guess() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void worldcup_comp::set_has__guess() {
  _has_bits_[0] |= 0x00000004u;
}
inline void worldcup_comp::clear_has__guess() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void worldcup_comp::clear__guess() {
  _guess_ = 0u;
  clear_has__guess();
}
inline ::google::protobuf::uint32 worldcup_comp::_guess() const {
  // @@protoc_insertion_point(field_get:client_baseserver.worldcup_comp._guess)
  return _guess_;
}
inline void worldcup_comp::set__guess(::google::protobuf::uint32 value) {
  set_has__guess();
  _guess_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.worldcup_comp._guess)
}

// -------------------------------------------------------------------

// worldcup_query_reply

// repeated .client_baseserver.worldcup_comp _comp = 1;
inline int worldcup_query_reply::_comp_size() const {
  return _comp_.size();
}
inline void worldcup_query_reply::clear__comp() {
  _comp_.Clear();
}
inline const ::client_baseserver::worldcup_comp& worldcup_query_reply::_comp(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.worldcup_query_reply._comp)
  return _comp_.Get(index);
}
inline ::client_baseserver::worldcup_comp* worldcup_query_reply::mutable__comp(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.worldcup_query_reply._comp)
  return _comp_.Mutable(index);
}
inline ::client_baseserver::worldcup_comp* worldcup_query_reply::add__comp() {
  // @@protoc_insertion_point(field_add:client_baseserver.worldcup_query_reply._comp)
  return _comp_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::worldcup_comp >&
worldcup_query_reply::_comp() const {
  // @@protoc_insertion_point(field_list:client_baseserver.worldcup_query_reply._comp)
  return _comp_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::worldcup_comp >*
worldcup_query_reply::mutable__comp() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.worldcup_query_reply._comp)
  return &_comp_;
}

// -------------------------------------------------------------------

// worldcup_submit_reply

// required .client_baseserver.result _result = 1;
inline bool worldcup_submit_reply::has__result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void worldcup_submit_reply::set_has__result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void worldcup_submit_reply::clear_has__result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void worldcup_submit_reply::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::client_baseserver::result worldcup_submit_reply::_result() const {
  // @@protoc_insertion_point(field_get:client_baseserver.worldcup_submit_reply._result)
  return static_cast< ::client_baseserver::result >(_result_);
}
inline void worldcup_submit_reply::set__result(::client_baseserver::result value) {
  assert(::client_baseserver::result_IsValid(value));
  set_has__result();
  _result_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.worldcup_submit_reply._result)
}

// -------------------------------------------------------------------

// battle_check_fail

// required uint32 _checkid = 1;
inline bool battle_check_fail::has__checkid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void battle_check_fail::set_has__checkid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void battle_check_fail::clear_has__checkid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void battle_check_fail::clear__checkid() {
  _checkid_ = 0u;
  clear_has__checkid();
}
inline ::google::protobuf::uint32 battle_check_fail::_checkid() const {
  // @@protoc_insertion_point(field_get:client_baseserver.battle_check_fail._checkid)
  return _checkid_;
}
inline void battle_check_fail::set__checkid(::google::protobuf::uint32 value) {
  set_has__checkid();
  _checkid_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.battle_check_fail._checkid)
}

// -------------------------------------------------------------------

// super_link

// required string _info = 2;
inline bool super_link::has__info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void super_link::set_has__info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void super_link::clear_has__info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void super_link::clear__info() {
  if (_info_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _info_->clear();
  }
  clear_has__info();
}
inline const ::std::string& super_link::_info() const {
  // @@protoc_insertion_point(field_get:client_baseserver.super_link._info)
  return *_info_;
}
inline void super_link::set__info(const ::std::string& value) {
  set_has__info();
  if (_info_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _info_ = new ::std::string;
  }
  _info_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.super_link._info)
}
inline void super_link::set__info(const char* value) {
  set_has__info();
  if (_info_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _info_ = new ::std::string;
  }
  _info_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.super_link._info)
}
inline void super_link::set__info(const char* value, size_t size) {
  set_has__info();
  if (_info_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _info_ = new ::std::string;
  }
  _info_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.super_link._info)
}
inline ::std::string* super_link::mutable__info() {
  set_has__info();
  if (_info_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _info_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.super_link._info)
  return _info_;
}
inline ::std::string* super_link::release__info() {
  clear_has__info();
  if (_info_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = _info_;
    _info_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void super_link::set_allocated__info(::std::string* _info) {
  if (_info_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete _info_;
  }
  if (_info) {
    set_has__info();
    _info_ = _info;
  } else {
    clear_has__info();
    _info_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.super_link._info)
}

// required string _addr = 1;
inline bool super_link::has__addr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void super_link::set_has__addr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void super_link::clear_has__addr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void super_link::clear__addr() {
  if (_addr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _addr_->clear();
  }
  clear_has__addr();
}
inline const ::std::string& super_link::_addr() const {
  // @@protoc_insertion_point(field_get:client_baseserver.super_link._addr)
  return *_addr_;
}
inline void super_link::set__addr(const ::std::string& value) {
  set_has__addr();
  if (_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _addr_ = new ::std::string;
  }
  _addr_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.super_link._addr)
}
inline void super_link::set__addr(const char* value) {
  set_has__addr();
  if (_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _addr_ = new ::std::string;
  }
  _addr_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.super_link._addr)
}
inline void super_link::set__addr(const char* value, size_t size) {
  set_has__addr();
  if (_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _addr_ = new ::std::string;
  }
  _addr_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.super_link._addr)
}
inline ::std::string* super_link::mutable__addr() {
  set_has__addr();
  if (_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _addr_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.super_link._addr)
  return _addr_;
}
inline ::std::string* super_link::release__addr() {
  clear_has__addr();
  if (_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = _addr_;
    _addr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void super_link::set_allocated__addr(::std::string* _addr) {
  if (_addr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete _addr_;
  }
  if (_addr) {
    set_has__addr();
    _addr_ = _addr;
  } else {
    clear_has__addr();
    _addr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.super_link._addr)
}

// -------------------------------------------------------------------

// ranklist_item

// optional .client_baseserver.user_summary _user_summary = 1;
inline bool ranklist_item::has__user_summary() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ranklist_item::set_has__user_summary() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ranklist_item::clear_has__user_summary() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ranklist_item::clear__user_summary() {
  if (_user_summary_ != NULL) _user_summary_->::client_baseserver::user_summary::Clear();
  clear_has__user_summary();
}
inline const ::client_baseserver::user_summary& ranklist_item::_user_summary() const {
  // @@protoc_insertion_point(field_get:client_baseserver.ranklist_item._user_summary)
  return _user_summary_ != NULL ? *_user_summary_ : *default_instance_->_user_summary_;
}
inline ::client_baseserver::user_summary* ranklist_item::mutable__user_summary() {
  set_has__user_summary();
  if (_user_summary_ == NULL) _user_summary_ = new ::client_baseserver::user_summary;
  // @@protoc_insertion_point(field_mutable:client_baseserver.ranklist_item._user_summary)
  return _user_summary_;
}
inline ::client_baseserver::user_summary* ranklist_item::release__user_summary() {
  clear_has__user_summary();
  ::client_baseserver::user_summary* temp = _user_summary_;
  _user_summary_ = NULL;
  return temp;
}
inline void ranklist_item::set_allocated__user_summary(::client_baseserver::user_summary* _user_summary) {
  delete _user_summary_;
  _user_summary_ = _user_summary;
  if (_user_summary) {
    set_has__user_summary();
  } else {
    clear_has__user_summary();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.ranklist_item._user_summary)
}

// optional .client_baseserver.guild_summary _guild_summary = 2;
inline bool ranklist_item::has__guild_summary() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ranklist_item::set_has__guild_summary() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ranklist_item::clear_has__guild_summary() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ranklist_item::clear__guild_summary() {
  if (_guild_summary_ != NULL) _guild_summary_->::client_baseserver::guild_summary::Clear();
  clear_has__guild_summary();
}
inline const ::client_baseserver::guild_summary& ranklist_item::_guild_summary() const {
  // @@protoc_insertion_point(field_get:client_baseserver.ranklist_item._guild_summary)
  return _guild_summary_ != NULL ? *_guild_summary_ : *default_instance_->_guild_summary_;
}
inline ::client_baseserver::guild_summary* ranklist_item::mutable__guild_summary() {
  set_has__guild_summary();
  if (_guild_summary_ == NULL) _guild_summary_ = new ::client_baseserver::guild_summary;
  // @@protoc_insertion_point(field_mutable:client_baseserver.ranklist_item._guild_summary)
  return _guild_summary_;
}
inline ::client_baseserver::guild_summary* ranklist_item::release__guild_summary() {
  clear_has__guild_summary();
  ::client_baseserver::guild_summary* temp = _guild_summary_;
  _guild_summary_ = NULL;
  return temp;
}
inline void ranklist_item::set_allocated__guild_summary(::client_baseserver::guild_summary* _guild_summary) {
  delete _guild_summary_;
  _guild_summary_ = _guild_summary;
  if (_guild_summary) {
    set_has__guild_summary();
  } else {
    clear_has__guild_summary();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.ranklist_item._guild_summary)
}

// optional uint32 _param1 = 3;
inline bool ranklist_item::has__param1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ranklist_item::set_has__param1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ranklist_item::clear_has__param1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ranklist_item::clear__param1() {
  _param1_ = 0u;
  clear_has__param1();
}
inline ::google::protobuf::uint32 ranklist_item::_param1() const {
  // @@protoc_insertion_point(field_get:client_baseserver.ranklist_item._param1)
  return _param1_;
}
inline void ranklist_item::set__param1(::google::protobuf::uint32 value) {
  set_has__param1();
  _param1_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.ranklist_item._param1)
}

// -------------------------------------------------------------------

// query_ranklist_reply

// required .client_baseserver.query_ranklist_reply.rank_type _rank_type = 1;
inline bool query_ranklist_reply::has__rank_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void query_ranklist_reply::set_has__rank_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void query_ranklist_reply::clear_has__rank_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void query_ranklist_reply::clear__rank_type() {
  _rank_type_ = 1;
  clear_has__rank_type();
}
inline ::client_baseserver::query_ranklist_reply_rank_type query_ranklist_reply::_rank_type() const {
  // @@protoc_insertion_point(field_get:client_baseserver.query_ranklist_reply._rank_type)
  return static_cast< ::client_baseserver::query_ranklist_reply_rank_type >(_rank_type_);
}
inline void query_ranklist_reply::set__rank_type(::client_baseserver::query_ranklist_reply_rank_type value) {
  assert(::client_baseserver::query_ranklist_reply_rank_type_IsValid(value));
  set_has__rank_type();
  _rank_type_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.query_ranklist_reply._rank_type)
}

// repeated .client_baseserver.ranklist_item _ranklist_item = 2;
inline int query_ranklist_reply::_ranklist_item_size() const {
  return _ranklist_item_.size();
}
inline void query_ranklist_reply::clear__ranklist_item() {
  _ranklist_item_.Clear();
}
inline const ::client_baseserver::ranklist_item& query_ranklist_reply::_ranklist_item(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.query_ranklist_reply._ranklist_item)
  return _ranklist_item_.Get(index);
}
inline ::client_baseserver::ranklist_item* query_ranklist_reply::mutable__ranklist_item(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.query_ranklist_reply._ranklist_item)
  return _ranklist_item_.Mutable(index);
}
inline ::client_baseserver::ranklist_item* query_ranklist_reply::add__ranklist_item() {
  // @@protoc_insertion_point(field_add:client_baseserver.query_ranklist_reply._ranklist_item)
  return _ranklist_item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::ranklist_item >&
query_ranklist_reply::_ranklist_item() const {
  // @@protoc_insertion_point(field_list:client_baseserver.query_ranklist_reply._ranklist_item)
  return _ranklist_item_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::ranklist_item >*
query_ranklist_reply::mutable__ranklist_item() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.query_ranklist_reply._ranklist_item)
  return &_ranklist_item_;
}

// optional uint32 _self_ranking = 3;
inline bool query_ranklist_reply::has__self_ranking() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void query_ranklist_reply::set_has__self_ranking() {
  _has_bits_[0] |= 0x00000004u;
}
inline void query_ranklist_reply::clear_has__self_ranking() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void query_ranklist_reply::clear__self_ranking() {
  _self_ranking_ = 0u;
  clear_has__self_ranking();
}
inline ::google::protobuf::uint32 query_ranklist_reply::_self_ranking() const {
  // @@protoc_insertion_point(field_get:client_baseserver.query_ranklist_reply._self_ranking)
  return _self_ranking_;
}
inline void query_ranklist_reply::set__self_ranking(::google::protobuf::uint32 value) {
  set_has__self_ranking();
  _self_ranking_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.query_ranklist_reply._self_ranking)
}

// optional .client_baseserver.ranklist_item _self_item = 4;
inline bool query_ranklist_reply::has__self_item() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void query_ranklist_reply::set_has__self_item() {
  _has_bits_[0] |= 0x00000008u;
}
inline void query_ranklist_reply::clear_has__self_item() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void query_ranklist_reply::clear__self_item() {
  if (_self_item_ != NULL) _self_item_->::client_baseserver::ranklist_item::Clear();
  clear_has__self_item();
}
inline const ::client_baseserver::ranklist_item& query_ranklist_reply::_self_item() const {
  // @@protoc_insertion_point(field_get:client_baseserver.query_ranklist_reply._self_item)
  return _self_item_ != NULL ? *_self_item_ : *default_instance_->_self_item_;
}
inline ::client_baseserver::ranklist_item* query_ranklist_reply::mutable__self_item() {
  set_has__self_item();
  if (_self_item_ == NULL) _self_item_ = new ::client_baseserver::ranklist_item;
  // @@protoc_insertion_point(field_mutable:client_baseserver.query_ranklist_reply._self_item)
  return _self_item_;
}
inline ::client_baseserver::ranklist_item* query_ranklist_reply::release__self_item() {
  clear_has__self_item();
  ::client_baseserver::ranklist_item* temp = _self_item_;
  _self_item_ = NULL;
  return temp;
}
inline void query_ranklist_reply::set_allocated__self_item(::client_baseserver::ranklist_item* _self_item) {
  delete _self_item_;
  _self_item_ = _self_item;
  if (_self_item) {
    set_has__self_item();
  } else {
    clear_has__self_item();
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.query_ranklist_reply._self_item)
}

// optional uint32 _self_prev_pos = 5;
inline bool query_ranklist_reply::has__self_prev_pos() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void query_ranklist_reply::set_has__self_prev_pos() {
  _has_bits_[0] |= 0x00000010u;
}
inline void query_ranklist_reply::clear_has__self_prev_pos() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void query_ranklist_reply::clear__self_prev_pos() {
  _self_prev_pos_ = 0u;
  clear_has__self_prev_pos();
}
inline ::google::protobuf::uint32 query_ranklist_reply::_self_prev_pos() const {
  // @@protoc_insertion_point(field_get:client_baseserver.query_ranklist_reply._self_prev_pos)
  return _self_prev_pos_;
}
inline void query_ranklist_reply::set__self_prev_pos(::google::protobuf::uint32 value) {
  set_has__self_prev_pos();
  _self_prev_pos_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.query_ranklist_reply._self_prev_pos)
}

// -------------------------------------------------------------------

// request_guild_log_reply

// repeated .client_baseserver.guild_log _guild_log = 1;
inline int request_guild_log_reply::_guild_log_size() const {
  return _guild_log_.size();
}
inline void request_guild_log_reply::clear__guild_log() {
  _guild_log_.Clear();
}
inline const ::client_baseserver::guild_log& request_guild_log_reply::_guild_log(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.request_guild_log_reply._guild_log)
  return _guild_log_.Get(index);
}
inline ::client_baseserver::guild_log* request_guild_log_reply::mutable__guild_log(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.request_guild_log_reply._guild_log)
  return _guild_log_.Mutable(index);
}
inline ::client_baseserver::guild_log* request_guild_log_reply::add__guild_log() {
  // @@protoc_insertion_point(field_add:client_baseserver.request_guild_log_reply._guild_log)
  return _guild_log_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_log >&
request_guild_log_reply::_guild_log() const {
  // @@protoc_insertion_point(field_list:client_baseserver.request_guild_log_reply._guild_log)
  return _guild_log_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_log >*
request_guild_log_reply::mutable__guild_log() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.request_guild_log_reply._guild_log)
  return &_guild_log_;
}

// -------------------------------------------------------------------

// guild_log

// required uint32 _id = 1;
inline bool guild_log::has__id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_log::set_has__id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_log::clear_has__id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_log::clear__id() {
  _id_ = 0u;
  clear_has__id();
}
inline ::google::protobuf::uint32 guild_log::_id() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_log._id)
  return _id_;
}
inline void guild_log::set__id(::google::protobuf::uint32 value) {
  set_has__id();
  _id_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_log._id)
}

// repeated .client_baseserver.guild_log_content _guild_log_content = 2;
inline int guild_log::_guild_log_content_size() const {
  return _guild_log_content_.size();
}
inline void guild_log::clear__guild_log_content() {
  _guild_log_content_.Clear();
}
inline const ::client_baseserver::guild_log_content& guild_log::_guild_log_content(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_log._guild_log_content)
  return _guild_log_content_.Get(index);
}
inline ::client_baseserver::guild_log_content* guild_log::mutable__guild_log_content(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_log._guild_log_content)
  return _guild_log_content_.Mutable(index);
}
inline ::client_baseserver::guild_log_content* guild_log::add__guild_log_content() {
  // @@protoc_insertion_point(field_add:client_baseserver.guild_log._guild_log_content)
  return _guild_log_content_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_log_content >&
guild_log::_guild_log_content() const {
  // @@protoc_insertion_point(field_list:client_baseserver.guild_log._guild_log_content)
  return _guild_log_content_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::guild_log_content >*
guild_log::mutable__guild_log_content() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.guild_log._guild_log_content)
  return &_guild_log_content_;
}

// required uint32 _date = 3;
inline bool guild_log::has__date() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void guild_log::set_has__date() {
  _has_bits_[0] |= 0x00000004u;
}
inline void guild_log::clear_has__date() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void guild_log::clear__date() {
  _date_ = 0u;
  clear_has__date();
}
inline ::google::protobuf::uint32 guild_log::_date() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_log._date)
  return _date_;
}
inline void guild_log::set__date(::google::protobuf::uint32 value) {
  set_has__date();
  _date_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_log._date)
}

// -------------------------------------------------------------------

// guild_log_content

// required uint32 _time = 1;
inline bool guild_log_content::has__time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void guild_log_content::set_has__time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void guild_log_content::clear_has__time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void guild_log_content::clear__time() {
  _time_ = 0u;
  clear_has__time();
}
inline ::google::protobuf::uint32 guild_log_content::_time() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_log_content._time)
  return _time_;
}
inline void guild_log_content::set__time(::google::protobuf::uint32 value) {
  set_has__time();
  _time_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.guild_log_content._time)
}

// required string _content = 2;
inline bool guild_log_content::has__content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void guild_log_content::set_has__content() {
  _has_bits_[0] |= 0x00000002u;
}
inline void guild_log_content::clear_has__content() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void guild_log_content::clear__content() {
  if (_content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _content_->clear();
  }
  clear_has__content();
}
inline const ::std::string& guild_log_content::_content() const {
  // @@protoc_insertion_point(field_get:client_baseserver.guild_log_content._content)
  return *_content_;
}
inline void guild_log_content::set__content(const ::std::string& value) {
  set_has__content();
  if (_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _content_ = new ::std::string;
  }
  _content_->assign(value);
  // @@protoc_insertion_point(field_set:client_baseserver.guild_log_content._content)
}
inline void guild_log_content::set__content(const char* value) {
  set_has__content();
  if (_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _content_ = new ::std::string;
  }
  _content_->assign(value);
  // @@protoc_insertion_point(field_set_char:client_baseserver.guild_log_content._content)
}
inline void guild_log_content::set__content(const char* value, size_t size) {
  set_has__content();
  if (_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _content_ = new ::std::string;
  }
  _content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:client_baseserver.guild_log_content._content)
}
inline ::std::string* guild_log_content::mutable__content() {
  set_has__content();
  if (_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    _content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:client_baseserver.guild_log_content._content)
  return _content_;
}
inline ::std::string* guild_log_content::release__content() {
  clear_has__content();
  if (_content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = _content_;
    _content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void guild_log_content::set_allocated__content(::std::string* _content) {
  if (_content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete _content_;
  }
  if (_content) {
    set_has__content();
    _content_ = _content;
  } else {
    clear_has__content();
    _content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:client_baseserver.guild_log_content._content)
}

// -------------------------------------------------------------------

// client_update_version

// required uint32 _version = 1;
inline bool client_update_version::has__version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void client_update_version::set_has__version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void client_update_version::clear_has__version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void client_update_version::clear__version() {
  _version_ = 0u;
  clear_has__version();
}
inline ::google::protobuf::uint32 client_update_version::_version() const {
  // @@protoc_insertion_point(field_get:client_baseserver.client_update_version._version)
  return _version_;
}
inline void client_update_version::set__version(::google::protobuf::uint32 value) {
  set_has__version();
  _version_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.client_update_version._version)
}

// -------------------------------------------------------------------

// query_act_stage_reply

// repeated uint32 _opened_act_stage = 1;
inline int query_act_stage_reply::_opened_act_stage_size() const {
  return _opened_act_stage_.size();
}
inline void query_act_stage_reply::clear__opened_act_stage() {
  _opened_act_stage_.Clear();
}
inline ::google::protobuf::uint32 query_act_stage_reply::_opened_act_stage(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.query_act_stage_reply._opened_act_stage)
  return _opened_act_stage_.Get(index);
}
inline void query_act_stage_reply::set__opened_act_stage(int index, ::google::protobuf::uint32 value) {
  _opened_act_stage_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.query_act_stage_reply._opened_act_stage)
}
inline void query_act_stage_reply::add__opened_act_stage(::google::protobuf::uint32 value) {
  _opened_act_stage_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.query_act_stage_reply._opened_act_stage)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
query_act_stage_reply::_opened_act_stage() const {
  // @@protoc_insertion_point(field_list:client_baseserver.query_act_stage_reply._opened_act_stage)
  return _opened_act_stage_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
query_act_stage_reply::mutable__opened_act_stage() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.query_act_stage_reply._opened_act_stage)
  return &_opened_act_stage_;
}

// -------------------------------------------------------------------

// fb_attention_reply

// required uint32 _attention = 1;
inline bool fb_attention_reply::has__attention() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void fb_attention_reply::set_has__attention() {
  _has_bits_[0] |= 0x00000001u;
}
inline void fb_attention_reply::clear_has__attention() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void fb_attention_reply::clear__attention() {
  _attention_ = 0u;
  clear_has__attention();
}
inline ::google::protobuf::uint32 fb_attention_reply::_attention() const {
  // @@protoc_insertion_point(field_get:client_baseserver.fb_attention_reply._attention)
  return _attention_;
}
inline void fb_attention_reply::set__attention(::google::protobuf::uint32 value) {
  set_has__attention();
  _attention_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.fb_attention_reply._attention)
}

// -------------------------------------------------------------------

// continue_pay_reply

// required uint32 _time = 1;
inline bool continue_pay_reply::has__time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void continue_pay_reply::set_has__time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void continue_pay_reply::clear_has__time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void continue_pay_reply::clear__time() {
  _time_ = 0u;
  clear_has__time();
}
inline ::google::protobuf::uint32 continue_pay_reply::_time() const {
  // @@protoc_insertion_point(field_get:client_baseserver.continue_pay_reply._time)
  return _time_;
}
inline void continue_pay_reply::set__time(::google::protobuf::uint32 value) {
  set_has__time();
  _time_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.continue_pay_reply._time)
}

// repeated uint32 _status = 2;
inline int continue_pay_reply::_status_size() const {
  return _status_.size();
}
inline void continue_pay_reply::clear__status() {
  _status_.Clear();
}
inline ::google::protobuf::uint32 continue_pay_reply::_status(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.continue_pay_reply._status)
  return _status_.Get(index);
}
inline void continue_pay_reply::set__status(int index, ::google::protobuf::uint32 value) {
  _status_.Set(index, value);
  // @@protoc_insertion_point(field_set:client_baseserver.continue_pay_reply._status)
}
inline void continue_pay_reply::add__status(::google::protobuf::uint32 value) {
  _status_.Add(value);
  // @@protoc_insertion_point(field_add:client_baseserver.continue_pay_reply._status)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
continue_pay_reply::_status() const {
  // @@protoc_insertion_point(field_list:client_baseserver.continue_pay_reply._status)
  return _status_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
continue_pay_reply::mutable__status() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.continue_pay_reply._status)
  return &_status_;
}

// -------------------------------------------------------------------

// recharge_rebate_reply

// required uint32 _time = 1;
inline bool recharge_rebate_reply::has__time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void recharge_rebate_reply::set_has__time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void recharge_rebate_reply::clear_has__time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void recharge_rebate_reply::clear__time() {
  _time_ = 0u;
  clear_has__time();
}
inline ::google::protobuf::uint32 recharge_rebate_reply::_time() const {
  // @@protoc_insertion_point(field_get:client_baseserver.recharge_rebate_reply._time)
  return _time_;
}
inline void recharge_rebate_reply::set__time(::google::protobuf::uint32 value) {
  set_has__time();
  _time_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.recharge_rebate_reply._time)
}

// required uint32 _status = 2;
inline bool recharge_rebate_reply::has__status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void recharge_rebate_reply::set_has__status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void recharge_rebate_reply::clear_has__status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void recharge_rebate_reply::clear__status() {
  _status_ = 0u;
  clear_has__status();
}
inline ::google::protobuf::uint32 recharge_rebate_reply::_status() const {
  // @@protoc_insertion_point(field_get:client_baseserver.recharge_rebate_reply._status)
  return _status_;
}
inline void recharge_rebate_reply::set__status(::google::protobuf::uint32 value) {
  set_has__status();
  _status_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.recharge_rebate_reply._status)
}

// required uint32 _recharge_money = 3;
inline bool recharge_rebate_reply::has__recharge_money() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void recharge_rebate_reply::set_has__recharge_money() {
  _has_bits_[0] |= 0x00000004u;
}
inline void recharge_rebate_reply::clear_has__recharge_money() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void recharge_rebate_reply::clear__recharge_money() {
  _recharge_money_ = 0u;
  clear_has__recharge_money();
}
inline ::google::protobuf::uint32 recharge_rebate_reply::_recharge_money() const {
  // @@protoc_insertion_point(field_get:client_baseserver.recharge_rebate_reply._recharge_money)
  return _recharge_money_;
}
inline void recharge_rebate_reply::set__recharge_money(::google::protobuf::uint32 value) {
  set_has__recharge_money();
  _recharge_money_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.recharge_rebate_reply._recharge_money)
}

// optional uint32 _get_day = 4;
inline bool recharge_rebate_reply::has__get_day() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void recharge_rebate_reply::set_has__get_day() {
  _has_bits_[0] |= 0x00000008u;
}
inline void recharge_rebate_reply::clear_has__get_day() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void recharge_rebate_reply::clear__get_day() {
  _get_day_ = 0u;
  clear_has__get_day();
}
inline ::google::protobuf::uint32 recharge_rebate_reply::_get_day() const {
  // @@protoc_insertion_point(field_get:client_baseserver.recharge_rebate_reply._get_day)
  return _get_day_;
}
inline void recharge_rebate_reply::set__get_day(::google::protobuf::uint32 value) {
  set_has__get_day();
  _get_day_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.recharge_rebate_reply._get_day)
}

// optional uint32 _get_status = 5;
inline bool recharge_rebate_reply::has__get_status() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void recharge_rebate_reply::set_has__get_status() {
  _has_bits_[0] |= 0x00000010u;
}
inline void recharge_rebate_reply::clear_has__get_status() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void recharge_rebate_reply::clear__get_status() {
  _get_status_ = 0u;
  clear_has__get_status();
}
inline ::google::protobuf::uint32 recharge_rebate_reply::_get_status() const {
  // @@protoc_insertion_point(field_get:client_baseserver.recharge_rebate_reply._get_status)
  return _get_status_;
}
inline void recharge_rebate_reply::set__get_status(::google::protobuf::uint32 value) {
  set_has__get_status();
  _get_status_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.recharge_rebate_reply._get_status)
}

// -------------------------------------------------------------------

// every_day_happy_reply

// required uint32 _status = 5;
inline bool every_day_happy_reply::has__status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void every_day_happy_reply::set_has__status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void every_day_happy_reply::clear_has__status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void every_day_happy_reply::clear__status() {
  _status_ = 0u;
  clear_has__status();
}
inline ::google::protobuf::uint32 every_day_happy_reply::_status() const {
  // @@protoc_insertion_point(field_get:client_baseserver.every_day_happy_reply._status)
  return _status_;
}
inline void every_day_happy_reply::set__status(::google::protobuf::uint32 value) {
  set_has__status();
  _status_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.every_day_happy_reply._status)
}

// required uint32 _goldcard_number = 1;
inline bool every_day_happy_reply::has__goldcard_number() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void every_day_happy_reply::set_has__goldcard_number() {
  _has_bits_[0] |= 0x00000002u;
}
inline void every_day_happy_reply::clear_has__goldcard_number() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void every_day_happy_reply::clear__goldcard_number() {
  _goldcard_number_ = 0u;
  clear_has__goldcard_number();
}
inline ::google::protobuf::uint32 every_day_happy_reply::_goldcard_number() const {
  // @@protoc_insertion_point(field_get:client_baseserver.every_day_happy_reply._goldcard_number)
  return _goldcard_number_;
}
inline void every_day_happy_reply::set__goldcard_number(::google::protobuf::uint32 value) {
  set_has__goldcard_number();
  _goldcard_number_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.every_day_happy_reply._goldcard_number)
}

// required uint32 _silvercard_number = 2;
inline bool every_day_happy_reply::has__silvercard_number() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void every_day_happy_reply::set_has__silvercard_number() {
  _has_bits_[0] |= 0x00000004u;
}
inline void every_day_happy_reply::clear_has__silvercard_number() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void every_day_happy_reply::clear__silvercard_number() {
  _silvercard_number_ = 0u;
  clear_has__silvercard_number();
}
inline ::google::protobuf::uint32 every_day_happy_reply::_silvercard_number() const {
  // @@protoc_insertion_point(field_get:client_baseserver.every_day_happy_reply._silvercard_number)
  return _silvercard_number_;
}
inline void every_day_happy_reply::set__silvercard_number(::google::protobuf::uint32 value) {
  set_has__silvercard_number();
  _silvercard_number_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.every_day_happy_reply._silvercard_number)
}

// required uint32 _coppercard_number = 3;
inline bool every_day_happy_reply::has__coppercard_number() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void every_day_happy_reply::set_has__coppercard_number() {
  _has_bits_[0] |= 0x00000008u;
}
inline void every_day_happy_reply::clear_has__coppercard_number() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void every_day_happy_reply::clear__coppercard_number() {
  _coppercard_number_ = 0u;
  clear_has__coppercard_number();
}
inline ::google::protobuf::uint32 every_day_happy_reply::_coppercard_number() const {
  // @@protoc_insertion_point(field_get:client_baseserver.every_day_happy_reply._coppercard_number)
  return _coppercard_number_;
}
inline void every_day_happy_reply::set__coppercard_number(::google::protobuf::uint32 value) {
  set_has__coppercard_number();
  _coppercard_number_ = value;
  // @@protoc_insertion_point(field_set:client_baseserver.every_day_happy_reply._coppercard_number)
}

// repeated .client_baseserver.activity_reward _rewards = 4;
inline int every_day_happy_reply::_rewards_size() const {
  return _rewards_.size();
}
inline void every_day_happy_reply::clear__rewards() {
  _rewards_.Clear();
}
inline const ::client_baseserver::activity_reward& every_day_happy_reply::_rewards(int index) const {
  // @@protoc_insertion_point(field_get:client_baseserver.every_day_happy_reply._rewards)
  return _rewards_.Get(index);
}
inline ::client_baseserver::activity_reward* every_day_happy_reply::mutable__rewards(int index) {
  // @@protoc_insertion_point(field_mutable:client_baseserver.every_day_happy_reply._rewards)
  return _rewards_.Mutable(index);
}
inline ::client_baseserver::activity_reward* every_day_happy_reply::add__rewards() {
  // @@protoc_insertion_point(field_add:client_baseserver.every_day_happy_reply._rewards)
  return _rewards_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::client_baseserver::activity_reward >&
every_day_happy_reply::_rewards() const {
  // @@protoc_insertion_point(field_list:client_baseserver.every_day_happy_reply._rewards)
  return _rewards_;
}
inline ::google::protobuf::RepeatedPtrField< ::client_baseserver::activity_reward >*
every_day_happy_reply::mutable__rewards() {
  // @@protoc_insertion_point(field_mutable_list:client_baseserver.every_day_happy_reply._rewards)
  return &_rewards_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace client_baseserver

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::client_baseserver::system_setting_item_setting_status> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::system_setting_item_setting_status>() {
  return ::client_baseserver::system_setting_item_setting_status_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::exit_stage_reply_exit_stage_result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::exit_stage_reply_exit_stage_result>() {
  return ::client_baseserver::exit_stage_reply_exit_stage_result_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::error_info_exit> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::error_info_exit>() {
  return ::client_baseserver::error_info_exit_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::goods_price_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::goods_price_type>() {
  return ::client_baseserver::goods_price_type_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::star_goods_box_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::star_goods_box_type>() {
  return ::client_baseserver::star_goods_box_type_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::daily_login_dailylogin_status> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::daily_login_dailylogin_status>() {
  return ::client_baseserver::daily_login_dailylogin_status_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::usertask_status> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::usertask_status>() {
  return ::client_baseserver::usertask_status_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::tavern_record_box_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::tavern_record_box_type>() {
  return ::client_baseserver::tavern_record_box_type_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::dailyjob_reward_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::dailyjob_reward_type>() {
  return ::client_baseserver::dailyjob_reward_type_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::ladder_rank_reward_reward_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::ladder_rank_reward_reward_type>() {
  return ::client_baseserver::ladder_rank_reward_reward_type_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::set_name_reply_set_name_result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::set_name_reply_set_name_result>() {
  return ::client_baseserver::set_name_reply_set_name_result_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::tbc_reward_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::tbc_reward_type>() {
  return ::client_baseserver::tbc_reward_type_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::tbc_stage_status> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::tbc_stage_status>() {
  return ::client_baseserver::tbc_stage_status_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::sys_mail_status> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::sys_mail_status>() {
  return ::client_baseserver::sys_mail_status_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::mail_param_mail_param_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::mail_param_mail_param_type>() {
  return ::client_baseserver::mail_param_mail_param_type_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::user_point_user_point_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::user_point_user_point_type>() {
  return ::client_baseserver::user_point_user_point_type_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::chat_acc_chat_acc_t> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::chat_acc_chat_acc_t>() {
  return ::client_baseserver::chat_acc_chat_acc_t_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::guild_join_join_result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::guild_join_join_result>() {
  return ::client_baseserver::guild_join_join_result_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::worship_reward_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::worship_reward_type>() {
  return ::client_baseserver::worship_reward_type_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::activity_reward_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::activity_reward_type>() {
  return ::client_baseserver::activity_reward_type_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::activity_info_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::activity_info_type>() {
  return ::client_baseserver::activity_info_type_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::cdkey_gift_reply_cdkey_result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::cdkey_gift_reply_cdkey_result>() {
  return ::client_baseserver::cdkey_gift_reply_cdkey_result_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::search_excavate_reply_search_result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::search_excavate_reply_search_result>() {
  return ::client_baseserver::search_excavate_reply_search_result_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::excavate_owner> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::excavate_owner>() {
  return ::client_baseserver::excavate_owner_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::excavate_state> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::excavate_state>() {
  return ::client_baseserver::excavate_state_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::excavate_history_def_result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::excavate_history_def_result>() {
  return ::client_baseserver::excavate_history_def_result_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::set_excavate_team_reply_result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::set_excavate_team_reply_result>() {
  return ::client_baseserver::set_excavate_team_reply_result_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::excavate_end_battle_reply_mine_battle_result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::excavate_end_battle_reply_mine_battle_result>() {
  return ::client_baseserver::excavate_end_battle_reply_mine_battle_result_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::excavate_reward_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::excavate_reward_type>() {
  return ::client_baseserver::excavate_reward_type_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::guild_instance_query_is_can_jump> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::guild_instance_query_is_can_jump>() {
  return ::client_baseserver::guild_instance_query_is_can_jump_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::guild_instance_detail_challenger_status> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::guild_instance_detail_challenger_status>() {
  return ::client_baseserver::guild_instance_detail_challenger_status_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::guild_instance_item_drop_state> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::guild_instance_item_drop_state>() {
  return ::client_baseserver::guild_instance_item_drop_state_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::query_ranklist_reply_rank_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::query_ranklist_reply_rank_type>() {
  return ::client_baseserver::query_ranklist_reply_rank_type_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::result>() {
  return ::client_baseserver::result_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::battle_result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::battle_result>() {
  return ::client_baseserver::battle_result_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::money_type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::money_type>() {
  return ::client_baseserver::money_type_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::hero_status> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::hero_status>() {
  return ::client_baseserver::hero_status_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::server_opt_result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::server_opt_result>() {
  return ::client_baseserver::server_opt_result_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::hire_result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::hire_result>() {
  return ::client_baseserver::hire_result_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::hire_from> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::hire_from>() {
  return ::client_baseserver::hire_from_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::guild_join_t> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::guild_join_t>() {
  return ::client_baseserver::guild_join_t_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::guild_job_t> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::guild_job_t>() {
  return ::client_baseserver::guild_job_t_descriptor();
}
template <> struct is_proto_enum< ::client_baseserver::chat_channel> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::client_baseserver::chat_channel>() {
  return ::client_baseserver::chat_channel_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cb_2eproto__INCLUDED
